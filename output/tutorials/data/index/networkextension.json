{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Wi-Fi management",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "Wi-Fi network configuration",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/wi-fi-configuration",
            "title": "Wi-Fi configuration",
            "type": "collection"
          },
          {
            "path": "/documentation/networkextension/configuring-a-wi-fi-accessory-to-join-a-network",
            "title": "Configuring a Wi-Fi accessory to join a network",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Registration",
                "type": "groupMarker"
              },
              {
                "title": "Commands",
                "type": "groupMarker"
              },
              {
                "title": "Hotspot communication",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              }
            ],
            "path": "/documentation/networkextension/hotspot-helper",
            "title": "Hotspot helper",
            "type": "collection"
          },
          {
            "title": "Virtual private networks",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/networkextension/routing-your-vpn-network-traffic",
            "title": "Routing your VPN network traffic",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/personal-vpn",
            "title": "Personal VPN",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "Packet tunnel provider",
                "type": "groupMarker"
              },
              {
                "title": "Packet handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/packet-tunnel-provider",
            "title": "Packet tunnel provider",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "App proxy provider",
                "type": "groupMarker"
              },
              {
                "title": "Flow handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              },
              {
                "path": "/documentation/networkextension/handling-flow-copying",
                "title": "Handling Flow Copying",
                "type": "article"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              },
              {
                "title": "Transparent proxy configuration",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/app-proxy-provider",
            "title": "App proxy provider",
            "type": "collection"
          },
          {
            "title": "Network relays",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "Relay configuration",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/relays",
            "title": "Relays",
            "type": "collection"
          },
          {
            "title": "Content filters",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "Data and control providers",
                "type": "groupMarker"
              },
              {
                "title": "Flow handling",
                "type": "groupMarker"
              },
              {
                "title": "Filter configuration",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/content-filter-providers",
            "title": "Content filter providers",
            "type": "collection"
          },
          {
            "path": "/documentation/networkextension/filtering-network-traffic",
            "title": "Filtering Network Traffic",
            "type": "sampleCode"
          },
          {
            "title": "DNS configurations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "DNS configuration",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/dns-settings",
            "title": "DNS settings",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "title": "Provider",
                "type": "groupMarker"
              },
              {
                "title": "Handling flows",
                "type": "groupMarker"
              },
              {
                "title": "Configuration",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/networkextension/dns-proxy-provider",
            "title": "DNS proxy provider",
            "type": "collection"
          },
          {
            "title": "Local networking",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/maintaining-a-reliable-network-connection",
                "title": "Maintaining a Reliable Network Connection",
                "type": "article"
              },
              {
                "path": "/documentation/networkextension/receiving-voice-and-text-communications-on-a-local-network",
                "title": "Receiving Voice and Text Communications on a Local Network",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/networkextension/local-push-connectivity",
            "title": "Local push connectivity",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/networkextension",
        "title": "Network Extension",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Wi-Fi management",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.hotspotconfiguration",
                "title": "Hotspot Configuration Entitlement",
                "type": "typealias"
              },
              {
                "title": "Wi-Fi network configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/shared",
                    "title": "sharedManager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/apply(_:completionhandler:)",
                    "title": "- applyConfiguration:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Getting a list of configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/getconfiguredssids(completionhandler:)",
                    "title": "- getConfiguredSSIDsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Removing configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/removeconfiguration(forhs20domainname:)",
                    "title": "- removeConfigurationForHS20DomainName:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/removeconfiguration(forssid:)",
                    "title": "- removeConfigurationForSSID:",
                    "type": "method"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationerrordomain",
                    "title": "NEHotspotConfigurationErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Errors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalid",
                        "title": "NEHotspotConfigurationErrorInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidssid",
                        "title": "NEHotspotConfigurationErrorInvalidSSID",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidwpapassphrase",
                        "title": "NEHotspotConfigurationErrorInvalidWPAPassphrase",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidweppassphrase",
                        "title": "NEHotspotConfigurationErrorInvalidWEPPassphrase",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalideapsettings",
                        "title": "NEHotspotConfigurationErrorInvalidEAPSettings",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidhs20settings",
                        "title": "NEHotspotConfigurationErrorInvalidHS20Settings",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidhs20domainname",
                        "title": "NEHotspotConfigurationErrorInvalidHS20DomainName",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidssidprefix",
                        "title": "NEHotspotConfigurationErrorInvalidSSIDPrefix",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/userdenied",
                        "title": "NEHotspotConfigurationErrorUserDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/internal",
                        "title": "NEHotspotConfigurationErrorInternal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/pending",
                        "title": "NEHotspotConfigurationErrorPending",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/systemconfiguration",
                        "title": "NEHotspotConfigurationErrorSystemConfiguration",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/unknown",
                        "title": "NEHotspotConfigurationErrorUnknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/joinoncenotsupported",
                        "title": "NEHotspotConfigurationErrorJoinOnceNotSupported",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/alreadyassociated",
                        "title": "NEHotspotConfigurationErrorAlreadyAssociated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/applicationisnotinforeground",
                        "title": "NEHotspotConfigurationErrorApplicationIsNotInForeground",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/systemdenied",
                        "title": "NEHotspotConfigurationErrorSystemDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/userunauthorized",
                        "title": "NEHotspotConfigurationErrorUserUnauthorized",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspotconfigurationerror",
                    "title": "NEHotspotConfigurationError",
                    "type": "enum"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.hotspotconfiguration",
                    "title": "Hotspot Configuration Entitlement",
                    "type": "typealias"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/joinaccessoryhotspot(_:passphrase:completionhandler:)",
                    "title": "- joinAccessoryHotspot:passphrase:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/joinaccessoryhotspotwithoutsecurity(_:completionhandler:)",
                    "title": "- joinAccessoryHotspotWithoutSecurity:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspotconfigurationmanager",
                "title": "NEHotspotConfigurationManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssid:)",
                    "title": "- initWithSSID:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssid:passphrase:iswep:)",
                    "title": "- initWithSSID:passphrase:isWEP:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssid:eapsettings:)",
                    "title": "- initWithSSID:eapSettings:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(hs20settings:eapsettings:)",
                    "title": "- initWithHS20Settings:eapSettings:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssidprefix:)",
                    "title": "- initWithSSIDPrefix:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssidprefix:passphrase:iswep:)",
                    "title": "- initWithSSIDPrefix:passphrase:isWEP:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/ssid",
                    "title": "SSID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/ssidprefix",
                    "title": "SSIDPrefix",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/lifetimeindays",
                    "title": "lifeTimeInDays",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/joinonce",
                    "title": "joinOnce",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/hidden",
                    "title": "hidden",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nehotspotconfiguration",
                "title": "NEHotspotConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing EAP properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/istlsclientcertificaterequired",
                    "title": "tlsClientCertificateRequired",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/trustedservernames",
                    "title": "trustedServerNames",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/supportedeaptypes",
                    "title": "supportedEAPTypes",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eaptls",
                        "title": "NEHotspotConfigurationEAPTypeEAPTLS",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eapttls",
                        "title": "NEHotspotConfigurationEAPTypeEAPTTLS",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eappeap",
                        "title": "NEHotspotConfigurationEAPTypeEAPPEAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eapfast",
                        "title": "NEHotspotConfigurationEAPTypeEAPFAST",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspoteapsettings/eaptype",
                    "title": "NEHotspotConfigurationEAPType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/username",
                    "title": "username",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/password",
                    "title": "password",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/preferredtlsversion",
                    "title": "preferredTLSVersion",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationeaptlsversion/nehotspotconfigurationeaptlsversion_1_0",
                        "title": "NEHotspotConfigurationEAPTLSVersion_1_0",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationeaptlsversion/nehotspotconfigurationeaptlsversion_1_1",
                        "title": "NEHotspotConfigurationEAPTLSVersion_1_1",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationeaptlsversion/nehotspotconfigurationeaptlsversion_1_2",
                        "title": "NEHotspotConfigurationEAPTLSVersion_1_2",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspoteapsettings/tlsversion",
                    "title": "NEHotspotConfigurationEAPTLSVersion",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/outeridentity",
                    "title": "outerIdentity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.property",
                    "title": "ttlsInnerAuthenticationType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationpap",
                        "title": "NEHotspotConfigurationEAPTTLSInnerAuthenticationPAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationchap",
                        "title": "NEHotspotConfigurationEAPTTLSInnerAuthenticationCHAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationmschap",
                        "title": "NEHotspotConfigurationEAPTTLSInnerAuthenticationMSCHAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationmschapv2",
                        "title": "NEHotspotConfigurationEAPTTLSInnerAuthenticationMSCHAPv2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationeap",
                        "title": "NEHotspotConfigurationEAPTTLSInnerAuthenticationEAP",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum",
                    "title": "NEHotspotConfigurationTTLSInnerAuthenticationType",
                    "type": "enum"
                  },
                  {
                    "title": "Setting Keychain-based EAP Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/setidentity(_:)",
                    "title": "- setIdentity:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/settrustedservercertificates(_:)",
                    "title": "- setTrustedServerCertificates:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspoteapsettings",
                "title": "NEHotspotEAPSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing Hotspot 2.0 settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/init(domainname:roamingenabled:)",
                    "title": "- initWithDomainName:roamingEnabled:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing Hotspot 2.0 properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/domainname",
                    "title": "domainName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/isroamingenabled",
                    "title": "roamingEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/mccandmncs",
                    "title": "MCCAndMNCs",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/nairealmnames",
                    "title": "naiRealmNames",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/roamingconsortiumois",
                    "title": "roamingConsortiumOIs",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nehotspoths20settings",
                "title": "NEHotspotHS20Settings",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/wi-fi-configuration",
            "title": "Wi-Fi configuration",
            "type": "collection"
          },
          {
            "path": "/documentation/networkextension/configuring-a-wi-fi-accessory-to-join-a-network",
            "title": "Configuring a Wi-Fi accessory to join a network",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Registration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Registering a hotspot helper",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelper/register(options:queue:handler:)",
                    "title": "+ registerWithOptions:queue:handler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/knehotspothelperoptiondisplayname",
                    "title": "kNEHotspotHelperOptionDisplayName",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperhandler",
                    "title": "NEHotspotHelperHandler",
                    "type": "typealias"
                  },
                  {
                    "title": "Getting hotspot network status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelper/supportednetworkinterfaces()",
                    "title": "+ supportedNetworkInterfaces",
                    "type": "method"
                  },
                  {
                    "title": "Logging off",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelper/logoff(_:)",
                    "title": "+ logoff:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspothelper",
                "title": "NEHotspotHelper",
                "type": "class"
              },
              {
                "title": "Commands",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Command information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/commandtype",
                    "title": "commandType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Command Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/none",
                        "title": "kNEHotspotHelperCommandTypeNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/filterscanlist",
                        "title": "kNEHotspotHelperCommandTypeFilterScanList",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/evaluate",
                        "title": "kNEHotspotHelperCommandTypeEvaluate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/authenticate",
                        "title": "kNEHotspotHelperCommandTypeAuthenticate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/presentui",
                        "title": "kNEHotspotHelperCommandTypePresentUI",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/maintain",
                        "title": "kNEHotspotHelperCommandTypeMaintain",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/logoff",
                        "title": "kNEHotspotHelperCommandTypeLogoff",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspothelpercommandtype",
                    "title": "NEHotspotHelperCommandType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/network",
                    "title": "network",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/networklist",
                    "title": "networkList",
                    "type": "property"
                  },
                  {
                    "title": "Networking on the hotspot network",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nehotspothelpercommand/createtcpconnection(_:)",
                    "title": "- createTCPConnection:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nehotspothelpercommand/createudpsession(_:)",
                    "title": "- createUDPSession:",
                    "type": "method"
                  },
                  {
                    "title": "Response creation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/createresponse(_:)",
                    "title": "- createResponse:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/success",
                        "title": "kNEHotspotHelperResultSuccess",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/failure",
                        "title": "kNEHotspotHelperResultFailure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/uirequired",
                        "title": "kNEHotspotHelperResultUIRequired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/commandnotrecognized",
                        "title": "kNEHotspotHelperResultCommandNotRecognized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/authenticationrequired",
                        "title": "kNEHotspotHelperResultAuthenticationRequired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/unsupportednetwork",
                        "title": "kNEHotspotHelperResultUnsupportedNetwork",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/temporaryfailure",
                        "title": "kNEHotspotHelperResultTemporaryFailure",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspothelperresult",
                    "title": "NEHotspotHelperResult",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/interface-7rt15",
                    "title": "interface",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nehotspothelpercommand",
                "title": "NEHotspotHelperCommand",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Response properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperresponse/setnetwork(_:)",
                    "title": "- setNetwork:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperresponse/setnetworklist(_:)",
                    "title": "- setNetworkList:",
                    "type": "method"
                  },
                  {
                    "title": "Response celivery",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperresponse/deliver()",
                    "title": "- deliver",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspothelperresponse",
                "title": "NEHotspotHelperResponse",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Network information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/ssid",
                    "title": "SSID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/bssid",
                    "title": "BSSID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/signalstrength",
                    "title": "signalStrength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/issecure",
                    "title": "secure",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/didautojoin",
                    "title": "autoJoined",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/didjustjoin",
                    "title": "justJoined",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/ischosenhelper",
                    "title": "chosenHelper",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/securitytype",
                    "title": "securityType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Security types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/open",
                        "title": "NEHotspotNetworkSecurityTypeOpen",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/wep",
                        "title": "NEHotspotNetworkSecurityTypeWEP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/personal",
                        "title": "NEHotspotNetworkSecurityTypePersonal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/enterprise",
                        "title": "NEHotspotNetworkSecurityTypeEnterprise",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/unknown",
                        "title": "NEHotspotNetworkSecurityTypeUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspotnetworksecuritytype",
                    "title": "NEHotspotNetworkSecurityType",
                    "type": "enum"
                  },
                  {
                    "title": "Network annotation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/setconfidence(_:)",
                    "title": "- setConfidence:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Confidence Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperconfidence/high",
                        "title": "kNEHotspotHelperConfidenceHigh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperconfidence/low",
                        "title": "kNEHotspotHelperConfidenceLow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperconfidence/none",
                        "title": "kNEHotspotHelperConfidenceNone",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspothelperconfidence",
                    "title": "NEHotspotHelperConfidence",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/setpassword(_:)",
                    "title": "- setPassword:",
                    "type": "method"
                  },
                  {
                    "title": "Fetching VPN network information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/fetchcurrent(completionhandler:)",
                    "title": "+ fetchCurrentWithCompletionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspotnetwork",
                "title": "NEHotspotNetwork",
                "type": "class"
              },
              {
                "title": "Hotspot communication",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the connection status",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Connection States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/invalid",
                            "title": "NWTCPConnectionStateInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connecting",
                            "title": "NWTCPConnectionStateConnecting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/waiting",
                            "title": "NWTCPConnectionStateWaiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connected",
                            "title": "NWTCPConnectionStateConnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/disconnected",
                            "title": "NWTCPConnectionStateDisconnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/cancelled",
                            "title": "NWTCPConnectionStateCancelled",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionstate",
                        "title": "NWTCPConnectionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/isviable",
                        "title": "viable",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/error",
                        "title": "error",
                        "type": "property"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readminimumlength(_:maximumlength:completionhandler:)",
                        "title": "- readMinimumLength:maximumLength:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readlength(_:completionhandler:)",
                        "title": "- readLength:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/write(_:completionhandler:)",
                        "title": "- write:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/writeclose()",
                        "title": "- writeClose",
                        "type": "method"
                      },
                      {
                        "title": "Canceling the connection",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/hasbetterpath",
                        "title": "hasBetterPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/init(upgradefor:)",
                        "title": "- initWithUpgradeForConnection:",
                        "type": "method"
                      },
                      {
                        "title": "Getting connection properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/endpoint",
                        "title": "endpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/localaddress",
                        "title": "localAddress",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/remoteaddress",
                        "title": "remoteAddress",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/connectedpath",
                        "title": "connectedPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/txtrecord",
                        "title": "txtRecord",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnection",
                    "title": "NWTCPConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing TLS parameters",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/tlssessionid",
                        "title": "TLSSessionID",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/sslciphersuites",
                        "title": "SSLCipherSuites",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/minimumsslprotocolversion",
                        "title": "minimumSSLProtocolVersion",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/maximumsslprotocolversion",
                        "title": "maximumSSLProtocolVersion",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtlsparameters",
                    "title": "NWTLSParameters",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Delegate methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldevaluatetrust(for:)",
                        "title": "- shouldEvaluateTrustForConnection:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/evaluatetrust(for:peercertificatechain:completionhandler:)",
                        "title": "- evaluateTrustForConnection:peerCertificateChain:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldprovideidentity(for:)",
                        "title": "- shouldProvideIdentityForConnection:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/provideidentity(for:completionhandler:)",
                        "title": "- provideIdentityForConnection:completionHandler:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate",
                    "title": "NWTCPConnectionAuthenticationDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the session state",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Session States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/invalid",
                            "title": "NWUDPSessionStateInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/waiting",
                            "title": "NWUDPSessionStateWaiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/preparing",
                            "title": "NWUDPSessionStatePreparing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/ready",
                            "title": "NWUDPSessionStateReady",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/failed",
                            "title": "NWUDPSessionStateFailed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/cancelled",
                            "title": "NWUDPSessionStateCancelled",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsessionstate",
                        "title": "NWUDPSessionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/isviable",
                        "title": "viable",
                        "type": "property"
                      },
                      {
                        "title": "Selecting remote endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/resolvedendpoint",
                        "title": "resolvedEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/trynextresolvedendpoint()",
                        "title": "- tryNextResolvedEndpoint",
                        "type": "method"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/setreadhandler(_:maxdatagrams:)",
                        "title": "- setReadHandler:maxDatagrams:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writedatagram(_:completionhandler:)",
                        "title": "- writeDatagram:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writemultipledatagrams(_:completionhandler:)",
                        "title": "- writeMultipleDatagrams:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/maximumdatagramlength",
                        "title": "maximumDatagramLength",
                        "type": "property"
                      },
                      {
                        "title": "Canceling the session",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/hasbetterpath",
                        "title": "hasBetterPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/init(upgradefor:)",
                        "title": "- initWithUpgradeForSession:",
                        "type": "method"
                      },
                      {
                        "title": "Getting session properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/endpoint",
                        "title": "endpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/currentpath",
                        "title": "currentPath",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwudpsession",
                    "title": "NWUDPSession",
                    "type": "class"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing host endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/init(hostname:port:)",
                        "title": "+ endpointWithHostname:port:",
                        "type": "method"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/hostname",
                        "title": "hostname",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/port",
                        "title": "port",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwhostendpoint",
                    "title": "NWHostEndpoint",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Bonjour service endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/init(name:type:domain:)",
                        "title": "+ endpointWithName:type:domain:",
                        "type": "method"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/name",
                        "title": "name",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/type",
                        "title": "type",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/domain",
                        "title": "domain",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwbonjourserviceendpoint",
                    "title": "NWBonjourServiceEndpoint",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwendpoint",
                    "title": "NWEndpoint",
                    "type": "class"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting network path properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/status",
                        "title": "status",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Path Statuses",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/invalid",
                            "title": "NWPathStatusInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfied",
                            "title": "NWPathStatusSatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/unsatisfied",
                            "title": "NWPathStatusUnsatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfiable",
                            "title": "NWPathStatusSatisfiable",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpathstatus",
                        "title": "NWPathStatus",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isexpensive",
                        "title": "expensive",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isconstrained",
                        "title": "constrained",
                        "type": "property"
                      },
                      {
                        "title": "Comparing network paths",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isequal(to:)",
                        "title": "- isEqualToPath:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwpath",
                    "title": "NWPath",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              }
            ],
            "path": "/documentation/networkextension/hotspot-helper",
            "title": "Hotspot helper",
            "type": "collection"
          },
          {
            "title": "Virtual private networks",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/networkextension/routing-your-vpn-network-traffic",
            "title": "Routing your VPN network traffic",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                "title": "Personal VPN Entitlement",
                "type": "typealias"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing VPN configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/shared()",
                    "title": "+ sharedManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/setauthorization(_:)",
                    "title": "- setAuthorization:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing VPN configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/protocolconfiguration",
                    "title": "protocolConfiguration",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nevpnmanager/protocol",
                    "title": "protocol",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isondemandenabled",
                    "title": "onDemandEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/ondemandrules",
                    "title": "onDemandRules",
                    "type": "property"
                  },
                  {
                    "title": "Connecting and disconnecting VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/connection",
                    "title": "connection",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "NEVPNErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "NEVPNErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "NEVPNErrorConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "NEVPNErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "NEVPNErrorConfigurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "NEVPNErrorConfigurationUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerrordomain",
                    "title": "NEVPNErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "NEVPNErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "NEVPNErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "NEVPNErrorConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "NEVPNErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "NEVPNErrorConfigurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "NEVPNErrorConfigurationUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconfigurationchangenotification",
                    "title": "NEVPNConfigurationChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                    "title": "Personal VPN Entitlement",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/networkextension/nevpnmanager",
                "title": "NEVPNManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing IKEv2 Security Association parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/ikesecurityassociationparameters",
                    "title": "IKESecurityAssociationParameters",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/childsecurityassociationparameters",
                    "title": "childSecurityAssociationParameters",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "IKEv2 Security Association parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/encryptionalgorithm",
                        "title": "encryptionAlgorithm",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Encryption algorithms",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmdes",
                            "title": "NEVPNIKEv2EncryptionAlgorithmDES",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithm3des",
                            "title": "NEVPNIKEv2EncryptionAlgorithm3DES",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes128",
                            "title": "NEVPNIKEv2EncryptionAlgorithmAES128",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes256",
                            "title": "NEVPNIKEv2EncryptionAlgorithmAES256",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes128gcm",
                            "title": "NEVPNIKEv2EncryptionAlgorithmAES128GCM",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes256gcm",
                            "title": "NEVPNIKEv2EncryptionAlgorithmAES256GCM",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmchacha20poly1305",
                            "title": "NEVPNIKEv2EncryptionAlgorithmChaCha20Poly1305",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm",
                        "title": "NEVPNIKEv2EncryptionAlgorithm",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/integrityalgorithm",
                        "title": "integrityAlgorithm",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Integrity algorithms",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha96",
                            "title": "NEVPNIKEv2IntegrityAlgorithmSHA96",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha160",
                            "title": "NEVPNIKEv2IntegrityAlgorithmSHA160",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha256",
                            "title": "NEVPNIKEv2IntegrityAlgorithmSHA256",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha384",
                            "title": "NEVPNIKEv2IntegrityAlgorithmSHA384",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha512",
                            "title": "NEVPNIKEv2IntegrityAlgorithmSHA512",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/nevpnikev2integrityalgorithm",
                        "title": "NEVPNIKEv2IntegrityAlgorithm",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/diffiehellmangroup",
                        "title": "diffieHellmanGroup",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Diffie-Hellman groups",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/groupinvalid",
                            "title": "NEVPNIKEv2DiffieHellmanGroupInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group1",
                            "title": "NEVPNIKEv2DiffieHellmanGroup1",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group2",
                            "title": "NEVPNIKEv2DiffieHellmanGroup2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group5",
                            "title": "NEVPNIKEv2DiffieHellmanGroup5",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group14",
                            "title": "NEVPNIKEv2DiffieHellmanGroup14",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group15",
                            "title": "NEVPNIKEv2DiffieHellmanGroup15",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group16",
                            "title": "NEVPNIKEv2DiffieHellmanGroup16",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group17",
                            "title": "NEVPNIKEv2DiffieHellmanGroup17",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group18",
                            "title": "NEVPNIKEv2DiffieHellmanGroup18",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group19",
                            "title": "NEVPNIKEv2DiffieHellmanGroup19",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group20",
                            "title": "NEVPNIKEv2DiffieHellmanGroup20",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group21",
                            "title": "NEVPNIKEv2DiffieHellmanGroup21",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group31",
                            "title": "NEVPNIKEv2DiffieHellmanGroup31",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group32",
                            "title": "NEVPNIKEv2DiffieHellmanGroup32",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup",
                        "title": "NEVPNIKEv2DiffieHellmanGroup",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/lifetimeminutes",
                        "title": "lifetimeMinutes",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2securityassociationparameters",
                    "title": "NEVPNIKEv2SecurityAssociationParameters",
                    "type": "class"
                  },
                  {
                    "title": "Accessing certificate properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/servercertificateissuercommonname",
                    "title": "serverCertificateIssuerCommonName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/servercertificatecommonname",
                    "title": "serverCertificateCommonName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/certificatetype",
                    "title": "certificateType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Certificate types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/rsa",
                        "title": "NEVPNIKEv2CertificateTypeRSA",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ecdsa256",
                        "title": "NEVPNIKEv2CertificateTypeECDSA256",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ecdsa384",
                        "title": "NEVPNIKEv2CertificateTypeECDSA384",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ecdsa521",
                        "title": "NEVPNIKEv2CertificateTypeECDSA521",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ed25519",
                        "title": "NEVPNIKEv2CertificateTypeEd25519",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/rsapss",
                        "title": "NEVPNIKEv2CertificateTypeRSAPSS",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2certificatetype",
                    "title": "NEVPNIKEv2CertificateType",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing TLS version properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/minimumtlsversion",
                    "title": "minimumTLSVersion",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/maximumtlsversion",
                    "title": "maximumTLSVersion",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "TLS versions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/versiondefault",
                        "title": "NEVPNIKEv2TLSVersionDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/version1_0",
                        "title": "NEVPNIKEv2TLSVersion1_0",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/version1_1",
                        "title": "NEVPNIKEv2TLSVersion1_1",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/version1_2",
                        "title": "NEVPNIKEv2TLSVersion1_2",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2tlsversion",
                    "title": "NEVPNIKEv2TLSVersion",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing other IKEv2 properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/deadpeerdetectionrate",
                    "title": "deadPeerDetectionRate",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Detection rates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/none",
                        "title": "NEVPNIKEv2DeadPeerDetectionRateNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/low",
                        "title": "NEVPNIKEv2DeadPeerDetectionRateLow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/medium",
                        "title": "NEVPNIKEv2DeadPeerDetectionRateMedium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/high",
                        "title": "NEVPNIKEv2DeadPeerDetectionRateHigh",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate",
                    "title": "NEVPNIKEv2DeadPeerDetectionRate",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/useconfigurationattributeinternalipsubnet",
                    "title": "useConfigurationAttributeInternalIPSubnet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/disablemobike",
                    "title": "disableMOBIKE",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/disableredirect",
                    "title": "disableRedirect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/enablepfs",
                    "title": "enablePFS",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/enablerevocationcheck",
                    "title": "enableRevocationCheck",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/strictrevocationcheck",
                    "title": "strictRevocationCheck",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/mtu",
                    "title": "mtu",
                    "type": "property"
                  },
                  {
                    "title": "Supporting Wi-Fi assist",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/enablefallback",
                    "title": "enableFallback",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/ppkconfiguration",
                    "title": "ppkConfiguration",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nevpnprotocolikev2",
                "title": "NEVPNProtocolIKEv2",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing IPSec properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/authenticationmethod",
                    "title": "authenticationMethod",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Authentication methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikeauthenticationmethod/none",
                        "title": "NEVPNIKEAuthenticationMethodNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikeauthenticationmethod/certificate",
                        "title": "NEVPNIKEAuthenticationMethodCertificate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikeauthenticationmethod/sharedsecret",
                        "title": "NEVPNIKEAuthenticationMethodSharedSecret",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikeauthenticationmethod",
                    "title": "NEVPNIKEAuthenticationMethod",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/useextendedauthentication",
                    "title": "useExtendedAuthentication",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/sharedsecretreference",
                    "title": "sharedSecretReference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/localidentifier",
                    "title": "localIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/remoteidentifier",
                    "title": "remoteIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nevpnprotocolipsec",
                "title": "NEVPNProtocolIPSec",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/serveraddress",
                    "title": "serverAddress",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/disconnectonsleep",
                    "title": "disconnectOnSleep",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/proxysettings",
                    "title": "proxySettings",
                    "type": "property"
                  },
                  {
                    "title": "Authenticating the user",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/username",
                    "title": "username",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/passwordreference",
                    "title": "passwordReference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/identityreference",
                    "title": "identityReference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/identitydata",
                    "title": "identityData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/identitydatapassword",
                    "title": "identityDataPassword",
                    "type": "property"
                  },
                  {
                    "title": "Routing network traffic",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/includeallnetworks",
                    "title": "includeAllNetworks",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludeapns",
                    "title": "excludeAPNs",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludecellularservices",
                    "title": "excludeCellularServices",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludelocalnetworks",
                    "title": "excludeLocalNetworks",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/enforceroutes",
                    "title": "enforceRoutes",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludedevicecommunication",
                    "title": "excludeDeviceCommunication",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/sliceuuid",
                    "title": "sliceUUID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nevpnprotocol",
                "title": "NEVPNProtocol",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleconnect",
                    "title": "NEOnDemandRuleConnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruledisconnect",
                    "title": "NEOnDemandRuleDisconnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleignore",
                    "title": "NEOnDemandRuleIgnore",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing connection rules",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandruleevaluateconnection/connectionrules",
                        "title": "connectionRules",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/init(matchdomains:andaction:)",
                            "title": "- initWithMatchDomains:andAction:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Rule Match Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/matchdomains",
                            "title": "matchDomains",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/usednsservers",
                            "title": "useDNSServers",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/probeurl",
                            "title": "probeURL",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the Rule Action",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/action",
                            "title": "action",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Rule Actions",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/connectifneeded",
                                "title": "NEEvaluateConnectionRuleActionConnectIfNeeded",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/neverconnect",
                                "title": "NEEvaluateConnectionRuleActionNeverConnect",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/networkextension/neevaluateconnectionruleaction",
                            "title": "NEEvaluateConnectionRuleAction",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/networkextension/neevaluateconnectionrule",
                        "title": "NEEvaluateConnectionRule",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandruleevaluateconnection",
                    "title": "NEOnDemandRuleEvaluateConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "DNSSearchDomainMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "DNSServerAddressMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "interfaceTypeMatch",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "NEOnDemandRuleInterfaceTypeAny",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "NEOnDemandRuleInterfaceTypeEthernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "NEOnDemandRuleInterfaceTypeWiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "NEOnDemandRuleInterfaceTypeCellular",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "SSIDMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "probeURL",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "action",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "NEOnDemandRuleActionConnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "NEOnDemandRuleActionDisconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "NEOnDemandRuleActionEvaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "NEOnDemandRuleActionIgnore",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Controlling the VPN connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel()",
                    "title": "- startVPNTunnelAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel(options:)",
                    "title": "- startVPNTunnelWithOptions:andReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionusername",
                    "title": "NEVPNConnectionStartOptionUsername",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionpassword",
                    "title": "NEVPNConnectionStartOptionPassword",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/stopvpntunnel()",
                    "title": "- stopVPNTunnel",
                    "type": "method"
                  },
                  {
                    "title": "Getting VPN connection status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/manager",
                    "title": "manager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/status",
                    "title": "status",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Statuses",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnecting",
                        "title": "NEVPNStatusDisconnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/reasserting",
                        "title": "NEVPNStatusReasserting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connected",
                        "title": "NEVPNStatusConnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connecting",
                        "title": "NEVPNStatusConnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnected",
                        "title": "NEVPNStatusDisconnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/invalid",
                        "title": "NEVPNStatusInvalid",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnstatus",
                    "title": "NEVPNStatus",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/connecteddate",
                    "title": "connectedDate",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnstatusdidchangenotification",
                    "title": "NEVPNStatusDidChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/fetchlastdisconnecterror(completionhandler:)",
                    "title": "- fetchLastDisconnectErrorWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionerrordomain",
                    "title": "NEVPNConnectionErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "General error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/overslept",
                        "title": "NEVPNConnectionErrorOverslept",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/nonetworkavailable",
                        "title": "NEVPNConnectionErrorNoNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/unrecoverablenetworkchange",
                        "title": "NEVPNConnectionErrorUnrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationfailed",
                        "title": "NEVPNConnectionErrorConfigurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/authenticationfailed",
                        "title": "NEVPNConnectionErrorAuthenticationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationnotfound",
                        "title": "NEVPNConnectionErrorConfigurationNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/negotiationfailed",
                        "title": "NEVPNConnectionErrorNegotiationFailed",
                        "type": "case"
                      },
                      {
                        "title": "VPN server error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serveraddressresolutionfailed",
                        "title": "NEVPNConnectionErrorServerAddressResolutionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servernotresponding",
                        "title": "NEVPNConnectionErrorServerNotResponding",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdead",
                        "title": "NEVPNConnectionErrorServerDead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdisconnected",
                        "title": "NEVPNConnectionErrorServerDisconnected",
                        "type": "case"
                      },
                      {
                        "title": "Plugin error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/pluginfailed",
                        "title": "NEVPNConnectionErrorPluginFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/plugindisabled",
                        "title": "NEVPNConnectionErrorPluginDisabled",
                        "type": "case"
                      },
                      {
                        "title": "Client certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateinvalid",
                        "title": "NEVPNConnectionErrorClientCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificatenotyetvalid",
                        "title": "NEVPNConnectionErrorClientCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateexpired",
                        "title": "NEVPNConnectionErrorClientCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Server certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateinvalid",
                        "title": "NEVPNConnectionErrorServerCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificatenotyetvalid",
                        "title": "NEVPNConnectionErrorServerCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateexpired",
                        "title": "NEVPNConnectionErrorServerCertificateExpired",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnconnectionerror",
                    "title": "NEVPNConnectionError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nevpnconnection",
                "title": "NEVPNConnection",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/personal-vpn",
            "title": "Personal VPN",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Packet tunnel provider",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the tunnel life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/starttunnel(options:completionhandler:)",
                    "title": "- startTunnelWithOptions:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/stoptunnel(with:completionhandler:)",
                    "title": "- stopTunnelWithReason:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/canceltunnelwitherror(_:)",
                    "title": "- cancelTunnelWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Handling IP packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/packetflow",
                    "title": "packetFlow",
                    "type": "property"
                  },
                  {
                    "title": "Creating network connections through the tunnel",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nepackettunnelprovider/createtcpconnectionthroughtunnel(to:enabletls:tlsparameters:delegate:)",
                    "title": "- createTCPConnectionThroughTunnelToEndpoint:enableTLS:TLSParameters:delegate:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nepackettunnelprovider/createudpsessionthroughtunnel(to:from:)",
                    "title": "- createUDPSessionThroughTunnelToEndpoint:fromEndpoint:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/virtualinterface-9fpgd",
                    "title": "virtualInterface",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nepackettunnelprovider",
                "title": "NEPacketTunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/protocolconfiguration",
                    "title": "protocolConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/routingmethod",
                    "title": "routingMethod",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/apprules",
                    "title": "appRules",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the tunnel interface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/settunnelnetworksettings(_:completionhandler:)",
                    "title": "- setTunnelNetworkSettings:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the containing app",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/handleappmessage(_:completionhandler:)",
                    "title": "- handleAppMessage:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Setting tunnel status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/reasserting",
                    "title": "reasserting",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "NETunnelProviderErrorNetworkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "NETunnelProviderErrorNetworkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "NETunnelProviderErrorNetworkSettingsFailed",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererrordomain",
                    "title": "NETunnelProviderErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "NETunnelProviderErrorNetworkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "NETunnelProviderErrorNetworkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "NETunnelProviderErrorNetworkSettingsFailed",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovider",
                "title": "NETunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling sleep and wake",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/sleep(completionhandler:)",
                    "title": "- sleepWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/wake()",
                    "title": "- wake",
                    "type": "method"
                  },
                  {
                    "title": "Creating network connections",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createtcpconnection(to:enabletls:tlsparameters:delegate:)",
                    "title": "- createTCPConnectionToEndpoint:enableTLS:TLSParameters:delegate:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createudpsession(to:from:)",
                    "title": "- createUDPSessionToEndpoint:fromEndpoint:",
                    "type": "method"
                  },
                  {
                    "title": "Monitoring the network state",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/defaultpath",
                    "title": "defaultPath",
                    "type": "property"
                  },
                  {
                    "title": "Supporting system extensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/startsystemextensionmode()",
                    "title": "+ startSystemExtensionMode",
                    "type": "method"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Stop Reasons",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/none",
                        "title": "NEProviderStopReasonNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userinitiated",
                        "title": "NEProviderStopReasonUserInitiated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerfailed",
                        "title": "NEProviderStopReasonProviderFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/nonetworkavailable",
                        "title": "NEProviderStopReasonNoNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/unrecoverablenetworkchange",
                        "title": "NEProviderStopReasonUnrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerdisabled",
                        "title": "NEProviderStopReasonProviderDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/authenticationcanceled",
                        "title": "NEProviderStopReasonAuthenticationCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationfailed",
                        "title": "NEProviderStopReasonConfigurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/idletimeout",
                        "title": "NEProviderStopReasonIdleTimeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationdisabled",
                        "title": "NEProviderStopReasonConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationremoved",
                        "title": "NEProviderStopReasonConfigurationRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/superceded",
                        "title": "NEProviderStopReasonSuperceded",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userlogout",
                        "title": "NEProviderStopReasonUserLogout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userswitch",
                        "title": "NEProviderStopReasonUserSwitch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/appupdate",
                        "title": "NEProviderStopReasonAppUpdate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/connectionfailed",
                        "title": "NEProviderStopReasonConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/sleep",
                        "title": "NEProviderStopReasonSleep",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/internalerror",
                        "title": "NEProviderStopReasonInternalError",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/neproviderstopreason",
                    "title": "NEProviderStopReason",
                    "type": "enum"
                  },
                  {
                    "title": "Displaying messages",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/displaymessage(_:completionhandler:)",
                    "title": "- displayMessage:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neprovider",
                "title": "NEProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing network properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/ipv4settings",
                    "title": "IPv4Settings",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing IPv4 settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/init(addresses:subnetmasks:)",
                        "title": "- initWithAddresses:subnetMasks:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing IPv4 properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/addresses",
                        "title": "addresses",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/subnetmasks",
                        "title": "subnetMasks",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/router",
                        "title": "router",
                        "type": "property"
                      },
                      {
                        "title": "Routing network traffic",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/includedroutes",
                        "title": "includedRoutes",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/excludedroutes",
                        "title": "excludedRoutes",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an IPv4 Route",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/init(destinationaddress:subnetmask:)",
                            "title": "- initWithDestinationAddress:subnetMask:",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/default()",
                            "title": "+ defaultRoute",
                            "type": "method"
                          },
                          {
                            "title": "Accessing IPv4 Route Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/destinationaddress",
                            "title": "destinationAddress",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/destinationsubnetmask",
                            "title": "destinationSubnetMask",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/gatewayaddress",
                            "title": "gatewayAddress",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neipv4route",
                        "title": "NEIPv4Route",
                        "type": "class"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/settingswithautomaticaddressing",
                        "title": "+ settingsWithAutomaticAddressing",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/networkextension/neipv4settings",
                    "title": "NEIPv4Settings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/ipv6settings",
                    "title": "IPv6Settings",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing IPv6 settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/init(addresses:networkprefixlengths:)",
                        "title": "- initWithAddresses:networkPrefixLengths:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing IPv6 properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/addresses",
                        "title": "addresses",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/networkprefixlengths",
                        "title": "networkPrefixLengths",
                        "type": "property"
                      },
                      {
                        "title": "Routing network traffic",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/includedroutes",
                        "title": "includedRoutes",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/excludedroutes",
                        "title": "excludedRoutes",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an IPv6 Route",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/init(destinationaddress:networkprefixlength:)",
                            "title": "- initWithDestinationAddress:networkPrefixLength:",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/default()",
                            "title": "+ defaultRoute",
                            "type": "method"
                          },
                          {
                            "title": "Accessing IPv6 Route Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/destinationaddress",
                            "title": "destinationAddress",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/destinationnetworkprefixlength",
                            "title": "destinationNetworkPrefixLength",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/gatewayaddress",
                            "title": "gatewayAddress",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neipv6route",
                        "title": "NEIPv6Route",
                        "type": "class"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/settingswithautomaticaddressing",
                        "title": "+ settingsWithAutomaticAddressing",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/settingswithlinklocaladdressing",
                        "title": "+ settingsWithLinkLocalAddressing",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/networkextension/neipv6settings",
                    "title": "NEIPv6Settings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/tunneloverheadbytes",
                    "title": "tunnelOverheadBytes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/mtu",
                    "title": "MTU",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nepackettunnelnetworksettings",
                "title": "NEPacketTunnelNetworkSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/init(tunnelremoteaddress:)",
                    "title": "- initWithTunnelRemoteAddress:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/tunnelremoteaddress",
                    "title": "tunnelRemoteAddress",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/dnssettings",
                    "title": "DNSSettings",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing DNS settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/init(servers:)",
                        "title": "- initWithServers:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing DNS properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/servers",
                        "title": "servers",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/searchdomains",
                        "title": "searchDomains",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/domainname",
                        "title": "domainName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomains",
                        "title": "matchDomains",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomainsnosearch",
                        "title": "matchDomainsNoSearch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/dnsprotocol",
                        "title": "dnsProtocol",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "DNS protocols",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/cleartext",
                            "title": "NEDNSProtocolCleartext",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/tls",
                            "title": "NEDNSProtocolTLS",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/https",
                            "title": "NEDNSProtocolHTTPS",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/nednsprotocol",
                        "title": "NEDNSProtocol",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/nednssettings",
                    "title": "NEDNSSettings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/proxysettings",
                    "title": "proxySettings",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Automatic Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/autoproxyconfigurationenabled",
                        "title": "autoProxyConfigurationEnabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationurl",
                        "title": "proxyAutoConfigurationURL",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationjavascript",
                        "title": "proxyAutoConfigurationJavaScript",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Manual Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpenabled",
                        "title": "HTTPEnabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpserver",
                        "title": "HTTPServer",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsenabled",
                        "title": "HTTPSEnabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsserver",
                        "title": "HTTPSServer",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Proxy Server",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/init(address:port:)",
                            "title": "- initWithAddress:port:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Proxy Server Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/address",
                            "title": "address",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/port",
                            "title": "port",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/authenticationrequired",
                            "title": "authenticationRequired",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/username",
                            "title": "username",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/password",
                            "title": "password",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neproxyserver",
                        "title": "NEProxyServer",
                        "type": "class"
                      },
                      {
                        "title": "Accessing General Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/excludesimplehostnames",
                        "title": "excludeSimpleHostnames",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/exceptionlist",
                        "title": "exceptionList",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/matchdomains",
                        "title": "matchDomains",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neproxysettings",
                    "title": "NEProxySettings",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/netunnelnetworksettings",
                "title": "NETunnelNetworkSettings",
                "type": "class"
              },
              {
                "path": "/documentation/networkextension/neethernettunnelprovider",
                "title": "NEEthernetTunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a settings instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neethernettunnelnetworksettings/init(tunnelremoteaddress:ethernetaddress:mtu:)",
                    "title": "- initWithTunnelRemoteAddress:ethernetAddress:mtu:",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting settings properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neethernettunnelnetworksettings/ethernetaddress",
                    "title": "ethernetAddress",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neethernettunnelnetworksettings",
                "title": "NEEthernetTunnelNetworkSettings",
                "type": "class"
              },
              {
                "title": "Packet handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling IP packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/readpacketobjects(completionhandler:)",
                    "title": "- readPacketObjectsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/writepacketobjects(_:)",
                    "title": "- writePacketObjects:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/readpackets(completionhandler:)",
                    "title": "- readPacketsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/writepackets(_:withprotocols:)",
                    "title": "- writePackets:withProtocols:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nepackettunnelflow",
                "title": "NEPacketTunnelFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a packet",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/init(data:protocolfamily:)",
                    "title": "- initWithData:protocolFamily:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing packet properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/data",
                    "title": "data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/metadata",
                    "title": "metadata",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/protocolfamily",
                    "title": "protocolFamily",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/direction",
                    "title": "direction",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "NETrafficDirectionInbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "NETrafficDirectionOutbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "NETrafficDirectionAny",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nepacket",
                "title": "NEPacket",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the connection status",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Connection States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/invalid",
                            "title": "NWTCPConnectionStateInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connecting",
                            "title": "NWTCPConnectionStateConnecting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/waiting",
                            "title": "NWTCPConnectionStateWaiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connected",
                            "title": "NWTCPConnectionStateConnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/disconnected",
                            "title": "NWTCPConnectionStateDisconnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/cancelled",
                            "title": "NWTCPConnectionStateCancelled",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionstate",
                        "title": "NWTCPConnectionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/isviable",
                        "title": "viable",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/error",
                        "title": "error",
                        "type": "property"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readminimumlength(_:maximumlength:completionhandler:)",
                        "title": "- readMinimumLength:maximumLength:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readlength(_:completionhandler:)",
                        "title": "- readLength:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/write(_:completionhandler:)",
                        "title": "- write:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/writeclose()",
                        "title": "- writeClose",
                        "type": "method"
                      },
                      {
                        "title": "Canceling the connection",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/hasbetterpath",
                        "title": "hasBetterPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/init(upgradefor:)",
                        "title": "- initWithUpgradeForConnection:",
                        "type": "method"
                      },
                      {
                        "title": "Getting connection properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/endpoint",
                        "title": "endpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/localaddress",
                        "title": "localAddress",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/remoteaddress",
                        "title": "remoteAddress",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/connectedpath",
                        "title": "connectedPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/txtrecord",
                        "title": "txtRecord",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnection",
                    "title": "NWTCPConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing TLS parameters",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/tlssessionid",
                        "title": "TLSSessionID",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/sslciphersuites",
                        "title": "SSLCipherSuites",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/minimumsslprotocolversion",
                        "title": "minimumSSLProtocolVersion",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/maximumsslprotocolversion",
                        "title": "maximumSSLProtocolVersion",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtlsparameters",
                    "title": "NWTLSParameters",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Delegate methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldevaluatetrust(for:)",
                        "title": "- shouldEvaluateTrustForConnection:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/evaluatetrust(for:peercertificatechain:completionhandler:)",
                        "title": "- evaluateTrustForConnection:peerCertificateChain:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldprovideidentity(for:)",
                        "title": "- shouldProvideIdentityForConnection:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/provideidentity(for:completionhandler:)",
                        "title": "- provideIdentityForConnection:completionHandler:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate",
                    "title": "NWTCPConnectionAuthenticationDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the session state",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Session States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/invalid",
                            "title": "NWUDPSessionStateInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/waiting",
                            "title": "NWUDPSessionStateWaiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/preparing",
                            "title": "NWUDPSessionStatePreparing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/ready",
                            "title": "NWUDPSessionStateReady",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/failed",
                            "title": "NWUDPSessionStateFailed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/cancelled",
                            "title": "NWUDPSessionStateCancelled",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsessionstate",
                        "title": "NWUDPSessionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/isviable",
                        "title": "viable",
                        "type": "property"
                      },
                      {
                        "title": "Selecting remote endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/resolvedendpoint",
                        "title": "resolvedEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/trynextresolvedendpoint()",
                        "title": "- tryNextResolvedEndpoint",
                        "type": "method"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/setreadhandler(_:maxdatagrams:)",
                        "title": "- setReadHandler:maxDatagrams:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writedatagram(_:completionhandler:)",
                        "title": "- writeDatagram:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writemultipledatagrams(_:completionhandler:)",
                        "title": "- writeMultipleDatagrams:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/maximumdatagramlength",
                        "title": "maximumDatagramLength",
                        "type": "property"
                      },
                      {
                        "title": "Canceling the session",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/hasbetterpath",
                        "title": "hasBetterPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/init(upgradefor:)",
                        "title": "- initWithUpgradeForSession:",
                        "type": "method"
                      },
                      {
                        "title": "Getting session properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/endpoint",
                        "title": "endpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/currentpath",
                        "title": "currentPath",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwudpsession",
                    "title": "NWUDPSession",
                    "type": "class"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing host endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/init(hostname:port:)",
                        "title": "+ endpointWithHostname:port:",
                        "type": "method"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/hostname",
                        "title": "hostname",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/port",
                        "title": "port",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwhostendpoint",
                    "title": "NWHostEndpoint",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Bonjour service endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/init(name:type:domain:)",
                        "title": "+ endpointWithName:type:domain:",
                        "type": "method"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/name",
                        "title": "name",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/type",
                        "title": "type",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/domain",
                        "title": "domain",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwbonjourserviceendpoint",
                    "title": "NWBonjourServiceEndpoint",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwendpoint",
                    "title": "NWEndpoint",
                    "type": "class"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting network path properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/status",
                        "title": "status",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Path Statuses",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/invalid",
                            "title": "NWPathStatusInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfied",
                            "title": "NWPathStatusSatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/unsatisfied",
                            "title": "NWPathStatusUnsatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfiable",
                            "title": "NWPathStatusSatisfiable",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpathstatus",
                        "title": "NWPathStatus",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isexpensive",
                        "title": "expensive",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isconstrained",
                        "title": "constrained",
                        "type": "property"
                      },
                      {
                        "title": "Comparing network paths",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isequal(to:)",
                        "title": "- isEqualToPath:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwpath",
                    "title": "NWPath",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing tunnel configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/loadallfrompreferences(completionhandler:)",
                    "title": "+ loadAllFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/copyapprules()",
                    "title": "- copyAppRules",
                    "type": "method"
                  },
                  {
                    "title": "Getting tunnel configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/routingmethod",
                    "title": "routingMethod",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Routing Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/destinationip",
                        "title": "NETunnelProviderRoutingMethodDestinationIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/sourceapplication",
                        "title": "NETunnelProviderRoutingMethodSourceApplication",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/networkrule",
                        "title": "NETunnelProviderRoutingMethodNetworkRule",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelproviderroutingmethod",
                    "title": "NETunnelProviderRoutingMethod",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring a per-app VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/forperappvpn()",
                    "title": "+ forPerAppVPN",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/apprules",
                    "title": "appRules",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/excludeddomains",
                    "title": "excludedDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/associateddomains",
                    "title": "associatedDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/calendardomains",
                    "title": "calendarDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/contactsdomains",
                    "title": "contactsDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/maildomains",
                    "title": "mailDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/safaridomains",
                    "title": "safariDomains",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidermanager",
                "title": "NETunnelProviderManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing VPN configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/shared()",
                    "title": "+ sharedManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/setauthorization(_:)",
                    "title": "- setAuthorization:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing VPN configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/protocolconfiguration",
                    "title": "protocolConfiguration",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nevpnmanager/protocol",
                    "title": "protocol",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isondemandenabled",
                    "title": "onDemandEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/ondemandrules",
                    "title": "onDemandRules",
                    "type": "property"
                  },
                  {
                    "title": "Connecting and disconnecting VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/connection",
                    "title": "connection",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "NEVPNErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "NEVPNErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "NEVPNErrorConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "NEVPNErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "NEVPNErrorConfigurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "NEVPNErrorConfigurationUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerrordomain",
                    "title": "NEVPNErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "NEVPNErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "NEVPNErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "NEVPNErrorConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "NEVPNErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "NEVPNErrorConfigurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "NEVPNErrorConfigurationUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconfigurationchangenotification",
                    "title": "NEVPNConfigurationChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                    "title": "Personal VPN Entitlement",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/networkextension/nevpnmanager",
                "title": "NEVPNManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerconfiguration",
                    "title": "providerConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerbundleidentifier",
                    "title": "providerBundleIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelproviderprotocol",
                "title": "NETunnelProviderProtocol",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an app rule",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:)",
                    "title": "- initWithSigningIdentifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:designatedrequirement:)",
                    "title": "- initWithSigningIdentifier:designatedRequirement:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing app rule properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchsigningidentifier",
                    "title": "matchSigningIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdesignatedrequirement",
                    "title": "matchDesignatedRequirement",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchpath",
                    "title": "matchPath",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdomains",
                    "title": "matchDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchtools",
                    "title": "matchTools",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neapprule",
                "title": "NEAppRule",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleconnect",
                    "title": "NEOnDemandRuleConnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruledisconnect",
                    "title": "NEOnDemandRuleDisconnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleignore",
                    "title": "NEOnDemandRuleIgnore",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing connection rules",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandruleevaluateconnection/connectionrules",
                        "title": "connectionRules",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/init(matchdomains:andaction:)",
                            "title": "- initWithMatchDomains:andAction:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Rule Match Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/matchdomains",
                            "title": "matchDomains",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/usednsservers",
                            "title": "useDNSServers",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/probeurl",
                            "title": "probeURL",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the Rule Action",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/action",
                            "title": "action",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Rule Actions",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/connectifneeded",
                                "title": "NEEvaluateConnectionRuleActionConnectIfNeeded",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/neverconnect",
                                "title": "NEEvaluateConnectionRuleActionNeverConnect",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/networkextension/neevaluateconnectionruleaction",
                            "title": "NEEvaluateConnectionRuleAction",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/networkextension/neevaluateconnectionrule",
                        "title": "NEEvaluateConnectionRule",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandruleevaluateconnection",
                    "title": "NEOnDemandRuleEvaluateConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "DNSSearchDomainMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "DNSServerAddressMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "interfaceTypeMatch",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "NEOnDemandRuleInterfaceTypeAny",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "NEOnDemandRuleInterfaceTypeEthernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "NEOnDemandRuleInterfaceTypeWiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "NEOnDemandRuleInterfaceTypeCellular",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "SSIDMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "probeURL",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "action",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "NEOnDemandRuleActionConnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "NEOnDemandRuleActionDisconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "NEOnDemandRuleActionEvaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "NEOnDemandRuleActionIgnore",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Controlling the tunnel connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/starttunnel(options:)",
                    "title": "- startTunnelWithOptions:andReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/stoptunnel()",
                    "title": "- stopTunnel",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the tunnel provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/sendprovidermessage(_:responsehandler:)",
                    "title": "- sendProviderMessage:returnError:responseHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidersession",
                "title": "NETunnelProviderSession",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Controlling the VPN connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel()",
                    "title": "- startVPNTunnelAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel(options:)",
                    "title": "- startVPNTunnelWithOptions:andReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionusername",
                    "title": "NEVPNConnectionStartOptionUsername",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionpassword",
                    "title": "NEVPNConnectionStartOptionPassword",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/stopvpntunnel()",
                    "title": "- stopVPNTunnel",
                    "type": "method"
                  },
                  {
                    "title": "Getting VPN connection status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/manager",
                    "title": "manager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/status",
                    "title": "status",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Statuses",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnecting",
                        "title": "NEVPNStatusDisconnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/reasserting",
                        "title": "NEVPNStatusReasserting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connected",
                        "title": "NEVPNStatusConnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connecting",
                        "title": "NEVPNStatusConnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnected",
                        "title": "NEVPNStatusDisconnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/invalid",
                        "title": "NEVPNStatusInvalid",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnstatus",
                    "title": "NEVPNStatus",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/connecteddate",
                    "title": "connectedDate",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnstatusdidchangenotification",
                    "title": "NEVPNStatusDidChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/fetchlastdisconnecterror(completionhandler:)",
                    "title": "- fetchLastDisconnectErrorWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionerrordomain",
                    "title": "NEVPNConnectionErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "General error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/overslept",
                        "title": "NEVPNConnectionErrorOverslept",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/nonetworkavailable",
                        "title": "NEVPNConnectionErrorNoNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/unrecoverablenetworkchange",
                        "title": "NEVPNConnectionErrorUnrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationfailed",
                        "title": "NEVPNConnectionErrorConfigurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/authenticationfailed",
                        "title": "NEVPNConnectionErrorAuthenticationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationnotfound",
                        "title": "NEVPNConnectionErrorConfigurationNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/negotiationfailed",
                        "title": "NEVPNConnectionErrorNegotiationFailed",
                        "type": "case"
                      },
                      {
                        "title": "VPN server error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serveraddressresolutionfailed",
                        "title": "NEVPNConnectionErrorServerAddressResolutionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servernotresponding",
                        "title": "NEVPNConnectionErrorServerNotResponding",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdead",
                        "title": "NEVPNConnectionErrorServerDead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdisconnected",
                        "title": "NEVPNConnectionErrorServerDisconnected",
                        "type": "case"
                      },
                      {
                        "title": "Plugin error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/pluginfailed",
                        "title": "NEVPNConnectionErrorPluginFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/plugindisabled",
                        "title": "NEVPNConnectionErrorPluginDisabled",
                        "type": "case"
                      },
                      {
                        "title": "Client certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateinvalid",
                        "title": "NEVPNConnectionErrorClientCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificatenotyetvalid",
                        "title": "NEVPNConnectionErrorClientCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateexpired",
                        "title": "NEVPNConnectionErrorClientCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Server certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateinvalid",
                        "title": "NEVPNConnectionErrorServerCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificatenotyetvalid",
                        "title": "NEVPNConnectionErrorServerCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateexpired",
                        "title": "NEVPNConnectionErrorServerCertificateExpired",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnconnectionerror",
                    "title": "NEVPNConnectionError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nevpnconnection",
                "title": "NEVPNConnection",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/packet-tunnel-provider",
            "title": "Packet tunnel provider",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "App proxy provider",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the app proxy life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/startproxy(options:completionhandler:)",
                    "title": "- startProxyWithOptions:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/stopproxy(with:completionhandler:)",
                    "title": "- stopProxyWithReason:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/cancelproxywitherror(_:)",
                    "title": "- cancelProxyWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Handling proxied flows",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/handlenewflow(_:)",
                    "title": "- handleNewFlow:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyprovider/handlenewudpflow(_:initialremoteendpoint:)",
                    "title": "- handleNewUDPFlow:initialRemoteEndpoint:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/handlenewudpflow:initialremoteflowendpoint:",
                    "title": "- handleNewUDPFlow:initialRemoteFlowEndpoint:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyprovider",
                "title": "NEAppProxyProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/protocolconfiguration",
                    "title": "protocolConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/routingmethod",
                    "title": "routingMethod",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/apprules",
                    "title": "appRules",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the tunnel interface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/settunnelnetworksettings(_:completionhandler:)",
                    "title": "- setTunnelNetworkSettings:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the containing app",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/handleappmessage(_:completionhandler:)",
                    "title": "- handleAppMessage:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Setting tunnel status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/reasserting",
                    "title": "reasserting",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "NETunnelProviderErrorNetworkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "NETunnelProviderErrorNetworkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "NETunnelProviderErrorNetworkSettingsFailed",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererrordomain",
                    "title": "NETunnelProviderErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "NETunnelProviderErrorNetworkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "NETunnelProviderErrorNetworkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "NETunnelProviderErrorNetworkSettingsFailed",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovider",
                "title": "NETunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling sleep and wake",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/sleep(completionhandler:)",
                    "title": "- sleepWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/wake()",
                    "title": "- wake",
                    "type": "method"
                  },
                  {
                    "title": "Creating network connections",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createtcpconnection(to:enabletls:tlsparameters:delegate:)",
                    "title": "- createTCPConnectionToEndpoint:enableTLS:TLSParameters:delegate:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createudpsession(to:from:)",
                    "title": "- createUDPSessionToEndpoint:fromEndpoint:",
                    "type": "method"
                  },
                  {
                    "title": "Monitoring the network state",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/defaultpath",
                    "title": "defaultPath",
                    "type": "property"
                  },
                  {
                    "title": "Supporting system extensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/startsystemextensionmode()",
                    "title": "+ startSystemExtensionMode",
                    "type": "method"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Stop Reasons",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/none",
                        "title": "NEProviderStopReasonNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userinitiated",
                        "title": "NEProviderStopReasonUserInitiated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerfailed",
                        "title": "NEProviderStopReasonProviderFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/nonetworkavailable",
                        "title": "NEProviderStopReasonNoNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/unrecoverablenetworkchange",
                        "title": "NEProviderStopReasonUnrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerdisabled",
                        "title": "NEProviderStopReasonProviderDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/authenticationcanceled",
                        "title": "NEProviderStopReasonAuthenticationCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationfailed",
                        "title": "NEProviderStopReasonConfigurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/idletimeout",
                        "title": "NEProviderStopReasonIdleTimeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationdisabled",
                        "title": "NEProviderStopReasonConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationremoved",
                        "title": "NEProviderStopReasonConfigurationRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/superceded",
                        "title": "NEProviderStopReasonSuperceded",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userlogout",
                        "title": "NEProviderStopReasonUserLogout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userswitch",
                        "title": "NEProviderStopReasonUserSwitch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/appupdate",
                        "title": "NEProviderStopReasonAppUpdate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/connectionfailed",
                        "title": "NEProviderStopReasonConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/sleep",
                        "title": "NEProviderStopReasonSleep",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/internalerror",
                        "title": "NEProviderStopReasonInternalError",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/neproviderstopreason",
                    "title": "NEProviderStopReason",
                    "type": "enum"
                  },
                  {
                    "title": "Displaying messages",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/displaymessage(_:completionhandler:)",
                    "title": "- displayMessage:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neprovider",
                "title": "NEProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/init(tunnelremoteaddress:)",
                    "title": "- initWithTunnelRemoteAddress:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/tunnelremoteaddress",
                    "title": "tunnelRemoteAddress",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/dnssettings",
                    "title": "DNSSettings",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing DNS settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/init(servers:)",
                        "title": "- initWithServers:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing DNS properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/servers",
                        "title": "servers",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/searchdomains",
                        "title": "searchDomains",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/domainname",
                        "title": "domainName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomains",
                        "title": "matchDomains",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomainsnosearch",
                        "title": "matchDomainsNoSearch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/dnsprotocol",
                        "title": "dnsProtocol",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "DNS protocols",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/cleartext",
                            "title": "NEDNSProtocolCleartext",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/tls",
                            "title": "NEDNSProtocolTLS",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/https",
                            "title": "NEDNSProtocolHTTPS",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/nednsprotocol",
                        "title": "NEDNSProtocol",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/nednssettings",
                    "title": "NEDNSSettings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/proxysettings",
                    "title": "proxySettings",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Automatic Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/autoproxyconfigurationenabled",
                        "title": "autoProxyConfigurationEnabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationurl",
                        "title": "proxyAutoConfigurationURL",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationjavascript",
                        "title": "proxyAutoConfigurationJavaScript",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Manual Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpenabled",
                        "title": "HTTPEnabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpserver",
                        "title": "HTTPServer",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsenabled",
                        "title": "HTTPSEnabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsserver",
                        "title": "HTTPSServer",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Proxy Server",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/init(address:port:)",
                            "title": "- initWithAddress:port:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Proxy Server Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/address",
                            "title": "address",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/port",
                            "title": "port",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/authenticationrequired",
                            "title": "authenticationRequired",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/username",
                            "title": "username",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/password",
                            "title": "password",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neproxyserver",
                        "title": "NEProxyServer",
                        "type": "class"
                      },
                      {
                        "title": "Accessing General Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/excludesimplehostnames",
                        "title": "excludeSimpleHostnames",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/exceptionlist",
                        "title": "exceptionList",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/matchdomains",
                        "title": "matchDomains",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neproxysettings",
                    "title": "NEProxySettings",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/netunnelnetworksettings",
                "title": "NETunnelNetworkSettings",
                "type": "class"
              },
              {
                "title": "Flow handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/write(_:withcompletionhandler:)",
                    "title": "- writeData:withCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/readdata(completionhandler:)",
                    "title": "- readDataWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteendpoint",
                    "title": "remoteEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteflowendpoint-9lvob",
                    "title": "remoteFlowEndpoint",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neappproxytcpflow",
                "title": "NEAppProxyTCPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams(completionhandler:)-9z8gw",
                    "title": "- readDatagramsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:sentby:completionhandler:)",
                    "title": "- writeDatagrams:sentByEndpoints:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/localendpoint",
                    "title": "localEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/localflowendpoint-9a8gj",
                    "title": "localFlowEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagramsandflowendpointswithcompletionhandler:",
                    "title": "- readDatagramsAndFlowEndpointsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams:sentbyflowendpoints:completionhandler:",
                    "title": "- writeDatagrams:sentByFlowEndpoints:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyudpflow",
                "title": "NEAppProxyUDPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing the flow life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalendpoint:completionhandler:)",
                    "title": "- openWithLocalEndpoint:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closereadwitherror(_:)",
                    "title": "- closeReadWithError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closewritewitherror(_:)",
                    "title": "- closeWriteWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing flow information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/metadata",
                    "title": "metaData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/setmetadata(_:)",
                    "title": "- setMetadata:",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_parameters_t",
                    "title": "nw_parameters_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/isbound",
                    "title": "isBound",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/networkinterface",
                    "title": "networkInterface",
                    "type": "property"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_interface_type_t",
                    "title": "nw_interface_type_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/remotehostname",
                    "title": "remoteHostname",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyerrordomain",
                    "title": "NEAppProxyErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                        "title": "NEAppProxyFlowErrorNotConnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                        "title": "NEAppProxyFlowErrorPeerReset",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                        "title": "NEAppProxyFlowErrorHostUnreachable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                        "title": "NEAppProxyFlowErrorInvalidArgument",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                        "title": "NEAppProxyFlowErrorAborted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                        "title": "NEAppProxyFlowErrorRefused",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                        "title": "NEAppProxyFlowErrorTimedOut",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                        "title": "NEAppProxyFlowErrorInternal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                        "title": "NEAppProxyFlowErrorDatagramTooLarge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                        "title": "NEAppProxyFlowErrorReadAlreadyPending",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                    "title": "NEAppProxyFlowError",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/openwithlocalflowendpoint:completionhandler:",
                    "title": "- openWithLocalFlowEndpoint:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyflow",
                "title": "NEAppProxyFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting source app information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/sourceappuniqueidentifier",
                    "title": "sourceAppUniqueIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/sourceappsigningidentifier",
                    "title": "sourceAppSigningIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/sourceappaudittoken",
                    "title": "sourceAppAuditToken",
                    "type": "property"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/filterflowidentifier",
                    "title": "filterFlowIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neflowmetadata",
                "title": "NEFlowMetaData",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the connection status",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Connection States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/invalid",
                            "title": "NWTCPConnectionStateInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connecting",
                            "title": "NWTCPConnectionStateConnecting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/waiting",
                            "title": "NWTCPConnectionStateWaiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connected",
                            "title": "NWTCPConnectionStateConnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/disconnected",
                            "title": "NWTCPConnectionStateDisconnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/cancelled",
                            "title": "NWTCPConnectionStateCancelled",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionstate",
                        "title": "NWTCPConnectionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/isviable",
                        "title": "viable",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/error",
                        "title": "error",
                        "type": "property"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readminimumlength(_:maximumlength:completionhandler:)",
                        "title": "- readMinimumLength:maximumLength:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readlength(_:completionhandler:)",
                        "title": "- readLength:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/write(_:completionhandler:)",
                        "title": "- write:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/writeclose()",
                        "title": "- writeClose",
                        "type": "method"
                      },
                      {
                        "title": "Canceling the connection",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/hasbetterpath",
                        "title": "hasBetterPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/init(upgradefor:)",
                        "title": "- initWithUpgradeForConnection:",
                        "type": "method"
                      },
                      {
                        "title": "Getting connection properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/endpoint",
                        "title": "endpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/localaddress",
                        "title": "localAddress",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/remoteaddress",
                        "title": "remoteAddress",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/connectedpath",
                        "title": "connectedPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/txtrecord",
                        "title": "txtRecord",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnection",
                    "title": "NWTCPConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing TLS parameters",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/tlssessionid",
                        "title": "TLSSessionID",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/sslciphersuites",
                        "title": "SSLCipherSuites",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/minimumsslprotocolversion",
                        "title": "minimumSSLProtocolVersion",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/maximumsslprotocolversion",
                        "title": "maximumSSLProtocolVersion",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtlsparameters",
                    "title": "NWTLSParameters",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Delegate methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldevaluatetrust(for:)",
                        "title": "- shouldEvaluateTrustForConnection:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/evaluatetrust(for:peercertificatechain:completionhandler:)",
                        "title": "- evaluateTrustForConnection:peerCertificateChain:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldprovideidentity(for:)",
                        "title": "- shouldProvideIdentityForConnection:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/provideidentity(for:completionhandler:)",
                        "title": "- provideIdentityForConnection:completionHandler:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate",
                    "title": "NWTCPConnectionAuthenticationDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the session state",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Session States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/invalid",
                            "title": "NWUDPSessionStateInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/waiting",
                            "title": "NWUDPSessionStateWaiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/preparing",
                            "title": "NWUDPSessionStatePreparing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/ready",
                            "title": "NWUDPSessionStateReady",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/failed",
                            "title": "NWUDPSessionStateFailed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/cancelled",
                            "title": "NWUDPSessionStateCancelled",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsessionstate",
                        "title": "NWUDPSessionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/isviable",
                        "title": "viable",
                        "type": "property"
                      },
                      {
                        "title": "Selecting remote endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/resolvedendpoint",
                        "title": "resolvedEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/trynextresolvedendpoint()",
                        "title": "- tryNextResolvedEndpoint",
                        "type": "method"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/setreadhandler(_:maxdatagrams:)",
                        "title": "- setReadHandler:maxDatagrams:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writedatagram(_:completionhandler:)",
                        "title": "- writeDatagram:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writemultipledatagrams(_:completionhandler:)",
                        "title": "- writeMultipleDatagrams:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/maximumdatagramlength",
                        "title": "maximumDatagramLength",
                        "type": "property"
                      },
                      {
                        "title": "Canceling the session",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/hasbetterpath",
                        "title": "hasBetterPath",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/init(upgradefor:)",
                        "title": "- initWithUpgradeForSession:",
                        "type": "method"
                      },
                      {
                        "title": "Getting session properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/endpoint",
                        "title": "endpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/currentpath",
                        "title": "currentPath",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwudpsession",
                    "title": "NWUDPSession",
                    "type": "class"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing host endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/init(hostname:port:)",
                        "title": "+ endpointWithHostname:port:",
                        "type": "method"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/hostname",
                        "title": "hostname",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/port",
                        "title": "port",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwhostendpoint",
                    "title": "NWHostEndpoint",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Bonjour service endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/init(name:type:domain:)",
                        "title": "+ endpointWithName:type:domain:",
                        "type": "method"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/name",
                        "title": "name",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/type",
                        "title": "type",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/domain",
                        "title": "domain",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwbonjourserviceendpoint",
                    "title": "NWBonjourServiceEndpoint",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwendpoint",
                    "title": "NWEndpoint",
                    "type": "class"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting network path properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/status",
                        "title": "status",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Path Statuses",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/invalid",
                            "title": "NWPathStatusInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfied",
                            "title": "NWPathStatusSatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/unsatisfied",
                            "title": "NWPathStatusUnsatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfiable",
                            "title": "NWPathStatusSatisfiable",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpathstatus",
                        "title": "NWPathStatus",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isexpensive",
                        "title": "expensive",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isconstrained",
                        "title": "constrained",
                        "type": "property"
                      },
                      {
                        "title": "Comparing network paths",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isequal(to:)",
                        "title": "- isEqualToPath:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwpath",
                    "title": "NWPath",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              },
              {
                "path": "/documentation/networkextension/handling-flow-copying",
                "title": "Handling Flow Copying",
                "type": "article"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Loading the app proxy configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovidermanager/loadallfrompreferences(completionhandler:)",
                    "title": "+ loadAllFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyprovidermanager",
                "title": "NEAppProxyProviderManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing tunnel configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/loadallfrompreferences(completionhandler:)",
                    "title": "+ loadAllFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/copyapprules()",
                    "title": "- copyAppRules",
                    "type": "method"
                  },
                  {
                    "title": "Getting tunnel configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/routingmethod",
                    "title": "routingMethod",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Routing Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/destinationip",
                        "title": "NETunnelProviderRoutingMethodDestinationIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/sourceapplication",
                        "title": "NETunnelProviderRoutingMethodSourceApplication",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/networkrule",
                        "title": "NETunnelProviderRoutingMethodNetworkRule",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelproviderroutingmethod",
                    "title": "NETunnelProviderRoutingMethod",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring a per-app VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/forperappvpn()",
                    "title": "+ forPerAppVPN",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/apprules",
                    "title": "appRules",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/excludeddomains",
                    "title": "excludedDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/associateddomains",
                    "title": "associatedDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/calendardomains",
                    "title": "calendarDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/contactsdomains",
                    "title": "contactsDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/maildomains",
                    "title": "mailDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/safaridomains",
                    "title": "safariDomains",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidermanager",
                "title": "NETunnelProviderManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing VPN configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/shared()",
                    "title": "+ sharedManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/setauthorization(_:)",
                    "title": "- setAuthorization:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing VPN configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/protocolconfiguration",
                    "title": "protocolConfiguration",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nevpnmanager/protocol",
                    "title": "protocol",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isondemandenabled",
                    "title": "onDemandEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/ondemandrules",
                    "title": "onDemandRules",
                    "type": "property"
                  },
                  {
                    "title": "Connecting and disconnecting VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/connection",
                    "title": "connection",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "NEVPNErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "NEVPNErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "NEVPNErrorConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "NEVPNErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "NEVPNErrorConfigurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "NEVPNErrorConfigurationUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerrordomain",
                    "title": "NEVPNErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "NEVPNErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "NEVPNErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "NEVPNErrorConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "NEVPNErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "NEVPNErrorConfigurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "NEVPNErrorConfigurationUnknown",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconfigurationchangenotification",
                    "title": "NEVPNConfigurationChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                    "title": "Personal VPN Entitlement",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/networkextension/nevpnmanager",
                "title": "NEVPNManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerconfiguration",
                    "title": "providerConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerbundleidentifier",
                    "title": "providerBundleIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelproviderprotocol",
                "title": "NETunnelProviderProtocol",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an app rule",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:)",
                    "title": "- initWithSigningIdentifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:designatedrequirement:)",
                    "title": "- initWithSigningIdentifier:designatedRequirement:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing app rule properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchsigningidentifier",
                    "title": "matchSigningIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdesignatedrequirement",
                    "title": "matchDesignatedRequirement",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchpath",
                    "title": "matchPath",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdomains",
                    "title": "matchDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchtools",
                    "title": "matchTools",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neapprule",
                "title": "NEAppRule",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleconnect",
                    "title": "NEOnDemandRuleConnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruledisconnect",
                    "title": "NEOnDemandRuleDisconnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleignore",
                    "title": "NEOnDemandRuleIgnore",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing connection rules",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandruleevaluateconnection/connectionrules",
                        "title": "connectionRules",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/init(matchdomains:andaction:)",
                            "title": "- initWithMatchDomains:andAction:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Rule Match Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/matchdomains",
                            "title": "matchDomains",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/usednsservers",
                            "title": "useDNSServers",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/probeurl",
                            "title": "probeURL",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the Rule Action",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/action",
                            "title": "action",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Rule Actions",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/connectifneeded",
                                "title": "NEEvaluateConnectionRuleActionConnectIfNeeded",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/neverconnect",
                                "title": "NEEvaluateConnectionRuleActionNeverConnect",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/networkextension/neevaluateconnectionruleaction",
                            "title": "NEEvaluateConnectionRuleAction",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/networkextension/neevaluateconnectionrule",
                        "title": "NEEvaluateConnectionRule",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandruleevaluateconnection",
                    "title": "NEOnDemandRuleEvaluateConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "DNSSearchDomainMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "DNSServerAddressMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "interfaceTypeMatch",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "NEOnDemandRuleInterfaceTypeAny",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "NEOnDemandRuleInterfaceTypeEthernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "NEOnDemandRuleInterfaceTypeWiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "NEOnDemandRuleInterfaceTypeCellular",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "SSIDMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "probeURL",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "action",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "NEOnDemandRuleActionConnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "NEOnDemandRuleActionDisconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "NEOnDemandRuleActionEvaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "NEOnDemandRuleActionIgnore",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Controlling the tunnel connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/starttunnel(options:)",
                    "title": "- startTunnelWithOptions:andReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/stoptunnel()",
                    "title": "- stopTunnel",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the tunnel provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/sendprovidermessage(_:responsehandler:)",
                    "title": "- sendProviderMessage:returnError:responseHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidersession",
                "title": "NETunnelProviderSession",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Controlling the VPN connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel()",
                    "title": "- startVPNTunnelAndReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel(options:)",
                    "title": "- startVPNTunnelWithOptions:andReturnError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionusername",
                    "title": "NEVPNConnectionStartOptionUsername",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionpassword",
                    "title": "NEVPNConnectionStartOptionPassword",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/stopvpntunnel()",
                    "title": "- stopVPNTunnel",
                    "type": "method"
                  },
                  {
                    "title": "Getting VPN connection status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/manager",
                    "title": "manager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/status",
                    "title": "status",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Statuses",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnecting",
                        "title": "NEVPNStatusDisconnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/reasserting",
                        "title": "NEVPNStatusReasserting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connected",
                        "title": "NEVPNStatusConnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connecting",
                        "title": "NEVPNStatusConnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnected",
                        "title": "NEVPNStatusDisconnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/invalid",
                        "title": "NEVPNStatusInvalid",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnstatus",
                    "title": "NEVPNStatus",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/connecteddate",
                    "title": "connectedDate",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnstatusdidchangenotification",
                    "title": "NEVPNStatusDidChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/fetchlastdisconnecterror(completionhandler:)",
                    "title": "- fetchLastDisconnectErrorWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionerrordomain",
                    "title": "NEVPNConnectionErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "General error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/overslept",
                        "title": "NEVPNConnectionErrorOverslept",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/nonetworkavailable",
                        "title": "NEVPNConnectionErrorNoNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/unrecoverablenetworkchange",
                        "title": "NEVPNConnectionErrorUnrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationfailed",
                        "title": "NEVPNConnectionErrorConfigurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/authenticationfailed",
                        "title": "NEVPNConnectionErrorAuthenticationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationnotfound",
                        "title": "NEVPNConnectionErrorConfigurationNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/negotiationfailed",
                        "title": "NEVPNConnectionErrorNegotiationFailed",
                        "type": "case"
                      },
                      {
                        "title": "VPN server error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serveraddressresolutionfailed",
                        "title": "NEVPNConnectionErrorServerAddressResolutionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servernotresponding",
                        "title": "NEVPNConnectionErrorServerNotResponding",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdead",
                        "title": "NEVPNConnectionErrorServerDead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdisconnected",
                        "title": "NEVPNConnectionErrorServerDisconnected",
                        "type": "case"
                      },
                      {
                        "title": "Plugin error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/pluginfailed",
                        "title": "NEVPNConnectionErrorPluginFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/plugindisabled",
                        "title": "NEVPNConnectionErrorPluginDisabled",
                        "type": "case"
                      },
                      {
                        "title": "Client certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateinvalid",
                        "title": "NEVPNConnectionErrorClientCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificatenotyetvalid",
                        "title": "NEVPNConnectionErrorClientCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateexpired",
                        "title": "NEVPNConnectionErrorClientCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Server certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateinvalid",
                        "title": "NEVPNConnectionErrorServerCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificatenotyetvalid",
                        "title": "NEVPNConnectionErrorServerCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateexpired",
                        "title": "NEVPNConnectionErrorServerCertificateExpired",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnconnectionerror",
                    "title": "NEVPNConnectionError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nevpnconnection",
                "title": "NEVPNConnection",
                "type": "class"
              },
              {
                "title": "Transparent proxy configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Loading proxy configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netransparentproxymanager/loadallfrompreferences(completionhandler:)",
                    "title": "+ loadAllFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/netransparentproxymanager",
                "title": "NETransparentProxyManager",
                "type": "class"
              },
              {
                "path": "/documentation/networkextension/netransparentproxyprovider",
                "title": "NETransparentProxyProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Traffic routing rules",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netransparentproxynetworksettings/includednetworkrules",
                    "title": "includedNetworkRules",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netransparentproxynetworksettings/excludednetworkrules",
                    "title": "excludedNetworkRules",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netransparentproxynetworksettings",
                "title": "NETransparentProxyNetworkSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a network rule",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/init(destinationnetwork:prefix:protocol:)",
                    "title": "- initWithDestinationNetwork:prefix:protocol:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/init(destinationhost:protocol:)",
                    "title": "- initWithDestinationHost:protocol:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/init(remotenetwork:remoteprefix:localnetwork:localprefix:protocol:direction:)",
                    "title": "- initWithRemoteNetwork:remotePrefix:localNetwork:localPrefix:protocol:direction:",
                    "type": "method"
                  },
                  {
                    "title": "Matching network traffic characteristics",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/matchremoteendpoint",
                    "title": "matchRemoteEndpoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchremoteprefix",
                    "title": "matchRemotePrefix",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/matchlocalnetwork",
                    "title": "matchLocalNetwork",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchlocalprefix",
                    "title": "matchLocalPrefix",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchprotocol",
                    "title": "matchProtocol",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Protocols",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nenetworkrule/protocol/tcp",
                        "title": "NENetworkRuleProtocolTCP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nenetworkrule/protocol/udp",
                        "title": "NENetworkRuleProtocolUDP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nenetworkrule/protocol/any",
                        "title": "NENetworkRuleProtocolAny",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nenetworkrule/protocol",
                    "title": "NENetworkRuleProtocol",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchdirection",
                    "title": "matchDirection",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "NETrafficDirectionInbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "NETrafficDirectionOutbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "NETrafficDirectionAny",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchlocalnetworkendpoint-9dyor",
                    "title": "matchLocalNetworkEndpoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchremotehostornetworkendpoint-80s0l",
                    "title": "matchRemoteHostOrNetworkEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/initwithdestinationhostendpoint:protocol:",
                    "title": "- initWithDestinationHostEndpoint:protocol:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/initwithdestinationnetworkendpoint:prefix:protocol:",
                    "title": "- initWithDestinationNetworkEndpoint:prefix:protocol:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/initwithremotenetworkendpoint:remoteprefix:localnetworkendpoint:localprefix:protocol:direction:",
                    "title": "- initWithRemoteNetworkEndpoint:remotePrefix:localNetworkEndpoint:localPrefix:protocol:direction:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nenetworkrule",
                "title": "NENetworkRule",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/app-proxy-provider",
            "title": "App proxy provider",
            "type": "collection"
          },
          {
            "title": "Network relays",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Relay configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing relay configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/shared()",
                    "title": "+ sharedManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing relay configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/relays",
                    "title": "relays",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/matchdomains",
                    "title": "matchDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/excludeddomains",
                    "title": "excludedDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/ondemandrules",
                    "title": "onDemandRules",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "DNSSearchDomainMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "DNSServerAddressMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "interfaceTypeMatch",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "NEOnDemandRuleInterfaceTypeAny",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "NEOnDemandRuleInterfaceTypeEthernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "NEOnDemandRuleInterfaceTypeWiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "NEOnDemandRuleInterfaceTypeCellular",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "SSIDMatch",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "probeURL",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "action",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "NEOnDemandRuleActionConnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "NEOnDemandRuleActionDisconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "NEOnDemandRuleActionEvaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "NEOnDemandRuleActionIgnore",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  },
                  {
                    "title": "Loading previously-used managers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/loadallmanagersfrompreferences(completionhandler:)",
                    "title": "+ loadAllManagersFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelayerrordomain",
                    "title": "NERelayErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationinvalid",
                        "title": "NERelayManagerErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationdisabled",
                        "title": "NERelayManagerErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationstale",
                        "title": "NERelayManagerErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationcannotberemoved",
                        "title": "NERelayManagerErrorConfigurationCannotBeRemoved",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nerelaymanagererror",
                    "title": "NERelayManagerError",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/excludedfqdns",
                    "title": "excludedFQDNs",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/isuitoggleenabled",
                    "title": "UIToggleEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/matchfqdns",
                    "title": "matchFQDNs",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/getlastclienterrors(_:completionhandler:)",
                    "title": "- getLastClientErrors:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nerelaymanager",
                "title": "NERelayManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring server properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/http3relayurl",
                    "title": "HTTP3RelayURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/http2relayurl",
                    "title": "HTTP2RelayURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/dnsoverhttpsurl",
                    "title": "dnsOverHTTPSURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/rawpublickeys",
                    "title": "rawPublicKeys",
                    "type": "property"
                  },
                  {
                    "title": "Configuring client properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/additionalhttpheaderfields",
                    "title": "additionalHTTPHeaderFields",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/identitydata",
                    "title": "identityData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/identitydatapassword",
                    "title": "identityDataPassword",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/syntheticdnsansweripv4prefix",
                    "title": "syntheticDNSAnswerIPv4Prefix",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/syntheticdnsansweripv6prefix",
                    "title": "syntheticDNSAnswerIPv6Prefix",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nerelay",
                "title": "NERelay",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/relays",
            "title": "Relays",
            "type": "collection"
          },
          {
            "title": "Content filters",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Data and control providers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Filtering network content",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handlenewflow(_:)",
                    "title": "- handleNewFlow:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleinbounddata(from:readbytesstartoffset:readbytes:)",
                    "title": "- handleInboundDataFromFlow:readBytesStartOffset:readBytes:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Attributes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterdataattribute/hasipheader",
                        "title": "NEFilterDataAttributeHasIPHeader",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterdataattribute",
                    "title": "NEFilterDataAttribute",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleoutbounddata(from:readbytesstartoffset:readbytes:)",
                    "title": "- handleOutboundDataFromFlow:readBytesStartOffset:readBytes:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleinbounddatacomplete(for:)",
                    "title": "- handleInboundDataCompleteForFlow:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleoutbounddatacomplete(for:)",
                    "title": "- handleOutboundDataCompleteForFlow:",
                    "type": "method"
                  },
                  {
                    "title": "Handling remediation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleremediation(for:)",
                    "title": "- handleRemediationForFlow:",
                    "type": "method"
                  },
                  {
                    "title": "Handling rule updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleruleschanged()",
                    "title": "- handleRulesChanged",
                    "type": "method"
                  },
                  {
                    "title": "Changing filter settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/apply(_:completionhandler:)",
                    "title": "- applySettings:completionHandler:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Filter Settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltersettings/init(rules:defaultaction:)",
                        "title": "- initWithRules:defaultAction:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Filter Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nefilterrule/init(networkrule:action:)",
                            "title": "- initWithNetworkRule:action:",
                            "type": "method"
                          },
                          {
                            "title": "Inspecting Filter Rule Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nefilterrule/networkrule",
                            "title": "networkRule",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/nefilterrule/action",
                            "title": "action",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/nefilterrule",
                        "title": "NEFilterRule",
                        "type": "class"
                      },
                      {
                        "title": "Inspecting Filter Settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltersettings/rules",
                        "title": "rules",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltersettings/defaultaction",
                        "title": "defaultAction",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltersettings",
                    "title": "NEFilterSettings",
                    "type": "class"
                  },
                  {
                    "title": "Resuming data flows",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/resumeflow(_:with:)",
                    "title": "- resumeFlow:withVerdict:",
                    "type": "method"
                  },
                  {
                    "title": "Updating filter verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/update(_:using:for:)",
                    "title": "- updateFlow:usingVerdict:forDirection:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nefilterdataprovider",
                "title": "NEFilterDataProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling requests for new rules",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/handlenewflow(_:completionhandler:)",
                    "title": "- handleNewFlow:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/notifyruleschanged()",
                    "title": "- notifyRulesChanged",
                    "type": "method"
                  },
                  {
                    "title": "Handling remediation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/handleremediation(for:completionhandler:)",
                    "title": "- handleRemediationForFlow:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/remediationmap",
                    "title": "remediationMap",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationmapremediationbuttontexts",
                    "title": "NEFilterProviderRemediationMapRemediationButtonTexts",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationmapremediationurls",
                    "title": "NEFilterProviderRemediationMapRemediationURLs",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlflowurl",
                    "title": "NEFilterProviderRemediationURLFlowURL",
                    "type": "macro"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlflowurlhostname",
                    "title": "NEFilterProviderRemediationURLFlowURLHostname",
                    "type": "macro"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlorganization",
                    "title": "NEFilterProviderRemediationURLOrganization",
                    "type": "macro"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlusername",
                    "title": "NEFilterProviderRemediationURLUsername",
                    "type": "macro"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/urlappendstringmap",
                    "title": "URLAppendStringMap",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefiltercontrolprovider",
                "title": "NEFilterControlProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Filtering packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketprovider/packethandler",
                    "title": "packetHandler",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpackethandler",
                    "title": "NEFilterPacketHandler",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketcontext",
                    "title": "NEFilterPacketContext",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "NETrafficDirectionInbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "NETrafficDirectionOutbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "NETrafficDirectionAny",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Verdicts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterpacketprovider/verdict/allow",
                        "title": "NEFilterPacketProviderVerdictAllow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterpacketprovider/verdict/drop",
                        "title": "NEFilterPacketProviderVerdictDrop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterpacketprovider/verdict/delay",
                        "title": "NEFilterPacketProviderVerdictDelay",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterpacketprovider/verdict",
                    "title": "NEFilterPacketProviderVerdict",
                    "type": "enum"
                  },
                  {
                    "title": "Delaying packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketprovider/delaycurrentpacket(_:)",
                    "title": "- delayCurrentPacket:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketprovider/allow(_:)",
                    "title": "- allowPacket:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nefilterpacketprovider",
                "title": "NEFilterPacketProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing the filter life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/startfilter(completionhandler:)",
                    "title": "- startFilterWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/stopfilter(with:completionhandler:)",
                    "title": "- stopFilterWithReason:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the filter configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/filterconfiguration",
                    "title": "filterConfiguration",
                    "type": "property"
                  },
                  {
                    "title": "Receiving reports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/handle(_:)",
                    "title": "- handleReport:",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltererrordomain",
                    "title": "NEFilterErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinvalid",
                        "title": "NEFilterManagerErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationdisabled",
                        "title": "NEFilterManagerErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationstale",
                        "title": "NEFilterManagerErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationcannotberemoved",
                        "title": "NEFilterManagerErrorConfigurationCannotBeRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationpermissiondenied",
                        "title": "NEFilterManagerErrorConfigurationPermissionDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinternalerror",
                        "title": "NEFilterManagerErrorConfigurationInternalError",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltermanagererror",
                    "title": "NEFilterManagerError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nefilterprovider",
                "title": "NEFilterProvider",
                "type": "class"
              },
              {
                "title": "Flow handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting flow properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/url",
                    "title": "URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/identifier",
                    "title": "identifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/direction",
                    "title": "direction",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "NETrafficDirectionInbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "NETrafficDirectionOutbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "NETrafficDirectionAny",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflowbytesmax",
                    "title": "NEFilterFlowBytesMax",
                    "type": "macro"
                  },
                  {
                    "title": "Source app identification",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappuniqueidentifier",
                    "title": "sourceAppUniqueIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappidentifier",
                    "title": "sourceAppIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappversion",
                    "title": "sourceAppVersion",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappaudittoken",
                    "title": "sourceAppAuditToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceprocessaudittoken",
                    "title": "sourceProcessAuditToken",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterflow",
                "title": "NEFilterFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting browser flow properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterbrowserflow/parenturl",
                    "title": "parentURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterbrowserflow/request",
                    "title": "request",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterbrowserflow/response",
                    "title": "response",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterbrowserflow",
                "title": "NEFilterBrowserFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting socket flow properties",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nefiltersocketflow/remoteendpoint",
                    "title": "remoteEndpoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/remotehostname",
                    "title": "remoteHostname",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting flow properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/url",
                        "title": "URL",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/identifier",
                        "title": "identifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/direction",
                        "title": "direction",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Directions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/netrafficdirection/inbound",
                            "title": "NETrafficDirectionInbound",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/netrafficdirection/outbound",
                            "title": "NETrafficDirectionOutbound",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/netrafficdirection/any",
                            "title": "NETrafficDirectionAny",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/networkextension/netrafficdirection",
                        "title": "NETrafficDirection",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflowbytesmax",
                        "title": "NEFilterFlowBytesMax",
                        "type": "macro"
                      },
                      {
                        "title": "Source app identification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappuniqueidentifier",
                        "title": "sourceAppUniqueIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappidentifier",
                        "title": "sourceAppIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappversion",
                        "title": "sourceAppVersion",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappaudittoken",
                        "title": "sourceAppAuditToken",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceprocessaudittoken",
                        "title": "sourceProcessAuditToken",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterflow",
                    "title": "NEFilterFlow",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nefiltersocketflow/localendpoint",
                    "title": "localEndpoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/socketfamily",
                    "title": "socketFamily",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/sockettype",
                    "title": "socketType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/socketprotocol",
                    "title": "socketProtocol",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/localflowendpoint-4nt54",
                    "title": "localFlowEndpoint",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/remoteflowendpoint-52dxr",
                    "title": "remoteFlowEndpoint",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefiltersocketflow",
                "title": "NEFilterSocketFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating new flow verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/allow()",
                    "title": "+ allowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/drop()",
                    "title": "+ dropVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/pause()",
                    "title": "+ pauseVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/filterdataverdict(withfilterinbound:peekinboundbytes:filteroutbound:peekoutboundbytes:)",
                    "title": "+ filterDataVerdictWithFilterInbound:peekInboundBytes:filterOutbound:peekOutboundBytes:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/remediateverdict(withremediationurlmapkey:remediationbuttontextmapkey:)",
                    "title": "+ remediateVerdictWithRemediationURLMapKey:remediationButtonTextMapKey:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/needrules()",
                    "title": "+ needRulesVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/urlappendstringverdict(withmapkey:)",
                    "title": "+ URLAppendStringVerdictWithMapKey:",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting new flow verdict properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/statisticsreportfrequency",
                    "title": "statisticsReportFrequency",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Report frequencies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/none",
                        "title": "NEFilterReportFrequencyNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/low",
                        "title": "NEFilterReportFrequencyLow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/medium",
                        "title": "NEFilterReportFrequencyMedium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/high",
                        "title": "NEFilterReportFrequencyHigh",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterreport/frequency",
                    "title": "NEFilterReportFrequency",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nefilternewflowverdict",
                "title": "NEFilterNewFlowVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating data verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/allow()",
                    "title": "+ allowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/drop()",
                    "title": "+ dropVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/pause()",
                    "title": "+ pauseVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/remediateverdict(withremediationurlmapkey:remediationbuttontextmapkey:)",
                    "title": "+ remediateVerdictWithRemediationURLMapKey:remediationButtonTextMapKey:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/needrules()",
                    "title": "+ needRulesVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/init(passbytes:peekbytes:)",
                    "title": "+ dataVerdictWithPassBytes:peekBytes:",
                    "type": "method"
                  },
                  {
                    "title": "Reporting statistics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/statisticsreportfrequency",
                    "title": "statisticsReportFrequency",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterdataverdict",
                "title": "NEFilterDataVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating control verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolverdict/allow(withupdaterules:)",
                    "title": "+ allowVerdictWithUpdateRules:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolverdict/drop(withupdaterules:)",
                    "title": "+ dropVerdictWithUpdateRules:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolverdict/updaterules()",
                    "title": "+ updateRules",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nefiltercontrolverdict",
                "title": "NEFilterControlVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating remediation verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterremediationverdict/allow()",
                    "title": "+ allowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterremediationverdict/drop()",
                    "title": "+ dropVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterremediationverdict/needrules()",
                    "title": "+ needRulesVerdict",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nefilterremediationverdict",
                "title": "NEFilterRemediationVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring report generation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterverdict/shouldreport",
                    "title": "shouldReport",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterverdict",
                "title": "NEFilterVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting report properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/flow",
                    "title": "flow",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/action",
                    "title": "action",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/invalid",
                        "title": "NEFilterActionInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/allow",
                        "title": "NEFilterActionAllow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/drop",
                        "title": "NEFilterActionDrop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/remediate",
                        "title": "NEFilterActionRemediate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/filterdata",
                        "title": "NEFilterActionFilterData",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilteraction",
                    "title": "NEFilterAction",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/event-swift.property",
                    "title": "event",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Event Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/newflow",
                        "title": "NEFilterReportEventNewFlow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/datadecision",
                        "title": "NEFilterReportEventDataDecision",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/flowclosed",
                        "title": "NEFilterReportEventFlowClosed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/statistics",
                        "title": "NEFilterReportEventStatistics",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterreport/event-swift.enum",
                    "title": "NEFilterReportEvent",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/bytesinboundcount",
                    "title": "bytesInboundCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/bytesoutboundcount",
                    "title": "bytesOutboundCount",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterreport",
                "title": "NEFilterReport",
                "type": "class"
              },
              {
                "title": "Filter configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the filter configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/shared()",
                    "title": "+ sharedManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing filter configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/providerconfiguration",
                    "title": "providerConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "title": "Prioritizing filters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/grade-swift.property",
                    "title": "grade",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Grades",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanager/grade-swift.enum/firewall",
                        "title": "NEFilterManagerGradeFirewall",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanager/grade-swift.enum/inspector",
                        "title": "NEFilterManagerGradeInspector",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltermanager/grade-swift.enum",
                    "title": "NEFilterManagerGrade",
                    "type": "enum"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltererrordomain",
                    "title": "NEFilterErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinvalid",
                        "title": "NEFilterManagerErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationdisabled",
                        "title": "NEFilterManagerErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationstale",
                        "title": "NEFilterManagerErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationcannotberemoved",
                        "title": "NEFilterManagerErrorConfigurationCannotBeRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationpermissiondenied",
                        "title": "NEFilterManagerErrorConfigurationPermissionDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinternalerror",
                        "title": "NEFilterManagerErrorConfigurationInternalError",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltermanagererror",
                    "title": "NEFilterManagerError",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterconfigurationdidchangenotification",
                    "title": "NEFilterConfigurationDidChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/disableencrypteddnssettings",
                    "title": "disableEncryptedDNSSettings",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefiltermanager",
                "title": "NEFilterManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring filter behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterbrowsers",
                    "title": "filterBrowsers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filtersockets",
                    "title": "filterSockets",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterpackets",
                    "title": "filterPackets",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the filter configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/vendorconfiguration",
                    "title": "vendorConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/serveraddress",
                    "title": "serverAddress",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/username",
                    "title": "username",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/organization",
                    "title": "organization",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/passwordreference",
                    "title": "passwordReference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/identityreference",
                    "title": "identityReference",
                    "type": "property"
                  },
                  {
                    "title": "Accessing bundle identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterdataproviderbundleidentifier",
                    "title": "filterDataProviderBundleIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterpacketproviderbundleidentifier",
                    "title": "filterPacketProviderBundleIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterproviderconfiguration",
                "title": "NEFilterProviderConfiguration",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/content-filter-providers",
            "title": "Content filter providers",
            "type": "collection"
          },
          {
            "path": "/documentation/networkextension/filtering-network-traffic",
            "title": "Filtering Network Traffic",
            "type": "sampleCode"
          },
          {
            "title": "DNS configurations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "DNS configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing DNS configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/shared()",
                    "title": "+ sharedManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing DNS configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/dnssettings",
                    "title": "dnsSettings",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/ondemandrules",
                    "title": "onDemandRules",
                    "type": "property"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingserrordomain",
                    "title": "NEDNSSettingsErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationinvalid",
                        "title": "NEDNSSettingsManagerErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationdisabled",
                        "title": "NEDNSSettingsManagerErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationstale",
                        "title": "NEDNSSettingsManagerErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationcannotberemoved",
                        "title": "NEDNSSettingsManagerErrorConfigurationCannotBeRemoved",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nednssettingsmanagererror",
                    "title": "NEDNSSettingsManagerError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nednssettingsmanager",
                "title": "NEDNSSettingsManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring server properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsoverhttpssettings/serverurl",
                    "title": "serverURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/init(servers:)",
                    "title": "- initWithServers:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomains",
                    "title": "matchDomains",
                    "type": "property"
                  },
                  {
                    "title": "Configuring client properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsoverhttpssettings/identityreference",
                    "title": "identityReference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nednsoverhttpssettings",
                "title": "NEDNSOverHTTPSSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring server properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsovertlssettings/servername",
                    "title": "serverName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/init(servers:)",
                    "title": "- initWithServers:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomains",
                    "title": "matchDomains",
                    "type": "property"
                  },
                  {
                    "title": "Configuring client properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsovertlssettings/identityreference",
                    "title": "identityReference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nednsovertlssettings",
                "title": "NEDNSOverTLSSettings",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/dns-settings",
            "title": "DNS settings",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Provider",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the DNS proxy life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/startproxy(options:completionhandler:)",
                    "title": "- startProxyWithOptions:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/stopproxy(with:completionhandler:)",
                    "title": "- stopProxyWithReason:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/cancelproxywitherror(_:)",
                    "title": "- cancelProxyWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Handling proxied DNS flow",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/handlenewflow(_:)",
                    "title": "- handleNewFlow:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nednsproxyprovider/handlenewudpflow(_:initialremoteendpoint:)",
                    "title": "- handleNewUDPFlow:initialRemoteEndpoint:",
                    "type": "method"
                  },
                  {
                    "title": "Getting system DNS settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/systemdnssettings",
                    "title": "systemDNSSettings",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/handlenewudpflow:initialremoteflowendpoint:",
                    "title": "- handleNewUDPFlow:initialRemoteFlowEndpoint:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nednsproxyprovider",
                "title": "NEDNSProxyProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing DNS settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/init(servers:)",
                    "title": "- initWithServers:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing DNS properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/servers",
                    "title": "servers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/searchdomains",
                    "title": "searchDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/domainname",
                    "title": "domainName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomains",
                    "title": "matchDomains",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomainsnosearch",
                    "title": "matchDomainsNoSearch",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/dnsprotocol",
                    "title": "dnsProtocol",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "DNS protocols",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednsprotocol/cleartext",
                        "title": "NEDNSProtocolCleartext",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsprotocol/tls",
                        "title": "NEDNSProtocolTLS",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsprotocol/https",
                        "title": "NEDNSProtocolHTTPS",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nednsprotocol",
                    "title": "NEDNSProtocol",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nednssettings",
                "title": "NEDNSSettings",
                "type": "class"
              },
              {
                "title": "Handling flows",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/write(_:withcompletionhandler:)",
                    "title": "- writeData:withCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/readdata(completionhandler:)",
                    "title": "- readDataWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteendpoint",
                    "title": "remoteEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteflowendpoint-9lvob",
                    "title": "remoteFlowEndpoint",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neappproxytcpflow",
                "title": "NEAppProxyTCPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams(completionhandler:)-9z8gw",
                    "title": "- readDatagramsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:sentby:completionhandler:)",
                    "title": "- writeDatagrams:sentByEndpoints:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/localendpoint",
                    "title": "localEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/localflowendpoint-9a8gj",
                    "title": "localFlowEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagramsandflowendpointswithcompletionhandler:",
                    "title": "- readDatagramsAndFlowEndpointsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams:sentbyflowendpoints:completionhandler:",
                    "title": "- writeDatagrams:sentByFlowEndpoints:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyudpflow",
                "title": "NEAppProxyUDPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing the flow life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalendpoint:completionhandler:)",
                    "title": "- openWithLocalEndpoint:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closereadwitherror(_:)",
                    "title": "- closeReadWithError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closewritewitherror(_:)",
                    "title": "- closeWriteWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing flow information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/metadata",
                    "title": "metaData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/setmetadata(_:)",
                    "title": "- setMetadata:",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_parameters_t",
                    "title": "nw_parameters_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/isbound",
                    "title": "isBound",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/networkinterface",
                    "title": "networkInterface",
                    "type": "property"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_interface_type_t",
                    "title": "nw_interface_type_t",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/remotehostname",
                    "title": "remoteHostname",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyerrordomain",
                    "title": "NEAppProxyErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                        "title": "NEAppProxyFlowErrorNotConnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                        "title": "NEAppProxyFlowErrorPeerReset",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                        "title": "NEAppProxyFlowErrorHostUnreachable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                        "title": "NEAppProxyFlowErrorInvalidArgument",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                        "title": "NEAppProxyFlowErrorAborted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                        "title": "NEAppProxyFlowErrorRefused",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                        "title": "NEAppProxyFlowErrorTimedOut",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                        "title": "NEAppProxyFlowErrorInternal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                        "title": "NEAppProxyFlowErrorDatagramTooLarge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                        "title": "NEAppProxyFlowErrorReadAlreadyPending",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                    "title": "NEAppProxyFlowError",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/openwithlocalflowendpoint:completionhandler:",
                    "title": "- openWithLocalFlowEndpoint:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyflow",
                "title": "NEAppProxyFlow",
                "type": "class"
              },
              {
                "title": "Configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the DNS proxy configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/shared()",
                    "title": "+ sharedManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing DNS proxy configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/providerprotocol",
                    "title": "providerProtocol",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyconfigurationdidchangenotification",
                    "title": "NEDNSProxyConfigurationDidChangeNotification",
                    "type": "var"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyerrordomain",
                    "title": "NEDNSProxyErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationinvalid",
                        "title": "NEDNSProxyManagerErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationdisabled",
                        "title": "NEDNSProxyManagerErrorConfigurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationstale",
                        "title": "NEDNSProxyManagerErrorConfigurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationcannotberemoved",
                        "title": "NEDNSProxyManagerErrorConfigurationCannotBeRemoved",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/nednsproxymanagererror",
                    "title": "NEDNSProxyManagerError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nednsproxymanager",
                "title": "NEDNSProxyManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the DNS proxy configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyproviderprotocol/providerconfiguration",
                    "title": "providerConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyproviderprotocol/providerbundleidentifier",
                    "title": "providerBundleIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nednsproxyproviderprotocol",
                "title": "NEDNSProxyProviderProtocol",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/dns-proxy-provider",
            "title": "DNS proxy provider",
            "type": "collection"
          },
          {
            "title": "Local networking",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Matching Wi-Fi networks",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/matchssids",
                    "title": "matchSSIDs",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/matchprivateltenetworks",
                    "title": "matchPrivateLTENetworks",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing network properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neprivateltenetwork/mobilecountrycode",
                        "title": "mobileCountryCode",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neprivateltenetwork/mobilenetworkcode",
                        "title": "mobileNetworkCode",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neprivateltenetwork/trackingareacode",
                        "title": "trackingAreaCode",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neprivateltenetwork",
                    "title": "NEPrivateLTENetwork",
                    "type": "class"
                  },
                  {
                    "title": "Persisting manager settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/loadfrompreferences(completionhandler:)",
                    "title": "- loadFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/loadallfrompreferences(completionhandler:)",
                    "title": "+ loadAllFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/savetopreferences(completionhandler:)",
                    "title": "- saveToPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/removefrompreferences(completionhandler:)",
                    "title": "- removeFromPreferencesWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Working with a delegate",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/delegate",
                    "title": "delegate",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Receiving calls",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushdelegate/apppushmanager(_:didreceiveincomingcallwithuserinfo:)",
                        "title": "- appPushManager:didReceiveIncomingCallWithUserInfo:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/networkextension/neapppushdelegate",
                    "title": "NEAppPushDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "Inspecting manager properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/isactive",
                    "title": "active",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/isenabled",
                    "title": "enabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/localizeddescription",
                    "title": "localizedDescription",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting provider properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/providerconfiguration",
                    "title": "providerConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/providerbundleidentifier",
                    "title": "providerBundleIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppusherrordomain",
                    "title": "NEAppPushErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/configurationinvalid",
                        "title": "NEAppPushManagerErrorConfigurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/configurationnotloaded",
                        "title": "NEAppPushManagerErrorConfigurationNotLoaded",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/inactivesession",
                        "title": "NEAppPushManagerErrorInactiveSession",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/internalerror",
                        "title": "NEAppPushManagerErrorInternalError",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code",
                    "title": "NEAppPushManagerError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/neapppushmanager",
                "title": "NEAppPushManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting provider properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/providerconfiguration",
                    "title": "providerConfiguration",
                    "type": "property"
                  },
                  {
                    "title": "Implementing provider life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/start()",
                    "title": "- start",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/start(completionhandler:)",
                    "title": "- startWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/stop(with:completionhandler:)",
                    "title": "- stopWithReason:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/handletimerevent()",
                    "title": "- handleTimerEvent",
                    "type": "method"
                  },
                  {
                    "title": "Receiving local events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/reportincomingcall(userinfo:)",
                    "title": "- reportIncomingCallWithUserInfo:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/reportpushtotalkmessage(userinfo:)",
                    "title": "- reportPushToTalkMessageWithUserInfo:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neapppushprovider",
                "title": "NEAppPushProvider",
                "type": "class"
              },
              {
                "path": "/documentation/networkextension/maintaining-a-reliable-network-connection",
                "title": "Maintaining a Reliable Network Connection",
                "type": "article"
              },
              {
                "path": "/documentation/networkextension/receiving-voice-and-text-communications-on-a-local-network",
                "title": "Receiving Voice and Text Communications on a Local Network",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/networkextension/local-push-connectivity",
            "title": "Local push connectivity",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/identifier",
                "title": "identifier",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/ismandatory",
                "title": "isMandatory",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/keychainreference",
                "title": "keychainReference",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/init(identifier:keychainreference:)",
                "title": "- initWithIdentifier:keychainReference:",
                "type": "method"
              }
            ],
            "path": "/documentation/networkextension/nevpnikev2ppkconfiguration",
            "title": "NEVPNIKEv2PPKConfiguration",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/networkextension/nerelayclienterrordomain",
            "title": "NERelayClientErrorDomain",
            "type": "var"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/certificateexpired",
                "title": "NERelayManagerClientErrorCertificateExpired",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/certificateinvalid",
                "title": "NERelayManagerClientErrorCertificateInvalid",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/certificatemissing",
                "title": "NERelayManagerClientErrorCertificateMissing",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/dnsfailed",
                "title": "NERelayManagerClientErrorDNSFailed",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/none",
                "title": "NERelayManagerClientErrorNone",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/other",
                "title": "NERelayManagerClientErrorOther",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/servercertificateexpired",
                "title": "NERelayManagerClientErrorServerCertificateExpired",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/servercertificateinvalid",
                "title": "NERelayManagerClientErrorServerCertificateInvalid",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/serverdisconnected",
                "title": "NERelayManagerClientErrorServerDisconnected",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/serverunreachable",
                "title": "NERelayManagerClientErrorServerUnreachable",
                "type": "case"
              }
            ],
            "path": "/documentation/networkextension/nerelaymanagerclienterror",
            "title": "NERelayManagerClientError",
            "type": "enum"
          }
        ],
        "path": "/documentation/networkextension",
        "title": "Network Extension",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Wi-Fi management",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.hotspotconfiguration",
                "title": "Hotspot Configuration Entitlement",
                "type": "typealias"
              },
              {
                "title": "Wi-Fi network configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/shared",
                    "title": "class var shared: NEHotspotConfigurationManager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/apply(_:completionhandler:)",
                    "title": "func apply(NEHotspotConfiguration, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Getting a list of configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/getconfiguredssids(completionhandler:)",
                    "title": "func getConfiguredSSIDs(completionHandler: ([String]) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Removing configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/removeconfiguration(forhs20domainname:)",
                    "title": "func removeConfiguration(forHS20DomainName: String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/removeconfiguration(forssid:)",
                    "title": "func removeConfiguration(forSSID: String)",
                    "type": "method"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationerrordomain",
                    "title": "let NEHotspotConfigurationErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Errors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidssid",
                        "title": "case invalidSSID",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidwpapassphrase",
                        "title": "case invalidWPAPassphrase",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidweppassphrase",
                        "title": "case invalidWEPPassphrase",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalideapsettings",
                        "title": "case invalidEAPSettings",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidhs20settings",
                        "title": "case invalidHS20Settings",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidhs20domainname",
                        "title": "case invalidHS20DomainName",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/invalidssidprefix",
                        "title": "case invalidSSIDPrefix",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/userdenied",
                        "title": "case userDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/pending",
                        "title": "case pending",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/systemconfiguration",
                        "title": "case systemConfiguration",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/joinoncenotsupported",
                        "title": "case joinOnceNotSupported",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/alreadyassociated",
                        "title": "case alreadyAssociated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/applicationisnotinforeground",
                        "title": "case applicationIsNotInForeground",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/systemdenied",
                        "title": "case systemDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/userunauthorized",
                        "title": "case userUnauthorized",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotconfigurationerror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspotconfigurationerror",
                    "title": "NEHotspotConfigurationError",
                    "type": "enum"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.hotspotconfiguration",
                    "title": "Hotspot Configuration Entitlement",
                    "type": "typealias"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/joinaccessoryhotspot(_:passphrase:completionhandler:)",
                    "title": "func joinAccessoryHotspot(ASAccessory, passphrase: String, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfigurationmanager/joinaccessoryhotspotwithoutsecurity(_:completionhandler:)",
                    "title": "func joinAccessoryHotspotWithoutSecurity(ASAccessory, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspotconfigurationmanager",
                "title": "NEHotspotConfigurationManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssid:)",
                    "title": "init(ssid: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssid:passphrase:iswep:)",
                    "title": "init(ssid: String, passphrase: String, isWEP: Bool)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssid:eapsettings:)",
                    "title": "init(ssid: String, eapSettings: NEHotspotEAPSettings)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(hs20settings:eapsettings:)",
                    "title": "init(hs20Settings: NEHotspotHS20Settings, eapSettings: NEHotspotEAPSettings)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssidprefix:)",
                    "title": "init(ssidPrefix: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/init(ssidprefix:passphrase:iswep:)",
                    "title": "init(ssidPrefix: String, passphrase: String, isWEP: Bool)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/ssid",
                    "title": "var ssid: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/ssidprefix",
                    "title": "var ssidPrefix: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/lifetimeindays",
                    "title": "var lifeTimeInDays: NSNumber",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/joinonce",
                    "title": "var joinOnce: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotconfiguration/hidden",
                    "title": "var hidden: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nehotspotconfiguration",
                "title": "NEHotspotConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing EAP properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/istlsclientcertificaterequired",
                    "title": "var isTLSClientCertificateRequired: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/trustedservernames",
                    "title": "var trustedServerNames: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/supportedeaptypes",
                    "title": "var supportedEAPTypes: [NSNumber]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eaptls",
                        "title": "case EAPTLS",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eapttls",
                        "title": "case EAPTTLS",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eappeap",
                        "title": "case EAPPEAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/eapfast",
                        "title": "case EAPFAST",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/eaptype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspoteapsettings/eaptype",
                    "title": "NEHotspotEAPSettings.EAPType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/username",
                    "title": "var username: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/password",
                    "title": "var password: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/preferredtlsversion",
                    "title": "var preferredTLSVersion: NEHotspotEAPSettings.TLSVersion",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/tlsversion/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspoteapsettings/tlsversion",
                    "title": "NEHotspotEAPSettings.TLSVersion",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/outeridentity",
                    "title": "var outerIdentity: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.property",
                    "title": "var ttlsInnerAuthenticationType: NEHotspotEAPSettings.TTLSInnerAuthenticationType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationpap",
                        "title": "case eapttlsInnerAuthenticationPAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationchap",
                        "title": "case eapttlsInnerAuthenticationCHAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationmschap",
                        "title": "case eapttlsInnerAuthenticationMSCHAP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationmschapv2",
                        "title": "case eapttlsInnerAuthenticationMSCHAPv2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/eapttlsinnerauthenticationeap",
                        "title": "case eapttlsInnerAuthenticationEAP",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspoteapsettings/ttlsinnerauthenticationtype-swift.enum",
                    "title": "NEHotspotEAPSettings.TTLSInnerAuthenticationType",
                    "type": "enum"
                  },
                  {
                    "title": "Setting Keychain-based EAP Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/setidentity(_:)",
                    "title": "func setIdentity(SecIdentity) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoteapsettings/settrustedservercertificates(_:)",
                    "title": "func setTrustedServerCertificates([Any]) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspoteapsettings",
                "title": "NEHotspotEAPSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing Hotspot 2.0 settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/init(domainname:roamingenabled:)",
                    "title": "init(domainName: String, roamingEnabled: Bool)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing Hotspot 2.0 properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/domainname",
                    "title": "var domainName: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/isroamingenabled",
                    "title": "var isRoamingEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/mccandmncs",
                    "title": "var mccAndMNCs: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/nairealmnames",
                    "title": "var naiRealmNames: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspoths20settings/roamingconsortiumois",
                    "title": "var roamingConsortiumOIs: [String]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nehotspoths20settings",
                "title": "NEHotspotHS20Settings",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/wi-fi-configuration",
            "title": "Wi-Fi configuration",
            "type": "collection"
          },
          {
            "path": "/documentation/networkextension/configuring-a-wi-fi-accessory-to-join-a-network",
            "title": "Configuring a Wi-Fi accessory to join a network",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Registration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Registering a hotspot helper",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelper/register(options:queue:handler:)",
                    "title": "class func register(options: [String : NSObject]?, queue: dispatch_queue_t, handler: NEHotspotHelperHandler) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/knehotspothelperoptiondisplayname",
                    "title": "let kNEHotspotHelperOptionDisplayName: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperhandler",
                    "title": "NEHotspotHelperHandler",
                    "type": "typealias"
                  },
                  {
                    "title": "Getting hotspot network status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelper/supportednetworkinterfaces()",
                    "title": "class func supportedNetworkInterfaces() -> [Any]?",
                    "type": "method"
                  },
                  {
                    "title": "Logging off",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelper/logoff(_:)",
                    "title": "class func logoff(NEHotspotNetwork) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspothelper",
                "title": "NEHotspotHelper",
                "type": "class"
              },
              {
                "title": "Commands",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Command information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/commandtype",
                    "title": "var commandType: NEHotspotHelperCommandType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Command Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/filterscanlist",
                        "title": "case filterScanList",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/evaluate",
                        "title": "case evaluate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/authenticate",
                        "title": "case authenticate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/presentui",
                        "title": "case presentUI",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/maintain",
                        "title": "case maintain",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/logoff",
                        "title": "case logoff",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelpercommandtype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspothelpercommandtype",
                    "title": "NEHotspotHelperCommandType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/network",
                    "title": "var network: NEHotspotNetwork?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/networklist",
                    "title": "var networkList: [NEHotspotNetwork]?",
                    "type": "property"
                  },
                  {
                    "title": "Networking on the hotspot network",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsmutableurlrequest/1619006-bind",
                    "title": "func bind(to: NEHotspotHelperCommand)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nehotspothelpercommand/createtcpconnection(_:)",
                    "title": "func createTCPConnection(NWEndpoint) -> NWTCPConnection",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nehotspothelpercommand/createudpsession(_:)",
                    "title": "func createUDPSession(NWEndpoint) -> NWUDPSession",
                    "type": "method"
                  },
                  {
                    "title": "Response creation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/createresponse(_:)",
                    "title": "func createResponse(NEHotspotHelperResult) -> NEHotspotHelperResponse",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/success",
                        "title": "case success",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/failure",
                        "title": "case failure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/uirequired",
                        "title": "case uiRequired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/commandnotrecognized",
                        "title": "case commandNotRecognized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/authenticationrequired",
                        "title": "case authenticationRequired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/unsupportednetwork",
                        "title": "case unsupportedNetwork",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/temporaryfailure",
                        "title": "case temporaryFailure",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperresult/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspothelperresult",
                    "title": "NEHotspotHelperResult",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelpercommand/interface-46dq",
                    "title": "var interface: NWInterface",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nehotspothelpercommand",
                "title": "NEHotspotHelperCommand",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Response properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperresponse/setnetwork(_:)",
                    "title": "func setNetwork(NEHotspotNetwork)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperresponse/setnetworklist(_:)",
                    "title": "func setNetworkList([NEHotspotNetwork])",
                    "type": "method"
                  },
                  {
                    "title": "Response celivery",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspothelperresponse/deliver()",
                    "title": "func deliver()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspothelperresponse",
                "title": "NEHotspotHelperResponse",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Network information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/ssid",
                    "title": "var ssid: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/bssid",
                    "title": "var bssid: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/signalstrength",
                    "title": "var signalStrength: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/issecure",
                    "title": "var isSecure: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/didautojoin",
                    "title": "var didAutoJoin: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/didjustjoin",
                    "title": "var didJustJoin: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/ischosenhelper",
                    "title": "var isChosenHelper: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/securitytype",
                    "title": "var securityType: NEHotspotNetworkSecurityType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Security types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/open",
                        "title": "case open",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/wep",
                        "title": "case WEP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/personal",
                        "title": "case personal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/enterprise",
                        "title": "case enterprise",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspotnetworksecuritytype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspotnetworksecuritytype",
                    "title": "NEHotspotNetworkSecurityType",
                    "type": "enum"
                  },
                  {
                    "title": "Network annotation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/setconfidence(_:)",
                    "title": "func setConfidence(NEHotspotHelperConfidence)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Confidence Levels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperconfidence/high",
                        "title": "case high",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperconfidence/low",
                        "title": "case low",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperconfidence/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nehotspothelperconfidence/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nehotspothelperconfidence",
                    "title": "NEHotspotHelperConfidence",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/setpassword(_:)",
                    "title": "func setPassword(String)",
                    "type": "method"
                  },
                  {
                    "title": "Fetching VPN network information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nehotspotnetwork/fetchcurrent(completionhandler:)",
                    "title": "class func fetchCurrent(completionHandler: (NEHotspotNetwork?) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nehotspotnetwork",
                "title": "NEHotspotNetwork",
                "type": "class"
              },
              {
                "title": "Hotspot communication",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/foundation/nsmutableurlrequest/1619006-bind",
                "title": "func bind(to: NEHotspotHelperCommand)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the connection status",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/state",
                        "title": "var state: NWTCPConnectionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Connection States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connecting",
                            "title": "case connecting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/waiting",
                            "title": "case waiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connected",
                            "title": "case connected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/disconnected",
                            "title": "case disconnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/cancelled",
                            "title": "case cancelled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionstate",
                        "title": "NWTCPConnectionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/isviable",
                        "title": "var isViable: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/error",
                        "title": "var error: (any Error)?",
                        "type": "property"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readminimumlength(_:maximumlength:completionhandler:)",
                        "title": "func readMinimumLength(Int, maximumLength: Int, completionHandler: (Data?, (any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readlength(_:completionhandler:)",
                        "title": "func readLength(Int, completionHandler: (Data?, (any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/write(_:completionhandler:)",
                        "title": "func write(Data, completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/writeclose()",
                        "title": "func writeClose()",
                        "type": "method"
                      },
                      {
                        "title": "Canceling the connection",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/hasbetterpath",
                        "title": "var hasBetterPath: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/init(upgradefor:)",
                        "title": "init(upgradeFor: NWTCPConnection)",
                        "type": "init"
                      },
                      {
                        "title": "Getting connection properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/endpoint",
                        "title": "var endpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/localaddress",
                        "title": "var localAddress: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/remoteaddress",
                        "title": "var remoteAddress: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/connectedpath",
                        "title": "var connectedPath: NWPath?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/txtrecord",
                        "title": "var txtRecord: Data?",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnection",
                    "title": "NWTCPConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing TLS parameters",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/tlssessionid",
                        "title": "var tlsSessionID: Data?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/sslciphersuites",
                        "title": "var sslCipherSuites: Set<NSNumber>?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/minimumsslprotocolversion",
                        "title": "var minimumSSLProtocolVersion: Int",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/maximumsslprotocolversion",
                        "title": "var maximumSSLProtocolVersion: Int",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtlsparameters",
                    "title": "NWTLSParameters",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Delegate methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldevaluatetrust(for:)",
                        "title": "func shouldEvaluateTrust(for: NWTCPConnection) -> Bool",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/evaluatetrust(for:peercertificatechain:completionhandler:)",
                        "title": "func evaluateTrust(for: NWTCPConnection, peerCertificateChain: [Any], completionHandler: (SecTrust) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldprovideidentity(for:)",
                        "title": "func shouldProvideIdentity(for: NWTCPConnection) -> Bool",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/provideidentity(for:completionhandler:)",
                        "title": "func provideIdentity(for: NWTCPConnection, completionHandler: (SecIdentity, [Any]) -> Void)",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate",
                    "title": "NWTCPConnectionAuthenticationDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the session state",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/state",
                        "title": "var state: NWUDPSessionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Session States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/waiting",
                            "title": "case waiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/preparing",
                            "title": "case preparing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/ready",
                            "title": "case ready",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/failed",
                            "title": "case failed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/cancelled",
                            "title": "case cancelled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsessionstate",
                        "title": "NWUDPSessionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/isviable",
                        "title": "var isViable: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Selecting remote endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/resolvedendpoint",
                        "title": "var resolvedEndpoint: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/trynextresolvedendpoint()",
                        "title": "func tryNextResolvedEndpoint()",
                        "type": "method"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/setreadhandler(_:maxdatagrams:)",
                        "title": "func setReadHandler(([Data]?, (any Error)?) -> Void, maxDatagrams: Int)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writedatagram(_:completionhandler:)",
                        "title": "func writeDatagram(Data, completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writemultipledatagrams(_:completionhandler:)",
                        "title": "func writeMultipleDatagrams([Data], completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/maximumdatagramlength",
                        "title": "var maximumDatagramLength: Int",
                        "type": "property"
                      },
                      {
                        "title": "Canceling the session",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/hasbetterpath",
                        "title": "var hasBetterPath: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/init(upgradefor:)",
                        "title": "init(upgradeFor: NWUDPSession)",
                        "type": "init"
                      },
                      {
                        "title": "Getting session properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/endpoint",
                        "title": "var endpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/currentpath",
                        "title": "var currentPath: NWPath?",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwudpsession",
                    "title": "NWUDPSession",
                    "type": "class"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing host endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/init(hostname:port:)",
                        "title": "convenience init(hostname: String, port: String)",
                        "type": "init"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/hostname",
                        "title": "var hostname: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/port",
                        "title": "var port: String",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwhostendpoint",
                    "title": "NWHostEndpoint",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Bonjour service endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/init(name:type:domain:)",
                        "title": "convenience init(name: String, type: String, domain: String)",
                        "type": "init"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/type",
                        "title": "var type: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/domain",
                        "title": "var domain: String",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwbonjourserviceendpoint",
                    "title": "NWBonjourServiceEndpoint",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwendpoint",
                    "title": "NWEndpoint",
                    "type": "class"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting network path properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/status",
                        "title": "var status: NWPathStatus",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Path Statuses",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfied",
                            "title": "case satisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/unsatisfied",
                            "title": "case unsatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfiable",
                            "title": "case satisfiable",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpathstatus",
                        "title": "NWPathStatus",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isexpensive",
                        "title": "var isExpensive: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isconstrained",
                        "title": "var isConstrained: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Comparing network paths",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isequal(to:)",
                        "title": "func isEqual(to: NWPath) -> Bool",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwpath",
                    "title": "NWPath",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              }
            ],
            "path": "/documentation/networkextension/hotspot-helper",
            "title": "Hotspot helper",
            "type": "collection"
          },
          {
            "title": "Virtual private networks",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/networkextension/routing-your-vpn-network-traffic",
            "title": "Routing your VPN network traffic",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                "title": "Personal VPN Entitlement",
                "type": "typealias"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing VPN configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/shared()",
                    "title": "class func shared() -> NEVPNManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/setauthorization(_:)",
                    "title": "func setAuthorization(AuthorizationRef)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing VPN configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/protocolconfiguration",
                    "title": "var protocolConfiguration: NEVPNProtocol?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nevpnmanager/protocol",
                    "title": "var `protocol`: NEVPNProtocol?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isondemandenabled",
                    "title": "var isOnDemandEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/ondemandrules",
                    "title": "var onDemandRules: [NEOnDemandRule]?",
                    "type": "property"
                  },
                  {
                    "title": "Connecting and disconnecting VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/connection",
                    "title": "var connection: NEVPNConnection",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "case configurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "case configurationUnknown",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError.Code",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerrordomain",
                    "title": "let NEVPNErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "case configurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "case configurationUnknown",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/1406509-nevpnconfigurationchange",
                    "title": "static let NEVPNConfigurationChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                    "title": "Personal VPN Entitlement",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/networkextension/nevpnmanager",
                "title": "NEVPNManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing IKEv2 Security Association parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/ikesecurityassociationparameters",
                    "title": "var ikeSecurityAssociationParameters: NEVPNIKEv2SecurityAssociationParameters",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/childsecurityassociationparameters",
                    "title": "var childSecurityAssociationParameters: NEVPNIKEv2SecurityAssociationParameters",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "IKEv2 Security Association parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/encryptionalgorithm",
                        "title": "var encryptionAlgorithm: NEVPNIKEv2EncryptionAlgorithm",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Encryption algorithms",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmdes",
                            "title": "case algorithmDES",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithm3des",
                            "title": "case algorithm3DES",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes128",
                            "title": "case algorithmAES128",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes256",
                            "title": "case algorithmAES256",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes128gcm",
                            "title": "case algorithmAES128GCM",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmaes256gcm",
                            "title": "case algorithmAES256GCM",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/algorithmchacha20poly1305",
                            "title": "case algorithmChaCha20Poly1305",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/nevpnikev2encryptionalgorithm",
                        "title": "NEVPNIKEv2EncryptionAlgorithm",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/integrityalgorithm",
                        "title": "var integrityAlgorithm: NEVPNIKEv2IntegrityAlgorithm",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Integrity algorithms",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha96",
                            "title": "case SHA96",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha160",
                            "title": "case SHA160",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha256",
                            "title": "case SHA256",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha384",
                            "title": "case SHA384",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/sha512",
                            "title": "case SHA512",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2integrityalgorithm/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/nevpnikev2integrityalgorithm",
                        "title": "NEVPNIKEv2IntegrityAlgorithm",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/diffiehellmangroup",
                        "title": "var diffieHellmanGroup: NEVPNIKEv2DiffieHellmanGroup",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Diffie-Hellman groups",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/groupinvalid",
                            "title": "case groupInvalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group1",
                            "title": "case group1",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group2",
                            "title": "case group2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group5",
                            "title": "case group5",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group14",
                            "title": "case group14",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group15",
                            "title": "case group15",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group16",
                            "title": "case group16",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group17",
                            "title": "case group17",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group18",
                            "title": "case group18",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group19",
                            "title": "case group19",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group20",
                            "title": "case group20",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group21",
                            "title": "case group21",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group31",
                            "title": "case group31",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/group32",
                            "title": "case group32",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/nevpnikev2diffiehellmangroup",
                        "title": "NEVPNIKEv2DiffieHellmanGroup",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2securityassociationparameters/lifetimeminutes",
                        "title": "var lifetimeMinutes: Int32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2securityassociationparameters",
                    "title": "NEVPNIKEv2SecurityAssociationParameters",
                    "type": "class"
                  },
                  {
                    "title": "Accessing certificate properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/servercertificateissuercommonname",
                    "title": "var serverCertificateIssuerCommonName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/servercertificatecommonname",
                    "title": "var serverCertificateCommonName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/certificatetype",
                    "title": "var certificateType: NEVPNIKEv2CertificateType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Certificate types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/rsa",
                        "title": "case RSA",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ecdsa256",
                        "title": "case ECDSA256",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ecdsa384",
                        "title": "case ECDSA384",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ecdsa521",
                        "title": "case ECDSA521",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/ed25519",
                        "title": "case ed25519",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/rsapss",
                        "title": "case RSAPSS",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2certificatetype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2certificatetype",
                    "title": "NEVPNIKEv2CertificateType",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing TLS version properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/minimumtlsversion",
                    "title": "var minimumTLSVersion: NEVPNIKEv2TLSVersion",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/maximumtlsversion",
                    "title": "var maximumTLSVersion: NEVPNIKEv2TLSVersion",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "TLS versions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/versiondefault",
                        "title": "case versionDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/version1_0",
                        "title": "case version1_0",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/version1_1",
                        "title": "case version1_1",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/version1_2",
                        "title": "case version1_2",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2tlsversion/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2tlsversion",
                    "title": "NEVPNIKEv2TLSVersion",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing other IKEv2 properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/deadpeerdetectionrate",
                    "title": "var deadPeerDetectionRate: NEVPNIKEv2DeadPeerDetectionRate",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Detection rates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/low",
                        "title": "case low",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/medium",
                        "title": "case medium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/high",
                        "title": "case high",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikev2deadpeerdetectionrate",
                    "title": "NEVPNIKEv2DeadPeerDetectionRate",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/useconfigurationattributeinternalipsubnet",
                    "title": "var useConfigurationAttributeInternalIPSubnet: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/disablemobike",
                    "title": "var disableMOBIKE: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/disableredirect",
                    "title": "var disableRedirect: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/enablepfs",
                    "title": "var enablePFS: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/enablerevocationcheck",
                    "title": "var enableRevocationCheck: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/strictrevocationcheck",
                    "title": "var strictRevocationCheck: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/mtu",
                    "title": "var mtu: Int",
                    "type": "property"
                  },
                  {
                    "title": "Supporting Wi-Fi assist",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/enablefallback",
                    "title": "var enableFallback: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolikev2/ppkconfiguration",
                    "title": "var ppkConfiguration: NEVPNIKEv2PPKConfiguration?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nevpnprotocolikev2",
                "title": "NEVPNProtocolIKEv2",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing IPSec properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/authenticationmethod",
                    "title": "var authenticationMethod: NEVPNIKEAuthenticationMethod",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Authentication methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikeauthenticationmethod/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikeauthenticationmethod/certificate",
                        "title": "case certificate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikeauthenticationmethod/sharedsecret",
                        "title": "case sharedSecret",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnikeauthenticationmethod/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnikeauthenticationmethod",
                    "title": "NEVPNIKEAuthenticationMethod",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/useextendedauthentication",
                    "title": "var useExtendedAuthentication: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/sharedsecretreference",
                    "title": "var sharedSecretReference: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/localidentifier",
                    "title": "var localIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocolipsec/remoteidentifier",
                    "title": "var remoteIdentifier: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nevpnprotocolipsec",
                "title": "NEVPNProtocolIPSec",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/serveraddress",
                    "title": "var serverAddress: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/disconnectonsleep",
                    "title": "var disconnectOnSleep: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/proxysettings",
                    "title": "var proxySettings: NEProxySettings?",
                    "type": "property"
                  },
                  {
                    "title": "Authenticating the user",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/username",
                    "title": "var username: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/passwordreference",
                    "title": "var passwordReference: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/identityreference",
                    "title": "var identityReference: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/identitydata",
                    "title": "var identityData: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/identitydatapassword",
                    "title": "var identityDataPassword: String?",
                    "type": "property"
                  },
                  {
                    "title": "Routing network traffic",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/includeallnetworks",
                    "title": "var includeAllNetworks: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludeapns",
                    "title": "var excludeAPNs: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludecellularservices",
                    "title": "var excludeCellularServices: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludelocalnetworks",
                    "title": "var excludeLocalNetworks: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/enforceroutes",
                    "title": "var enforceRoutes: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/excludedevicecommunication",
                    "title": "var excludeDeviceCommunication: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnprotocol/sliceuuid",
                    "title": "var sliceUUID: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nevpnprotocol",
                "title": "NEVPNProtocol",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleconnect",
                    "title": "NEOnDemandRuleConnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruledisconnect",
                    "title": "NEOnDemandRuleDisconnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleignore",
                    "title": "NEOnDemandRuleIgnore",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing connection rules",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandruleevaluateconnection/connectionrules",
                        "title": "var connectionRules: [NEEvaluateConnectionRule]?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/init(matchdomains:andaction:)",
                            "title": "init(matchDomains: [String], andAction: NEEvaluateConnectionRuleAction)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing Rule Match Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/matchdomains",
                            "title": "var matchDomains: [String]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/usednsservers",
                            "title": "var useDNSServers: [String]?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/probeurl",
                            "title": "var probeURL: URL?",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the Rule Action",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/action",
                            "title": "var action: NEEvaluateConnectionRuleAction",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Rule Actions",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/connectifneeded",
                                "title": "case connectIfNeeded",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/neverconnect",
                                "title": "case neverConnect",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/networkextension/neevaluateconnectionruleaction",
                            "title": "NEEvaluateConnectionRuleAction",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/networkextension/neevaluateconnectionrule",
                        "title": "NEEvaluateConnectionRule",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandruleevaluateconnection",
                    "title": "NEOnDemandRuleEvaluateConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "var dnsSearchDomainMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "var dnsServerAddressMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "var interfaceTypeMatch: NEOnDemandRuleInterfaceType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "case any",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "case ethernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "case wiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "case cellular",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "var ssidMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "var probeURL: URL?",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "var action: NEOnDemandRuleAction",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "case connect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "case disconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "case evaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "case ignore",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Controlling the VPN connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel()",
                    "title": "func startVPNTunnel() throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel(options:)",
                    "title": "func startVPNTunnel(options: [String : NSObject]?) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionusername",
                    "title": "let NEVPNConnectionStartOptionUsername: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionpassword",
                    "title": "let NEVPNConnectionStartOptionPassword: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/stopvpntunnel()",
                    "title": "func stopVPNTunnel()",
                    "type": "method"
                  },
                  {
                    "title": "Getting VPN connection status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/manager",
                    "title": "var manager: NEVPNManager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/status",
                    "title": "var status: NEVPNStatus",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Statuses",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnecting",
                        "title": "case disconnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/reasserting",
                        "title": "case reasserting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connected",
                        "title": "case connected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connecting",
                        "title": "case connecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnected",
                        "title": "case disconnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnstatus",
                    "title": "NEVPNStatus",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/connecteddate",
                    "title": "var connectedDate: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/1406683-nevpnstatusdidchange",
                    "title": "static let NEVPNStatusDidChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/fetchlastdisconnecterror(completionhandler:)",
                    "title": "func fetchLastDisconnectError(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionerrordomain",
                    "title": "let NEVPNConnectionErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "General error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/overslept",
                        "title": "case overslept",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/nonetworkavailable",
                        "title": "case noNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/unrecoverablenetworkchange",
                        "title": "case unrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationfailed",
                        "title": "case configurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/authenticationfailed",
                        "title": "case authenticationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationnotfound",
                        "title": "case configurationNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/negotiationfailed",
                        "title": "case negotiationFailed",
                        "type": "case"
                      },
                      {
                        "title": "VPN server error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serveraddressresolutionfailed",
                        "title": "case serverAddressResolutionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servernotresponding",
                        "title": "case serverNotResponding",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdead",
                        "title": "case serverDead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdisconnected",
                        "title": "case serverDisconnected",
                        "type": "case"
                      },
                      {
                        "title": "Plugin error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/pluginfailed",
                        "title": "case pluginFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/plugindisabled",
                        "title": "case pluginDisabled",
                        "type": "case"
                      },
                      {
                        "title": "Client certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateinvalid",
                        "title": "case clientCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificatenotyetvalid",
                        "title": "case clientCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateexpired",
                        "title": "case clientCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Server certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateinvalid",
                        "title": "case serverCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificatenotyetvalid",
                        "title": "case serverCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateexpired",
                        "title": "case serverCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnconnectionerror",
                    "title": "NEVPNConnectionError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nevpnconnection",
                "title": "NEVPNConnection",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/personal-vpn",
            "title": "Personal VPN",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Packet tunnel provider",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the tunnel life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/starttunnel(options:completionhandler:)",
                    "title": "func startTunnel(options: [String : NSObject]?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/stoptunnel(with:completionhandler:)",
                    "title": "func stopTunnel(with: NEProviderStopReason, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/canceltunnelwitherror(_:)",
                    "title": "func cancelTunnelWithError((any Error)?)",
                    "type": "method"
                  },
                  {
                    "title": "Handling IP packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/packetflow",
                    "title": "var packetFlow: NEPacketTunnelFlow",
                    "type": "property"
                  },
                  {
                    "title": "Creating network connections through the tunnel",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nepackettunnelprovider/createtcpconnectionthroughtunnel(to:enabletls:tlsparameters:delegate:)",
                    "title": "func createTCPConnectionThroughTunnel(to: NWEndpoint, enableTLS: Bool, tlsParameters: NWTLSParameters?, delegate: Any?) -> NWTCPConnection",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nepackettunnelprovider/createudpsessionthroughtunnel(to:from:)",
                    "title": "func createUDPSessionThroughTunnel(to: NWEndpoint, from: NWHostEndpoint?) -> NWUDPSession",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelprovider/virtualinterface-7l3ol",
                    "title": "var virtualInterface: NWInterface?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nepackettunnelprovider",
                "title": "NEPacketTunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/protocolconfiguration",
                    "title": "var protocolConfiguration: NEVPNProtocol",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/routingmethod",
                    "title": "var routingMethod: NETunnelProviderRoutingMethod",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/apprules",
                    "title": "var appRules: [NEAppRule]?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the tunnel interface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/settunnelnetworksettings(_:completionhandler:)",
                    "title": "func setTunnelNetworkSettings(NETunnelNetworkSettings?, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the containing app",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/handleappmessage(_:completionhandler:)",
                    "title": "func handleAppMessage(Data, completionHandler: ((Data?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Setting tunnel status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/reasserting",
                    "title": "var reasserting: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "case networkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "case networkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "case networkSettingsFailed",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError.Code",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererrordomain",
                    "title": "let NETunnelProviderErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "case networkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "case networkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "case networkSettingsFailed",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError.Code",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovider",
                "title": "NETunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling sleep and wake",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/sleep(completionhandler:)",
                    "title": "func sleep(completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/wake()",
                    "title": "func wake()",
                    "type": "method"
                  },
                  {
                    "title": "Creating network connections",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createtcpconnection(to:enabletls:tlsparameters:delegate:)",
                    "title": "func createTCPConnection(to: NWEndpoint, enableTLS: Bool, tlsParameters: NWTLSParameters?, delegate: Any?) -> NWTCPConnection",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createudpsession(to:from:)",
                    "title": "func createUDPSession(to: NWEndpoint, from: NWHostEndpoint?) -> NWUDPSession",
                    "type": "method"
                  },
                  {
                    "title": "Monitoring the network state",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/defaultpath",
                    "title": "var defaultPath: NWPath?",
                    "type": "property"
                  },
                  {
                    "title": "Supporting system extensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/startsystemextensionmode()",
                    "title": "class func startSystemExtensionMode()",
                    "type": "method"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Stop Reasons",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userinitiated",
                        "title": "case userInitiated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerfailed",
                        "title": "case providerFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/nonetworkavailable",
                        "title": "case noNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/unrecoverablenetworkchange",
                        "title": "case unrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerdisabled",
                        "title": "case providerDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/authenticationcanceled",
                        "title": "case authenticationCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationfailed",
                        "title": "case configurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/idletimeout",
                        "title": "case idleTimeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationremoved",
                        "title": "case configurationRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/superceded",
                        "title": "case superceded",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userlogout",
                        "title": "case userLogout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userswitch",
                        "title": "case userSwitch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/appupdate",
                        "title": "case appUpdate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/sleep",
                        "title": "case sleep",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/internalerror",
                        "title": "case internalError",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/neproviderstopreason",
                    "title": "NEProviderStopReason",
                    "type": "enum"
                  },
                  {
                    "title": "Displaying messages",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/displaymessage(_:completionhandler:)",
                    "title": "func displayMessage(String, completionHandler: (Bool) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neprovider",
                "title": "NEProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing network properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/ipv4settings",
                    "title": "var ipv4Settings: NEIPv4Settings?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing IPv4 settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/init(addresses:subnetmasks:)",
                        "title": "init(addresses: [String], subnetMasks: [String])",
                        "type": "init"
                      },
                      {
                        "title": "Accessing IPv4 properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/addresses",
                        "title": "var addresses: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/subnetmasks",
                        "title": "var subnetMasks: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/router",
                        "title": "var router: String?",
                        "type": "property"
                      },
                      {
                        "title": "Routing network traffic",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/includedroutes",
                        "title": "var includedRoutes: [NEIPv4Route]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv4settings/excludedroutes",
                        "title": "var excludedRoutes: [NEIPv4Route]?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an IPv4 Route",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/init(destinationaddress:subnetmask:)",
                            "title": "init(destinationAddress: String, subnetMask: String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/default()",
                            "title": "class func `default`() -> NEIPv4Route",
                            "type": "method"
                          },
                          {
                            "title": "Accessing IPv4 Route Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/destinationaddress",
                            "title": "var destinationAddress: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/destinationsubnetmask",
                            "title": "var destinationSubnetMask: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv4route/gatewayaddress",
                            "title": "var gatewayAddress: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neipv4route",
                        "title": "NEIPv4Route",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neipv4settings",
                    "title": "NEIPv4Settings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/ipv6settings",
                    "title": "var ipv6Settings: NEIPv6Settings?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing IPv6 settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/init(addresses:networkprefixlengths:)",
                        "title": "init(addresses: [String], networkPrefixLengths: [NSNumber])",
                        "type": "init"
                      },
                      {
                        "title": "Accessing IPv6 properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/addresses",
                        "title": "var addresses: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/networkprefixlengths",
                        "title": "var networkPrefixLengths: [NSNumber]",
                        "type": "property"
                      },
                      {
                        "title": "Routing network traffic",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/includedroutes",
                        "title": "var includedRoutes: [NEIPv6Route]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neipv6settings/excludedroutes",
                        "title": "var excludedRoutes: [NEIPv6Route]?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an IPv6 Route",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/init(destinationaddress:networkprefixlength:)",
                            "title": "init(destinationAddress: String, networkPrefixLength: NSNumber)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/default()",
                            "title": "class func `default`() -> NEIPv6Route",
                            "type": "method"
                          },
                          {
                            "title": "Accessing IPv6 Route Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/destinationaddress",
                            "title": "var destinationAddress: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/destinationnetworkprefixlength",
                            "title": "var destinationNetworkPrefixLength: NSNumber",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neipv6route/gatewayaddress",
                            "title": "var gatewayAddress: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neipv6route",
                        "title": "NEIPv6Route",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neipv6settings",
                    "title": "NEIPv6Settings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/tunneloverheadbytes",
                    "title": "var tunnelOverheadBytes: NSNumber?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelnetworksettings/mtu",
                    "title": "var mtu: NSNumber?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nepackettunnelnetworksettings",
                "title": "NEPacketTunnelNetworkSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/init(tunnelremoteaddress:)",
                    "title": "init(tunnelRemoteAddress: String)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/tunnelremoteaddress",
                    "title": "var tunnelRemoteAddress: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/dnssettings",
                    "title": "var dnsSettings: NEDNSSettings?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing DNS settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/init(servers:)",
                        "title": "init(servers: [String])",
                        "type": "init"
                      },
                      {
                        "title": "Accessing DNS properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/servers",
                        "title": "var servers: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/searchdomains",
                        "title": "var searchDomains: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/domainname",
                        "title": "var domainName: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomains",
                        "title": "var matchDomains: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomainsnosearch",
                        "title": "var matchDomainsNoSearch: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/dnsprotocol",
                        "title": "var dnsProtocol: NEDNSProtocol",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "DNS protocols",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/cleartext",
                            "title": "case cleartext",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/tls",
                            "title": "case TLS",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/https",
                            "title": "case HTTPS",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/nednsprotocol",
                        "title": "NEDNSProtocol",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/nednssettings",
                    "title": "NEDNSSettings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/proxysettings",
                    "title": "var proxySettings: NEProxySettings?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Automatic Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/autoproxyconfigurationenabled",
                        "title": "var autoProxyConfigurationEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationurl",
                        "title": "var proxyAutoConfigurationURL: URL?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationjavascript",
                        "title": "var proxyAutoConfigurationJavaScript: String?",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Manual Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpenabled",
                        "title": "var httpEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpserver",
                        "title": "var httpServer: NEProxyServer?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsenabled",
                        "title": "var httpsEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsserver",
                        "title": "var httpsServer: NEProxyServer?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Proxy Server",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/init(address:port:)",
                            "title": "init(address: String, port: Int)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing Proxy Server Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/address",
                            "title": "var address: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/port",
                            "title": "var port: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/authenticationrequired",
                            "title": "var authenticationRequired: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/username",
                            "title": "var username: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/password",
                            "title": "var password: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neproxyserver",
                        "title": "NEProxyServer",
                        "type": "class"
                      },
                      {
                        "title": "Accessing General Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/excludesimplehostnames",
                        "title": "var excludeSimpleHostnames: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/exceptionlist",
                        "title": "var exceptionList: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/matchdomains",
                        "title": "var matchDomains: [String]?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neproxysettings",
                    "title": "NEProxySettings",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/netunnelnetworksettings",
                "title": "NETunnelNetworkSettings",
                "type": "class"
              },
              {
                "path": "/documentation/networkextension/neethernettunnelprovider",
                "title": "NEEthernetTunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a settings instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neethernettunnelnetworksettings/init(tunnelremoteaddress:ethernetaddress:mtu:)",
                    "title": "init(tunnelRemoteAddress: String, ethernetAddress: String, mtu: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting settings properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neethernettunnelnetworksettings/ethernetaddress",
                    "title": "var ethernetAddress: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neethernettunnelnetworksettings",
                "title": "NEEthernetTunnelNetworkSettings",
                "type": "class"
              },
              {
                "title": "Packet handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling IP packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/readpacketobjects(completionhandler:)",
                    "title": "func readPacketObjects(completionHandler: ([NEPacket]) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/writepacketobjects(_:)",
                    "title": "func writePacketObjects([NEPacket]) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/readpackets(completionhandler:)",
                    "title": "func readPackets(completionHandler: ([Data], [NSNumber]) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nepackettunnelflow/writepackets(_:withprotocols:)",
                    "title": "func writePackets([Data], withProtocols: [NSNumber]) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nepackettunnelflow",
                "title": "NEPacketTunnelFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a packet",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/init(data:protocolfamily:)",
                    "title": "init(data: Data, protocolFamily: sa_family_t)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing packet properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/data",
                    "title": "var data: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/metadata",
                    "title": "var metadata: NEFlowMetaData?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/protocolfamily",
                    "title": "var protocolFamily: sa_family_t",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nepacket/direction",
                    "title": "var direction: NETrafficDirection",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "case inbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "case outbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "case any",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nepacket",
                "title": "NEPacket",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the connection status",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/state",
                        "title": "var state: NWTCPConnectionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Connection States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connecting",
                            "title": "case connecting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/waiting",
                            "title": "case waiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connected",
                            "title": "case connected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/disconnected",
                            "title": "case disconnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/cancelled",
                            "title": "case cancelled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionstate",
                        "title": "NWTCPConnectionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/isviable",
                        "title": "var isViable: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/error",
                        "title": "var error: (any Error)?",
                        "type": "property"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readminimumlength(_:maximumlength:completionhandler:)",
                        "title": "func readMinimumLength(Int, maximumLength: Int, completionHandler: (Data?, (any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readlength(_:completionhandler:)",
                        "title": "func readLength(Int, completionHandler: (Data?, (any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/write(_:completionhandler:)",
                        "title": "func write(Data, completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/writeclose()",
                        "title": "func writeClose()",
                        "type": "method"
                      },
                      {
                        "title": "Canceling the connection",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/hasbetterpath",
                        "title": "var hasBetterPath: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/init(upgradefor:)",
                        "title": "init(upgradeFor: NWTCPConnection)",
                        "type": "init"
                      },
                      {
                        "title": "Getting connection properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/endpoint",
                        "title": "var endpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/localaddress",
                        "title": "var localAddress: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/remoteaddress",
                        "title": "var remoteAddress: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/connectedpath",
                        "title": "var connectedPath: NWPath?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/txtrecord",
                        "title": "var txtRecord: Data?",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnection",
                    "title": "NWTCPConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing TLS parameters",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/tlssessionid",
                        "title": "var tlsSessionID: Data?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/sslciphersuites",
                        "title": "var sslCipherSuites: Set<NSNumber>?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/minimumsslprotocolversion",
                        "title": "var minimumSSLProtocolVersion: Int",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/maximumsslprotocolversion",
                        "title": "var maximumSSLProtocolVersion: Int",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtlsparameters",
                    "title": "NWTLSParameters",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Delegate methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldevaluatetrust(for:)",
                        "title": "func shouldEvaluateTrust(for: NWTCPConnection) -> Bool",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/evaluatetrust(for:peercertificatechain:completionhandler:)",
                        "title": "func evaluateTrust(for: NWTCPConnection, peerCertificateChain: [Any], completionHandler: (SecTrust) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldprovideidentity(for:)",
                        "title": "func shouldProvideIdentity(for: NWTCPConnection) -> Bool",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/provideidentity(for:completionhandler:)",
                        "title": "func provideIdentity(for: NWTCPConnection, completionHandler: (SecIdentity, [Any]) -> Void)",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate",
                    "title": "NWTCPConnectionAuthenticationDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the session state",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/state",
                        "title": "var state: NWUDPSessionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Session States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/waiting",
                            "title": "case waiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/preparing",
                            "title": "case preparing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/ready",
                            "title": "case ready",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/failed",
                            "title": "case failed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/cancelled",
                            "title": "case cancelled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsessionstate",
                        "title": "NWUDPSessionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/isviable",
                        "title": "var isViable: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Selecting remote endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/resolvedendpoint",
                        "title": "var resolvedEndpoint: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/trynextresolvedendpoint()",
                        "title": "func tryNextResolvedEndpoint()",
                        "type": "method"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/setreadhandler(_:maxdatagrams:)",
                        "title": "func setReadHandler(([Data]?, (any Error)?) -> Void, maxDatagrams: Int)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writedatagram(_:completionhandler:)",
                        "title": "func writeDatagram(Data, completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writemultipledatagrams(_:completionhandler:)",
                        "title": "func writeMultipleDatagrams([Data], completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/maximumdatagramlength",
                        "title": "var maximumDatagramLength: Int",
                        "type": "property"
                      },
                      {
                        "title": "Canceling the session",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/hasbetterpath",
                        "title": "var hasBetterPath: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/init(upgradefor:)",
                        "title": "init(upgradeFor: NWUDPSession)",
                        "type": "init"
                      },
                      {
                        "title": "Getting session properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/endpoint",
                        "title": "var endpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/currentpath",
                        "title": "var currentPath: NWPath?",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwudpsession",
                    "title": "NWUDPSession",
                    "type": "class"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing host endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/init(hostname:port:)",
                        "title": "convenience init(hostname: String, port: String)",
                        "type": "init"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/hostname",
                        "title": "var hostname: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/port",
                        "title": "var port: String",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwhostendpoint",
                    "title": "NWHostEndpoint",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Bonjour service endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/init(name:type:domain:)",
                        "title": "convenience init(name: String, type: String, domain: String)",
                        "type": "init"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/type",
                        "title": "var type: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/domain",
                        "title": "var domain: String",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwbonjourserviceendpoint",
                    "title": "NWBonjourServiceEndpoint",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwendpoint",
                    "title": "NWEndpoint",
                    "type": "class"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting network path properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/status",
                        "title": "var status: NWPathStatus",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Path Statuses",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfied",
                            "title": "case satisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/unsatisfied",
                            "title": "case unsatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfiable",
                            "title": "case satisfiable",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpathstatus",
                        "title": "NWPathStatus",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isexpensive",
                        "title": "var isExpensive: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isconstrained",
                        "title": "var isConstrained: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Comparing network paths",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isequal(to:)",
                        "title": "func isEqual(to: NWPath) -> Bool",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwpath",
                    "title": "NWPath",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing tunnel configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/loadallfrompreferences(completionhandler:)",
                    "title": "class func loadAllFromPreferences(completionHandler: ([NETunnelProviderManager]?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/copyapprules()",
                    "title": "func copyAppRules() -> [NEAppRule]?",
                    "type": "method"
                  },
                  {
                    "title": "Getting tunnel configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/routingmethod",
                    "title": "var routingMethod: NETunnelProviderRoutingMethod",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Routing Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/destinationip",
                        "title": "case destinationIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/sourceapplication",
                        "title": "case sourceApplication",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/networkrule",
                        "title": "case networkRule",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelproviderroutingmethod",
                    "title": "NETunnelProviderRoutingMethod",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring a per-app VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/forperappvpn()",
                    "title": "class func forPerAppVPN() -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/apprules",
                    "title": "var appRules: [NEAppRule]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/excludeddomains",
                    "title": "var excludedDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/associateddomains",
                    "title": "var associatedDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/calendardomains",
                    "title": "var calendarDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/contactsdomains",
                    "title": "var contactsDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/maildomains",
                    "title": "var mailDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/safaridomains",
                    "title": "var safariDomains: [String]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidermanager",
                "title": "NETunnelProviderManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing VPN configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/shared()",
                    "title": "class func shared() -> NEVPNManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/setauthorization(_:)",
                    "title": "func setAuthorization(AuthorizationRef)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing VPN configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/protocolconfiguration",
                    "title": "var protocolConfiguration: NEVPNProtocol?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nevpnmanager/protocol",
                    "title": "var `protocol`: NEVPNProtocol?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isondemandenabled",
                    "title": "var isOnDemandEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/ondemandrules",
                    "title": "var onDemandRules: [NEOnDemandRule]?",
                    "type": "property"
                  },
                  {
                    "title": "Connecting and disconnecting VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/connection",
                    "title": "var connection: NEVPNConnection",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "case configurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "case configurationUnknown",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError.Code",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerrordomain",
                    "title": "let NEVPNErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "case configurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "case configurationUnknown",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/1406509-nevpnconfigurationchange",
                    "title": "static let NEVPNConfigurationChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                    "title": "Personal VPN Entitlement",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/networkextension/nevpnmanager",
                "title": "NEVPNManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerconfiguration",
                    "title": "var providerConfiguration: [String : Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerbundleidentifier",
                    "title": "var providerBundleIdentifier: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelproviderprotocol",
                "title": "NETunnelProviderProtocol",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an app rule",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:)",
                    "title": "init(signingIdentifier: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:designatedrequirement:)",
                    "title": "init(signingIdentifier: String, designatedRequirement: String)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing app rule properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchsigningidentifier",
                    "title": "var matchSigningIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdesignatedrequirement",
                    "title": "var matchDesignatedRequirement: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchpath",
                    "title": "var matchPath: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdomains",
                    "title": "var matchDomains: [Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchtools",
                    "title": "var matchTools: [NEAppRule]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neapprule",
                "title": "NEAppRule",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleconnect",
                    "title": "NEOnDemandRuleConnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruledisconnect",
                    "title": "NEOnDemandRuleDisconnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleignore",
                    "title": "NEOnDemandRuleIgnore",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing connection rules",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandruleevaluateconnection/connectionrules",
                        "title": "var connectionRules: [NEEvaluateConnectionRule]?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/init(matchdomains:andaction:)",
                            "title": "init(matchDomains: [String], andAction: NEEvaluateConnectionRuleAction)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing Rule Match Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/matchdomains",
                            "title": "var matchDomains: [String]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/usednsservers",
                            "title": "var useDNSServers: [String]?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/probeurl",
                            "title": "var probeURL: URL?",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the Rule Action",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/action",
                            "title": "var action: NEEvaluateConnectionRuleAction",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Rule Actions",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/connectifneeded",
                                "title": "case connectIfNeeded",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/neverconnect",
                                "title": "case neverConnect",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/networkextension/neevaluateconnectionruleaction",
                            "title": "NEEvaluateConnectionRuleAction",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/networkextension/neevaluateconnectionrule",
                        "title": "NEEvaluateConnectionRule",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandruleevaluateconnection",
                    "title": "NEOnDemandRuleEvaluateConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "var dnsSearchDomainMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "var dnsServerAddressMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "var interfaceTypeMatch: NEOnDemandRuleInterfaceType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "case any",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "case ethernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "case wiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "case cellular",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "var ssidMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "var probeURL: URL?",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "var action: NEOnDemandRuleAction",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "case connect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "case disconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "case evaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "case ignore",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Controlling the tunnel connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/starttunnel(options:)",
                    "title": "func startTunnel(options: [String : Any]?) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/stoptunnel()",
                    "title": "func stopTunnel()",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the tunnel provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/sendprovidermessage(_:responsehandler:)",
                    "title": "func sendProviderMessage(Data, responseHandler: ((Data?) -> Void)?) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidersession",
                "title": "NETunnelProviderSession",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Controlling the VPN connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel()",
                    "title": "func startVPNTunnel() throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel(options:)",
                    "title": "func startVPNTunnel(options: [String : NSObject]?) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionusername",
                    "title": "let NEVPNConnectionStartOptionUsername: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionpassword",
                    "title": "let NEVPNConnectionStartOptionPassword: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/stopvpntunnel()",
                    "title": "func stopVPNTunnel()",
                    "type": "method"
                  },
                  {
                    "title": "Getting VPN connection status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/manager",
                    "title": "var manager: NEVPNManager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/status",
                    "title": "var status: NEVPNStatus",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Statuses",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnecting",
                        "title": "case disconnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/reasserting",
                        "title": "case reasserting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connected",
                        "title": "case connected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connecting",
                        "title": "case connecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnected",
                        "title": "case disconnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnstatus",
                    "title": "NEVPNStatus",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/connecteddate",
                    "title": "var connectedDate: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/1406683-nevpnstatusdidchange",
                    "title": "static let NEVPNStatusDidChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/fetchlastdisconnecterror(completionhandler:)",
                    "title": "func fetchLastDisconnectError(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionerrordomain",
                    "title": "let NEVPNConnectionErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "General error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/overslept",
                        "title": "case overslept",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/nonetworkavailable",
                        "title": "case noNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/unrecoverablenetworkchange",
                        "title": "case unrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationfailed",
                        "title": "case configurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/authenticationfailed",
                        "title": "case authenticationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationnotfound",
                        "title": "case configurationNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/negotiationfailed",
                        "title": "case negotiationFailed",
                        "type": "case"
                      },
                      {
                        "title": "VPN server error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serveraddressresolutionfailed",
                        "title": "case serverAddressResolutionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servernotresponding",
                        "title": "case serverNotResponding",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdead",
                        "title": "case serverDead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdisconnected",
                        "title": "case serverDisconnected",
                        "type": "case"
                      },
                      {
                        "title": "Plugin error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/pluginfailed",
                        "title": "case pluginFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/plugindisabled",
                        "title": "case pluginDisabled",
                        "type": "case"
                      },
                      {
                        "title": "Client certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateinvalid",
                        "title": "case clientCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificatenotyetvalid",
                        "title": "case clientCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateexpired",
                        "title": "case clientCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Server certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateinvalid",
                        "title": "case serverCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificatenotyetvalid",
                        "title": "case serverCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateexpired",
                        "title": "case serverCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnconnectionerror",
                    "title": "NEVPNConnectionError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nevpnconnection",
                "title": "NEVPNConnection",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/packet-tunnel-provider",
            "title": "Packet tunnel provider",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "App proxy provider",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the app proxy life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/startproxy(options:completionhandler:)",
                    "title": "func startProxy(options: [String : Any]?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/stopproxy(with:completionhandler:)",
                    "title": "func stopProxy(with: NEProviderStopReason, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/cancelproxywitherror(_:)",
                    "title": "func cancelProxyWithError((any Error)?)",
                    "type": "method"
                  },
                  {
                    "title": "Handling proxied flows",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovider/handlenewflow(_:)",
                    "title": "func handleNewFlow(NEAppProxyFlow) -> Bool",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyprovider/handlenewudpflow(_:initialremoteendpoint:)",
                    "title": "func handleNewUDPFlow(NEAppProxyUDPFlow, initialRemoteEndpoint: NWEndpoint) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyprovider",
                "title": "NEAppProxyProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/protocolconfiguration",
                    "title": "var protocolConfiguration: NEVPNProtocol",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/routingmethod",
                    "title": "var routingMethod: NETunnelProviderRoutingMethod",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/apprules",
                    "title": "var appRules: [NEAppRule]?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the tunnel interface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/settunnelnetworksettings(_:completionhandler:)",
                    "title": "func setTunnelNetworkSettings(NETunnelNetworkSettings?, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the containing app",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/handleappmessage(_:completionhandler:)",
                    "title": "func handleAppMessage(Data, completionHandler: ((Data?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Setting tunnel status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovider/reasserting",
                    "title": "var reasserting: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "case networkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "case networkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "case networkSettingsFailed",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError.Code",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererrordomain",
                    "title": "let NETunnelProviderErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                        "title": "case networkSettingsInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                        "title": "case networkSettingsCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                        "title": "case networkSettingsFailed",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                    "title": "NETunnelProviderError.Code",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovider",
                "title": "NETunnelProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling sleep and wake",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/sleep(completionhandler:)",
                    "title": "func sleep(completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/wake()",
                    "title": "func wake()",
                    "type": "method"
                  },
                  {
                    "title": "Creating network connections",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createtcpconnection(to:enabletls:tlsparameters:delegate:)",
                    "title": "func createTCPConnection(to: NWEndpoint, enableTLS: Bool, tlsParameters: NWTLSParameters?, delegate: Any?) -> NWTCPConnection",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/createudpsession(to:from:)",
                    "title": "func createUDPSession(to: NWEndpoint, from: NWHostEndpoint?) -> NWUDPSession",
                    "type": "method"
                  },
                  {
                    "title": "Monitoring the network state",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/defaultpath",
                    "title": "var defaultPath: NWPath?",
                    "type": "property"
                  },
                  {
                    "title": "Supporting system extensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neprovider/startsystemextensionmode()",
                    "title": "class func startSystemExtensionMode()",
                    "type": "method"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Stop Reasons",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userinitiated",
                        "title": "case userInitiated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerfailed",
                        "title": "case providerFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/nonetworkavailable",
                        "title": "case noNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/unrecoverablenetworkchange",
                        "title": "case unrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/providerdisabled",
                        "title": "case providerDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/authenticationcanceled",
                        "title": "case authenticationCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationfailed",
                        "title": "case configurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/idletimeout",
                        "title": "case idleTimeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/configurationremoved",
                        "title": "case configurationRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/superceded",
                        "title": "case superceded",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userlogout",
                        "title": "case userLogout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/userswitch",
                        "title": "case userSwitch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/appupdate",
                        "title": "case appUpdate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/sleep",
                        "title": "case sleep",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/internalerror",
                        "title": "case internalError",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproviderstopreason/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/neproviderstopreason",
                    "title": "NEProviderStopReason",
                    "type": "enum"
                  },
                  {
                    "title": "Displaying messages",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neprovider/displaymessage(_:completionhandler:)",
                    "title": "func displayMessage(String, completionHandler: (Bool) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neprovider",
                "title": "NEProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/init(tunnelremoteaddress:)",
                    "title": "init(tunnelRemoteAddress: String)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing tunnel network settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/tunnelremoteaddress",
                    "title": "var tunnelRemoteAddress: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/dnssettings",
                    "title": "var dnsSettings: NEDNSSettings?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing DNS settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/init(servers:)",
                        "title": "init(servers: [String])",
                        "type": "init"
                      },
                      {
                        "title": "Accessing DNS properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/servers",
                        "title": "var servers: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/searchdomains",
                        "title": "var searchDomains: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/domainname",
                        "title": "var domainName: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomains",
                        "title": "var matchDomains: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/matchdomainsnosearch",
                        "title": "var matchDomainsNoSearch: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettings/dnsprotocol",
                        "title": "var dnsProtocol: NEDNSProtocol",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "DNS protocols",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/cleartext",
                            "title": "case cleartext",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/tls",
                            "title": "case TLS",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/https",
                            "title": "case HTTPS",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nednsprotocol/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/nednsprotocol",
                        "title": "NEDNSProtocol",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/nednssettings",
                    "title": "NEDNSSettings",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelnetworksettings/proxysettings",
                    "title": "var proxySettings: NEProxySettings?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Automatic Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/autoproxyconfigurationenabled",
                        "title": "var autoProxyConfigurationEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationurl",
                        "title": "var proxyAutoConfigurationURL: URL?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/proxyautoconfigurationjavascript",
                        "title": "var proxyAutoConfigurationJavaScript: String?",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Manual Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpenabled",
                        "title": "var httpEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpserver",
                        "title": "var httpServer: NEProxyServer?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsenabled",
                        "title": "var httpsEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/httpsserver",
                        "title": "var httpsServer: NEProxyServer?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Proxy Server",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/init(address:port:)",
                            "title": "init(address: String, port: Int)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing Proxy Server Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/address",
                            "title": "var address: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/port",
                            "title": "var port: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/authenticationrequired",
                            "title": "var authenticationRequired: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/username",
                            "title": "var username: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neproxyserver/password",
                            "title": "var password: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/neproxyserver",
                        "title": "NEProxyServer",
                        "type": "class"
                      },
                      {
                        "title": "Accessing General Proxy Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/excludesimplehostnames",
                        "title": "var excludeSimpleHostnames: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/exceptionlist",
                        "title": "var exceptionList: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neproxysettings/matchdomains",
                        "title": "var matchDomains: [String]?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neproxysettings",
                    "title": "NEProxySettings",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/netunnelnetworksettings",
                "title": "NETunnelNetworkSettings",
                "type": "class"
              },
              {
                "title": "Flow handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/write(_:withcompletionhandler:)",
                    "title": "func write(Data, withCompletionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/readdata(completionhandler:)",
                    "title": "func readData(completionHandler: (Data?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteendpoint",
                    "title": "var remoteEndpoint: NWEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteflowendpoint-4r7v1",
                    "title": "var remoteFlowEndpoint: NWEndpoint",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neappproxytcpflow",
                "title": "NEAppProxyTCPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams(completionhandler:)-9z8gw",
                    "title": "func readDatagrams(completionHandler: ([Data]?, [NWEndpoint]?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:sentby:completionhandler:)",
                    "title": "func writeDatagrams([Data], sentBy: [NWEndpoint], completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/localendpoint",
                    "title": "var localEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/localflowendpoint-7ukb6",
                    "title": "var localFlowEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams()",
                    "title": "func readDatagrams() async -> ([(Data, NWEndpoint)]?, (any Error)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams(completionhandler:)-71k28",
                    "title": "func readDatagrams(completionHandler: ([(Data, NWEndpoint)]?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:)",
                    "title": "func writeDatagrams([(Data, NWEndpoint)]) async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:completionhandler:)",
                    "title": "func writeDatagrams([(Data, NWEndpoint)], completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyudpflow",
                "title": "NEAppProxyUDPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing the flow life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalendpoint:completionhandler:)",
                    "title": "func open(withLocalEndpoint: NWHostEndpoint?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closereadwitherror(_:)",
                    "title": "func closeReadWithError((any Error)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closewritewitherror(_:)",
                    "title": "func closeWriteWithError((any Error)?)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing flow information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/metadata",
                    "title": "var metaData: NEFlowMetaData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/setmetadata(_:)",
                    "title": "func setMetadata(nw_parameters_t)",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_parameters_t",
                    "title": "nw_parameters_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/isbound",
                    "title": "var isBound: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/networkinterface",
                    "title": "var networkInterface: nw_interface_t?",
                    "type": "property"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_interface_type_t",
                    "title": "nw_interface_type_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/remotehostname",
                    "title": "var remoteHostname: String?",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing error properties",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                            "title": "case notConnected",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                            "title": "case peerReset",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                            "title": "case hostUnreachable",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                            "title": "case invalidArgument",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                            "title": "case aborted",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                            "title": "case refused",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                            "title": "case timedOut",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                            "title": "case `internal`",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                            "title": "case datagramTooLarge",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                            "title": "case readAlreadyPending",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                        "title": "NEAppProxyFlowError.Code",
                        "type": "enum"
                      },
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/notconnected",
                        "title": "static var notConnected: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/peerreset",
                        "title": "static var peerReset: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/hostunreachable",
                        "title": "static var hostUnreachable: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/invalidargument",
                        "title": "static var invalidArgument: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/aborted",
                        "title": "static var aborted: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/refused",
                        "title": "static var refused: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/timedout",
                        "title": "static var timedOut: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/internal",
                        "title": "static var `internal`: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/datagramtoolarge",
                        "title": "static var datagramTooLarge: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/readalreadypending",
                        "title": "static var readAlreadyPending: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct",
                    "title": "NEAppProxyFlowError",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyerrordomain",
                    "title": "let NEAppProxyErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                        "title": "case notConnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                        "title": "case peerReset",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                        "title": "case hostUnreachable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                        "title": "case invalidArgument",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                        "title": "case aborted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                        "title": "case refused",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                        "title": "case timedOut",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                        "title": "case datagramTooLarge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                        "title": "case readAlreadyPending",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                    "title": "NEAppProxyFlowError.Code",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing error properties",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                            "title": "case notConnected",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                            "title": "case peerReset",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                            "title": "case hostUnreachable",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                            "title": "case invalidArgument",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                            "title": "case aborted",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                            "title": "case refused",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                            "title": "case timedOut",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                            "title": "case `internal`",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                            "title": "case datagramTooLarge",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                            "title": "case readAlreadyPending",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                        "title": "NEAppProxyFlowError.Code",
                        "type": "enum"
                      },
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/notconnected",
                        "title": "static var notConnected: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/peerreset",
                        "title": "static var peerReset: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/hostunreachable",
                        "title": "static var hostUnreachable: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/invalidargument",
                        "title": "static var invalidArgument: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/aborted",
                        "title": "static var aborted: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/refused",
                        "title": "static var refused: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/timedout",
                        "title": "static var timedOut: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/internal",
                        "title": "static var `internal`: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/datagramtoolarge",
                        "title": "static var datagramTooLarge: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/readalreadypending",
                        "title": "static var readAlreadyPending: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct",
                    "title": "NEAppProxyFlowError",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/interface",
                    "title": "var interface: NWInterface?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalflowendpoint:)",
                    "title": "func open(withLocalFlowEndpoint: NWEndpoint?) async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalflowendpoint:completionhandler:)",
                    "title": "func open(withLocalFlowEndpoint: NWEndpoint?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/setmetadata(on:)",
                    "title": "func setMetadata(on: NWParameters)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyflow",
                "title": "NEAppProxyFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting source app information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/sourceappuniqueidentifier",
                    "title": "var sourceAppUniqueIdentifier: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/sourceappsigningidentifier",
                    "title": "var sourceAppSigningIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/sourceappaudittoken",
                    "title": "var sourceAppAuditToken: Data?",
                    "type": "property"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neflowmetadata/filterflowidentifier",
                    "title": "var filterFlowIdentifier: UUID?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neflowmetadata",
                "title": "NEFlowMetaData",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "TCP connections",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the connection status",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/state",
                        "title": "var state: NWTCPConnectionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Connection States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connecting",
                            "title": "case connecting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/waiting",
                            "title": "case waiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/connected",
                            "title": "case connected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/disconnected",
                            "title": "case disconnected",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/cancelled",
                            "title": "case cancelled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwtcpconnectionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionstate",
                        "title": "NWTCPConnectionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/isviable",
                        "title": "var isViable: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/error",
                        "title": "var error: (any Error)?",
                        "type": "property"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readminimumlength(_:maximumlength:completionhandler:)",
                        "title": "func readMinimumLength(Int, maximumLength: Int, completionHandler: (Data?, (any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/readlength(_:completionhandler:)",
                        "title": "func readLength(Int, completionHandler: (Data?, (any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/write(_:completionhandler:)",
                        "title": "func write(Data, completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/writeclose()",
                        "title": "func writeClose()",
                        "type": "method"
                      },
                      {
                        "title": "Canceling the connection",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/hasbetterpath",
                        "title": "var hasBetterPath: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/init(upgradefor:)",
                        "title": "init(upgradeFor: NWTCPConnection)",
                        "type": "init"
                      },
                      {
                        "title": "Getting connection properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/endpoint",
                        "title": "var endpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/localaddress",
                        "title": "var localAddress: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/remoteaddress",
                        "title": "var remoteAddress: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/connectedpath",
                        "title": "var connectedPath: NWPath?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnection/txtrecord",
                        "title": "var txtRecord: Data?",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnection",
                    "title": "NWTCPConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing TLS parameters",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/tlssessionid",
                        "title": "var tlsSessionID: Data?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/sslciphersuites",
                        "title": "var sslCipherSuites: Set<NSNumber>?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/minimumsslprotocolversion",
                        "title": "var minimumSSLProtocolVersion: Int",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtlsparameters/maximumsslprotocolversion",
                        "title": "var maximumSSLProtocolVersion: Int",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtlsparameters",
                    "title": "NWTLSParameters",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Delegate methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldevaluatetrust(for:)",
                        "title": "func shouldEvaluateTrust(for: NWTCPConnection) -> Bool",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/evaluatetrust(for:peercertificatechain:completionhandler:)",
                        "title": "func evaluateTrust(for: NWTCPConnection, peerCertificateChain: [Any], completionHandler: (SecTrust) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/shouldprovideidentity(for:)",
                        "title": "func shouldProvideIdentity(for: NWTCPConnection) -> Bool",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate/provideidentity(for:completionhandler:)",
                        "title": "func provideIdentity(for: NWTCPConnection, completionHandler: (SecIdentity, [Any]) -> Void)",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwtcpconnectionauthenticationdelegate",
                    "title": "NWTCPConnectionAuthenticationDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "UDP sessions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring the session state",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/state",
                        "title": "var state: NWUDPSessionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Session States",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/waiting",
                            "title": "case waiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/preparing",
                            "title": "case preparing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/ready",
                            "title": "case ready",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/failed",
                            "title": "case failed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/cancelled",
                            "title": "case cancelled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwudpsessionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsessionstate",
                        "title": "NWUDPSessionState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/isviable",
                        "title": "var isViable: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Selecting remote endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/resolvedendpoint",
                        "title": "var resolvedEndpoint: NWEndpoint?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/trynextresolvedendpoint()",
                        "title": "func tryNextResolvedEndpoint()",
                        "type": "method"
                      },
                      {
                        "title": "Transferring data",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/setreadhandler(_:maxdatagrams:)",
                        "title": "func setReadHandler(([Data]?, (any Error)?) -> Void, maxDatagrams: Int)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writedatagram(_:completionhandler:)",
                        "title": "func writeDatagram(Data, completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/writemultipledatagrams(_:completionhandler:)",
                        "title": "func writeMultipleDatagrams([Data], completionHandler: ((any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/maximumdatagramlength",
                        "title": "var maximumDatagramLength: Int",
                        "type": "property"
                      },
                      {
                        "title": "Canceling the session",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Responding to network changes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/hasbetterpath",
                        "title": "var hasBetterPath: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/init(upgradefor:)",
                        "title": "init(upgradeFor: NWUDPSession)",
                        "type": "init"
                      },
                      {
                        "title": "Getting session properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/endpoint",
                        "title": "var endpoint: NWEndpoint",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwudpsession/currentpath",
                        "title": "var currentPath: NWPath?",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwudpsession",
                    "title": "NWUDPSession",
                    "type": "class"
                  },
                  {
                    "title": "Endpoints",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing host endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/init(hostname:port:)",
                        "title": "convenience init(hostname: String, port: String)",
                        "type": "init"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/hostname",
                        "title": "var hostname: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwhostendpoint/port",
                        "title": "var port: String",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwhostendpoint",
                    "title": "NWHostEndpoint",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Bonjour service endpoints",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/init(name:type:domain:)",
                        "title": "convenience init(name: String, type: String, domain: String)",
                        "type": "init"
                      },
                      {
                        "title": "Getting endpoint properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/type",
                        "title": "var type: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwbonjourserviceendpoint/domain",
                        "title": "var domain: String",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwbonjourserviceendpoint",
                    "title": "NWBonjourServiceEndpoint",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwendpoint",
                    "title": "NWEndpoint",
                    "type": "class"
                  },
                  {
                    "title": "Network path information",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting network path properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/status",
                        "title": "var status: NWPathStatus",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Path Statuses",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfied",
                            "title": "case satisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/unsatisfied",
                            "title": "case unsatisfied",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/satisfiable",
                            "title": "case satisfiable",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/networkextension/nwpathstatus/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpathstatus",
                        "title": "NWPathStatus",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isexpensive",
                        "title": "var isExpensive: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isconstrained",
                        "title": "var isConstrained: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Comparing network paths",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/networkextension/nwpath/isequal(to:)",
                        "title": "func isEqual(to: NWPath) -> Bool",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/networkextension/nwpath",
                    "title": "NWPath",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/in-provider-networking",
                "title": "In-Provider Networking",
                "type": "collection"
              },
              {
                "path": "/documentation/networkextension/handling-flow-copying",
                "title": "Handling Flow Copying",
                "type": "article"
              },
              {
                "title": "VPN configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Loading the app proxy configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyprovidermanager/loadallfrompreferences(completionhandler:)",
                    "title": "class func loadAllFromPreferences(completionHandler: ([NEAppProxyProviderManager]?, (any Error)?) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyprovidermanager",
                "title": "NEAppProxyProviderManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing tunnel configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/loadallfrompreferences(completionhandler:)",
                    "title": "class func loadAllFromPreferences(completionHandler: ([NETunnelProviderManager]?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/copyapprules()",
                    "title": "func copyAppRules() -> [NEAppRule]?",
                    "type": "method"
                  },
                  {
                    "title": "Getting tunnel configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/routingmethod",
                    "title": "var routingMethod: NETunnelProviderRoutingMethod",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Routing Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/destinationip",
                        "title": "case destinationIP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/sourceapplication",
                        "title": "case sourceApplication",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/networkrule",
                        "title": "case networkRule",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netunnelproviderroutingmethod/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netunnelproviderroutingmethod",
                    "title": "NETunnelProviderRoutingMethod",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring a per-app VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/forperappvpn()",
                    "title": "class func forPerAppVPN() -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/apprules",
                    "title": "var appRules: [NEAppRule]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/excludeddomains",
                    "title": "var excludedDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/associateddomains",
                    "title": "var associatedDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/calendardomains",
                    "title": "var calendarDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/contactsdomains",
                    "title": "var contactsDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/maildomains",
                    "title": "var mailDomains: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidermanager/safaridomains",
                    "title": "var safariDomains: [String]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidermanager",
                "title": "NETunnelProviderManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing VPN configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/shared()",
                    "title": "class func shared() -> NEVPNManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/setauthorization(_:)",
                    "title": "func setAuthorization(AuthorizationRef)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing VPN configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/protocolconfiguration",
                    "title": "var protocolConfiguration: NEVPNProtocol?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nevpnmanager/protocol",
                    "title": "var `protocol`: NEVPNProtocol?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/isondemandenabled",
                    "title": "var isOnDemandEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/ondemandrules",
                    "title": "var onDemandRules: [NEOnDemandRule]?",
                    "type": "property"
                  },
                  {
                    "title": "Connecting and disconnecting VPN",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnmanager/connection",
                    "title": "var connection: NEVPNConnection",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "case configurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "case configurationUnknown",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError.Code",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerrordomain",
                    "title": "let NEVPNErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                        "title": "case connectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                        "title": "case configurationReadWriteFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                        "title": "case configurationUnknown",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                    "title": "NEVPNError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/1406509-nevpnconfigurationchange",
                    "title": "static let NEVPNConfigurationChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.vpn.api",
                    "title": "Personal VPN Entitlement",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/networkextension/nevpnmanager",
                "title": "NEVPNManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the tunnel configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerconfiguration",
                    "title": "var providerConfiguration: [String : Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelproviderprotocol/providerbundleidentifier",
                    "title": "var providerBundleIdentifier: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netunnelproviderprotocol",
                "title": "NETunnelProviderProtocol",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an app rule",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:)",
                    "title": "init(signingIdentifier: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/init(signingidentifier:designatedrequirement:)",
                    "title": "init(signingIdentifier: String, designatedRequirement: String)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing app rule properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchsigningidentifier",
                    "title": "var matchSigningIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdesignatedrequirement",
                    "title": "var matchDesignatedRequirement: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchpath",
                    "title": "var matchPath: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchdomains",
                    "title": "var matchDomains: [Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapprule/matchtools",
                    "title": "var matchTools: [NEAppRule]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neapprule",
                "title": "NEAppRule",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleconnect",
                    "title": "NEOnDemandRuleConnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruledisconnect",
                    "title": "NEOnDemandRuleDisconnect",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/networkextension/neondemandruleignore",
                    "title": "NEOnDemandRuleIgnore",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing connection rules",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandruleevaluateconnection/connectionrules",
                        "title": "var connectionRules: [NEEvaluateConnectionRule]?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/init(matchdomains:andaction:)",
                            "title": "init(matchDomains: [String], andAction: NEEvaluateConnectionRuleAction)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing Rule Match Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/matchdomains",
                            "title": "var matchDomains: [String]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/usednsservers",
                            "title": "var useDNSServers: [String]?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/probeurl",
                            "title": "var probeURL: URL?",
                            "type": "property"
                          },
                          {
                            "title": "Accessing the Rule Action",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neevaluateconnectionrule/action",
                            "title": "var action: NEEvaluateConnectionRuleAction",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Rule Actions",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/connectifneeded",
                                "title": "case connectIfNeeded",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/neverconnect",
                                "title": "case neverConnect",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/networkextension/neevaluateconnectionruleaction/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/networkextension/neevaluateconnectionruleaction",
                            "title": "NEEvaluateConnectionRuleAction",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/networkextension/neevaluateconnectionrule",
                        "title": "NEEvaluateConnectionRule",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandruleevaluateconnection",
                    "title": "NEOnDemandRuleEvaluateConnection",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "var dnsSearchDomainMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "var dnsServerAddressMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "var interfaceTypeMatch: NEOnDemandRuleInterfaceType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "case any",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "case ethernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "case wiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "case cellular",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "var ssidMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "var probeURL: URL?",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "var action: NEOnDemandRuleAction",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "case connect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "case disconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "case evaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "case ignore",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  }
                ],
                "path": "/documentation/networkextension/vpn-on-demand-rules",
                "title": "VPN On Demand Rules",
                "type": "collection"
              },
              {
                "title": "VPN control",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Controlling the tunnel connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/starttunnel(options:)",
                    "title": "func startTunnel(options: [String : Any]?) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/stoptunnel()",
                    "title": "func stopTunnel()",
                    "type": "method"
                  },
                  {
                    "title": "Communicating with the tunnel provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidersession/sendprovidermessage(_:responsehandler:)",
                    "title": "func sendProviderMessage(Data, responseHandler: ((Data?) -> Void)?) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidersession",
                "title": "NETunnelProviderSession",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Controlling the VPN connection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel()",
                    "title": "func startVPNTunnel() throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/startvpntunnel(options:)",
                    "title": "func startVPNTunnel(options: [String : NSObject]?) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionusername",
                    "title": "let NEVPNConnectionStartOptionUsername: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionstartoptionpassword",
                    "title": "let NEVPNConnectionStartOptionPassword: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/stopvpntunnel()",
                    "title": "func stopVPNTunnel()",
                    "type": "method"
                  },
                  {
                    "title": "Getting VPN connection status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/manager",
                    "title": "var manager: NEVPNManager",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/status",
                    "title": "var status: NEVPNStatus",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Statuses",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnecting",
                        "title": "case disconnecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/reasserting",
                        "title": "case reasserting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connected",
                        "title": "case connected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/connecting",
                        "title": "case connecting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/disconnected",
                        "title": "case disconnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnstatus/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnstatus",
                    "title": "NEVPNStatus",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/connecteddate",
                    "title": "var connectedDate: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/1406683-nevpnstatusdidchange",
                    "title": "static let NEVPNStatusDidChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnection/fetchlastdisconnecterror(completionhandler:)",
                    "title": "func fetchLastDisconnectError(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnconnectionerrordomain",
                    "title": "let NEVPNConnectionErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "General error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/overslept",
                        "title": "case overslept",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/nonetworkavailable",
                        "title": "case noNetworkAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/unrecoverablenetworkchange",
                        "title": "case unrecoverableNetworkChange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationfailed",
                        "title": "case configurationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/authenticationfailed",
                        "title": "case authenticationFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/configurationnotfound",
                        "title": "case configurationNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/negotiationfailed",
                        "title": "case negotiationFailed",
                        "type": "case"
                      },
                      {
                        "title": "VPN server error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serveraddressresolutionfailed",
                        "title": "case serverAddressResolutionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servernotresponding",
                        "title": "case serverNotResponding",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdead",
                        "title": "case serverDead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/serverdisconnected",
                        "title": "case serverDisconnected",
                        "type": "case"
                      },
                      {
                        "title": "Plugin error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/pluginfailed",
                        "title": "case pluginFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/plugindisabled",
                        "title": "case pluginDisabled",
                        "type": "case"
                      },
                      {
                        "title": "Client certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateinvalid",
                        "title": "case clientCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificatenotyetvalid",
                        "title": "case clientCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/clientcertificateexpired",
                        "title": "case clientCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Server certificate error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateinvalid",
                        "title": "case serverCertificateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificatenotyetvalid",
                        "title": "case serverCertificateNotYetValid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/servercertificateexpired",
                        "title": "case serverCertificateExpired",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nevpnconnectionerror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nevpnconnectionerror",
                    "title": "NEVPNConnectionError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nevpnconnection",
                "title": "NEVPNConnection",
                "type": "class"
              },
              {
                "title": "Transparent proxy configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Loading proxy configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netransparentproxymanager/loadallfrompreferences(completionhandler:)",
                    "title": "class func loadAllFromPreferences(completionHandler: ([NETransparentProxyManager]?, (any Error)?) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/netransparentproxymanager",
                "title": "NETransparentProxyManager",
                "type": "class"
              },
              {
                "path": "/documentation/networkextension/netransparentproxyprovider",
                "title": "NETransparentProxyProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Traffic routing rules",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netransparentproxynetworksettings/includednetworkrules",
                    "title": "var includedNetworkRules: [NENetworkRule]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/netransparentproxynetworksettings/excludednetworkrules",
                    "title": "var excludedNetworkRules: [NENetworkRule]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/netransparentproxynetworksettings",
                "title": "NETransparentProxyNetworkSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a network rule",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/init(destinationnetwork:prefix:protocol:)",
                    "title": "init(destinationNetwork: NWHostEndpoint, prefix: Int, protocol: NENetworkRule.Protocol)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/init(destinationhost:protocol:)",
                    "title": "init(destinationHost: NWHostEndpoint, protocol: NENetworkRule.Protocol)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/init(remotenetwork:remoteprefix:localnetwork:localprefix:protocol:direction:)",
                    "title": "init(remoteNetwork: NWHostEndpoint?, remotePrefix: Int, localNetwork: NWHostEndpoint?, localPrefix: Int, protocol: NENetworkRule.Protocol, direction: NETrafficDirection)",
                    "type": "init"
                  },
                  {
                    "title": "Matching network traffic characteristics",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/matchremoteendpoint",
                    "title": "var matchRemoteEndpoint: NWHostEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchremoteprefix",
                    "title": "var matchRemotePrefix: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nenetworkrule/matchlocalnetwork",
                    "title": "var matchLocalNetwork: NWHostEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchlocalprefix",
                    "title": "var matchLocalPrefix: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchprotocol",
                    "title": "var matchProtocol: NENetworkRule.Protocol",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Protocols",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nenetworkrule/protocol/tcp",
                        "title": "case TCP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nenetworkrule/protocol/udp",
                        "title": "case UDP",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nenetworkrule/protocol/any",
                        "title": "case any",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nenetworkrule/protocol/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nenetworkrule/protocol",
                    "title": "NENetworkRule.Protocol",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchdirection",
                    "title": "var matchDirection: NETrafficDirection",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "case inbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "case outbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "case any",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/init(destinationhostendpoint:protocol:)",
                    "title": "convenience init(destinationHostEndpoint: NWEndpoint, protocol: NENetworkRule.Protocol)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/init(destinationnetworkendpoint:prefix:protocol:)",
                    "title": "convenience init(destinationNetworkEndpoint: NWEndpoint, prefix: Int, protocol: NENetworkRule.Protocol)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/init(remotenetworkendpoint:remoteprefix:localnetworkendpoint:localprefix:protocol:direction:)",
                    "title": "convenience init(remoteNetworkEndpoint: NWEndpoint?, remotePrefix: Int, localNetworkEndpoint: NWEndpoint?, localPrefix: Int, protocol: NENetworkRule.Protocol, direction: NETrafficDirection)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchlocalnetworkendpoint-62ttv",
                    "title": "var matchLocalNetworkEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nenetworkrule/matchremotehostornetworkendpoint-4a5ht",
                    "title": "var matchRemoteHostOrNetworkEndpoint: NWEndpoint?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nenetworkrule",
                "title": "NENetworkRule",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/app-proxy-provider",
            "title": "App proxy provider",
            "type": "collection"
          },
          {
            "title": "Network relays",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Relay configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing relay configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/shared()",
                    "title": "class func shared() -> NERelayManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing relay configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/relays",
                    "title": "var relays: [NERelay]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/matchdomains",
                    "title": "var matchDomains: [String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/excludeddomains",
                    "title": "var excludedDomains: [String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/ondemandrules",
                    "title": "var onDemandRules: [NEOnDemandRule]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing match parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnssearchdomainmatch",
                        "title": "var dnsSearchDomainMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/dnsserveraddressmatch",
                        "title": "var dnsServerAddressMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/interfacetypematch",
                        "title": "var interfaceTypeMatch: NEOnDemandRuleInterfaceType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Interface Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/any",
                            "title": "case any",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/ethernet",
                            "title": "case ethernet",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/wifi",
                            "title": "case wiFi",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/cellular",
                            "title": "case cellular",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleinterfacetype/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleinterfacetype",
                        "title": "NEOnDemandRuleInterfaceType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/ssidmatch",
                        "title": "var ssidMatch: [String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/probeurl",
                        "title": "var probeURL: URL?",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the rule action",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neondemandrule/action",
                        "title": "var action: NEOnDemandRuleAction",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Rule Actions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/connect",
                            "title": "case connect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/disconnect",
                            "title": "case disconnect",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/evaluateconnection",
                            "title": "case evaluateConnection",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/ignore",
                            "title": "case ignore",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neondemandruleaction/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neondemandruleaction",
                        "title": "NEOnDemandRuleAction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/networkextension/neondemandrule",
                    "title": "NEOnDemandRule",
                    "type": "class"
                  },
                  {
                    "title": "Loading previously-used managers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/loadallmanagersfrompreferences(completionhandler:)",
                    "title": "class func loadAllManagersFromPreferences(completionHandler: ([NERelayManager], (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelayerrordomain",
                    "title": "let NERelayErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/configurationcannotberemoved",
                        "title": "case configurationCannotBeRemoved",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nerelaymanagererror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nerelaymanagererror",
                    "title": "NERelayManagerError",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/excludedfqdns",
                    "title": "var excludedFQDNs: [String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/isuitoggleenabled",
                    "title": "var isUIToggleEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/matchfqdns",
                    "title": "var matchFQDNs: [String]?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelaymanager/getlastclienterrors(_:completionhandler:)",
                    "title": "func getLastClientErrors(TimeInterval, completionHandler: ([any Error]?) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nerelaymanager",
                "title": "NERelayManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring server properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/http3relayurl",
                    "title": "var http3RelayURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/http2relayurl",
                    "title": "var http2RelayURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/dnsoverhttpsurl",
                    "title": "var dnsOverHTTPSURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/rawpublickeys",
                    "title": "var rawPublicKeys: [Data]?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring client properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/additionalhttpheaderfields",
                    "title": "var additionalHTTPHeaderFields: [String : String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/identitydata",
                    "title": "var identityData: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/identitydatapassword",
                    "title": "var identityDataPassword: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/syntheticdnsansweripv4prefix",
                    "title": "var syntheticDNSAnswerIPv4Prefix: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nerelay/syntheticdnsansweripv6prefix",
                    "title": "var syntheticDNSAnswerIPv6Prefix: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nerelay",
                "title": "NERelay",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/relays",
            "title": "Relays",
            "type": "collection"
          },
          {
            "title": "Content filters",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Data and control providers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Filtering network content",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handlenewflow(_:)",
                    "title": "func handleNewFlow(NEFilterFlow) -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleinbounddata(from:readbytesstartoffset:readbytes:)",
                    "title": "func handleInboundData(from: NEFilterFlow, readBytesStartOffset: Int, readBytes: Data) -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Attributes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterdataattribute/hasipheader",
                        "title": "case hasIPHeader",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterdataattribute/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterdataattribute",
                    "title": "NEFilterDataAttribute",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleoutbounddata(from:readbytesstartoffset:readbytes:)",
                    "title": "func handleOutboundData(from: NEFilterFlow, readBytesStartOffset: Int, readBytes: Data) -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleinbounddatacomplete(for:)",
                    "title": "func handleInboundDataComplete(for: NEFilterFlow) -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleoutbounddatacomplete(for:)",
                    "title": "func handleOutboundDataComplete(for: NEFilterFlow) -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "title": "Handling remediation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleremediation(for:)",
                    "title": "func handleRemediation(for: NEFilterFlow) -> NEFilterRemediationVerdict",
                    "type": "method"
                  },
                  {
                    "title": "Handling rule updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/handleruleschanged()",
                    "title": "func handleRulesChanged()",
                    "type": "method"
                  },
                  {
                    "title": "Changing filter settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/apply(_:completionhandler:)",
                    "title": "func apply(NEFilterSettings?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Filter Settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltersettings/init(rules:defaultaction:)",
                        "title": "init(rules: [NEFilterRule], defaultAction: NEFilterAction)",
                        "type": "init"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Filter Rule",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nefilterrule/init(networkrule:action:)",
                            "title": "init(networkRule: NENetworkRule, action: NEFilterAction)",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting Filter Rule Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/nefilterrule/networkrule",
                            "title": "var networkRule: NENetworkRule",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/networkextension/nefilterrule/action",
                            "title": "var action: NEFilterAction",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/networkextension/nefilterrule",
                        "title": "NEFilterRule",
                        "type": "class"
                      },
                      {
                        "title": "Inspecting Filter Settings",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltersettings/rules",
                        "title": "var rules: [NEFilterRule]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltersettings/defaultaction",
                        "title": "var defaultAction: NEFilterAction",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltersettings",
                    "title": "NEFilterSettings",
                    "type": "class"
                  },
                  {
                    "title": "Resuming data flows",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/resumeflow(_:with:)",
                    "title": "func resumeFlow(NEFilterFlow, with: NEFilterVerdict)",
                    "type": "method"
                  },
                  {
                    "title": "Updating filter verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataprovider/update(_:using:for:)",
                    "title": "func update(NEFilterSocketFlow, using: NEFilterDataVerdict, for: NETrafficDirection)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nefilterdataprovider",
                "title": "NEFilterDataProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling requests for new rules",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/handlenewflow(_:completionhandler:)",
                    "title": "func handleNewFlow(NEFilterFlow, completionHandler: (NEFilterControlVerdict) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/notifyruleschanged()",
                    "title": "func notifyRulesChanged()",
                    "type": "method"
                  },
                  {
                    "title": "Handling remediation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/handleremediation(for:completionhandler:)",
                    "title": "func handleRemediation(for: NEFilterFlow, completionHandler: (NEFilterControlVerdict) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/remediationmap",
                    "title": "var remediationMap: [String : [String : NSObject]]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationmapremediationbuttontexts",
                    "title": "let NEFilterProviderRemediationMapRemediationButtonTexts: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationmapremediationurls",
                    "title": "let NEFilterProviderRemediationMapRemediationURLs: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlflowurl",
                    "title": "var NEFilterProviderRemediationURLFlowURL: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlflowurlhostname",
                    "title": "var NEFilterProviderRemediationURLFlowURLHostname: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlorganization",
                    "title": "var NEFilterProviderRemediationURLOrganization: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderremediationurlusername",
                    "title": "var NEFilterProviderRemediationURLUsername: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolprovider/urlappendstringmap",
                    "title": "var urlAppendStringMap: [String : String]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefiltercontrolprovider",
                "title": "NEFilterControlProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Filtering packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketprovider/packethandler",
                    "title": "var packetHandler: NEFilterPacketHandler?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpackethandler",
                    "title": "NEFilterPacketHandler",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketcontext",
                    "title": "NEFilterPacketContext",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "case inbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "case outbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "case any",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Verdicts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterpacketprovider/verdict/allow",
                        "title": "case allow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterpacketprovider/verdict/drop",
                        "title": "case drop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterpacketprovider/verdict/delay",
                        "title": "case delay",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterpacketprovider/verdict/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterpacketprovider/verdict",
                    "title": "NEFilterPacketProvider.Verdict",
                    "type": "enum"
                  },
                  {
                    "title": "Delaying packets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketprovider/delaycurrentpacket(_:)",
                    "title": "func delayCurrentPacket(NEFilterPacketContext) -> NEPacket",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketprovider/allow(_:)",
                    "title": "func allow(NEPacket)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterpacketprovider/handler",
                    "title": "var handler: ((NEFilterPacketContext, NWInterface, NETrafficDirection, UnsafeRawBufferPointer) -> NEFilterPacketProvider.Verdict)?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterpacketprovider",
                "title": "NEFilterPacketProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing the filter life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/startfilter(completionhandler:)",
                    "title": "func startFilter(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/stopfilter(with:completionhandler:)",
                    "title": "func stopFilter(with: NEProviderStopReason, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Getting the filter configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/filterconfiguration",
                    "title": "var filterConfiguration: NEFilterProviderConfiguration",
                    "type": "property"
                  },
                  {
                    "title": "Receiving reports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterprovider/handle(_:)",
                    "title": "func handle(NEFilterReport)",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltererrordomain",
                    "title": "let NEFilterErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationcannotberemoved",
                        "title": "case configurationCannotBeRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationpermissiondenied",
                        "title": "case configurationPermissionDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinternalerror",
                        "title": "case configurationInternalError",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltermanagererror",
                    "title": "NEFilterManagerError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nefilterprovider",
                "title": "NEFilterProvider",
                "type": "class"
              },
              {
                "title": "Flow handling",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting flow properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/url",
                    "title": "var url: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/identifier",
                    "title": "var identifier: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/direction",
                    "title": "var direction: NETrafficDirection",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/inbound",
                        "title": "case inbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/outbound",
                        "title": "case outbound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/any",
                        "title": "case any",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/netrafficdirection/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/netrafficdirection",
                    "title": "NETrafficDirection",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflowbytesmax",
                    "title": "var NEFilterFlowBytesMax: UInt64",
                    "type": "var"
                  },
                  {
                    "title": "Source app identification",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappuniqueidentifier",
                    "title": "var sourceAppUniqueIdentifier: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappidentifier",
                    "title": "var sourceAppIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappversion",
                    "title": "var sourceAppVersion: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceappaudittoken",
                    "title": "var sourceAppAuditToken: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterflow/sourceprocessaudittoken",
                    "title": "var sourceProcessAuditToken: Data?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterflow",
                "title": "NEFilterFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting browser flow properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterbrowserflow/parenturl",
                    "title": "var parentURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterbrowserflow/request",
                    "title": "var request: URLRequest?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterbrowserflow/response",
                    "title": "var response: URLResponse?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterbrowserflow",
                "title": "NEFilterBrowserFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting socket flow properties",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nefiltersocketflow/remoteendpoint",
                    "title": "var remoteEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/remotehostname",
                    "title": "var remoteHostname: String?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting flow properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/url",
                        "title": "var url: URL?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/identifier",
                        "title": "var identifier: UUID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/direction",
                        "title": "var direction: NETrafficDirection",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Directions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/netrafficdirection/inbound",
                            "title": "case inbound",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/netrafficdirection/outbound",
                            "title": "case outbound",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/netrafficdirection/any",
                            "title": "case any",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/netrafficdirection/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/netrafficdirection",
                        "title": "NETrafficDirection",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflowbytesmax",
                        "title": "var NEFilterFlowBytesMax: UInt64",
                        "type": "var"
                      },
                      {
                        "title": "Source app identification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappuniqueidentifier",
                        "title": "var sourceAppUniqueIdentifier: Data?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappidentifier",
                        "title": "var sourceAppIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappversion",
                        "title": "var sourceAppVersion: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceappaudittoken",
                        "title": "var sourceAppAuditToken: Data?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterflow/sourceprocessaudittoken",
                        "title": "var sourceProcessAuditToken: Data?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterflow",
                    "title": "NEFilterFlow",
                    "type": "class"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nefiltersocketflow/localendpoint",
                    "title": "var localEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/socketfamily",
                    "title": "var socketFamily: Int32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/sockettype",
                    "title": "var socketType: Int32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/socketprotocol",
                    "title": "var socketProtocol: Int32",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/localflowendpoint-89z3l",
                    "title": "var localFlowEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltersocketflow/remoteflowendpoint-6bnas",
                    "title": "var remoteFlowEndpoint: NWEndpoint?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefiltersocketflow",
                "title": "NEFilterSocketFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating new flow verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/allow()",
                    "title": "class func allow() -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/drop()",
                    "title": "class func drop() -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/pause()",
                    "title": "class func pause() -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/filterdataverdict(withfilterinbound:peekinboundbytes:filteroutbound:peekoutboundbytes:)",
                    "title": "class func filterDataVerdict(withFilterInbound: Bool, peekInboundBytes: Int, filterOutbound: Bool, peekOutboundBytes: Int) -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/remediateverdict(withremediationurlmapkey:remediationbuttontextmapkey:)",
                    "title": "class func remediateVerdict(withRemediationURLMapKey: String, remediationButtonTextMapKey: String) -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/needrules()",
                    "title": "class func needRules() -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/urlappendstringverdict(withmapkey:)",
                    "title": "class func urlAppendStringVerdict(withMapKey: String) -> NEFilterNewFlowVerdict",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting new flow verdict properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilternewflowverdict/statisticsreportfrequency",
                    "title": "var statisticsReportFrequency: NEFilterReport.Frequency",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Report frequencies",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/low",
                        "title": "case low",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/medium",
                        "title": "case medium",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/high",
                        "title": "case high",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/frequency/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterreport/frequency",
                    "title": "NEFilterReport.Frequency",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nefilternewflowverdict",
                "title": "NEFilterNewFlowVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating data verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/allow()",
                    "title": "class func allow() -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/drop()",
                    "title": "class func drop() -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/pause()",
                    "title": "class func pause() -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/remediateverdict(withremediationurlmapkey:remediationbuttontextmapkey:)",
                    "title": "class func remediateVerdict(withRemediationURLMapKey: String?, remediationButtonTextMapKey: String?) -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/needrules()",
                    "title": "class func needRules() -> NEFilterDataVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/init(passbytes:peekbytes:)",
                    "title": "init(passBytes: Int, peekBytes: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Reporting statistics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterdataverdict/statisticsreportfrequency",
                    "title": "var statisticsReportFrequency: NEFilterReport.Frequency",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterdataverdict",
                "title": "NEFilterDataVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating control verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolverdict/allow(withupdaterules:)",
                    "title": "class func allow(withUpdateRules: Bool) -> NEFilterControlVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolverdict/drop(withupdaterules:)",
                    "title": "class func drop(withUpdateRules: Bool) -> NEFilterControlVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltercontrolverdict/updaterules()",
                    "title": "class func updateRules() -> NEFilterControlVerdict",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nefiltercontrolverdict",
                "title": "NEFilterControlVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating remediation verdicts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterremediationverdict/allow()",
                    "title": "class func allow() -> NEFilterRemediationVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterremediationverdict/drop()",
                    "title": "class func drop() -> NEFilterRemediationVerdict",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterremediationverdict/needrules()",
                    "title": "class func needRules() -> NEFilterRemediationVerdict",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/nefilterremediationverdict",
                "title": "NEFilterRemediationVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring report generation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterverdict/shouldreport",
                    "title": "var shouldReport: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterverdict",
                "title": "NEFilterVerdict",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting report properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/flow",
                    "title": "var flow: NEFilterFlow?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/action",
                    "title": "var action: NEFilterAction",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/allow",
                        "title": "case allow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/drop",
                        "title": "case drop",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/remediate",
                        "title": "case remediate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/filterdata",
                        "title": "case filterData",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilteraction/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilteraction",
                    "title": "NEFilterAction",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/event-swift.property",
                    "title": "var event: NEFilterReport.Event",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Event Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/newflow",
                        "title": "case newFlow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/datadecision",
                        "title": "case dataDecision",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/flowclosed",
                        "title": "case flowClosed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/statistics",
                        "title": "case statistics",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefilterreport/event-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefilterreport/event-swift.enum",
                    "title": "NEFilterReport.Event",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/bytesinboundcount",
                    "title": "var bytesInboundCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterreport/bytesoutboundcount",
                    "title": "var bytesOutboundCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterreport",
                "title": "NEFilterReport",
                "type": "class"
              },
              {
                "title": "Filter configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the filter configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/shared()",
                    "title": "class func shared() -> NEFilterManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing filter configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/providerconfiguration",
                    "title": "var providerConfiguration: NEFilterProviderConfiguration?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "title": "Prioritizing filters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/grade-swift.property",
                    "title": "var grade: NEFilterManager.Grade",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Grades",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanager/grade-swift.enum/firewall",
                        "title": "case firewall",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanager/grade-swift.enum/inspector",
                        "title": "case inspector",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanager/grade-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltermanager/grade-swift.enum",
                    "title": "NEFilterManager.Grade",
                    "type": "enum"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltererrordomain",
                    "title": "let NEFilterErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationcannotberemoved",
                        "title": "case configurationCannotBeRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationpermissiondenied",
                        "title": "case configurationPermissionDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/configurationinternalerror",
                        "title": "case configurationInternalError",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nefiltermanagererror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nefiltermanagererror",
                    "title": "NEFilterManagerError",
                    "type": "enum"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/1406656-nefilterconfigurationdidchange",
                    "title": "static let NEFilterConfigurationDidChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefiltermanager/disableencrypteddnssettings",
                    "title": "var disableEncryptedDNSSettings: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefiltermanager",
                "title": "NEFilterManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring filter behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterbrowsers",
                    "title": "var filterBrowsers: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filtersockets",
                    "title": "var filterSockets: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterpackets",
                    "title": "var filterPackets: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the filter configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/vendorconfiguration",
                    "title": "var vendorConfiguration: [String : Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/serveraddress",
                    "title": "var serverAddress: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/username",
                    "title": "var username: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/organization",
                    "title": "var organization: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/passwordreference",
                    "title": "var passwordReference: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/identityreference",
                    "title": "var identityReference: Data?",
                    "type": "property"
                  },
                  {
                    "title": "Accessing bundle identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterdataproviderbundleidentifier",
                    "title": "var filterDataProviderBundleIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nefilterproviderconfiguration/filterpacketproviderbundleidentifier",
                    "title": "var filterPacketProviderBundleIdentifier: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nefilterproviderconfiguration",
                "title": "NEFilterProviderConfiguration",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/content-filter-providers",
            "title": "Content filter providers",
            "type": "collection"
          },
          {
            "path": "/documentation/networkextension/filtering-network-traffic",
            "title": "Filtering Network Traffic",
            "type": "sampleCode"
          },
          {
            "title": "DNS configurations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "DNS configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing DNS configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/shared()",
                    "title": "class func shared() -> NEDNSSettingsManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing DNS configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/dnssettings",
                    "title": "var dnsSettings: NEDNSSettings?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingsmanager/ondemandrules",
                    "title": "var onDemandRules: [NEOnDemandRule]?",
                    "type": "property"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettingserrordomain",
                    "title": "let NEDNSSettingsErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/configurationcannotberemoved",
                        "title": "case configurationCannotBeRemoved",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednssettingsmanagererror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nednssettingsmanagererror",
                    "title": "NEDNSSettingsManagerError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nednssettingsmanager",
                "title": "NEDNSSettingsManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring server properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsoverhttpssettings/serverurl",
                    "title": "var serverURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/init(servers:)",
                    "title": "init(servers: [String])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomains",
                    "title": "var matchDomains: [String]?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring client properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsoverhttpssettings/identityreference",
                    "title": "var identityReference: Data?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nednsoverhttpssettings",
                "title": "NEDNSOverHTTPSSettings",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring server properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsovertlssettings/servername",
                    "title": "var serverName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/init(servers:)",
                    "title": "init(servers: [String])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomains",
                    "title": "var matchDomains: [String]?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring client properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsovertlssettings/identityreference",
                    "title": "var identityReference: Data?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nednsovertlssettings",
                "title": "NEDNSOverTLSSettings",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/dns-settings",
            "title": "DNS settings",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.networking.networkextension",
                "title": "Network Extensions Entitlement",
                "type": "typealias"
              },
              {
                "title": "Provider",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the DNS proxy life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/startproxy(options:completionhandler:)",
                    "title": "func startProxy(options: [String : Any]?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/stopproxy(with:completionhandler:)",
                    "title": "func stopProxy(with: NEProviderStopReason, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/cancelproxywitherror(_:)",
                    "title": "func cancelProxyWithError((any Error)?)",
                    "type": "method"
                  },
                  {
                    "title": "Handling proxied DNS flow",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/handlenewflow(_:)",
                    "title": "func handleNewFlow(NEAppProxyFlow) -> Bool",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/nednsproxyprovider/handlenewudpflow(_:initialremoteendpoint:)",
                    "title": "func handleNewUDPFlow(NEAppProxyUDPFlow, initialRemoteEndpoint: NWEndpoint) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Getting system DNS settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyprovider/systemdnssettings",
                    "title": "var systemDNSSettings: [NEDNSSettings]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nednsproxyprovider",
                "title": "NEDNSProxyProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing DNS settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/init(servers:)",
                    "title": "init(servers: [String])",
                    "type": "init"
                  },
                  {
                    "title": "Accessing DNS properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/servers",
                    "title": "var servers: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/searchdomains",
                    "title": "var searchDomains: [String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/domainname",
                    "title": "var domainName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomains",
                    "title": "var matchDomains: [String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/matchdomainsnosearch",
                    "title": "var matchDomainsNoSearch: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednssettings/dnsprotocol",
                    "title": "var dnsProtocol: NEDNSProtocol",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "DNS protocols",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednsprotocol/cleartext",
                        "title": "case cleartext",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsprotocol/tls",
                        "title": "case TLS",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsprotocol/https",
                        "title": "case HTTPS",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednsprotocol/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nednsprotocol",
                    "title": "NEDNSProtocol",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nednssettings",
                "title": "NEDNSSettings",
                "type": "class"
              },
              {
                "title": "Handling flows",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/write(_:withcompletionhandler:)",
                    "title": "func write(Data, withCompletionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/readdata(completionhandler:)",
                    "title": "func readData(completionHandler: (Data?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteendpoint",
                    "title": "var remoteEndpoint: NWEndpoint",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxytcpflow/remoteflowendpoint-4r7v1",
                    "title": "var remoteFlowEndpoint: NWEndpoint",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/neappproxytcpflow",
                "title": "NEAppProxyTCPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Handling flow data",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams(completionhandler:)-9z8gw",
                    "title": "func readDatagrams(completionHandler: ([Data]?, [NWEndpoint]?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:sentby:completionhandler:)",
                    "title": "func writeDatagrams([Data], sentBy: [NWEndpoint], completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Getting flow information",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyudpflow/localendpoint",
                    "title": "var localEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/localflowendpoint-7ukb6",
                    "title": "var localFlowEndpoint: NWEndpoint?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams()",
                    "title": "func readDatagrams() async -> ([(Data, NWEndpoint)]?, (any Error)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/readdatagrams(completionhandler:)-71k28",
                    "title": "func readDatagrams(completionHandler: ([(Data, NWEndpoint)]?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:)",
                    "title": "func writeDatagrams([(Data, NWEndpoint)]) async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyudpflow/writedatagrams(_:completionhandler:)",
                    "title": "func writeDatagrams([(Data, NWEndpoint)], completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyudpflow",
                "title": "NEAppProxyUDPFlow",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing the flow life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalendpoint:completionhandler:)",
                    "title": "func open(withLocalEndpoint: NWHostEndpoint?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closereadwitherror(_:)",
                    "title": "func closeReadWithError((any Error)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/closewritewitherror(_:)",
                    "title": "func closeWriteWithError((any Error)?)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing flow information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/metadata",
                    "title": "var metaData: NEFlowMetaData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/setmetadata(_:)",
                    "title": "func setMetadata(nw_parameters_t)",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_parameters_t",
                    "title": "nw_parameters_t",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/isbound",
                    "title": "var isBound: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/networkinterface",
                    "title": "var networkInterface: nw_interface_t?",
                    "type": "property"
                  },
                  {
                    "external": true,
                    "path": "/documentation/network/nw_interface_type_t",
                    "title": "nw_interface_type_t",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/remotehostname",
                    "title": "var remoteHostname: String?",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing error properties",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                            "title": "case notConnected",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                            "title": "case peerReset",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                            "title": "case hostUnreachable",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                            "title": "case invalidArgument",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                            "title": "case aborted",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                            "title": "case refused",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                            "title": "case timedOut",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                            "title": "case `internal`",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                            "title": "case datagramTooLarge",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                            "title": "case readAlreadyPending",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                        "title": "NEAppProxyFlowError.Code",
                        "type": "enum"
                      },
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/notconnected",
                        "title": "static var notConnected: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/peerreset",
                        "title": "static var peerReset: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/hostunreachable",
                        "title": "static var hostUnreachable: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/invalidargument",
                        "title": "static var invalidArgument: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/aborted",
                        "title": "static var aborted: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/refused",
                        "title": "static var refused: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/timedout",
                        "title": "static var timedOut: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/internal",
                        "title": "static var `internal`: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/datagramtoolarge",
                        "title": "static var datagramTooLarge: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/readalreadypending",
                        "title": "static var readAlreadyPending: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct",
                    "title": "NEAppProxyFlowError",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyerrordomain",
                    "title": "let NEAppProxyErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                        "title": "case notConnected",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                        "title": "case peerReset",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                        "title": "case hostUnreachable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                        "title": "case invalidArgument",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                        "title": "case aborted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                        "title": "case refused",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                        "title": "case timedOut",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                        "title": "case datagramTooLarge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                        "title": "case readAlreadyPending",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                    "title": "NEAppProxyFlowError.Code",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing error properties",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/notconnected",
                            "title": "case notConnected",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/peerreset",
                            "title": "case peerReset",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/hostunreachable",
                            "title": "case hostUnreachable",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/invalidargument",
                            "title": "case invalidArgument",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/aborted",
                            "title": "case aborted",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/refused",
                            "title": "case refused",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/timedout",
                            "title": "case timedOut",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/internal",
                            "title": "case `internal`",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/datagramtoolarge",
                            "title": "case datagramTooLarge",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/readalreadypending",
                            "title": "case readAlreadyPending",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/code",
                        "title": "NEAppProxyFlowError.Code",
                        "type": "enum"
                      },
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/notconnected",
                        "title": "static var notConnected: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/peerreset",
                        "title": "static var peerReset: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/hostunreachable",
                        "title": "static var hostUnreachable: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/invalidargument",
                        "title": "static var invalidArgument: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/aborted",
                        "title": "static var aborted: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/refused",
                        "title": "static var refused: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/timedout",
                        "title": "static var timedOut: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/internal",
                        "title": "static var `internal`: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/datagramtoolarge",
                        "title": "static var datagramTooLarge: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/readalreadypending",
                        "title": "static var readAlreadyPending: NEAppProxyFlowError.Code",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neappproxyflowerror-swift.struct/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neappproxyflowerror-swift.struct",
                    "title": "NEAppProxyFlowError",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/interface",
                    "title": "var interface: NWInterface?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalflowendpoint:)",
                    "title": "func open(withLocalFlowEndpoint: NWEndpoint?) async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/open(withlocalflowendpoint:completionhandler:)",
                    "title": "func open(withLocalFlowEndpoint: NWEndpoint?, completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neappproxyflow/setmetadata(on:)",
                    "title": "func setMetadata(on: NWParameters)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neappproxyflow",
                "title": "NEAppProxyFlow",
                "type": "class"
              },
              {
                "title": "Configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Managing the DNS proxy configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/shared()",
                    "title": "class func shared() -> NEDNSProxyManager",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing DNS proxy configuration properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/providerprotocol",
                    "title": "var providerProtocol: NEDNSProxyProviderProtocol?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxymanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "title": "Notifications",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/nsnotification/name/2880182-nednsproxyconfigurationdidchange",
                    "title": "static let NEDNSProxyConfigurationDidChange: NSNotification.Name",
                    "type": "property"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyerrordomain",
                    "title": "let NEDNSProxyErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationdisabled",
                        "title": "case configurationDisabled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationstale",
                        "title": "case configurationStale",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/configurationcannotberemoved",
                        "title": "case configurationCannotBeRemoved",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/nednsproxymanagererror/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/nednsproxymanagererror",
                    "title": "NEDNSProxyManagerError",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/nednsproxymanager",
                "title": "NEDNSProxyManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the DNS proxy configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyproviderprotocol/providerconfiguration",
                    "title": "var providerConfiguration: [String : Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/nednsproxyproviderprotocol/providerbundleidentifier",
                    "title": "var providerBundleIdentifier: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/networkextension/nednsproxyproviderprotocol",
                "title": "NEDNSProxyProviderProtocol",
                "type": "class"
              }
            ],
            "path": "/documentation/networkextension/dns-proxy-provider",
            "title": "DNS proxy provider",
            "type": "collection"
          },
          {
            "title": "Local networking",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Matching Wi-Fi networks",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/matchssids",
                    "title": "var matchSSIDs: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/matchprivateltenetworks",
                    "title": "var matchPrivateLTENetworks: [NEPrivateLTENetwork]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing network properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neprivateltenetwork/mobilecountrycode",
                        "title": "var mobileCountryCode: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neprivateltenetwork/mobilenetworkcode",
                        "title": "var mobileNetworkCode: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neprivateltenetwork/trackingareacode",
                        "title": "var trackingAreaCode: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neprivateltenetwork",
                    "title": "NEPrivateLTENetwork",
                    "type": "class"
                  },
                  {
                    "title": "Persisting manager settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/loadfrompreferences(completionhandler:)",
                    "title": "func loadFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/loadallfrompreferences(completionhandler:)",
                    "title": "class func loadAllFromPreferences(completionHandler: ([NEAppPushManager]?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/savetopreferences(completionhandler:)",
                    "title": "func saveToPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/removefrompreferences(completionhandler:)",
                    "title": "func removeFromPreferences(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Working with a delegate",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/delegate",
                    "title": "var delegate: (any NEAppPushDelegate)?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Receiving calls",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushdelegate/apppushmanager(_:didreceiveincomingcallwithuserinfo:)",
                        "title": "func appPushManager(NEAppPushManager, didReceiveIncomingCallWithUserInfo: [AnyHashable : Any])",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/networkextension/neapppushdelegate",
                    "title": "NEAppPushDelegate",
                    "type": "protocol"
                  },
                  {
                    "title": "Inspecting manager properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/isactive",
                    "title": "var isActive: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/isenabled",
                    "title": "var isEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/localizeddescription",
                    "title": "var localizedDescription: String?",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting provider properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/providerconfiguration",
                    "title": "var providerConfiguration: [String : Any]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushmanager/providerbundleidentifier",
                    "title": "var providerBundleIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting error properties",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Error codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/configurationinvalid",
                            "title": "case configurationInvalid",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/configurationnotloaded",
                            "title": "case configurationNotLoaded",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/inactivesession",
                            "title": "case inactiveSession",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/internalerror",
                            "title": "case internalError",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code",
                        "title": "NEAppPushManagerError.Code",
                        "type": "enum"
                      },
                      {
                        "title": "Error constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/configurationinvalid",
                        "title": "static var configurationInvalid: NEAppPushManagerError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/configurationnotloaded",
                        "title": "static var configurationNotLoaded: NEAppPushManagerError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/inactivesession",
                        "title": "static var inactiveSession: NEAppPushManagerError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/internalerror",
                        "title": "static var internalError: NEAppPushManagerError.Code",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/networkextension/neapppushmanagererror-swift.struct",
                    "title": "NEAppPushManagerError",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/networkextension/neapppusherrordomain",
                    "title": "let NEAppPushErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/configurationinvalid",
                        "title": "case configurationInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/configurationnotloaded",
                        "title": "case configurationNotLoaded",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/inactivesession",
                        "title": "case inactiveSession",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/internalerror",
                        "title": "case internalError",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/networkextension/neapppushmanagererror-swift.struct/code",
                    "title": "NEAppPushManagerError.Code",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/networkextension/neapppushmanager",
                "title": "NEAppPushManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Inspecting provider properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/providerconfiguration",
                    "title": "var providerConfiguration: [String : Any]?",
                    "type": "property"
                  },
                  {
                    "title": "Implementing provider life cycle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/start()",
                    "title": "func start()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/start(completionhandler:)",
                    "title": "func start(completionHandler: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/stop(with:completionhandler:)",
                    "title": "func stop(with: NEProviderStopReason, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/handletimerevent()",
                    "title": "func handleTimerEvent()",
                    "type": "method"
                  },
                  {
                    "title": "Receiving local events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/reportincomingcall(userinfo:)",
                    "title": "func reportIncomingCall(userInfo: [AnyHashable : Any])",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/networkextension/neapppushprovider/reportpushtotalkmessage(userinfo:)",
                    "title": "func reportPushToTalkMessage(userInfo: [AnyHashable : Any])",
                    "type": "method"
                  }
                ],
                "path": "/documentation/networkextension/neapppushprovider",
                "title": "NEAppPushProvider",
                "type": "class"
              },
              {
                "path": "/documentation/networkextension/maintaining-a-reliable-network-connection",
                "title": "Maintaining a Reliable Network Connection",
                "type": "article"
              },
              {
                "path": "/documentation/networkextension/receiving-voice-and-text-communications-on-a-local-network",
                "title": "Receiving Voice and Text Communications on a Local Network",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/networkextension/local-push-connectivity",
            "title": "Local push connectivity",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/init(identifier:keychainreference:)",
                "title": "init(identifier: String, keychainReference: Data)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/identifier",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/ismandatory",
                "title": "var isMandatory: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnikev2ppkconfiguration/keychainreference",
                "title": "var keychainReference: Data",
                "type": "property"
              }
            ],
            "path": "/documentation/networkextension/nevpnikev2ppkconfiguration",
            "title": "NEVPNIKEv2PPKConfiguration",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/neappproxyudpflowhandling/handlenewudpflow(_:initialremoteflowendpoint:)",
                "title": "func handleNewUDPFlow(NEAppProxyUDPFlow, initialRemoteFlowEndpoint: NWEndpoint) -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/networkextension/neappproxyudpflowhandling",
            "title": "NEAppProxyUDPFlowHandling",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error information",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsinvalid",
                    "title": "case networkSettingsInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingscanceled",
                    "title": "case networkSettingsCanceled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/networksettingsfailed",
                    "title": "case networkSettingsFailed",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/code",
                "title": "NETunnelProviderError.Code",
                "type": "enum"
              },
              {
                "title": "Error codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/networksettingsinvalid",
                "title": "static var networkSettingsInvalid: NETunnelProviderError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/networksettingscanceled",
                "title": "static var networkSettingsCanceled: NETunnelProviderError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/networksettingsfailed",
                "title": "static var networkSettingsFailed: NETunnelProviderError.Code",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/netunnelprovidererror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/networkextension/netunnelprovidererror-swift.struct",
            "title": "NETunnelProviderError",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Inspecting error properties",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationdisabled",
                    "title": "case configurationDisabled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationinvalid",
                    "title": "case configurationInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code/connectionfailed",
                    "title": "case connectionFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationstale",
                    "title": "case configurationStale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationreadwritefailed",
                    "title": "case configurationReadWriteFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code/configurationunknown",
                    "title": "case configurationUnknown",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/networkextension/nevpnerror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/networkextension/nevpnerror-swift.struct/code",
                "title": "NEVPNError.Code",
                "type": "enum"
              },
              {
                "title": "Error codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nevpnerror-swift.struct/configurationdisabled",
                "title": "static var configurationDisabled: NEVPNError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnerror-swift.struct/configurationinvalid",
                "title": "static var configurationInvalid: NEVPNError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnerror-swift.struct/connectionfailed",
                "title": "static var connectionFailed: NEVPNError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnerror-swift.struct/configurationstale",
                "title": "static var configurationStale: NEVPNError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnerror-swift.struct/configurationreadwritefailed",
                "title": "static var configurationReadWriteFailed: NEVPNError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/networkextension/nevpnerror-swift.struct/configurationunknown",
                "title": "static var configurationUnknown: NEVPNError.Code",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nevpnerror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/networkextension/nevpnerror-swift.struct",
            "title": "NEVPNError",
            "type": "struct"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/networkextension/nerelayclienterrordomain",
            "title": "let NERelayClientErrorDomain: String",
            "type": "var"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/certificateexpired",
                "title": "case certificateExpired",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/certificateinvalid",
                "title": "case certificateInvalid",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/certificatemissing",
                "title": "case certificateMissing",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/dnsfailed",
                "title": "case dnsFailed",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/none",
                "title": "case none",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/other",
                "title": "case other",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/servercertificateexpired",
                "title": "case serverCertificateExpired",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/servercertificateinvalid",
                "title": "case serverCertificateInvalid",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/serverdisconnected",
                "title": "case serverDisconnected",
                "type": "case"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/serverunreachable",
                "title": "case serverUnreachable",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/networkextension/nerelaymanagerclienterror/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/networkextension/nerelaymanagerclienterror",
            "title": "NERelayManagerClientError",
            "type": "enum"
          }
        ],
        "path": "/documentation/networkextension",
        "title": "Network Extension",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
