{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/tabletopkit/tabletopkitsample",
            "title": "Creating tabletop games",
            "type": "sampleCode"
          },
          {
            "title": "Seats",
            "type": "groupMarker"
          },
          {
            "title": "Equipment",
            "type": "groupMarker"
          },
          {
            "title": "Equipment layout",
            "type": "groupMarker"
          },
          {
            "title": "Score counters",
            "type": "groupMarker"
          },
          {
            "title": "Players",
            "type": "groupMarker"
          },
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "title": "Interactions",
            "type": "groupMarker"
          },
          {
            "title": "Bookmarks",
            "type": "groupMarker"
          },
          {
            "title": "Multiplayer network session",
            "type": "groupMarker"
          },
          {
            "title": "Debugging",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/tabletopkit",
        "title": "TabletopKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/tabletopkit/tabletopkitsample",
            "title": "Creating tabletop games",
            "type": "sampleCode"
          },
          {
            "title": "Seats",
            "type": "groupMarker"
          },
          {
            "title": "Equipment",
            "type": "groupMarker"
          },
          {
            "title": "Equipment layout",
            "type": "groupMarker"
          },
          {
            "title": "Score counters",
            "type": "groupMarker"
          },
          {
            "title": "Players",
            "type": "groupMarker"
          },
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "title": "Interactions",
            "type": "groupMarker"
          },
          {
            "title": "Bookmarks",
            "type": "groupMarker"
          },
          {
            "title": "Multiplayer network session",
            "type": "groupMarker"
          },
          {
            "title": "Debugging",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/tabletopkit",
        "title": "TabletopKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/tabletopkit/tabletopkitsample",
            "title": "Creating tabletop games",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a tabletop game",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/init(tablesetup:version:)",
                "title": "init(tableSetup: TableSetup, version: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/rootpose",
                "title": "var rootPose: Pose3D",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/update(deltatime:)",
                "title": "func update(deltaTime: Double)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/withcurrentsnapshot(_:)",
                "title": "func withCurrentSnapshot((TableSnapshot) -> Void)",
                "type": "method"
              },
              {
                "title": "Adding equipment to the game",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/equipment",
                "title": "var equipment: [any Equipment]",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/equipmentids",
                "title": "var equipmentIDs: [EquipmentIdentifier]",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/equipment(matching:)",
                "title": "func equipment(matching: EquipmentIdentifier) -> (any Equipment)?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/equipment(of:)",
                "title": "func equipment<E>(of: E.Type) -> [E]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/equipment(of:forentity:)",
                "title": "func equipment<E>(of: E.Type, forEntity: Entity) -> E?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/equipment(of:matching:)",
                "title": "func equipment<E>(of: E.Type, matching: EquipmentIdentifier) -> E?",
                "type": "method"
              },
              {
                "title": "Managing seats",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/claimanyseat()",
                "title": "func claimAnySeat()",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/claimseat(_:)",
                "title": "func claimSeat(some TableSeat)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/claimseat(matching:)",
                "title": "func claimSeat(matching: TableSeatIdentifier)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/releaseseat()",
                "title": "func releaseSeat()",
                "type": "method"
              },
              {
                "title": "Getting the player",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/localplayer",
                "title": "var localPlayer: Player",
                "type": "property"
              },
              {
                "title": "Adding actions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/addaction(_:)",
                "title": "func addAction(some TabletopAction)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/addactions(_:)",
                "title": "func addActions(some Sequence<any TabletopAction>)",
                "type": "method"
              },
              {
                "title": "Observing actions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling interaction updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/interactionwasupdated(_:snapshot:)",
                    "title": "func interactionWasUpdated(TabletopInteraction.Value, snapshot: TableSnapshot)",
                    "type": "method"
                  },
                  {
                    "title": "Validating actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/validateaction(_:snapshot:)",
                    "title": "func validateAction(some TabletopAction, snapshot: TableSnapshot) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/actionispending(_:oldsnapshot:newsnapshot:)",
                    "title": "func actionIsPending(some TabletopAction, oldSnapshot: TableSnapshot, newSnapshot: TableSnapshot)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/actionwasconfirmed(_:oldsnapshot:newsnapshot:)",
                    "title": "func actionWasConfirmed(some TabletopAction, oldSnapshot: TableSnapshot, newSnapshot: TableSnapshot)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/actionwasrolledback(_:snapshot:)",
                    "title": "func actionWasRolledBack(some TabletopAction, snapshot: TableSnapshot)",
                    "type": "method"
                  },
                  {
                    "title": "Handling seat actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/playerchangedseats(_:oldseat:newseat:snapshot:)",
                    "title": "func playerChangedSeats(Player, oldSeat: (any TableSeat)?, newSeat: (any TableSeat)?, snapshot: TableSnapshot)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/statedidresettobookmark(_:)",
                    "title": "func stateDidResetToBookmark(StateBookmarkIdentifier)",
                    "type": "method"
                  },
                  {
                    "title": "Handling cancellations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/observer/actionwascancelled(_:reason:)",
                    "title": "func actionWasCancelled(some TabletopAction, reason: TabletopGame.ActionCancellationReason)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopgame/observer",
                "title": "TabletopGame.Observer",
                "type": "protocol"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/addobserver(_:)",
                "title": "func addObserver(some TabletopGame.Observer)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/removeobserver(_:)",
                "title": "func removeObserver(some TabletopGame.Observer)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Cancellation reasons",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/actioncancellationreason/actioninvalidated",
                    "title": "case actionInvalidated",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/actioncancellationreason/interactioncancelled",
                    "title": "case interactionCancelled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopgame/actioncancellationreason",
                "title": "TabletopGame.ActionCancellationReason",
                "type": "enum"
              },
              {
                "title": "Jumping to bookmarks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/jumptobookmark(_:)",
                "title": "func jumpToBookmark(StateBookmark)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/jumptobookmark(matching:)",
                "title": "func jumpToBookmark(matching: StateBookmarkIdentifier)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/bookmarks",
                "title": "var bookmarks: [StateBookmarkIdentifier]",
                "type": "property"
              },
              {
                "title": "Starting interactions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/startinteraction(onequipmentid:)",
                "title": "func startInteraction(onEquipmentID: EquipmentIdentifier) -> TabletopInteraction.Identifier?",
                "type": "method"
              },
              {
                "title": "Rendering the table",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/addrenderdelegate(_:)",
                "title": "func addRenderDelegate(some TabletopGame.RenderDelegate)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/removerenderdelegate(_:)",
                "title": "func removeRenderDelegate(some TabletopGame.RenderDelegate)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Rendering the game",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/renderdelegate/onupdate(timeinterval:snapshot:visualstate:)",
                    "title": "func onUpdate(timeInterval: Double, snapshot: TableSnapshot, visualState: TableVisualState)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/renderdelegate/updaterootpose(_:)",
                    "title": "func updateRootPose(Pose3D)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopgame/renderdelegate",
                "title": "TabletopGame.RenderDelegate",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Getting the root entity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/entityrenderdelegate/root",
                    "title": "var root: Entity",
                    "type": "property"
                  },
                  {
                    "title": "Rendering the table",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/entityrenderdelegate/updaterootpose(_:)",
                    "title": "func updateRootPose(Pose3D)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/tabletopkit/entityrenderdelegate",
                "title": "EntityRenderDelegate",
                "type": "protocol"
              },
              {
                "title": "Supporting multiple players",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/attachnetworkcoordinator(_:)",
                "title": "func attachNetworkCoordinator(some TabletopNetworkSessionCoordinator)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/detachnetworkcoordinator()",
                "title": "func detachNetworkCoordinator()",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/multiplayerdelegate-swift.property",
                "title": "var multiplayerDelegate: (any TabletopGame.MultiplayerDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Joining games",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/multiplayerdelegate-swift.protocol/joinaccepted()",
                    "title": "func joinAccepted()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/multiplayerdelegate-swift.protocol/playerjoined(_:)",
                    "title": "func playerJoined(PlayerIdentifier)",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/multiplayerdelegate-swift.protocol/didrejectplayer(_:reason:)",
                    "title": "func didRejectPlayer(PlayerIdentifier, reason: any Error)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopgame/multiplayerdelegate-swift.protocol/multiplayersessionfailed(reason:)",
                    "title": "func multiplayerSessionFailed(reason: any Error)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopgame/multiplayerdelegate-swift.protocol",
                "title": "TabletopGame.MultiplayerDelegate",
                "type": "protocol"
              },
              {
                "title": "Enabling group activities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/coordinatewithsession(_:)",
                "title": "func coordinateWithSession(GroupSession<some GroupActivity>)",
                "type": "method"
              },
              {
                "title": "Drawing debug representations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopgame/debugdraw(options:)",
                "title": "func debugDraw(options: DebugDrawOptions)",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tabletopgame",
            "title": "TabletopGame",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a setup object from a table",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/init(tabletop:)-4cfut",
                "title": "init(tabletop: some Tabletop)",
                "type": "init"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/init(tabletop:)-7ima6",
                "title": "init(tabletop: some EntityTabletop)",
                "type": "init"
              },
              {
                "title": "Adding seats to place players",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(seat:)-a9qw",
                "title": "func add(seat: some TableSeat)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(seat:)-4alrc",
                "title": "func add(seat: some EntityTableSeat)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(seats:)-4068d",
                "title": "func add(seats: some Sequence)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(seats:)-4asnu",
                "title": "func add(seats: some Sequence)",
                "type": "method"
              },
              {
                "title": "Adding equipment for gameplay",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(equipment:)-29pef",
                "title": "func add(equipment: some Equipment)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(equipment:)-24tv6",
                "title": "func add(equipment: some EntityEquipment)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(equipment:)-4k6m6",
                "title": "func add(equipment: some Sequence)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(equipment:)-9syh2",
                "title": "func add(equipment: some Sequence)",
                "type": "method"
              },
              {
                "title": "Adding counters to keep score",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(counter:)",
                "title": "func add(counter: ScoreCounter)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesetup/add(counters:)",
                "title": "func add(counters: some Sequence<ScoreCounter>)",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tablesetup",
            "title": "TableSetup",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a round or rectangular table",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletop/shape",
                "title": "var shape: TabletopShape",
                "type": "property"
              },
              {
                "title": "Displaying the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletop/layoutchildren(for:visualstate:)",
                "title": "func layoutChildren(for: TableSnapshot, visualState: TableVisualState) -> any EquipmentLayout",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tabletop",
            "title": "Tabletop",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a round or rectangular table",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/entitytabletop/shape",
                "title": "var shape: TabletopShape",
                "type": "property"
              },
              {
                "title": "Displaying the tabletop",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/entitytabletop/entity",
                "title": "var entity: Entity",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/entitytabletop",
            "title": "EntityTabletop",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a round or rectangular table",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopshape/rectangular(center:width:height:thickness:in:)",
                "title": "static func rectangular(center: Point3D, width: Float, height: Float, thickness: Float, in: UnitLength) -> TabletopShape",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopshape/round(center:radius:thickness:in:)",
                "title": "static func round(center: Point3D, radius: Float, thickness: Float, in: UnitLength) -> TabletopShape",
                "type": "method"
              },
              {
                "title": "Creating a table that you render using an entity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopshape/rectangular(entity:)",
                "title": "static func rectangular(entity: Entity) -> TabletopShape",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopshape/round(entity:)",
                "title": "static func round(entity: Entity) -> TabletopShape",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tabletopshape",
            "title": "TabletopShape",
            "type": "struct"
          },
          {
            "title": "Seats",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the seat data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tableseat/initialstate",
                "title": "var initialState: Self.State",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tableseat/state",
                "title": "State",
                "type": "associatedtype"
              }
            ],
            "path": "/documentation/tabletopkit/tableseat",
            "title": "TableSeat",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Rendering the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/entitytableseat/entity",
                "title": "var entity: Entity",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/entitytableseat",
            "title": "EntityTableSeat",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating seat identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tableseatidentifier/init(_:)",
                "title": "init(Int)",
                "type": "init"
              },
              {
                "title": "Getting identifier values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tableseatidentifier/rawvalue",
                "title": "let rawValue: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/tableseatidentifier",
            "title": "TableSeatIdentifier",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a seat state structure",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tableseatstate/init(pose:context:)",
                "title": "init(pose: TableVisualState.Pose2D, context: UInt64)",
                "type": "init"
              },
              {
                "title": "Setting the data that syncs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tableseatstate/playerid",
                "title": "var playerID: Player.ID?",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tableseatstate/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/tableseatstate",
            "title": "TableSeatState",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Setting the data that syncs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/seatstate/context",
                "title": "var context: UInt64",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/seatstate/playerid",
                "title": "var playerID: PlayerIdentifier?",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/seatstate/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/seatstate",
            "title": "SeatState",
            "type": "protocol"
          },
          {
            "title": "Equipment",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Gettting the initial state of the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipment/initialstate",
                "title": "var initialState: Self.State",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/equipment/state",
                "title": "State",
                "type": "associatedtype"
              },
              {
                "title": "Displaying the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipment/layoutchildren(for:visualstate:)",
                "title": "func layoutChildren(for: TableSnapshot, visualState: TableVisualState) -> any EquipmentLayout",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/equipment/restingorientation(state:)",
                "title": "func restingOrientation(state: Self.State) -> Rotation3D",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/equipment",
            "title": "Equipment",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Displaying the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/entityequipment/entity",
                "title": "var entity: Entity",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/entityequipment",
            "title": "EntityEquipment",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating equipment identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentidentifier/init(_:)",
                "title": "init(Int)",
                "type": "init"
              },
              {
                "title": "Getting identifier values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentidentifier/rawvalue",
                "title": "let rawValue: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/equipmentidentifier",
            "title": "EquipmentIdentifier",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the parent equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentstate/parentid",
                "title": "var parentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "title": "Rendering the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentstate/boundingbox",
                "title": "var boundingBox: Rect3D",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/equipmentstate/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              },
              {
                "title": "Controlling the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentstate/lockedby",
                "title": "var lockedBy: PlayerIdentifier?",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/equipmentstate/seatcontrol",
                "title": "var seatControl: ControllingSeats",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/equipmentstate",
            "title": "EquipmentState",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating an equipment state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/baseequipmentstate/init(parentid:seatcontrol:pose:boundingbox:)",
                "title": "init(parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, boundingBox: Rect3D)",
                "type": "init"
              },
              {
                "path": "/documentation/tabletopkit/baseequipmentstate/init(parentid:seatcontrol:pose:entity:)",
                "title": "init(parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, entity: Entity)",
                "type": "init"
              },
              {
                "title": "Getting the parent equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/baseequipmentstate/parentid",
                "title": "var parentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "title": "Rendering the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/baseequipmentstate/boundingbox",
                "title": "var boundingBox: Rect3D",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/baseequipmentstate/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              },
              {
                "title": "Controlling the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/baseequipmentstate/lockedby",
                "title": "var lockedBy: PlayerIdentifier?",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/baseequipmentstate/seatcontrol",
                "title": "var seatControl: ControllingSeats",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/baseequipmentstate",
            "title": "BaseEquipmentState",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a card state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/init(faceup:parentid:seatcontrol:pose:boundingbox:)",
                "title": "init(faceUp: Bool, parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, boundingBox: Rect3D)",
                "type": "init"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/init(faceup:parentid:seatcontrol:pose:entity:)",
                "title": "init(faceUp: Bool, parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, entity: Entity)",
                "type": "init"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/facedown(parentid:seatcontrol:pose:boundingbox:)",
                "title": "static func faceDown(parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, boundingBox: Rect3D) -> CardState",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/facedown(parentid:seatcontrol:pose:entity:)",
                "title": "static func faceDown(parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, entity: Entity) -> CardState",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/faceup(parentid:seatcontrol:pose:boundingbox:)",
                "title": "static func faceUp(parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, boundingBox: Rect3D) -> CardState",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/faceup(parentid:seatcontrol:pose:entity:)",
                "title": "static func faceUp(parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, entity: Entity) -> CardState",
                "type": "method"
              },
              {
                "title": "Getting the card data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/faceup",
                "title": "var faceUp: Bool",
                "type": "property"
              },
              {
                "title": "Getting the parent equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/parentid",
                "title": "var parentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "title": "Rendering the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/boundingbox",
                "title": "var boundingBox: Rect3D",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              },
              {
                "title": "Controlling the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/lockedby",
                "title": "var lockedBy: PlayerIdentifier?",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/cardstate/seatcontrol",
                "title": "var seatControl: ControllingSeats",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/cardstate",
            "title": "CardState",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a die state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/diestate/init(value:parentid:seatcontrol:pose:boundingbox:)",
                "title": "init(value: Int, parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, boundingBox: Rect3D)",
                "type": "init"
              },
              {
                "path": "/documentation/tabletopkit/diestate/init(value:parentid:seatcontrol:pose:entity:)",
                "title": "init(value: Int, parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, entity: Entity)",
                "type": "init"
              },
              {
                "title": "Getting the die data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/diestate/value",
                "title": "var value: Int",
                "type": "property"
              },
              {
                "title": "Getting the parent equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/diestate/parentid",
                "title": "var parentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "title": "Rendering the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/diestate/boundingbox",
                "title": "var boundingBox: Rect3D",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/diestate/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              },
              {
                "title": "Controlling the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/diestate/lockedby",
                "title": "var lockedBy: PlayerIdentifier?",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/diestate/seatcontrol",
                "title": "var seatControl: ControllingSeats",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/diestate",
            "title": "DieState",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a die state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/init(rawvalue:parentid:seatcontrol:pose:boundingbox:)",
                "title": "init(rawValue: UInt64, parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, boundingBox: Rect3D)",
                "type": "init"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/init(rawvalue:parentid:seatcontrol:pose:entity:)",
                "title": "init(rawValue: UInt64, parentID: EquipmentIdentifier, seatControl: ControllingSeats, pose: TableVisualState.Pose2D, entity: Entity)",
                "type": "init"
              },
              {
                "title": "Getting the die data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/rawvalue",
                "title": "var rawValue: UInt64",
                "type": "property"
              },
              {
                "title": "Getting the parent equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/parentid",
                "title": "var parentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "title": "Rendering the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/boundingbox",
                "title": "var boundingBox: Rect3D",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              },
              {
                "title": "Controlling the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/lockedby",
                "title": "var lockedBy: PlayerIdentifier?",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/rawvaluestate/seatcontrol",
                "title": "var seatControl: ControllingSeats",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/rawvaluestate",
            "title": "RawValueState",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Seats",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/controllingseats/any",
                "title": "case any",
                "type": "case"
              },
              {
                "path": "/documentation/tabletopkit/controllingseats/restricted(_:)",
                "title": "case restricted([TableSeatIdentifier])",
                "type": "case"
              },
              {
                "path": "/documentation/tabletopkit/controllingseats/inherited",
                "title": "case inherited",
                "type": "case"
              },
              {
                "path": "/documentation/tabletopkit/controllingseats/current",
                "title": "case current",
                "type": "case"
              }
            ],
            "path": "/documentation/tabletopkit/controllingseats",
            "title": "ControllingSeats",
            "type": "enum"
          },
          {
            "title": "Equipment layout",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Laying out equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentlayout/planaroverlapping(layout:animationduration:)",
                "title": "static func planarOverlapping(layout: [EquipmentPose2D], animationDuration: Double?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/equipmentlayout/planarstacked(layout:animationduration:)",
                "title": "static func planarStacked(layout: [EquipmentPose2D], animationDuration: Double?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/equipmentlayout/volumetric(layout:animationduration:)",
                "title": "static func volumetric(layout: [EquipmentPose3D], animationDuration: Double?) -> Self",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/equipmentlayout",
            "title": "EquipmentLayout",
            "type": "protocol"
          },
          {
            "path": "/documentation/tabletopkit/defaultequipmentlayout",
            "title": "DefaultEquipmentLayout",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating an equipment pose object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentpose2d/init(id:pose:)",
                "title": "init(id: EquipmentIdentifier, pose: TableVisualState.Pose2D)",
                "type": "init"
              },
              {
                "title": "Getting equipment pose properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentpose2d/id",
                "title": "var id: EquipmentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/equipmentpose2d/pose",
                "title": "var pose: TableVisualState.Pose2D",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/equipmentpose2d",
            "title": "EquipmentPose2D",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating an equipment pose object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentpose3d/init(id:pose:)",
                "title": "init(id: EquipmentIdentifier, pose: Pose3D)",
                "type": "init"
              },
              {
                "title": "Getting equipment pose properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/equipmentpose3d/id",
                "title": "var id: EquipmentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/equipmentpose3d/pose",
                "title": "var pose: Pose3D",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/equipmentpose3d",
            "title": "EquipmentPose3D",
            "type": "struct"
          },
          {
            "title": "Score counters",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating score counters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/scorecounter/init(id:value:)",
                "title": "init(id: ScoreCounter.ID, value: Int64)",
                "type": "init"
              },
              {
                "title": "Getting score counter identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/scorecounter/id",
                "title": "var id: ScoreCounter.ID",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating score counter identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/scorecounter/identifier/init(_:)",
                    "title": "init(Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/scorecounter/identifier/rawvalue",
                    "title": "let rawValue: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/tabletopkit/scorecounter/identifier",
                "title": "ScoreCounter.Identifier",
                "type": "struct"
              },
              {
                "title": "Getting score counter values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/scorecounter/value",
                "title": "var value: Int64",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/scorecounter",
            "title": "ScoreCounter",
            "type": "struct"
          },
          {
            "title": "Players",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying players",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/player/id",
                "title": "var id: PlayerIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/player",
            "title": "Player",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating player identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/playeridentifier/init(uuid:)",
                "title": "init(uuid: UUID)",
                "type": "init"
              },
              {
                "title": "Getting identifier values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/playeridentifier/uuid",
                "title": "let uuid: UUID",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/playeridentifier",
            "title": "PlayerIdentifier",
            "type": "struct"
          },
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the player",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/playerid",
                "title": "var playerID: PlayerIdentifier?",
                "type": "property"
              },
              {
                "title": "Getting game-specific information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/context",
                "title": "var context: UInt64",
                "type": "property"
              },
              {
                "title": "Moving equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/moveequipment(_:childof:order:pose:context:)",
                "title": "static func moveEquipment(some Equipment, childOf: any Equipment, order: MoveEquipmentAction.Order?, pose: TableVisualState.Pose2D?, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/moveequipment(matching:childof:order:pose:context:)",
                "title": "static func moveEquipment(matching: EquipmentIdentifier, childOf: EquipmentIdentifier, order: MoveEquipmentAction.Order?, pose: TableVisualState.Pose2D?, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "title": "Changing equipment state properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:faceup:seatcontrol:pose:boundingbox:context:)",
                "title": "static func updateEquipment<E>(E, faceUp: Bool?, seatControl: ControllingSeats?, pose: TableVisualState.Pose2D?, boundingBox: Rect3D?, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:rawvalue:seatcontrol:pose:boundingbox:context:)",
                "title": "static func updateEquipment<E>(E, rawValue: UInt64?, seatControl: ControllingSeats?, pose: TableVisualState.Pose2D?, boundingBox: Rect3D?, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:seatcontrol:pose:boundingbox:context:)",
                "title": "static func updateEquipment<E>(E, seatControl: ControllingSeats?, pose: TableVisualState.Pose2D?, boundingBox: Rect3D?, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:state:context:)-6kawf",
                "title": "static func updateEquipment<E>(E, state: E.State, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:state:context:)-88v3m",
                "title": "static func updateEquipment<E>(E, state: E.State, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:state:context:)-8tmnn",
                "title": "static func updateEquipment<E>(E, state: E.State, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:state:context:)-j62v",
                "title": "static func updateEquipment<E>(E, state: E.State, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updateequipment(_:value:seatcontrol:pose:boundingbox:context:)",
                "title": "static func updateEquipment<E>(E, value: Int?, seatControl: ControllingSeats?, pose: TableVisualState.Pose2D?, boundingBox: Rect3D?, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "title": "Taking turns",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/setturn(forseat:context:)",
                "title": "static func setTurn(forSeat: some TableSeat, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/setturn(forseats:context:)-3msxi",
                "title": "static func setTurn(forSeats: some Sequence, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/setturn(forseats:context:)-4sgng",
                "title": "static func setTurn(forSeats: some Sequence<any TableSeat>, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/setturn(matching:context:)-6mq07",
                "title": "static func setTurn(matching: TableSeatIdentifier, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/setturn(matching:context:)-88ymv",
                "title": "static func setTurn(matching: [TableSeatIdentifier], context: UInt64) -> Self",
                "type": "method"
              },
              {
                "title": "Keeping score",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updatecounter(_:context:)",
                "title": "static func updateCounter(ScoreCounter, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/updatecounter(matching:value:context:)",
                "title": "static func updateCounter(matching: ScoreCounter.Identifier, value: Int64, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "title": "Creating bookmarks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/createbookmark(_:context:)",
                "title": "static func createBookmark(StateBookmark, context: UInt64) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopaction/createbookmark(id:context:)",
                "title": "static func createBookmark(id: StateBookmarkIdentifier, context: UInt64) -> Self",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tabletopaction",
            "title": "TabletopAction",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Getting the equipment in the action",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/moveequipmentaction/equipmentid",
                "title": "var equipmentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/moveequipmentaction/parentid",
                "title": "var parentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/moveequipmentaction/order-swift.property",
                "title": "var order: MoveEquipmentAction.Order?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Orders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/moveequipmentaction/order-swift.enum/first",
                    "title": "case first",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/tabletopkit/moveequipmentaction/order-swift.enum/last",
                    "title": "case last",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/tabletopkit/moveequipmentaction/order-swift.enum/before(_:)",
                    "title": "case before(EquipmentIdentifier)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/tabletopkit/moveequipmentaction/order-swift.enum/after(_:)",
                    "title": "case after(EquipmentIdentifier)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/tabletopkit/moveequipmentaction/order-swift.enum/atindex(_:)",
                    "title": "case atIndex(Int)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/tabletopkit/moveequipmentaction/order-swift.enum",
                "title": "MoveEquipmentAction.Order",
                "type": "enum"
              },
              {
                "title": "Getting the position of the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/moveequipmentaction/pose",
                "title": "var pose: TableVisualState.Pose2D?",
                "type": "property"
              },
              {
                "title": "Getting game-specific information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/moveequipmentaction/context",
                "title": "var context: UInt64",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/moveequipmentaction/playerid",
                "title": "var playerID: Player.ID?",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/moveequipmentaction",
            "title": "MoveEquipmentAction",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the equipment in the action",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/updateequipmentaction/equipmentid",
                "title": "var equipmentID: EquipmentIdentifier",
                "type": "property"
              },
              {
                "title": "Getting the state of the equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/updateequipmentaction/newstate",
                "title": "var newState: State?",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/updateequipmentaction/context",
                "title": "var context: UInt64",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/updateequipmentaction/playerid",
                "title": "var playerID: Player.ID?",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/updateequipmentaction",
            "title": "UpdateEquipmentAction",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the seats involved in a turn",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/setturnaction/seatidsinturn",
                "title": "var seatIDsInTurn: [TableSeatIdentifier]",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/setturnaction/context",
                "title": "var context: UInt64",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/setturnaction/playerid",
                "title": "var playerID: Player.ID?",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/setturnaction",
            "title": "SetTurnAction",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting counter information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/updatecounteraction/counterid",
                "title": "var counterID: ScoreCounter.Identifier",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/updatecounteraction/newvalue",
                "title": "var newValue: Int64",
                "type": "property"
              },
              {
                "title": "Getting game-specific information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/updatecounteraction/context",
                "title": "var context: UInt64",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/updatecounteraction/playerid",
                "title": "var playerID: Player.ID?",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/updatecounteraction",
            "title": "UpdateCounterAction",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the bookmark",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/createbookmarkaction/bookmark",
                "title": "var bookmark: StateBookmark",
                "type": "property"
              },
              {
                "title": "Getting game-specific information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/createbookmarkaction/context",
                "title": "var context: UInt64",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/createbookmarkaction",
            "title": "CreateBookmarkAction",
            "type": "struct"
          },
          {
            "title": "Interactions",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Performing actions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Taking actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/delegate/update(interaction:)",
                    "title": "func update(interaction: TabletopInteraction)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/delegate/shouldacceptinteraction(initialvalue:handoffvalue:)",
                    "title": "func shouldAcceptInteraction(initialValue: TabletopInteraction.Value, handoffValue: TabletopInteraction.Value?) -> TabletopInteraction.NewInteractionIntent",
                    "type": "method"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopinteraction/delegate",
                "title": "TabletopInteraction.Delegate",
                "type": "protocol"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/addaction(_:)",
                "title": "func addAction(some TabletopAction)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/addactions(_:)",
                "title": "func addActions(some Sequence<any TabletopAction>)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/toss(equipmentid:as:linearvelocity:angularvelocity:)",
                "title": "func toss(equipmentID: EquipmentIdentifier, as: TossableRepresentation, linearVelocity: Vector3D?, angularVelocity: Vector3D?)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/end()",
                "title": "func end()",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Getting the value of the interaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.property",
                "title": "var value: TabletopInteraction.Value",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting information about the equipment and game",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/startingequipmentid",
                    "title": "var startingEquipmentID: EquipmentIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/controlledequipmentid",
                    "title": "var controlledEquipmentID: EquipmentIdentifier",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/alloweddestinations",
                    "title": "var allowedDestinations: TabletopInteraction.AllowedDestinations",
                    "type": "property"
                  },
                  {
                    "title": "Getting the phases",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesturephase",
                    "title": "var gesturePhase: TabletopInteraction.Value.Phase?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/phase-swift.property",
                    "title": "var phase: TabletopInteraction.Value.Phase",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/phase-swift.enum/cancelled",
                        "title": "case cancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/phase-swift.enum/ended",
                        "title": "case ended",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/phase-swift.enum/started",
                        "title": "case started",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/phase-swift.enum/update",
                        "title": "case update",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/phase-swift.enum",
                    "title": "TabletopInteraction.Value.Phase",
                    "type": "enum"
                  },
                  {
                    "title": "Getting the proposed locations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/proposeddestination",
                    "title": "var proposedDestination: TabletopInteraction.Destination?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/proposedflip",
                    "title": "var proposedFlip: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Getting the position and location",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/pose",
                    "title": "var pose: Pose3D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/locationontable",
                    "title": "var locationOnTable: TableVisualState.Point2D?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/endlocation",
                    "title": "var endLocation: Point3D?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/endlocationontable",
                    "title": "var endLocationOnTable: TableVisualState.Point2D?",
                    "type": "property"
                  },
                  {
                    "title": "Getting identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/id",
                    "title": "var id: TabletopInteraction.Value.ID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/playerid",
                    "title": "var playerID: PlayerIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/chirality-swift.property",
                        "title": "var chirality: TabletopInteraction.Value.Gesture.Chirality?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/kind-swift.property",
                        "title": "var kind: TabletopInteraction.Value.Gesture.Kind",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/phase",
                        "title": "var phase: TabletopInteraction.Value.Phase",
                        "type": "property"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/chirality-swift.enum/left",
                            "title": "case left",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/chirality-swift.enum/right",
                            "title": "case right",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/chirality-swift.enum",
                        "title": "TabletopInteraction.Value.Gesture.Chirality",
                        "type": "enum"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/kind-swift.enum/directpinch",
                            "title": "case directPinch",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/kind-swift.enum/indirectpinch",
                            "title": "case indirectPinch",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct/kind-swift.enum",
                        "title": "TabletopInteraction.Value.Gesture.Kind",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.struct",
                    "title": "TabletopInteraction.Value.Gesture",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/configuration",
                    "title": "var configuration: TabletopInteraction.Configuration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct/gesture-swift.property",
                    "title": "var gesture: TabletopInteraction.Value.Gesture?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopinteraction/value-swift.struct",
                "title": "TabletopInteraction.Value",
                "type": "struct"
              },
              {
                "title": "Setting information about the equipment and pose",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/setcontrolledequipment(matching:)",
                "title": "func setControlledEquipment(matching: EquipmentIdentifier)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/setpose(_:)",
                "title": "func setPose(Pose3D)",
                "type": "method"
              },
              {
                "title": "Managing the interaction destination",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/tabletopkit/tabletopinteraction/setalloweddestinations(_:)",
                "title": "func setAllowedDestinations(TabletopInteraction.AllowedDestinations)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Destinations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/alloweddestinations/any",
                    "title": "case any",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/alloweddestinations/restricted(_:)",
                    "title": "case restricted([EquipmentIdentifier])",
                    "type": "case"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopinteraction/alloweddestinations",
                "title": "TabletopInteraction.AllowedDestinations",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Getting the destination equipment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/destination/equipmentid",
                    "title": "let equipmentID: EquipmentIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Getting the interaction pose",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/destination/pose",
                    "title": "let pose: TableVisualState.Pose2D",
                    "type": "property"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopinteraction/destination",
                "title": "TabletopInteraction.Destination",
                "type": "struct"
              },
              {
                "title": "Getting the interaction identifier",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/identifier/init(_:)",
                    "title": "init(Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/identifier/rawvalue",
                    "title": "let rawValue: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopinteraction/identifier",
                "title": "TabletopInteraction.Identifier",
                "type": "struct"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/configuration/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/configuration/init(alloweddestinations:)",
                    "title": "init(allowedDestinations: TabletopInteraction.AllowedDestinations)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/configuration/alloweddestinations",
                    "title": "var allowedDestinations: TabletopInteraction.AllowedDestinations",
                    "type": "property"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopinteraction/configuration",
                "title": "TabletopInteraction.Configuration",
                "type": "struct"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopinteraction/setconfiguration(_:)",
                "title": "func setConfiguration(TabletopInteraction.Configuration)",
                "type": "method"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/newinteractionintent/acceptwithconfiguration(_:)",
                    "title": "case acceptWithConfiguration(TabletopInteraction.Configuration)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/tabletopkit/tabletopinteraction/newinteractionintent/reject",
                    "title": "case reject",
                    "type": "case"
                  }
                ],
                "path": "/documentation/tabletopkit/tabletopinteraction/newinteractionintent",
                "title": "TabletopInteraction.NewInteractionIntent",
                "type": "enum"
              }
            ],
            "path": "/documentation/tabletopkit/tabletopinteraction",
            "title": "TabletopInteraction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating geometric shapes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tossablerepresentation/cube(height:in:restitution:)",
                "title": "static func cube(height: Float, in: UnitLength, restitution: Float?) -> TossableRepresentation",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tossablerepresentation/decahedron(height:in:restitution:)",
                "title": "static func decahedron(height: Float, in: UnitLength, restitution: Float?) -> TossableRepresentation",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tossablerepresentation/dodecahedron(height:in:restitution:)",
                "title": "static func dodecahedron(height: Float, in: UnitLength, restitution: Float?) -> TossableRepresentation",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tossablerepresentation/icosahedron(height:in:restitution:)",
                "title": "static func icosahedron(height: Float, in: UnitLength, restitution: Float?) -> TossableRepresentation",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tossablerepresentation/octahedron(height:in:restitution:)",
                "title": "static func octahedron(height: Float, in: UnitLength, restitution: Float?) -> TossableRepresentation",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tossablerepresentation/sphere(radius:in:restitution:)",
                "title": "static func sphere(radius: Float, in: UnitLength, restitution: Float?) -> TossableRepresentation",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tossablerepresentation/tetrahedron(height:in:restitution:)",
                "title": "static func tetrahedron(height: Float, in: UnitLength, restitution: Float?) -> TossableRepresentation",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tossablerepresentation",
            "title": "TossableRepresentation",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the table entity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/tableentity",
                "title": "var tableEntity: Entity?",
                "type": "property"
              },
              {
                "title": "Getting information on seats",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/turn",
                "title": "var turn: Set<TableSeatIdentifier>",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/seats",
                "title": "var seats: [any TableSeat]",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/seatids",
                "title": "var seatIDs: [TableSeatIdentifier]",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/seat(of:for:)",
                "title": "func seat<S>(of: S.Type, for: Player) -> (S, S.State)?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/seat(of:matching:)",
                "title": "func seat<S>(of: S.Type, matching: TableSeatIdentifier) -> (S, S.State)?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/seats(of:)",
                "title": "func seats<S>(of: S.Type) -> [(S, S.State)]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/state(for:)",
                "title": "func state<E>(for: E) -> E.State",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/state(matching:)-ear2",
                "title": "func state(matching: TableSeatIdentifier) -> (any SeatState)?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/entity(forseat:)",
                "title": "func entity(forSeat: some EntityTableSeat) -> Entity?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/entity(matching:)-7ps7s",
                "title": "func entity(matching: TableSeatIdentifier) -> Entity?",
                "type": "method"
              },
              {
                "title": "Getting cursors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/cursors",
                "title": "var cursors: [TableCursor]",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/cursor(matching:)",
                "title": "func cursor(matching: TableCursorIdentifier) -> TableCursor?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/cursors(forplayer:)",
                "title": "func cursors(forPlayer: Player) -> [TableCursor]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/cursors(hovering:)",
                "title": "func cursors(hovering: EquipmentIdentifier) -> [TableCursor]",
                "type": "method"
              },
              {
                "title": "Getting information on equipment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipment(of:)",
                "title": "func equipment<E>(of: E.Type) -> [(E, E.State)]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipment(of:childrenof:)-4z4s1",
                "title": "func equipment<E>(of: E.Type, childrenOf: some Equipment) -> [(E, E.State)]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipment(of:childrenof:)-5w137",
                "title": "func equipment<E>(of: E.Type, childrenOf: EquipmentIdentifier) -> [(E, E.State)]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipment(of:matching:)-7ai0c",
                "title": "func equipment<E>(of: E.Type, matching: some Sequence<EquipmentIdentifier>) -> [(E, E.State)]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipment(of:matching:)-8qve2",
                "title": "func equipment<E>(of: E.Type, matching: EquipmentIdentifier) -> (E, E.State)?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipmentids()",
                "title": "func equipmentIDs() -> [EquipmentIdentifier]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipmentids(childrenof:)-432sk",
                "title": "func equipmentIDs(childrenOf: some Equipment) -> [EquipmentIdentifier]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/equipmentids(childrenof:)-f1sp",
                "title": "func equipmentIDs(childrenOf: EquipmentIdentifier) -> [EquipmentIdentifier]",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/state(matching:)-u35k",
                "title": "func state(matching: EquipmentIdentifier) -> (any EquipmentState)?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/entity(matching:)-vb9w",
                "title": "func entity(matching: EquipmentIdentifier) -> Entity?",
                "type": "method"
              },
              {
                "title": "Getting score counters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/counters",
                "title": "var counters: [ScoreCounter]",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/counter(matching:)",
                "title": "func counter(matching: ScoreCounter.ID) -> ScoreCounter?",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablesnapshot/entity(forequipment:)",
                "title": "func entity(forEquipment: some EntityEquipment) -> Entity?",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tablesnapshot",
            "title": "TableSnapshot",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Representing collision states",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/contacts",
                "title": "var contacts: some Sequence<TableVisualState.Contact>",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/contacts(of:)",
                "title": "func contacts<E>(of: E.Type) -> some Sequence<TableVisualState.Contact>\n",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting collision objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/contact/collider",
                    "title": "let collider: any Equipment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/contact/collidedwithequipment",
                    "title": "let collidedWithEquipment: EquipmentIdentifier?",
                    "type": "property"
                  },
                  {
                    "title": "Getting collision metrics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/contact/impulse",
                    "title": "let impulse: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/contact/normal",
                    "title": "let normal: Vector3D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/contact/position",
                    "title": "let position: Point3D",
                    "type": "property"
                  }
                ],
                "path": "/documentation/tabletopkit/tablevisualstate/contact",
                "title": "TableVisualState.Contact",
                "type": "struct"
              },
              {
                "title": "Representing 2D states",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating 2D point states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/init(projecting:)",
                    "title": "init(projecting: Point3D)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/init(x:z:)",
                    "title": "init(x: Double, z: Double)",
                    "type": "init"
                  },
                  {
                    "title": "Getting 2D point properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/x",
                    "title": "var x: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/z",
                    "title": "var z: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/zero",
                    "title": "static let zero: TableVisualState.Point2D",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tablevisualstate/point2d/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tablevisualstate/point2d/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tablevisualstate/point2d/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/tabletopkit/tablevisualstate/point2d",
                "title": "TableVisualState.Point2D",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating 2D pose objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/init(position:rotation:)",
                    "title": "init(position: TableVisualState.Point2D, rotation: Angle2D)",
                    "type": "init"
                  },
                  {
                    "title": "Getting 2D pose properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/position",
                    "title": "var position: TableVisualState.Point2D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/rotation",
                    "title": "var rotation: Angle2D",
                    "type": "property"
                  },
                  {
                    "title": "Getting the identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/identity",
                    "title": "static var identity: TableVisualState.Pose2D",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/init(projecting:)",
                    "title": "init(projecting: Pose3D)",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tablevisualstate/pose2d/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tablevisualstate/pose2d/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tablevisualstate/pose2d/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/tabletopkit/tablevisualstate/pose2d",
                "title": "TableVisualState.Pose2D",
                "type": "struct"
              },
              {
                "title": "Representing 3D states",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating 3D rectangle states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/init(pose:size:)",
                    "title": "init(pose: Pose3D, size: Size3D)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/init(rotation:rect:)",
                    "title": "init(rotation: Rotation3D, rect: Rect3D)",
                    "type": "init"
                  },
                  {
                    "title": "Getting 3D rectangle properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/pose",
                    "title": "var pose: Pose3D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/size",
                    "title": "var size: Size3D",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/tabletopkit/tablevisualstate/orientedrect3d",
                "title": "TableVisualState.OrientedRect3D",
                "type": "struct"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/bounds(forequipment:)",
                "title": "func bounds(forEquipment: some Equipment) -> TableVisualState.OrientedRect3D?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/bounds(matching:)",
                "title": "func bounds(matching: EquipmentIdentifier) -> TableVisualState.OrientedRect3D?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/goalbounds(forequipment:)",
                "title": "func goalBounds(forEquipment: some Equipment) -> TableVisualState.OrientedRect3D?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/goalbounds(matching:)",
                "title": "func goalBounds(matching: EquipmentIdentifier) -> TableVisualState.OrientedRect3D?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/tablebounds",
                "title": "var tableBounds: TableVisualState.OrientedRect3D?",
                "type": "property"
              },
              {
                "title": "Representing seat states",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/pose(forseat:)",
                "title": "func pose(forSeat: some TableSeat) -> Pose3D?",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tablevisualstate/pose(matching:)",
                "title": "func pose(matching: TableSeatIdentifier) -> Pose3D?",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tablevisualstate",
            "title": "TableVisualState",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the associated interaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablecursor/interactionid",
                "title": "var interactionID: TabletopInteraction.Identifier",
                "type": "property"
              },
              {
                "title": "Getting the player performing the interaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablecursor/playerid",
                "title": "var playerID: PlayerIdentifier",
                "type": "property"
              },
              {
                "title": "Getting information about the equipment in the interaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablecursor/controlledequipmentpose",
                "title": "let controlledEquipmentPose: EquipmentPose3D",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tablecursor/hovering",
                "title": "var hovering: TabletopInteraction.Destination?",
                "type": "property"
              },
              {
                "title": "Getting the cursor identifier",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablecursor/id",
                "title": "var id: TableCursor.ID",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/tablecursor",
            "title": "TableCursor",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating cursor identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablecursoridentifier/init(_:)",
                "title": "init(Int)",
                "type": "init"
              },
              {
                "title": "Getting identifier values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tablecursoridentifier/rawvalue",
                "title": "let rawValue: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/tablecursoridentifier",
            "title": "TableCursorIdentifier",
            "type": "struct"
          },
          {
            "title": "Bookmarks",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializing bookmarks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/statebookmark/init(id:)",
                "title": "init(id: StateBookmark.ID)",
                "type": "init"
              }
            ],
            "path": "/documentation/tabletopkit/statebookmark",
            "title": "StateBookmark",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating bookmark identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/statebookmarkidentifier/init(_:)",
                "title": "init(Int)",
                "type": "init"
              },
              {
                "title": "Getting identifier values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/statebookmarkidentifier/rawvalue",
                "title": "let rawValue: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/statebookmarkidentifier",
            "title": "StateBookmarkIdentifier",
            "type": "struct"
          },
          {
            "title": "Multiplayer network session",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Joining multiplayer games",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/start()",
                "title": "func start()",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/join()",
                "title": "func join()",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/leave()",
                "title": "func leave()",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/terminate()",
                "title": "func terminate()",
                "type": "method"
              },
              {
                "title": "Changing the arbiter role between players",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/becomearbiter()",
                "title": "func becomeArbiter()",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/followarbiter(_:)",
                "title": "func followArbiter(TabletopNetworkSession<Coordinator>.Peer)",
                "type": "method"
              },
              {
                "title": "Managing network session peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/peers",
                "title": "var peers: Set<TabletopNetworkSession<Coordinator>.Peer>",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/addpeer(_:)",
                "title": "func addPeer(TabletopNetworkSession<Coordinator>.Peer)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/removepeer(_:)",
                "title": "func removePeer(TabletopNetworkSession<Coordinator>.Peer)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/peer",
                "title": "TabletopNetworkSession.Peer",
                "type": "typealias"
              },
              {
                "title": "Receiving messages from peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksession/processincomingmessage(_:from:)",
                "title": "func processIncomingMessage(Data, from: TabletopNetworkSession<Coordinator>.Peer)",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tabletopnetworksession",
            "title": "TabletopNetworkSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Starting network sessions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator/coordinatewithsession(_:)",
                "title": "func coordinateWithSession(Self.NetworkSession)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator/networksession",
                "title": "TabletopNetworkSessionCoordinator.NetworkSession",
                "type": "typealias"
              },
              {
                "title": "Managing network session peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator/peerjoinedgame(_:)",
                "title": "func peerJoinedGame(Self.Peer.ID)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator/peerleftgame(_:)",
                "title": "func peerLeftGame(Self.Peer.ID)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator/peer",
                "title": "Peer",
                "type": "associatedtype"
              },
              {
                "title": "Sending messages between peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator/sendmessage(_:to:completion:)",
                "title": "func sendMessage(Data, to: Set<Self.Peer>, completion: (TabletopSendMessageResult) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator/sendmessageunreliably(_:to:completion:)",
                "title": "func sendMessageUnreliably(Data, to: Set<Self.Peer>, completion: (TabletopSendMessageResult) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/tabletopkit/tabletopnetworksessioncoordinator",
            "title": "TabletopNetworkSessionCoordinator",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Message results",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/tabletopsendmessageresult/success",
                "title": "case success",
                "type": "case"
              },
              {
                "path": "/documentation/tabletopkit/tabletopsendmessageresult/failure",
                "title": "case failure",
                "type": "case"
              }
            ],
            "path": "/documentation/tabletopkit/tabletopsendmessageresult",
            "title": "TabletopSendMessageResult",
            "type": "enum"
          },
          {
            "title": "Debugging",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Setting the types of items",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/tabletopkit/debugdrawoptions/drawequipment",
                "title": "static let drawEquipment: DebugDrawOptions",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/debugdrawoptions/drawseats",
                "title": "static let drawSeats: DebugDrawOptions",
                "type": "property"
              },
              {
                "path": "/documentation/tabletopkit/debugdrawoptions/drawtable",
                "title": "static let drawTable: DebugDrawOptions",
                "type": "property"
              }
            ],
            "path": "/documentation/tabletopkit/debugdrawoptions",
            "title": "DebugDrawOptions",
            "type": "struct"
          }
        ],
        "path": "/documentation/tabletopkit",
        "title": "TabletopKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
