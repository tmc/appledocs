{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/developing-a-widgetkit-strategy",
            "title": "Developing a WidgetKit strategy",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/updates/activitykit",
            "title": "ActivityKit updates",
            "type": "article"
          },
          {
            "title": "Live Activity implementation",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/activitykit/displaying-live-data-with-live-activities",
            "title": "Displaying live data with Live Activities",
            "type": "article"
          },
          {
            "path": "/documentation/activitykit/starting-and-updating-live-activities-with-activitykit-push-notifications",
            "title": "Starting and updating Live Activities with ActivityKit push notifications",
            "type": "article"
          },
          {
            "path": "/documentation/activitykit/adding-accessible-descriptions-to-widgets-and-live-activities",
            "title": "Adding accessible descriptions to widgets and Live Activities",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/emoji-rangers-supporting-live-activities-interactivity-and-animations",
            "title": "Emoji Rangers: Supporting Live Activities, interactivity, and animations",
            "type": "sampleCode"
          },
          {
            "title": "Widget extensions",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit",
            "title": "WidgetKit",
            "type": "module"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/creating-a-widget-extension",
            "title": "Creating a widget extension",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/animating-data-updates-in-widgets-and-live-activities",
            "title": "Animating data updates in widgets and Live Activities",
            "type": "article"
          },
          {
            "title": "User interface",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/creating-views-for-widgets-live-activities-and-watch-complications",
            "title": "Creating views for widgets, Live Activities, and watch complications",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/linking-to-specific-app-scenes-from-your-widget-or-live-activity",
            "title": "Linking to specific app scenes from your widget or Live Activity",
            "type": "article"
          }
        ],
        "path": "/documentation/activitykit",
        "title": "ActivityKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/developing-a-widgetkit-strategy",
            "title": "Developing a WidgetKit strategy",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/updates/activitykit",
            "title": "ActivityKit updates",
            "type": "article"
          },
          {
            "title": "Live Activity implementation",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/activitykit/displaying-live-data-with-live-activities",
            "title": "Displaying live data with Live Activities",
            "type": "article"
          },
          {
            "path": "/documentation/activitykit/starting-and-updating-live-activities-with-activitykit-push-notifications",
            "title": "Starting and updating Live Activities with ActivityKit push notifications",
            "type": "article"
          },
          {
            "path": "/documentation/activitykit/adding-accessible-descriptions-to-widgets-and-live-activities",
            "title": "Adding accessible descriptions to widgets and Live Activities",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/emoji-rangers-supporting-live-activities-interactivity-and-animations",
            "title": "Emoji Rangers: Supporting Live Activities, interactivity, and animations",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nssupportsliveactivities",
            "title": "NSSupportsLiveActivities",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nssupportsliveactivitiesfrequentupdates",
            "title": "NSSupportsLiveActivitiesFrequentUpdates",
            "type": "typealias"
          },
          {
            "title": "Widget extensions",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit",
            "title": "WidgetKit",
            "type": "module"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/creating-a-widget-extension",
            "title": "Creating a widget extension",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/animating-data-updates-in-widgets-and-live-activities",
            "title": "Animating data updates in widgets and Live Activities",
            "type": "article"
          },
          {
            "title": "User interface",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/creating-views-for-widgets-live-activities-and-watch-complications",
            "title": "Creating views for widgets, Live Activities, and watch complications",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/linking-to-specific-app-scenes-from-your-widget-or-live-activity",
            "title": "Linking to specific app scenes from your widget or Live Activity",
            "type": "article"
          }
        ],
        "path": "/documentation/activitykit",
        "title": "ActivityKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/developing-a-widgetkit-strategy",
            "title": "Developing a WidgetKit strategy",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/updates/activitykit",
            "title": "ActivityKit updates",
            "type": "article"
          },
          {
            "title": "Live Activity implementation",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/activitykit/displaying-live-data-with-live-activities",
            "title": "Displaying live data with Live Activities",
            "type": "article"
          },
          {
            "path": "/documentation/activitykit/starting-and-updating-live-activities-with-activitykit-push-notifications",
            "title": "Starting and updating Live Activities with ActivityKit push notifications",
            "type": "article"
          },
          {
            "path": "/documentation/activitykit/adding-accessible-descriptions-to-widgets-and-live-activities",
            "title": "Adding accessible descriptions to widgets and Live Activities",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Starting a Live Activity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/request(attributes:content:pushtype:)",
                "title": "static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType?) throws -> Activity<Attributes>",
                "type": "method"
              },
              {
                "path": "/documentation/activitykit/activity/attributes",
                "title": "let attributes: Attributes",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Dynamic content",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityattributes/contentstate",
                    "title": "ContentState",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityattributes/previewcontext(_:isstale:viewkind:)",
                    "title": "func previewContext(Self.ContentState, isStale: Bool, viewKind: ActivityPreviewViewKind) -> some View",
                    "type": "method"
                  }
                ],
                "path": "/documentation/activitykit/activityattributes",
                "title": "ActivityAttributes",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Style",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystyle/standard",
                    "title": "case standard",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activitystyle/transient",
                    "title": "case transient",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystyle/==(_:_:)",
                    "title": "static func == (ActivityStyle, ActivityStyle) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystyle/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystyle/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activitystyle/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/activitykit/activitystyle/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activitystyle",
                "title": "ActivityStyle",
                "type": "enum"
              },
              {
                "path": "/documentation/activitykit/activity/content",
                "title": "var content: ActivityContent<Activity<Attributes>.ContentState>",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Describing a Live Activity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitycontent/init(state:staledate:relevancescore:)",
                    "title": "init(state: State, staleDate: Date?, relevanceScore: Double)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/activitykit/activitycontent/state",
                    "title": "let state: State",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activitycontent/staledate",
                    "title": "let staleDate: Date?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activitycontent/relevancescore",
                    "title": "let relevanceScore: Double",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activitycontent/description",
                        "title": "var description: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/activitykit/activitycontent/customstringconvertible-implementations",
                    "title": "CustomStringConvertible Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activitycontent",
                "title": "ActivityContent",
                "type": "struct"
              },
              {
                "path": "/documentation/activitykit/activity/contentstate-swift.typealias",
                "title": "Activity.ContentState",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Supporting ActivityKit push notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/pushtype/token",
                    "title": "static var token: PushType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/pushtype/channel(_:)",
                    "title": "static func channel(String) -> PushType",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/pushtype/==(_:_:)",
                    "title": "static func == (PushType, PushType) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/pushtype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/activitykit/pushtype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/pushtype",
                "title": "PushType",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Error codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/attributestoolarge",
                    "title": "case attributesTooLarge",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/globalmaximumexceeded",
                    "title": "case globalMaximumExceeded",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/malformedactivityidentifier",
                    "title": "case malformedActivityIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/missingprocessidentifier",
                    "title": "case missingProcessIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/persistencefailure",
                    "title": "case persistenceFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/reconnectnotpermitted",
                    "title": "case reconnectNotPermitted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/targetmaximumexceeded",
                    "title": "case targetMaximumExceeded",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/unentitled",
                    "title": "case unentitled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/unsupportedtarget",
                    "title": "case unsupportedTarget",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/visibility",
                    "title": "case visibility",
                    "type": "case"
                  },
                  {
                    "title": "Getting error information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/failurereason",
                    "title": "var failureReason: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/recoverysuggestion",
                    "title": "var recoverySuggestion: String?",
                    "type": "property"
                  },
                  {
                    "title": "Protocol confirmation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/errorcode",
                    "title": "var errorCode: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/==(_:_:)",
                    "title": "static func == (ActivityAuthorizationError, ActivityAuthorizationError) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationerror/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationerror/erroruserinfo",
                        "title": "var errorUserInfo: [String : Any]",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationerror/errordomain-8zlvi",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/activitykit/activityauthorizationerror/customnserror-implementations",
                    "title": "CustomNSError Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationerror/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/activitykit/activityauthorizationerror/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationerror/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/activitykit/activityauthorizationerror/error-implementations",
                    "title": "Error Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationerror/errordescription",
                        "title": "var errorDescription: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationerror/helpanchor",
                        "title": "var helpAnchor: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/activitykit/activityauthorizationerror/localizederror-implementations",
                    "title": "LocalizedError Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activityauthorizationerror",
                "title": "ActivityAuthorizationError",
                "type": "enum"
              },
              {
                "path": "/documentation/activitykit/activity/request(attributes:content:pushtype:style:)",
                "title": "static func request(attributes: Attributes, content: ActivityContent<Activity<Attributes>.ContentState>, pushType: PushType?, style: ActivityStyle) throws -> Activity<Attributes>",
                "type": "method"
              },
              {
                "title": "Updating a Live Activity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/update(_:)",
                "title": "func update(ActivityContent<Activity<Attributes>.ContentState>) async",
                "type": "method"
              },
              {
                "path": "/documentation/activitykit/activity/update(_:alertconfiguration:)",
                "title": "func update(ActivityContent<Activity<Attributes>.ContentState>, alertConfiguration: AlertConfiguration?) async",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Configuring Live Activity alerts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/alertconfiguration/init(title:body:sound:)",
                    "title": "init(title: LocalizedStringResource, body: LocalizedStringResource, sound: AlertConfiguration.AlertSound)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/activitykit/alertconfiguration/title",
                    "title": "var title: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/alertconfiguration/body",
                    "title": "var body: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/alertconfiguration/sound",
                    "title": "var sound: AlertConfiguration.AlertSound",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring the alert sound",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/alertconfiguration/alertsound/named(_:)",
                        "title": "static func named(String) -> AlertConfiguration.AlertSound",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/alertconfiguration/alertsound/default",
                        "title": "static var `default`: AlertConfiguration.AlertSound",
                        "type": "property"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/alertconfiguration/alertsound/==(_:_:)",
                        "title": "static func == (AlertConfiguration.AlertSound, AlertConfiguration.AlertSound) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/alertconfiguration/alertsound/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/activitykit/alertconfiguration/alertsound/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/activitykit/alertconfiguration/alertsound",
                    "title": "AlertConfiguration.AlertSound",
                    "type": "struct"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/alertconfiguration/==(_:_:)",
                    "title": "static func == (AlertConfiguration, AlertConfiguration) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/alertconfiguration/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/activitykit/alertconfiguration/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/alertconfiguration",
                "title": "AlertConfiguration",
                "type": "struct"
              },
              {
                "deprecated": true,
                "path": "/documentation/activitykit/activity/update(using:)",
                "title": "func update(using: Activity<Attributes>.ContentState) async",
                "type": "method"
              },
              {
                "path": "/documentation/activitykit/activity/update(_:alertconfiguration:timestamp:)",
                "title": "func update(ActivityContent<Activity<Attributes>.ContentState>, alertConfiguration: AlertConfiguration?, timestamp: Date) async",
                "type": "method"
              },
              {
                "title": "Ending a Live Activity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/end(_:dismissalpolicy:)",
                "title": "func end(ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy) async",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Dismissing a Live Activity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityuidismissalpolicy/default",
                    "title": "static let `default`: ActivityUIDismissalPolicy",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activityuidismissalpolicy/immediate",
                    "title": "static let immediate: ActivityUIDismissalPolicy",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activityuidismissalpolicy/after(_:)",
                    "title": "static func after(Date) -> ActivityUIDismissalPolicy",
                    "type": "method"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityuidismissalpolicy/==(_:_:)",
                    "title": "static func == (ActivityUIDismissalPolicy, ActivityUIDismissalPolicy) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityuidismissalpolicy/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/activitykit/activityuidismissalpolicy/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activityuidismissalpolicy",
                "title": "ActivityUIDismissalPolicy",
                "type": "struct"
              },
              {
                "path": "/documentation/activitykit/activity/end(_:dismissalpolicy:timestamp:)",
                "title": "func end(ActivityContent<Activity<Attributes>.ContentState>?, dismissalPolicy: ActivityUIDismissalPolicy, timestamp: Date) async",
                "type": "method"
              },
              {
                "title": "Observing Live Activity content changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/contentupdates-swift.property",
                "title": "var contentUpdates: Activity<Attributes>.ContentUpdates",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/iterator/next()",
                        "title": "func next() async -> Activity<Attributes>.ContentUpdates.Element?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/iterator/element",
                        "title": "Activity.ContentUpdates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activity/contentupdates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/contentupdates-swift.struct/iterator",
                    "title": "Activity.ContentUpdates.Iterator",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/contentupdates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> Activity<Attributes>.ContentUpdates.Iterator",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/contentupdates-swift.struct/asynciterator",
                    "title": "Activity.ContentUpdates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/activitykit/activity/contentupdates-swift.struct/element",
                    "title": "Activity.ContentUpdates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/compactmap(_:)-3evj7",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/compactmap(_:)-3h804",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/flatmap(_:)-3borw",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/flatmap(_:)-5b4y4",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/flatmap(_:)-7thmo",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/flatmap(_:)-oabg",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/map(_:)-2h564",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/map(_:)-71j1s",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentupdates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/contentupdates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activity/contentupdates-swift.struct",
                "title": "Activity.ContentUpdates",
                "type": "struct"
              },
              {
                "title": "Observing the Live Activity life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/activitystate",
                "title": "var activityState: ActivityState",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Live Activity states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/active",
                    "title": "case active",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/dismissed",
                    "title": "case dismissed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/stale",
                    "title": "case stale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/ended",
                    "title": "case ended",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/==(_:_:)",
                    "title": "static func == (ActivityState, ActivityState) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/activitykit/activitystate/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activitystate/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/activitykit/activitystate/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activitystate",
                "title": "ActivityState",
                "type": "enum"
              },
              {
                "path": "/documentation/activitykit/activity/activitystateupdates-swift.property",
                "title": "var activityStateUpdates: Activity<Attributes>.ActivityStateUpdates",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an iterator",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> Activity<Attributes>.ActivityStateUpdates.Iterator",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/iterator/next()",
                        "title": "func next() async -> Activity<Attributes>.ActivityStateUpdates.Element?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/iterator/element",
                        "title": "Activity.ActivityStateUpdates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/iterator",
                    "title": "Activity.ActivityStateUpdates.Iterator",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/element",
                    "title": "Activity.ActivityStateUpdates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/asynciterator",
                    "title": "Activity.ActivityStateUpdates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/compactmap(_:)-5yil8",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/compactmap(_:)-9hd9f",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/contains(_:)",
                        "title": "func contains(Self.Element) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/flatmap(_:)-3yr22",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/flatmap(_:)-8c6u6",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/flatmap(_:)-9xr7j",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/flatmap(_:)-uy1h",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/map(_:)-2zlx",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/map(_:)-5dpe2",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activity/activitystateupdates-swift.struct",
                "title": "Activity.ActivityStateUpdates",
                "type": "struct"
              },
              {
                "title": "Using ActivityKit push notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/pushtoken",
                "title": "var pushToken: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/activitykit/activity/pushtokenupdates-swift.property",
                "title": "var pushTokenUpdates: Activity<Attributes>.PushTokenUpdates",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an iterator",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> Activity<Attributes>.PushTokenUpdates.Iterator",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/iterator/next()",
                        "title": "func next() async -> Activity<Attributes>.PushTokenUpdates.Element?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/iterator/element",
                        "title": "Activity.PushTokenUpdates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/iterator",
                    "title": "Activity.PushTokenUpdates.Iterator",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/element",
                    "title": "Activity.PushTokenUpdates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/asynciterator",
                    "title": "Activity.PushTokenUpdates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/compactmap(_:)-3e6k6",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/compactmap(_:)-41orc",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/contains(_:)",
                        "title": "func contains(Self.Element) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/flatmap(_:)-2ivf0",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/flatmap(_:)-6ewyf",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/flatmap(_:)-8g7mq",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/flatmap(_:)-9fau8",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/map(_:)-1jebs",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/map(_:)-1rmpg",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activity/pushtokenupdates-swift.struct",
                "title": "Activity.PushTokenUpdates",
                "type": "struct"
              },
              {
                "path": "/documentation/activitykit/activity/pushtostarttoken",
                "title": "static var pushToStartToken: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/activitykit/activity/pushtostarttokenupdates",
                "title": "static var pushToStartTokenUpdates: Activity<Attributes>.PushTokenUpdates",
                "type": "property"
              },
              {
                "title": "Checking user authorization",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Observing Live Activity permission changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationinfo/areactivitiesenabled",
                    "title": "var areActivitiesEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.property",
                    "title": "let activityEnablementUpdates: ActivityAuthorizationInfo.ActivityEnablementUpdates",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an iterator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/makeasynciterator()",
                        "title": "func makeAsyncIterator() -> ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/iterator/next()",
                            "title": "func next() async -> Bool?",
                            "type": "method"
                          },
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/iterator/element",
                            "title": "ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator.Element",
                            "type": "typealias"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/iterator/next()-7uu2j",
                                "title": "func next() async throws(Self.Failure) -> Self.Element?",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/iterator/next(isolation:)",
                                "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/iterator/asynciteratorprotocol-implementations",
                            "title": "AsyncIteratorProtocol Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/iterator",
                        "title": "ActivityAuthorizationInfo.ActivityEnablementUpdates.Iterator",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/element",
                        "title": "ActivityAuthorizationInfo.ActivityEnablementUpdates.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/asynciterator",
                        "title": "ActivityAuthorizationInfo.ActivityEnablementUpdates.AsyncIterator",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/allsatisfy(_:)",
                            "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/compactmap(_:)-4qjwp",
                            "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/compactmap(_:)-9ft2b",
                            "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/contains(_:)",
                            "title": "func contains(Self.Element) async rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/contains(where:)",
                            "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/drop(while:)",
                            "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/dropfirst(_:)",
                            "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/filter(_:)",
                            "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/first(where:)",
                            "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/flatmap(_:)-2drkd",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/flatmap(_:)-6cqr5",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/flatmap(_:)-6ppt6",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/flatmap(_:)-fl0m",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/map(_:)-1532l",
                            "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/map(_:)-28ekb",
                            "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/max(by:)",
                            "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/min(by:)",
                            "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/prefix(_:)",
                            "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/prefix(while:)",
                            "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/reduce(_:_:)",
                            "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/reduce(into:_:)",
                            "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct/asyncsequence-implementations",
                        "title": "AsyncSequence Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/activitykit/activityauthorizationinfo/activityenablementupdates-swift.struct",
                    "title": "ActivityAuthorizationInfo.ActivityEnablementUpdates",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationinfo/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Observing availability of frequent ActivityKit push notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushesenabled",
                    "title": "var frequentPushesEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.property",
                    "title": "let frequentPushEnablementUpdates: ActivityAuthorizationInfo.FrequentPushEnablementUpdates",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an iterator",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/makeasynciterator()",
                        "title": "func makeAsyncIterator() -> ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/iterator/next()",
                            "title": "func next() async -> Bool?",
                            "type": "method"
                          },
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/iterator/element",
                            "title": "ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator.Element",
                            "type": "typealias"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/iterator/next()-3kelq",
                                "title": "func next() async throws(Self.Failure) -> Self.Element?",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/iterator/next(isolation:)",
                                "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/iterator/asynciteratorprotocol-implementations",
                            "title": "AsyncIteratorProtocol Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/iterator",
                        "title": "ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Iterator",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/element",
                        "title": "ActivityAuthorizationInfo.FrequentPushEnablementUpdates.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/asynciterator",
                        "title": "ActivityAuthorizationInfo.FrequentPushEnablementUpdates.AsyncIterator",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/allsatisfy(_:)",
                            "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/compactmap(_:)-676r0",
                            "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/compactmap(_:)-7ufl4",
                            "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/contains(_:)",
                            "title": "func contains(Self.Element) async rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/contains(where:)",
                            "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/drop(while:)",
                            "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/dropfirst(_:)",
                            "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/filter(_:)",
                            "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/first(where:)",
                            "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/flatmap(_:)-2xfu7",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/flatmap(_:)-6dkrl",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/flatmap(_:)-76mxk",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/flatmap(_:)-76w7z",
                            "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/map(_:)-63nss",
                            "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/map(_:)-9lpm0",
                            "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/max(by:)",
                            "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/min(by:)",
                            "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/prefix(_:)",
                            "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/prefix(while:)",
                            "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/reduce(_:_:)",
                            "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/reduce(into:_:)",
                            "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct/asyncsequence-implementations",
                        "title": "AsyncSequence Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/activitykit/activityauthorizationinfo/frequentpushenablementupdates-swift.struct",
                    "title": "ActivityAuthorizationInfo.FrequentPushEnablementUpdates",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/activitykit/activityauthorizationinfo",
                "title": "ActivityAuthorizationInfo",
                "type": "class"
              },
              {
                "title": "Accessing Live Activities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/activities",
                "title": "static var activities: [Activity<Attributes>]",
                "type": "property"
              },
              {
                "path": "/documentation/activitykit/activity/activityupdates-swift.type.property",
                "title": "static var activityUpdates: Activity<Attributes>.ActivityUpdates",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an iterator",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/activityupdates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> Activity<Attributes>.ActivityUpdates.Iterator",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/iterator/next()",
                        "title": "func next() async -> Activity<Attributes>.ActivityUpdates.Element?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/iterator/element",
                        "title": "Activity.ActivityUpdates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activity/activityupdates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/activityupdates-swift.struct/iterator",
                    "title": "Activity.ActivityUpdates.Iterator",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/activitykit/activity/activityupdates-swift.struct/element",
                    "title": "Activity.ActivityUpdates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/activitykit/activity/activityupdates-swift.struct/asynciterator",
                    "title": "Activity.ActivityUpdates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/compactmap(_:)-4a4iy",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/compactmap(_:)-6mtmy",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/flatmap(_:)-1a9tc",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/flatmap(_:)-1rhud",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/flatmap(_:)-3ywew",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/flatmap(_:)-69tf6",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/map(_:)-3uc6m",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/map(_:)-73943",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/activityupdates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/activityupdates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/activitykit/activity/activityupdates-swift.struct",
                "title": "Activity.ActivityUpdates",
                "type": "struct"
              },
              {
                "title": "Identifying a Live Activity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/id-swift.property",
                "title": "let id: String",
                "type": "property"
              },
              {
                "path": "/documentation/activitykit/activity/id-swift.property",
                "title": "let id: String",
                "type": "property"
              },
              {
                "title": "Deprecated symbols",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/activitykit/activity/request(attributes:contentstate:pushtype:)",
                "title": "static func request(attributes: Attributes, contentState: Activity<Attributes>.ContentState, pushType: PushType?) throws -> Activity<Attributes>",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/activitykit/activity/contentstate-swift.property",
                "title": "var contentState: Activity<Attributes>.ContentState",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/activitykit/activity/update(using:alertconfiguration:)",
                "title": "func update(using: Activity<Attributes>.ContentState, alertConfiguration: AlertConfiguration?) async",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/activitykit/activity/end(using:dismissalpolicy:)",
                "title": "func end(using: Activity<Attributes>.ContentState?, dismissalPolicy: ActivityUIDismissalPolicy) async",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/activitykit/activity/contentstateupdates-swift.property",
                "title": "var contentStateUpdates: Activity<Attributes>.ContentStateUpdates",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an iterator",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> Activity<Attributes>.ContentStateUpdates.Iterator",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/iterator/next()",
                        "title": "func next() async -> Activity<Attributes>.ContentStateUpdates.Element?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/iterator/element",
                        "title": "Activity.ContentStateUpdates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/iterator",
                    "title": "Activity.ContentStateUpdates.Iterator",
                    "type": "struct"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/element",
                    "title": "Activity.ContentStateUpdates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/asynciterator",
                    "title": "Activity.ContentStateUpdates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/characters",
                        "title": "var characters: AsyncCharacterSequence<Self>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/lines",
                        "title": "var lines: AsyncLineSequence<Self>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/unicodescalars",
                        "title": "var unicodeScalars: AsyncUnicodeScalarSequence<Self>",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/compactmap(_:)-2mrai",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/compactmap(_:)-8g6ul",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/contains(_:)",
                        "title": "func contains(Self.Element) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/flatmap(_:)-6ki3y",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/flatmap(_:)-94oio",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/flatmap(_:)-c8hs",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/flatmap(_:)-pjw9",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/map(_:)-1o7yj",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/map(_:)-9weri",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/max()",
                        "title": "func max() async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/min()",
                        "title": "func min() async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/activitykit/activity/contentstateupdates-swift.struct",
                "title": "Activity.ContentStateUpdates",
                "type": "struct"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/activitykit/activity/id-swift.typealias",
                "title": "Activity.ID",
                "type": "typealias"
              }
            ],
            "path": "/documentation/activitykit/activity",
            "title": "Activity",
            "type": "class"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/emoji-rangers-supporting-live-activities-interactivity-and-animations",
            "title": "Emoji Rangers: Supporting Live Activities, interactivity, and animations",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nssupportsliveactivities",
            "title": "NSSupportsLiveActivities",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nssupportsliveactivitiesfrequentupdates",
            "title": "NSSupportsLiveActivitiesFrequentUpdates",
            "type": "typealias"
          },
          {
            "title": "Widget extensions",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit",
            "title": "WidgetKit",
            "type": "module"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/creating-a-widget-extension",
            "title": "Creating a widget extension",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/animating-data-updates-in-widgets-and-live-activities",
            "title": "Animating data updates in widgets and Live Activities",
            "type": "article"
          },
          {
            "title": "User interface",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/creating-views-for-widgets-live-activities-and-watch-complications",
            "title": "Creating views for widgets, Live Activities, and watch complications",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/widgetkit/linking-to-specific-app-scenes-from-your-widget-or-live-activity",
            "title": "Linking to specific app scenes from your widget or Live Activity",
            "type": "article"
          }
        ],
        "path": "/documentation/activitykit",
        "title": "ActivityKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
