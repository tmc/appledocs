{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/managedappdistribution/fetching-and-displaying-managed-apps",
            "title": "Fetching and displaying managed apps",
            "type": "article"
          },
          {
            "title": "App information",
            "type": "groupMarker"
          },
          {
            "title": "View creation",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/managedappdistribution",
        "title": "ManagedAppDistribution",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/managedappdistribution/fetching-and-displaying-managed-apps",
            "title": "Fetching and displaying managed apps",
            "type": "article"
          },
          {
            "title": "App information",
            "type": "groupMarker"
          },
          {
            "title": "View creation",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/managedappdistribution",
        "title": "ManagedAppDistribution",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/managedappdistribution/fetching-and-displaying-managed-apps",
            "title": "Fetching and displaying managed apps",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Obtaining general information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/name",
                "title": "let name: String",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/subtitle",
                "title": "let subtitle: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/description",
                "title": "let description: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/filesize",
                "title": "let fileSize: Measurement<UnitInformationStorage>?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/iconurl(fitting:)",
                "title": "func iconURL(fitting: CGSize) -> URL?",
                "type": "method"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/screenshoturls(fitting:)",
                "title": "func screenshotURLs(fitting: CGSize) -> [URL]",
                "type": "method"
              },
              {
                "title": "Obtaining platform and requirement information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/platform-swift.property",
                "title": "let platform: Platform",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/requirements",
                "title": "let requirements: String?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/==(_:_:)",
                    "title": "static func == (ManagedApp.Platform, ManagedApp.Platform) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/description",
                    "title": "var description: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/ios",
                    "title": "static var iOS: ManagedApp.Platform",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/macos",
                    "title": "static var macOS: ManagedApp.Platform",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/visionos",
                    "title": "static var visionOS: ManagedApp.Platform",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedapp/platform-swift.struct",
                "title": "ManagedApp.Platform",
                "type": "struct"
              },
              {
                "title": "Obtaining supported languages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/languages",
                "title": "let languages: [Locale.Language]",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/metadatalanguage",
                "title": "let metadataLanguage: Locale.Language?",
                "type": "property"
              },
              {
                "title": "Obtaining seller information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/seller",
                "title": "let seller: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/developerwebsite",
                "title": "let developerWebsite: URL?",
                "type": "property"
              },
              {
                "title": "Obtaining rating information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/genres",
                "title": "let genres: [String]",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/contentrating",
                "title": "let contentRating: String?",
                "type": "property"
              },
              {
                "title": "Obtaining privacy and copyright information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/privacypolicy",
                "title": "let privacyPolicy: URL?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/copyright",
                "title": "let copyright: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/licenseagreement",
                "title": "var licenseAgreement: URL?",
                "type": "property"
              },
              {
                "title": "Obtaining version information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/version",
                "title": "let version: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/releasenotes",
                "title": "let releaseNotes: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedapp/releasedate",
                "title": "let releaseDate: Date?",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/==(_:_:)",
                    "title": "static func == (ManagedApp, ManagedApp) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedapp/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedapp/hashable-implementations",
                "title": "Hashable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/id-swift.property",
                    "title": "var id: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapp/id-swift.typealias",
                    "title": "ManagedApp.ID",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedapp/identifiable-implementations",
                "title": "Identifiable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/managedappdistribution/managedapp",
            "title": "ManagedApp",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Obtaining library information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedapplibrary/availableapps",
                "title": "var availableApps: ManagedAppLibrary.ManagedApps",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Obtaining managed apps",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Iterating",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asynciterator/element",
                        "title": "ManagedAppLibrary.ManagedApps.AsyncIterator.Element",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asynciterator/next()",
                        "title": "func next() async throws -> ManagedAppLibrary.ManagedApps.AsyncIterator.Element?",
                        "type": "method"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asynciterator/next(isolation:)",
                        "title": "func next(isolation: isolated (any Actor)?) async throws(ManagedAppLibrary.ManagedApps.AsyncIterator.Failure) -> ManagedAppLibrary.ManagedApps.AsyncIterator.Element?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asynciterator/failure",
                        "title": "ManagedAppLibrary.ManagedApps.AsyncIterator.Failure",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asynciterator/next()-9qv4z",
                            "title": "func next() async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asynciterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asynciterator",
                    "title": "ManagedAppLibrary.ManagedApps.AsyncIterator",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/element",
                    "title": "ManagedAppLibrary.ManagedApps.Element",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> ManagedAppLibrary.ManagedApps.AsyncIterator",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/compactmap(_:)-1viyd",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/compactmap(_:)-5d0fs",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/contains(_:)",
                        "title": "func contains(Self.Element) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/flatmap(_:)-5xm21",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/flatmap(_:)-6h15y",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/flatmap(_:)-7glv2",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/flatmap(_:)-cvbk",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/map(_:)-6qs7r",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/map(_:)-7rzuh",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/managedappdistribution/managedapplibrary/managedapps/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedapplibrary/managedapps",
                "title": "ManagedAppLibrary.ManagedApps",
                "type": "struct"
              },
              {
                "path": "/documentation/managedappdistribution/managedapplibrary/currentdistributor",
                "title": "static let currentDistributor: ManagedAppLibrary",
                "type": "property"
              }
            ],
            "path": "/documentation/managedappdistribution/managedapplibrary",
            "title": "ManagedAppLibrary",
            "type": "class"
          },
          {
            "title": "App information",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Obtaining supported platforms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/platform/ios",
                "title": "static var iOS: Platform",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/platform/macos",
                "title": "static var macOS: Platform",
                "type": "property"
              },
              {
                "title": "Inspecting the object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/platform/description",
                "title": "var description: String",
                "type": "property"
              },
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/platform/==(_:_:)",
                "title": "static func == (Platform, Platform) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/platform/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/platform/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/platform/visionos",
                "title": "static var visionOS: Platform",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/platform/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/managedappdistribution/platform/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/managedappdistribution/platform",
            "title": "Platform",
            "type": "struct"
          },
          {
            "title": "View creation",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a view",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappview/init(app:)",
                "title": "init(app: ManagedApp)",
                "type": "init"
              },
              {
                "title": "Getting the properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappview/body-swift.property",
                "title": "var body: some View",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappview/body-swift.typealias",
                "title": "ManagedAppView.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accentcolor(_:)",
                    "title": "func accentColor(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(activationpoint:)-5vqxb",
                    "title": "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(activationpoint:)-641c2",
                    "title": "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(addtraits:)",
                    "title": "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(hidden:)",
                    "title": "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(hint:)",
                    "title": "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(identifier:)",
                    "title": "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(inputlabels:)",
                    "title": "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(label:)",
                    "title": "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(removetraits:)",
                    "title": "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(selectionidentifier:)",
                    "title": "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(sortpriority:)",
                    "title": "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibility(value:)",
                    "title": "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityaction(_:_:)",
                    "title": "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityaction(action:label:)",
                    "title": "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityaction(named:_:)-26p3c",
                    "title": "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityaction(named:_:)-5h4hj",
                    "title": "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityaction(named:_:)-6twt5",
                    "title": "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityactions(_:)",
                    "title": "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityactions(category:_:)",
                    "title": "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityactivationpoint(_:)-825hs",
                    "title": "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityactivationpoint(_:)-9h88d",
                    "title": "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityactivationpoint(_:isenabled:)-4tda7",
                    "title": "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityactivationpoint(_:isenabled:)-7d7in",
                    "title": "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityaddtraits(_:)",
                    "title": "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityadjustableaction(_:)",
                    "title": "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitychartdescriptor(_:)",
                    "title": "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitychildren(children:)",
                    "title": "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-1lmk2",
                    "title": "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-1v0s8",
                    "title": "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-2oftp",
                    "title": "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-3rmhm",
                    "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-4g2ik",
                    "title": "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-5rm2n",
                    "title": "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-6vtoe",
                    "title": "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitycustomcontent(_:_:importance:)-dxms",
                    "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydirecttouch(_:options:)",
                    "title": "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydragpoint(_:description:)-1zspt",
                    "title": "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydragpoint(_:description:)-6xgug",
                    "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydragpoint(_:description:)-7ezek",
                    "title": "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydragpoint(_:description:isenabled:)-3weg2",
                    "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydragpoint(_:description:isenabled:)-5cioo",
                    "title": "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydragpoint(_:description:isenabled:)-801um",
                    "title": "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydroppoint(_:description:)-2qkgw",
                    "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydroppoint(_:description:)-2sjot",
                    "title": "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydroppoint(_:description:)-9mscm",
                    "title": "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydroppoint(_:description:isenabled:)-6wtif",
                    "title": "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydroppoint(_:description:isenabled:)-7ec0h",
                    "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitydroppoint(_:description:isenabled:)-tnue",
                    "title": "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityelement(children:)",
                    "title": "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityfocused(_:)",
                    "title": "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityfocused(_:equals:)",
                    "title": "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityheading(_:)",
                    "title": "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhidden(_:)",
                    "title": "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhidden(_:isenabled:)",
                    "title": "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhint(_:)-19lon",
                    "title": "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhint(_:)-51uff",
                    "title": "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhint(_:)-5s5ba",
                    "title": "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhint(_:isenabled:)-19lyu",
                    "title": "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhint(_:isenabled:)-4czcy",
                    "title": "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityhint(_:isenabled:)-75xcb",
                    "title": "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityidentifier(_:)",
                    "title": "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityidentifier(_:isenabled:)",
                    "title": "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityignoresinvertcolors(_:)",
                    "title": "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityinputlabels(_:)-5o5sh",
                    "title": "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityinputlabels(_:)-65q08",
                    "title": "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityinputlabels(_:)-6qeu2",
                    "title": "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityinputlabels(_:isenabled:)-58o5s",
                    "title": "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityinputlabels(_:isenabled:)-6w25m",
                    "title": "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityinputlabels(_:isenabled:)-7q4sx",
                    "title": "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabel(_:)-2nmfl",
                    "title": "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabel(_:)-2vbfl",
                    "title": "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabel(_:)-43dr3",
                    "title": "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabel(_:isenabled:)-1544p",
                    "title": "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabel(_:isenabled:)-645bb",
                    "title": "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabel(_:isenabled:)-87oh9",
                    "title": "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabel(content:)",
                    "title": "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylabeledpair(role:id:in:)",
                    "title": "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitylinkedgroup(id:in:)",
                    "title": "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityremovetraits(_:)",
                    "title": "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrepresentation(representation:)",
                    "title": "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrespondstouserinteraction(_:)",
                    "title": "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title": "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:)-28g6h",
                    "title": "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:)-4c77i",
                    "title": "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:)-56zzu",
                    "title": "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:)-9ey9r",
                    "title": "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entryid:entrylabel:)-20ff9",
                    "title": "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entryid:entrylabel:)-889f0",
                    "title": "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entryid:entrylabel:)-8s7gw",
                    "title": "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entryid:entrylabel:)-921to",
                    "title": "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entrylabel:)-237gu",
                    "title": "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entrylabel:)-2vvud",
                    "title": "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entrylabel:)-7r46c",
                    "title": "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:entries:entrylabel:)-82hsv",
                    "title": "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:textranges:)-224n3",
                    "title": "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:textranges:)-3ko1s",
                    "title": "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:textranges:)-46zq0",
                    "title": "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotor(_:textranges:)-62rrf",
                    "title": "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityrotorentry(id:in:)",
                    "title": "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityscrollaction(_:)",
                    "title": "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityshowslargecontentviewer()",
                    "title": "func accessibilityShowsLargeContentViewer() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityshowslargecontentviewer(_:)",
                    "title": "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitysortpriority(_:)",
                    "title": "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilitytextcontenttype(_:)",
                    "title": "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityvalue(_:)-3xt5a",
                    "title": "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityvalue(_:)-7lqfg",
                    "title": "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityvalue(_:)-ei07",
                    "title": "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityvalue(_:isenabled:)-2ocr1",
                    "title": "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityvalue(_:isenabled:)-3gun8",
                    "title": "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityvalue(_:isenabled:)-7o08",
                    "title": "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/accessibilityzoomaction(_:)",
                    "title": "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/actionsheet(ispresented:content:)",
                    "title": "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/actionsheet(item:content:)",
                    "title": "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:actions:)-1ga78",
                    "title": "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:actions:)-4orlr",
                    "title": "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:actions:)-6sxci",
                    "title": "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:actions:message:)-21az9",
                    "title": "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:actions:message:)-7i5r6",
                    "title": "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:actions:message:)-eq7t",
                    "title": "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:presenting:actions:)-4jjcr",
                    "title": "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:presenting:actions:)-77iug",
                    "title": "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:presenting:actions:)-8l6s3",
                    "title": "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:presenting:actions:message:)-8rvif",
                    "title": "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:presenting:actions:message:)-999n3",
                    "title": "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(_:ispresented:presenting:actions:message:)-9b6w4",
                    "title": "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(ispresented:content:)",
                    "title": "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(ispresented:error:actions:)",
                    "title": "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(ispresented:error:actions:message:)",
                    "title": "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alert(item:content:)",
                    "title": "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alignmentguide(_:computevalue:)-77zfn",
                    "title": "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alignmentguide(_:computevalue:)-99azw",
                    "title": "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/alloweddynamicrange(_:)",
                    "title": "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/allowshittesting(_:)",
                    "title": "func allowsHitTesting(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/allowstightening(_:)",
                    "title": "func allowsTightening(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/allowswindowactivationevents(_:)",
                    "title": "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/anchorpreference(key:value:transform:)",
                    "title": "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/animation(_:)",
                    "title": "func animation(Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/animation(_:body:)",
                    "title": "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/animation(_:value:)",
                    "title": "func animation<V>(Animation?, value: V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/aspectratio(_:contentmode:)-64m6h",
                    "title": "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/aspectratio(_:contentmode:)-fctp",
                    "title": "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/autocapitalization(_:)",
                    "title": "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/autocorrectiondisabled(_:)",
                    "title": "func autocorrectionDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(_:alignment:)",
                    "title": "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(_:ignoressafeareaedges:)",
                    "title": "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(_:in:fillstyle:)-4htl4",
                    "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(_:in:fillstyle:)-56iyn",
                    "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(alignment:content:)",
                    "title": "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(ignoressafeareaedges:)",
                    "title": "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(in:fillstyle:)-2bkag",
                    "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/background(in:fillstyle:)-7b44a",
                    "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/backgroundpreferencevalue(_:_:)",
                    "title": "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/backgroundpreferencevalue(_:alignment:_:)",
                    "title": "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/backgroundstyle(_:)",
                    "title": "func backgroundStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/badge(_:)-15rqk",
                    "title": "func badge(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/badge(_:)-32wdb",
                    "title": "func badge(LocalizedStringKey?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/badge(_:)-3u8xb",
                    "title": "func badge<S>(S?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/badge(_:)-67dtu",
                    "title": "func badge(Int) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/badgeprominence(_:)",
                    "title": "func badgeProminence(BadgeProminence) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/baselineoffset(_:)",
                    "title": "func baselineOffset(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/blendmode(_:)",
                    "title": "func blendMode(BlendMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/blur(radius:opaque:)",
                    "title": "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/bold(_:)",
                    "title": "func bold(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/border(_:width:)",
                    "title": "func border<S>(S, width: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/brightness(_:)",
                    "title": "func brightness(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/buttonbordershape(_:)",
                    "title": "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/buttonrepeatbehavior(_:)",
                    "title": "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/buttonstyle(_:)-3m842",
                    "title": "func buttonStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/buttonstyle(_:)-6r3d6",
                    "title": "func buttonStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/clipshape(_:style:)",
                    "title": "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/clipped(antialiased:)",
                    "title": "func clipped(antialiased: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/coloreffect(_:isenabled:)",
                    "title": "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/colorinvert()",
                    "title": "func colorInvert() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/colormultiply(_:)",
                    "title": "func colorMultiply(Color) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/colorscheme(_:)",
                    "title": "func colorScheme(ColorScheme) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/compositinggroup()",
                    "title": "func compositingGroup() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:actions:)-1se7m",
                    "title": "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:actions:)-4uqh6",
                    "title": "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:actions:)-8ulq9",
                    "title": "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3f6n4",
                    "title": "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5pbvz",
                    "title": "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7dgvf",
                    "title": "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4ysms",
                    "title": "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5g718",
                    "title": "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6a0m6",
                    "title": "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-15n81",
                    "title": "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-39dof",
                    "title": "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6papa",
                    "title": "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/containerbackground(_:for:)",
                    "title": "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/containerbackground(for:alignment:content:)",
                    "title": "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/containerrelativeframe(_:alignment:)",
                    "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/containerrelativeframe(_:alignment:_:)",
                    "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title": "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/containershape(_:)",
                    "title": "func containerShape<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/containervalue(_:_:)",
                    "title": "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contentmargins(_:_:for:)-1tpgh",
                    "title": "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contentmargins(_:_:for:)-59061",
                    "title": "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contentmargins(_:for:)",
                    "title": "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contentshape(_:_:eofill:)",
                    "title": "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contentshape(_:eofill:)",
                    "title": "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/managedappdistribution/managedappview/contenttoolbar(for:content:)-5lakv",
                    "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/managedappdistribution/managedappview/contenttoolbar(for:content:)-wwb9",
                    "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contenttransition(_:)",
                    "title": "func contentTransition(ContentTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/contextmenu(_:)",
                    "title": "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title": "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contextmenu(menuitems:)",
                    "title": "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contextmenu(menuitems:preview:)",
                    "title": "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/contrast(_:)",
                    "title": "func contrast(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/controlgroupstyle(_:)",
                    "title": "func controlGroupStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/controlsize(_:)",
                    "title": "func controlSize(ControlSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/coordinatespace(_:)",
                    "title": "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/coordinatespace(name:)",
                    "title": "func coordinateSpace<T>(name: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/cornerradius(_:antialiased:)",
                    "title": "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/datepickerstyle(_:)",
                    "title": "func datePickerStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/defaultadaptabletabbarplacement(_:)",
                    "title": "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/defaultappstorage(_:)",
                    "title": "func defaultAppStorage(UserDefaults) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/defaultfocus(_:_:priority:)",
                    "title": "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/defaulthovereffect(_:)-35il7",
                    "title": "func defaultHoverEffect(some CustomHoverEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/defaulthovereffect(_:)-3z4c2",
                    "title": "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/defaultscrollanchor(_:)",
                    "title": "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/defaultscrollanchor(_:for:)",
                    "title": "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/deferssystemgestures(on:)",
                    "title": "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/deletedisabled(_:)",
                    "title": "func deleteDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dialogicon(_:)",
                    "title": "func dialogIcon(Image?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dialogsuppressiontoggle(_:issuppressed:)-3j7g7",
                    "title": "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dialogsuppressiontoggle(_:issuppressed:)-5alrv",
                    "title": "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dialogsuppressiontoggle(_:issuppressed:)-7r0zc",
                    "title": "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dialogsuppressiontoggle(issuppressed:)",
                    "title": "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/disableautocorrection(_:)",
                    "title": "func disableAutocorrection(Bool?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/disabled(_:)",
                    "title": "func disabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/disclosuregroupstyle(_:)",
                    "title": "func disclosureGroupStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title": "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/documentbrowsercontextmenu(_:)",
                    "title": "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/draggable(_:)",
                    "title": "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/draggable(_:preview:)",
                    "title": "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/drawinggroup(opaque:colormode:)",
                    "title": "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dropdestination(for:action:istargeted:)",
                    "title": "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dynamictypesize(_:)-1amd8",
                    "title": "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/dynamictypesize(_:)-4jzz6",
                    "title": "func dynamicTypeSize<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/edgesignoringsafearea(_:)",
                    "title": "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/environment(_:)",
                    "title": "func environment<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/environment(_:_:)",
                    "title": "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/environmentobject(_:)",
                    "title": "func environmentObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogbrowseroptions(_:)",
                    "title": "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogconfirmationlabel(_:)-1033p",
                    "title": "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogconfirmationlabel(_:)-9lm0l",
                    "title": "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogconfirmationlabel(_:)-9ql05",
                    "title": "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogcustomizationid(_:)",
                    "title": "func fileDialogCustomizationID(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogdefaultdirectory(_:)",
                    "title": "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogimportsunresolvedaliases(_:)",
                    "title": "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogmessage(_:)-2x0p",
                    "title": "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogmessage(_:)-8u6hk",
                    "title": "func fileDialogMessage(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogmessage(_:)-9z61h",
                    "title": "func fileDialogMessage<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filedialogurlenabled(_:)",
                    "title": "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-11d42",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-94spy",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6p5xl",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8lk1e",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:documents:contenttype:oncompletion:)-78xuz",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:documents:contenttype:oncompletion:)-7iv41",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5pc80",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7bqhw",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title": "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title": "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporterfilenamelabel(_:)-2syys",
                    "title": "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporterfilenamelabel(_:)-3t3to",
                    "title": "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileexporterfilenamelabel(_:)-4gxde",
                    "title": "func fileExporterFilenameLabel(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filemover(ispresented:file:oncompletion:)",
                    "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filemover(ispresented:files:oncompletion:)",
                    "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/finddisabled(_:)",
                    "title": "func findDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/findnavigator(ispresented:)",
                    "title": "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fixedsize()",
                    "title": "func fixedSize() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fixedsize(horizontal:vertical:)",
                    "title": "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/flipsforrighttoleftlayoutdirection(_:)",
                    "title": "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focuseffectdisabled(_:)",
                    "title": "func focusEffectDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusable(_:)",
                    "title": "func focusable(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusable(_:interactions:)",
                    "title": "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focused(_:)",
                    "title": "func focused(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focused(_:equals:)",
                    "title": "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedobject(_:)-27biw",
                    "title": "func focusedObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedobject(_:)-7xsny",
                    "title": "func focusedObject<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedsceneobject(_:)-2rp44",
                    "title": "func focusedSceneObject<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedsceneobject(_:)-9oac1",
                    "title": "func focusedSceneObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedscenevalue(_:)",
                    "title": "func focusedSceneValue<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedscenevalue(_:_:)-5iouf",
                    "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedscenevalue(_:_:)-7f3zh",
                    "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedvalue(_:)",
                    "title": "func focusedValue<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedvalue(_:_:)-658in",
                    "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/focusedvalue(_:_:)-7lvg4",
                    "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/font(_:)",
                    "title": "func font(Font?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fontdesign(_:)",
                    "title": "func fontDesign(Font.Design?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fontweight(_:)",
                    "title": "func fontWeight(Font.Weight?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fontwidth(_:)",
                    "title": "func fontWidth(Font.Width?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/foregroundcolor(_:)",
                    "title": "func foregroundColor(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/foregroundstyle(_:)",
                    "title": "func foregroundStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/foregroundstyle(_:_:)",
                    "title": "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/foregroundstyle(_:_:_:)",
                    "title": "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/formstyle(_:)",
                    "title": "func formStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/frame()",
                    "title": "func frame() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title": "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/frame(width:height:alignment:)",
                    "title": "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fullscreencover(ispresented:ondismiss:content:)",
                    "title": "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/fullscreencover(item:ondismiss:content:)",
                    "title": "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gaugestyle(_:)",
                    "title": "func gaugeStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/geometrygroup()",
                    "title": "func geometryGroup() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gesture(_:)",
                    "title": "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gesture(_:including:)",
                    "title": "func gesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gesture(_:isenabled:)",
                    "title": "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gesture(_:name:isenabled:)",
                    "title": "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/grayscale(_:)",
                    "title": "func grayscale(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gridcellanchor(_:)",
                    "title": "func gridCellAnchor(UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gridcellcolumns(_:)",
                    "title": "func gridCellColumns(Int) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gridcellunsizedaxes(_:)",
                    "title": "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/gridcolumnalignment(_:)",
                    "title": "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/groupboxstyle(_:)",
                    "title": "func groupBoxStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/handgestureshortcut(_:isenabled:)",
                    "title": "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/handlesexternalevents(preferring:allowing:)",
                    "title": "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/headerprominence(_:)",
                    "title": "func headerProminence(Prominence) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/help(_:)-6bt7w",
                    "title": "func help(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/help(_:)-6s0zs",
                    "title": "func help(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/help(_:)-j5u",
                    "title": "func help<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/hidden()",
                    "title": "func hidden() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/highprioritygesture(_:including:)",
                    "title": "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/highprioritygesture(_:isenabled:)",
                    "title": "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/highprioritygesture(_:name:isenabled:)",
                    "title": "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/hovereffect(_:)",
                    "title": "func hoverEffect(HoverEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/hovereffect(_:isenabled:)",
                    "title": "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/hovereffectdisabled(_:)",
                    "title": "func hoverEffectDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/huerotation(_:)",
                    "title": "func hueRotation(Angle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/id(_:)",
                    "title": "func id<ID>(ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ignoressafearea(_:edges:)",
                    "title": "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/imagescale(_:)",
                    "title": "func imageScale(Image.Scale) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/indexviewstyle(_:)",
                    "title": "func indexViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/inspector(ispresented:content:)",
                    "title": "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/inspectorcolumnwidth(_:)",
                    "title": "func inspectorColumnWidth(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/inspectorcolumnwidth(min:ideal:max:)",
                    "title": "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/interactionactivitytrackingtag(_:)",
                    "title": "func interactionActivityTrackingTag(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/interactivedismissdisabled(_:)",
                    "title": "func interactiveDismissDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/invalidatablecontent(_:)",
                    "title": "func invalidatableContent(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/italic(_:)",
                    "title": "func italic(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/itemprovider(_:)",
                    "title": "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/kerning(_:)",
                    "title": "func kerning(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/keyboardshortcut(_:)-350wg",
                    "title": "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/keyboardshortcut(_:)-405dq",
                    "title": "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/keyboardshortcut(_:modifiers:)",
                    "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/keyboardshortcut(_:modifiers:localization:)",
                    "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/keyboardtype(_:)",
                    "title": "func keyboardType(UIKeyboardType) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title": "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title": "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/labelstyle(_:)",
                    "title": "func labelStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/labeledcontentstyle(_:)",
                    "title": "func labeledContentStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/labelshidden()",
                    "title": "func labelsHidden() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/labelsvisibility(_:)",
                    "title": "func labelsVisibility(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/layereffect(_:maxsampleoffset:isenabled:)",
                    "title": "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/layoutdirectionbehavior(_:)",
                    "title": "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/layoutpriority(_:)",
                    "title": "func layoutPriority(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/layoutvalue(key:value:)",
                    "title": "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/linelimit(_:)-1w9qb",
                    "title": "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/linelimit(_:)-2e33r",
                    "title": "func lineLimit(ClosedRange<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/linelimit(_:)-5tonw",
                    "title": "func lineLimit(Int?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/linelimit(_:)-6h0gv",
                    "title": "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/linelimit(_:reservesspace:)",
                    "title": "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/linespacing(_:)",
                    "title": "func lineSpacing(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listitemtint(_:)-7vv4q",
                    "title": "func listItemTint(ListItemTint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listitemtint(_:)-pcjd",
                    "title": "func listItemTint(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listrowbackground(_:)",
                    "title": "func listRowBackground<V>(V?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listrowinsets(_:)",
                    "title": "func listRowInsets(EdgeInsets?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listrowseparator(_:edges:)",
                    "title": "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listrowseparatortint(_:edges:)",
                    "title": "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listrowspacing(_:)",
                    "title": "func listRowSpacing(CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listsectionseparator(_:edges:)",
                    "title": "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listsectionseparatortint(_:edges:)",
                    "title": "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listsectionspacing(_:)-3o64a",
                    "title": "func listSectionSpacing(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/listsectionspacing(_:)-9qdx3",
                    "title": "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/liststyle(_:)",
                    "title": "func listStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/luminancetoalpha()",
                    "title": "func luminanceToAlpha() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/managedcontentstyle(_:)",
                    "title": "func managedContentStyle(ManagedContentStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/mask(_:)",
                    "title": "func mask<Mask>(Mask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/mask(alignment:_:)",
                    "title": "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title": "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/matchedtransitionsource(id:in:)",
                    "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/matchedtransitionsource(id:in:configuration:)",
                    "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/materialactiveappearance(_:)",
                    "title": "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/menuactiondismissbehavior(_:)",
                    "title": "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/menuindicator(_:)",
                    "title": "func menuIndicator(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/menuorder(_:)",
                    "title": "func menuOrder(MenuOrder) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/menustyle(_:)",
                    "title": "func menuStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/minimumscalefactor(_:)",
                    "title": "func minimumScaleFactor(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/modifier(_:)",
                    "title": "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/monospaced(_:)",
                    "title": "func monospaced(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/monospaceddigit()",
                    "title": "func monospacedDigit() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/movedisabled(_:)",
                    "title": "func moveDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/multilinetextalignment(_:)",
                    "title": "func multilineTextAlignment(TextAlignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbarbackbuttonhidden(_:)",
                    "title": "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbarhidden(_:)",
                    "title": "func navigationBarHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbaritems(leading:)",
                    "title": "func navigationBarItems<L>(leading: L) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbaritems(leading:trailing:)",
                    "title": "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbaritems(trailing:)",
                    "title": "func navigationBarItems<T>(trailing: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbartitle(_:)-1adab",
                    "title": "func navigationBarTitle(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbartitle(_:)-476mo",
                    "title": "func navigationBarTitle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbartitle(_:)-92ydl",
                    "title": "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/navigationbartitle(_:displaymode:)-13prc",
                    "title": "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/navigationbartitle(_:displaymode:)-4g57n",
                    "title": "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/navigationbartitle(_:displaymode:)-5t75j",
                    "title": "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationbartitledisplaymode(_:)",
                    "title": "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdestination(for:destination:)",
                    "title": "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdestination(ispresented:destination:)",
                    "title": "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdestination(item:destination:)",
                    "title": "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdocument(_:)-5hjmr",
                    "title": "func navigationDocument<D>(D) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdocument(_:)-75em7",
                    "title": "func navigationDocument(URL) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdocument(_:preview:)-4313j",
                    "title": "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdocument(_:preview:)-5aniv",
                    "title": "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdocument(_:preview:)-8uqjd",
                    "title": "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationdocument(_:preview:)-8x4v7",
                    "title": "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationsplitviewcolumnwidth(_:)",
                    "title": "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title": "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationsplitviewstyle(_:)",
                    "title": "func navigationSplitViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationtitle(_:)-4ro6i",
                    "title": "func navigationTitle(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationtitle(_:)-58nff",
                    "title": "func navigationTitle<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationtitle(_:)-74jz9",
                    "title": "func navigationTitle(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationtitle(_:)-798kp",
                    "title": "func navigationTitle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationtitle(_:)-8vn7o",
                    "title": "func navigationTitle(Binding<String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationtransition(_:)",
                    "title": "func navigationTransition(some NavigationTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/navigationviewstyle(_:)",
                    "title": "func navigationViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/offset(_:)",
                    "title": "func offset(CGSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/offset(x:y:)",
                    "title": "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onappear(perform:)",
                    "title": "func onAppear(perform: (() -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onchange(of:initial:_:)-1zrhn",
                    "title": "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onchange(of:initial:_:)-8a3ib",
                    "title": "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/onchange(of:perform:)",
                    "title": "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/oncontinueuseractivity(_:perform:)",
                    "title": "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/oncontinuoushover(coordinatespace:perform:)",
                    "title": "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ondisappear(perform:)",
                    "title": "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ondrag(_:)",
                    "title": "func onDrag(() -> NSItemProvider) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ondrag(_:preview:)",
                    "title": "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/ondrop(of:delegate:)-4fg4n",
                    "title": "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ondrop(of:delegate:)-59wab",
                    "title": "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/ondrop(of:istargeted:perform:)-3gcdx",
                    "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/ondrop(of:istargeted:perform:)-7blhx",
                    "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ondrop(of:istargeted:perform:)-84cqn",
                    "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ondrop(of:istargeted:perform:)-tnks",
                    "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ongeometrychange(for:of:action:)-33oaz",
                    "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ongeometrychange(for:of:action:)-52uew",
                    "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onhover(perform:)",
                    "title": "func onHover(perform: (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onkeypress(_:action:)",
                    "title": "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onkeypress(_:phases:action:)",
                    "title": "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onkeypress(characters:phases:action:)",
                    "title": "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onkeypress(keys:phases:action:)",
                    "title": "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onkeypress(phases:action:)",
                    "title": "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onopenurl(perform:)",
                    "title": "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onpencildoubletap(perform:)",
                    "title": "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onpencilsqueeze(perform:)",
                    "title": "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onpreferencechange(_:perform:)",
                    "title": "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onreceive(_:perform:)",
                    "title": "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onscrollgeometrychange(for:of:action:)",
                    "title": "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onscrollphasechange(_:)-6p9ur",
                    "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onscrollphasechange(_:)-9wu6t",
                    "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title": "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onscrollvisibilitychange(threshold:_:)",
                    "title": "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/onsubmit(of:_:)",
                    "title": "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ontapgesture(count:coordinatespace:perform:)",
                    "title": "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/ontapgesture(count:perform:)",
                    "title": "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/opacity(_:)",
                    "title": "func opacity(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/overlay(_:alignment:)",
                    "title": "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/overlay(_:ignoressafeareaedges:)",
                    "title": "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/overlay(_:in:fillstyle:)",
                    "title": "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/overlay(alignment:content:)",
                    "title": "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/overlaypreferencevalue(_:_:)",
                    "title": "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/overlaypreferencevalue(_:alignment:_:)",
                    "title": "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/padding(_:)-6s2i2",
                    "title": "func padding(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/padding(_:)-8kvjt",
                    "title": "func padding(EdgeInsets) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/padding(_:_:)",
                    "title": "func padding(Edge.Set, CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/paletteselectioneffect(_:)",
                    "title": "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/persistentsystemoverlays(_:)",
                    "title": "func persistentSystemOverlays(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/phaseanimator(_:content:animation:)",
                    "title": "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/phaseanimator(_:trigger:content:animation:)",
                    "title": "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/pickerstyle(_:)",
                    "title": "func pickerStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title": "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/popover(item:attachmentanchor:arrowedge:content:)",
                    "title": "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/position(_:)",
                    "title": "func position(CGPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/position(x:y:)",
                    "title": "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/preference(key:value:)",
                    "title": "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/preferredcolorscheme(_:)",
                    "title": "func preferredColorScheme(ColorScheme?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationbackground(_:)",
                    "title": "func presentationBackground<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationbackground(alignment:content:)",
                    "title": "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationbackgroundinteraction(_:)",
                    "title": "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationcompactadaptation(_:)",
                    "title": "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationcompactadaptation(horizontal:vertical:)",
                    "title": "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationcontentinteraction(_:)",
                    "title": "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationcornerradius(_:)",
                    "title": "func presentationCornerRadius(CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationdetents(_:)",
                    "title": "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationdetents(_:selection:)",
                    "title": "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationdragindicator(_:)",
                    "title": "func presentationDragIndicator(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/presentationsizing(_:)",
                    "title": "func presentationSizing(some PresentationSizing) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/previewcontext(_:)",
                    "title": "func previewContext<C>(C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/previewdevice(_:)",
                    "title": "func previewDevice(PreviewDevice?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/previewdisplayname(_:)",
                    "title": "func previewDisplayName(String?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/previewinterfaceorientation(_:)",
                    "title": "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/previewlayout(_:)",
                    "title": "func previewLayout(PreviewLayout) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/privacysensitive(_:)",
                    "title": "func privacySensitive(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/progressviewstyle(_:)",
                    "title": "func progressViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/projectioneffect(_:)",
                    "title": "func projectionEffect(ProjectionTransform) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/redacted(reason:)",
                    "title": "func redacted(reason: RedactionReasons) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/refreshable(action:)",
                    "title": "func refreshable(action: () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/renameaction(_:)-8ygjj",
                    "title": "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/renameaction(_:)-9gu7d",
                    "title": "func renameAction(() -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/replacedisabled(_:)",
                    "title": "func replaceDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title": "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/rotationeffect(_:anchor:)",
                    "title": "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/safeareainset(edge:alignment:spacing:content:)-195g9",
                    "title": "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/safeareainset(edge:alignment:spacing:content:)-4cp1d",
                    "title": "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/safeareapadding(_:)-4vk70",
                    "title": "func safeAreaPadding(EdgeInsets) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/safeareapadding(_:)-zvvt",
                    "title": "func safeAreaPadding(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/safeareapadding(_:_:)",
                    "title": "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/saturation(_:)",
                    "title": "func saturation(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scaleeffect(_:anchor:)-2qlg6",
                    "title": "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scaleeffect(_:anchor:)-8f4oz",
                    "title": "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scaleeffect(x:y:anchor:)",
                    "title": "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scaledtofill()",
                    "title": "func scaledToFill() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scaledtofit()",
                    "title": "func scaledToFit() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scenepadding(_:)",
                    "title": "func scenePadding(Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scenepadding(_:edges:)",
                    "title": "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollbouncebehavior(_:axes:)",
                    "title": "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollclipdisabled(_:)",
                    "title": "func scrollClipDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollcontentbackground(_:)",
                    "title": "func scrollContentBackground(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrolldisabled(_:)",
                    "title": "func scrollDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrolldismisseskeyboard(_:)",
                    "title": "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollindicators(_:axes:)",
                    "title": "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollindicatorsflash(onappear:)",
                    "title": "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollindicatorsflash(trigger:)",
                    "title": "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollinputbehavior(_:for:)",
                    "title": "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollposition(_:anchor:)",
                    "title": "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrollposition(id:anchor:)",
                    "title": "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrolltargetbehavior(_:)",
                    "title": "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrolltargetlayout(isenabled:)",
                    "title": "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrolltransition(_:axis:transition:)",
                    "title": "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title": "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchcompletion(_:)-2pzs2",
                    "title": "func searchCompletion<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchcompletion(_:)-69pmr",
                    "title": "func searchCompletion(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchdictationbehavior(_:)",
                    "title": "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchfocused(_:)",
                    "title": "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchfocused(_:equals:)",
                    "title": "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchpresentationtoolbarbehavior(_:)",
                    "title": "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchscopes(_:activation:_:)",
                    "title": "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchscopes(_:scopes:)",
                    "title": "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchsuggestions(_:)",
                    "title": "func searchSuggestions<S>(() -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchsuggestions(_:for:)",
                    "title": "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3k9fp",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4c1h6",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5r9xf",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:editabletokens:placement:prompt:token:)-3nsud",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:editabletokens:placement:prompt:token:)-4ugp8",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:editabletokens:placement:prompt:token:)-5i3f9",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:ispresented:placement:prompt:)-1ny1i",
                    "title": "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:ispresented:placement:prompt:)-51gz5",
                    "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:ispresented:placement:prompt:)-9zlcg",
                    "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:placement:prompt:)-4icfq",
                    "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:placement:prompt:)-ks2h",
                    "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:placement:prompt:)-yon5",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:placement:prompt:suggestions:)-3d80r",
                    "title": "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:placement:prompt:suggestions:)-csau",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:placement:prompt:suggestions:)-nr32",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:ispresented:placement:prompt:token:)-25ff0",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:ispresented:placement:prompt:token:)-7atrr",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:ispresented:placement:prompt:token:)-7qvf1",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:placement:prompt:token:)-3xb4a",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:placement:prompt:token:)-6ixks",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:placement:prompt:token:)-9h4oa",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6r9xm",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6s73h",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8vd6w",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-26k88",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-8zup7",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-943e0",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/sectionactions(content:)",
                    "title": "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/selectiondisabled(_:)",
                    "title": "func selectionDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/sensoryfeedback(_:trigger:)",
                    "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/sensoryfeedback(_:trigger:condition:)",
                    "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/sensoryfeedback(trigger:_:)",
                    "title": "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/shadow(color:radius:x:y:)",
                    "title": "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/sheet(ispresented:ondismiss:content:)",
                    "title": "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/sheet(item:ondismiss:content:)",
                    "title": "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/simultaneousgesture(_:including:)",
                    "title": "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/simultaneousgesture(_:isenabled:)",
                    "title": "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/simultaneousgesture(_:name:isenabled:)",
                    "title": "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/speechadjustedpitch(_:)",
                    "title": "func speechAdjustedPitch(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/speechalwaysincludespunctuation(_:)",
                    "title": "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/speechannouncementsqueued(_:)",
                    "title": "func speechAnnouncementsQueued(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/speechspellsoutcharacters(_:)",
                    "title": "func speechSpellsOutCharacters(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/springloadingbehavior(_:)",
                    "title": "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedappview/statusbar(hidden:)",
                    "title": "func statusBar(hidden: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/statusbarhidden(_:)",
                    "title": "func statusBarHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/strikethrough(_:pattern:color:)",
                    "title": "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/submitlabel(_:)",
                    "title": "func submitLabel(SubmitLabel) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/submitscope(_:)",
                    "title": "func submitScope(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/swipeactions(edge:allowsfullswipe:content:)",
                    "title": "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/symboleffect(_:options:isactive:)",
                    "title": "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/symboleffect(_:options:value:)",
                    "title": "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/symboleffectsremoved(_:)",
                    "title": "func symbolEffectsRemoved(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/symbolrenderingmode(_:)",
                    "title": "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/symbolvariant(_:)",
                    "title": "func symbolVariant(SymbolVariants) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tabitem(_:)",
                    "title": "func tabItem<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tabviewcustomization(_:)",
                    "title": "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tabviewsidebarbottombar(content:)",
                    "title": "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tabviewsidebarfooter(content:)",
                    "title": "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tabviewsidebarheader(content:)",
                    "title": "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tabviewstyle(_:)",
                    "title": "func tabViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tablecolumnheaders(_:)",
                    "title": "func tableColumnHeaders(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tablestyle(_:)",
                    "title": "func tableStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tag(_:includeoptional:)",
                    "title": "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/task(id:priority:_:)",
                    "title": "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/task(priority:_:)",
                    "title": "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textcase(_:)",
                    "title": "func textCase(Text.Case?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textcontenttype(_:)",
                    "title": "func textContentType(UITextContentType?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/texteditorstyle(_:)",
                    "title": "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textfieldstyle(_:)",
                    "title": "func textFieldStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textinputautocapitalization(_:)",
                    "title": "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textrenderer(_:)",
                    "title": "func textRenderer<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textscale(_:isenabled:)",
                    "title": "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textselection(_:)",
                    "title": "func textSelection<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/textselectionaffinity(_:)",
                    "title": "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tint(_:)",
                    "title": "func tint(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/togglestyle(_:)",
                    "title": "func toggleStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbar(_:for:)",
                    "title": "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbar(content:)-7osst",
                    "title": "func toolbar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbar(content:)-8pe49",
                    "title": "func toolbar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbar(id:content:)",
                    "title": "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbar(removing:)",
                    "title": "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbarbackground(_:for:)-2g6ge",
                    "title": "func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbarbackground(_:for:)-9cmqh",
                    "title": "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbarbackgroundvisibility(_:for:)",
                    "title": "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbarcolorscheme(_:for:)",
                    "title": "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbarforegroundstyle(_:for:)",
                    "title": "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbarrole(_:)",
                    "title": "func toolbarRole(ToolbarRole) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbartitledisplaymode(_:)",
                    "title": "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbartitlemenu(content:)",
                    "title": "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/toolbarvisibility(_:for:)",
                    "title": "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/tracking(_:)",
                    "title": "func tracking(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transaction(_:)",
                    "title": "func transaction((inout Transaction) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transaction(_:body:)",
                    "title": "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transaction(value:_:)",
                    "title": "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transformanchorpreference(key:value:transform:)",
                    "title": "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transformeffect(_:)",
                    "title": "func transformEffect(CGAffineTransform) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transformenvironment(_:transform:)",
                    "title": "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transformpreference(_:_:)",
                    "title": "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transition(_:)-18f4p",
                    "title": "func transition(AnyTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/transition(_:)-1lxh2",
                    "title": "func transition<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/truncationmode(_:)",
                    "title": "func truncationMode(Text.TruncationMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/typeselectequivalent(_:)-3lcqd",
                    "title": "func typeSelectEquivalent(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/typeselectequivalent(_:)-5a0lh",
                    "title": "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/typeselectequivalent(_:)-6xmzx",
                    "title": "func typeSelectEquivalent<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/typesettinglanguage(_:isenabled:)-8jxb1",
                    "title": "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/typesettinglanguage(_:isenabled:)-8yyo2",
                    "title": "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/underline(_:pattern:color:)",
                    "title": "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/unredacted()",
                    "title": "func unredacted() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/useractivity(_:element:_:)",
                    "title": "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/useractivity(_:isactive:_:)",
                    "title": "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/visualeffect(_:)",
                    "title": "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/windowtoolbarfullscreenvisibility(_:)",
                    "title": "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/managedappdistribution/managedappview/writingtoolsaffordancevisibility(_:)",
                    "title": "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/writingtoolsbehavior(_:)",
                    "title": "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappview/zindex(_:)",
                    "title": "func zIndex(Double) -> some View",
                    "type": "method"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedappview/view-implementations",
                "title": "View Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/managedappdistribution/managedappview",
            "title": "ManagedAppView",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentview/init(primarylabel:secondarylabel:tertiarylabel:quaternarylabel:offerstate:offeraction:icon:)-4blv1",
                "title": "init(primaryLabel: LocalizedStringKey, secondaryLabel: LocalizedStringKey, tertiaryLabel: LocalizedStringKey, quaternaryLabel: LocalizedStringKey, offerState: ManagedContentOfferState, offerAction: (ManagedContentOfferState) -> Void, icon: () -> Icon)",
                "type": "init"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentview/init(primarylabel:secondarylabel:tertiarylabel:quaternarylabel:offerstate:offeraction:icon:)-8l3xw",
                "title": "init(primaryLabel: any StringProtocol, secondaryLabel: any StringProtocol, tertiaryLabel: any StringProtocol, quaternaryLabel: any StringProtocol, offerState: ManagedContentOfferState, offerAction: (ManagedContentOfferState) -> Void, icon: () -> Icon)",
                "type": "init"
              },
              {
                "title": "Inspecting the view",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentview/body-swift.property",
                "title": "var body: some View",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentview/body-swift.typealias",
                "title": "ManagedContentView.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accentcolor(_:)",
                    "title": "func accentColor(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(activationpoint:)-38db2",
                    "title": "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(activationpoint:)-9fsun",
                    "title": "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(addtraits:)",
                    "title": "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(hidden:)",
                    "title": "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(hint:)",
                    "title": "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(identifier:)",
                    "title": "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(inputlabels:)",
                    "title": "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(label:)",
                    "title": "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(removetraits:)",
                    "title": "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(selectionidentifier:)",
                    "title": "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(sortpriority:)",
                    "title": "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibility(value:)",
                    "title": "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityaction(_:_:)",
                    "title": "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityaction(action:label:)",
                    "title": "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityaction(named:_:)-1dk02",
                    "title": "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityaction(named:_:)-1m3b3",
                    "title": "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityaction(named:_:)-4c3ke",
                    "title": "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityactions(_:)",
                    "title": "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityactions(category:_:)",
                    "title": "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityactivationpoint(_:)-5ez7x",
                    "title": "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityactivationpoint(_:)-mwlo",
                    "title": "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityactivationpoint(_:isenabled:)-34i87",
                    "title": "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityactivationpoint(_:isenabled:)-6wb23",
                    "title": "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityaddtraits(_:)",
                    "title": "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityadjustableaction(_:)",
                    "title": "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitychartdescriptor(_:)",
                    "title": "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitychildren(children:)",
                    "title": "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-1x6he",
                    "title": "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-1zm6a",
                    "title": "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-2323g",
                    "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-2jq9u",
                    "title": "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-51brk",
                    "title": "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-5izlc",
                    "title": "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-9h5q4",
                    "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitycustomcontent(_:_:importance:)-hllj",
                    "title": "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydirecttouch(_:options:)",
                    "title": "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydragpoint(_:description:)-3uksi",
                    "title": "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydragpoint(_:description:)-7u9yr",
                    "title": "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydragpoint(_:description:)-7w3km",
                    "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydragpoint(_:description:isenabled:)-4ebah",
                    "title": "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydragpoint(_:description:isenabled:)-4fljn",
                    "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydragpoint(_:description:isenabled:)-6za94",
                    "title": "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydroppoint(_:description:)-27dll",
                    "title": "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydroppoint(_:description:)-3orwc",
                    "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydroppoint(_:description:)-935kr",
                    "title": "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydroppoint(_:description:isenabled:)-3zk2v",
                    "title": "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydroppoint(_:description:isenabled:)-5h97h",
                    "title": "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitydroppoint(_:description:isenabled:)-854q8",
                    "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityelement(children:)",
                    "title": "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityfocused(_:)",
                    "title": "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityfocused(_:equals:)",
                    "title": "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityheading(_:)",
                    "title": "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhidden(_:)",
                    "title": "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhidden(_:isenabled:)",
                    "title": "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhint(_:)-14l34",
                    "title": "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhint(_:)-5u7dc",
                    "title": "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhint(_:)-9p13p",
                    "title": "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhint(_:isenabled:)-3ro62",
                    "title": "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhint(_:isenabled:)-5sw48",
                    "title": "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityhint(_:isenabled:)-7ifcg",
                    "title": "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityidentifier(_:)",
                    "title": "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityidentifier(_:isenabled:)",
                    "title": "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityignoresinvertcolors(_:)",
                    "title": "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityinputlabels(_:)-1pbvx",
                    "title": "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityinputlabels(_:)-2gv4v",
                    "title": "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityinputlabels(_:)-7w7p5",
                    "title": "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityinputlabels(_:isenabled:)-2myfc",
                    "title": "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityinputlabels(_:isenabled:)-5ovej",
                    "title": "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityinputlabels(_:isenabled:)-losf",
                    "title": "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabel(_:)-5gcp6",
                    "title": "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabel(_:)-7kzf5",
                    "title": "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabel(_:)-9na6o",
                    "title": "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabel(_:isenabled:)-9704e",
                    "title": "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabel(_:isenabled:)-9nko3",
                    "title": "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabel(_:isenabled:)-ly5k",
                    "title": "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabel(content:)",
                    "title": "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylabeledpair(role:id:in:)",
                    "title": "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitylinkedgroup(id:in:)",
                    "title": "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityremovetraits(_:)",
                    "title": "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrepresentation(representation:)",
                    "title": "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrespondstouserinteraction(_:)",
                    "title": "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title": "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:)-47s5b",
                    "title": "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:)-4co9m",
                    "title": "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:)-70ays",
                    "title": "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:)-8zhb3",
                    "title": "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entryid:entrylabel:)-6sedq",
                    "title": "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entryid:entrylabel:)-7iio8",
                    "title": "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entryid:entrylabel:)-87bf5",
                    "title": "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entryid:entrylabel:)-ljkc",
                    "title": "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entrylabel:)-2nt5z",
                    "title": "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entrylabel:)-53bqw",
                    "title": "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entrylabel:)-9ijy2",
                    "title": "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:entries:entrylabel:)-e26s",
                    "title": "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:textranges:)-5ighp",
                    "title": "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:textranges:)-5jmik",
                    "title": "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:textranges:)-88rwg",
                    "title": "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotor(_:textranges:)-8jvck",
                    "title": "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityrotorentry(id:in:)",
                    "title": "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityscrollaction(_:)",
                    "title": "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityshowslargecontentviewer()",
                    "title": "func accessibilityShowsLargeContentViewer() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityshowslargecontentviewer(_:)",
                    "title": "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitysortpriority(_:)",
                    "title": "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilitytextcontenttype(_:)",
                    "title": "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityvalue(_:)-1g5oi",
                    "title": "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityvalue(_:)-7635w",
                    "title": "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityvalue(_:)-9f4is",
                    "title": "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityvalue(_:isenabled:)-3uvba",
                    "title": "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityvalue(_:isenabled:)-41kg9",
                    "title": "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityvalue(_:isenabled:)-9vsil",
                    "title": "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/accessibilityzoomaction(_:)",
                    "title": "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/actionsheet(ispresented:content:)",
                    "title": "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/actionsheet(item:content:)",
                    "title": "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:actions:)-5esuz",
                    "title": "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:actions:)-7cjzq",
                    "title": "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:actions:)-8s4xf",
                    "title": "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:actions:message:)-1f5wj",
                    "title": "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:actions:message:)-2npav",
                    "title": "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:actions:message:)-8eu8p",
                    "title": "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:presenting:actions:)-3qcjo",
                    "title": "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:presenting:actions:)-4vqw4",
                    "title": "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:presenting:actions:)-4yalx",
                    "title": "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:presenting:actions:message:)-3bi7i",
                    "title": "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:presenting:actions:message:)-4ulha",
                    "title": "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(_:ispresented:presenting:actions:message:)-vtav",
                    "title": "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(ispresented:content:)",
                    "title": "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(ispresented:error:actions:)",
                    "title": "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(ispresented:error:actions:message:)",
                    "title": "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alert(item:content:)",
                    "title": "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alignmentguide(_:computevalue:)-2kwym",
                    "title": "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alignmentguide(_:computevalue:)-5igmt",
                    "title": "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/alloweddynamicrange(_:)",
                    "title": "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/allowshittesting(_:)",
                    "title": "func allowsHitTesting(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/allowstightening(_:)",
                    "title": "func allowsTightening(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/allowswindowactivationevents(_:)",
                    "title": "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/anchorpreference(key:value:transform:)",
                    "title": "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/animation(_:)",
                    "title": "func animation(Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/animation(_:body:)",
                    "title": "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/animation(_:value:)",
                    "title": "func animation<V>(Animation?, value: V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/aspectratio(_:contentmode:)-1at2f",
                    "title": "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/aspectratio(_:contentmode:)-715yy",
                    "title": "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/autocapitalization(_:)",
                    "title": "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/autocorrectiondisabled(_:)",
                    "title": "func autocorrectionDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(_:alignment:)",
                    "title": "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(_:ignoressafeareaedges:)",
                    "title": "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(_:in:fillstyle:)-6z9hd",
                    "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(_:in:fillstyle:)-7k3zh",
                    "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(alignment:content:)",
                    "title": "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(ignoressafeareaedges:)",
                    "title": "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(in:fillstyle:)-7pohj",
                    "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/background(in:fillstyle:)-8nplw",
                    "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/backgroundpreferencevalue(_:_:)",
                    "title": "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/backgroundpreferencevalue(_:alignment:_:)",
                    "title": "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/backgroundstyle(_:)",
                    "title": "func backgroundStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/badge(_:)-2rmp0",
                    "title": "func badge(LocalizedStringKey?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/badge(_:)-3ryat",
                    "title": "func badge(Int) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/badge(_:)-3wxpz",
                    "title": "func badge<S>(S?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/badge(_:)-5xtx9",
                    "title": "func badge(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/badgeprominence(_:)",
                    "title": "func badgeProminence(BadgeProminence) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/baselineoffset(_:)",
                    "title": "func baselineOffset(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/blendmode(_:)",
                    "title": "func blendMode(BlendMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/blur(radius:opaque:)",
                    "title": "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/bold(_:)",
                    "title": "func bold(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/border(_:width:)",
                    "title": "func border<S>(S, width: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/brightness(_:)",
                    "title": "func brightness(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/buttonbordershape(_:)",
                    "title": "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/buttonrepeatbehavior(_:)",
                    "title": "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/buttonstyle(_:)-5ni8r",
                    "title": "func buttonStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/buttonstyle(_:)-7gw3e",
                    "title": "func buttonStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/clipshape(_:style:)",
                    "title": "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/clipped(antialiased:)",
                    "title": "func clipped(antialiased: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/coloreffect(_:isenabled:)",
                    "title": "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/colorinvert()",
                    "title": "func colorInvert() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/colormultiply(_:)",
                    "title": "func colorMultiply(Color) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/colorscheme(_:)",
                    "title": "func colorScheme(ColorScheme) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/compositinggroup()",
                    "title": "func compositingGroup() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:actions:)-2poj6",
                    "title": "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:actions:)-41nnq",
                    "title": "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:actions:)-qix8",
                    "title": "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2860e",
                    "title": "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9sifx",
                    "title": "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9zejj",
                    "title": "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1le7w",
                    "title": "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5s3gj",
                    "title": "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-78qy6",
                    "title": "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3r3vm",
                    "title": "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4t2jq",
                    "title": "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8ytko",
                    "title": "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/containerbackground(_:for:)",
                    "title": "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/containerbackground(for:alignment:content:)",
                    "title": "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/containerrelativeframe(_:alignment:)",
                    "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/containerrelativeframe(_:alignment:_:)",
                    "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title": "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/containershape(_:)",
                    "title": "func containerShape<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/containervalue(_:_:)",
                    "title": "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contentmargins(_:_:for:)-3cai0",
                    "title": "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contentmargins(_:_:for:)-55vdp",
                    "title": "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contentmargins(_:for:)",
                    "title": "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contentshape(_:_:eofill:)",
                    "title": "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contentshape(_:eofill:)",
                    "title": "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/contenttoolbar(for:content:)-7p18u",
                    "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/contenttoolbar(for:content:)-q1dy",
                    "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contenttransition(_:)",
                    "title": "func contentTransition(ContentTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/contextmenu(_:)",
                    "title": "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title": "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contextmenu(menuitems:)",
                    "title": "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contextmenu(menuitems:preview:)",
                    "title": "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/contrast(_:)",
                    "title": "func contrast(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/controlgroupstyle(_:)",
                    "title": "func controlGroupStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/controlsize(_:)",
                    "title": "func controlSize(ControlSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/coordinatespace(_:)",
                    "title": "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/coordinatespace(name:)",
                    "title": "func coordinateSpace<T>(name: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/cornerradius(_:antialiased:)",
                    "title": "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/datepickerstyle(_:)",
                    "title": "func datePickerStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/defaultadaptabletabbarplacement(_:)",
                    "title": "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/defaultappstorage(_:)",
                    "title": "func defaultAppStorage(UserDefaults) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/defaultfocus(_:_:priority:)",
                    "title": "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/defaulthovereffect(_:)-60q7l",
                    "title": "func defaultHoverEffect(some CustomHoverEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/defaulthovereffect(_:)-64hm",
                    "title": "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/defaultscrollanchor(_:)",
                    "title": "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/defaultscrollanchor(_:for:)",
                    "title": "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/deferssystemgestures(on:)",
                    "title": "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/deletedisabled(_:)",
                    "title": "func deleteDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dialogicon(_:)",
                    "title": "func dialogIcon(Image?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dialogsuppressiontoggle(_:issuppressed:)-7n3tz",
                    "title": "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dialogsuppressiontoggle(_:issuppressed:)-85wgd",
                    "title": "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dialogsuppressiontoggle(_:issuppressed:)-8kx7o",
                    "title": "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dialogsuppressiontoggle(issuppressed:)",
                    "title": "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/disableautocorrection(_:)",
                    "title": "func disableAutocorrection(Bool?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/disabled(_:)",
                    "title": "func disabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/disclosuregroupstyle(_:)",
                    "title": "func disclosureGroupStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title": "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/documentbrowsercontextmenu(_:)",
                    "title": "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/draggable(_:)",
                    "title": "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/draggable(_:preview:)",
                    "title": "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/drawinggroup(opaque:colormode:)",
                    "title": "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dropdestination(for:action:istargeted:)",
                    "title": "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dynamictypesize(_:)-2t8vw",
                    "title": "func dynamicTypeSize<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/dynamictypesize(_:)-871bp",
                    "title": "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/edgesignoringsafearea(_:)",
                    "title": "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/environment(_:)",
                    "title": "func environment<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/environment(_:_:)",
                    "title": "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/environmentobject(_:)",
                    "title": "func environmentObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogbrowseroptions(_:)",
                    "title": "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogconfirmationlabel(_:)-5ub7",
                    "title": "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogconfirmationlabel(_:)-7cnce",
                    "title": "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogconfirmationlabel(_:)-8j46d",
                    "title": "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogcustomizationid(_:)",
                    "title": "func fileDialogCustomizationID(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogdefaultdirectory(_:)",
                    "title": "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogimportsunresolvedaliases(_:)",
                    "title": "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogmessage(_:)-7u3oa",
                    "title": "func fileDialogMessage<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogmessage(_:)-93c1b",
                    "title": "func fileDialogMessage(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogmessage(_:)-ex0x",
                    "title": "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filedialogurlenabled(_:)",
                    "title": "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3iaj1",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3x18f",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6i3li",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8u12b",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:documents:contenttype:oncompletion:)-6fbms",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:documents:contenttype:oncompletion:)-6oo39",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5hkxv",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9qeyu",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title": "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title": "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporterfilenamelabel(_:)-3wncv",
                    "title": "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporterfilenamelabel(_:)-60ix5",
                    "title": "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileexporterfilenamelabel(_:)-j0rr",
                    "title": "func fileExporterFilenameLabel(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filemover(ispresented:file:oncompletion:)",
                    "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filemover(ispresented:files:oncompletion:)",
                    "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/finddisabled(_:)",
                    "title": "func findDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/findnavigator(ispresented:)",
                    "title": "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fixedsize()",
                    "title": "func fixedSize() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fixedsize(horizontal:vertical:)",
                    "title": "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/flipsforrighttoleftlayoutdirection(_:)",
                    "title": "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focuseffectdisabled(_:)",
                    "title": "func focusEffectDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusable(_:)",
                    "title": "func focusable(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusable(_:interactions:)",
                    "title": "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focused(_:)",
                    "title": "func focused(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focused(_:equals:)",
                    "title": "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedobject(_:)-1amf4",
                    "title": "func focusedObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedobject(_:)-4iepm",
                    "title": "func focusedObject<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedsceneobject(_:)-4yclo",
                    "title": "func focusedSceneObject<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedsceneobject(_:)-5wb4p",
                    "title": "func focusedSceneObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedscenevalue(_:)",
                    "title": "func focusedSceneValue<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedscenevalue(_:_:)-1688d",
                    "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedscenevalue(_:_:)-fptk",
                    "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedvalue(_:)",
                    "title": "func focusedValue<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedvalue(_:_:)-4bsze",
                    "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/focusedvalue(_:_:)-9urod",
                    "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/font(_:)",
                    "title": "func font(Font?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fontdesign(_:)",
                    "title": "func fontDesign(Font.Design?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fontweight(_:)",
                    "title": "func fontWeight(Font.Weight?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fontwidth(_:)",
                    "title": "func fontWidth(Font.Width?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/foregroundcolor(_:)",
                    "title": "func foregroundColor(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/foregroundstyle(_:)",
                    "title": "func foregroundStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/foregroundstyle(_:_:)",
                    "title": "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/foregroundstyle(_:_:_:)",
                    "title": "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/formstyle(_:)",
                    "title": "func formStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/frame()",
                    "title": "func frame() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title": "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/frame(width:height:alignment:)",
                    "title": "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fullscreencover(ispresented:ondismiss:content:)",
                    "title": "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/fullscreencover(item:ondismiss:content:)",
                    "title": "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gaugestyle(_:)",
                    "title": "func gaugeStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/geometrygroup()",
                    "title": "func geometryGroup() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gesture(_:)",
                    "title": "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gesture(_:including:)",
                    "title": "func gesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gesture(_:isenabled:)",
                    "title": "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gesture(_:name:isenabled:)",
                    "title": "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/grayscale(_:)",
                    "title": "func grayscale(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gridcellanchor(_:)",
                    "title": "func gridCellAnchor(UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gridcellcolumns(_:)",
                    "title": "func gridCellColumns(Int) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gridcellunsizedaxes(_:)",
                    "title": "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/gridcolumnalignment(_:)",
                    "title": "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/groupboxstyle(_:)",
                    "title": "func groupBoxStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/handgestureshortcut(_:isenabled:)",
                    "title": "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/handlesexternalevents(preferring:allowing:)",
                    "title": "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/headerprominence(_:)",
                    "title": "func headerProminence(Prominence) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/help(_:)-233bv",
                    "title": "func help<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/help(_:)-8nioo",
                    "title": "func help(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/help(_:)-9ohkw",
                    "title": "func help(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/hidden()",
                    "title": "func hidden() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/highprioritygesture(_:including:)",
                    "title": "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/highprioritygesture(_:isenabled:)",
                    "title": "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/highprioritygesture(_:name:isenabled:)",
                    "title": "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/hovereffect(_:)",
                    "title": "func hoverEffect(HoverEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/hovereffect(_:isenabled:)",
                    "title": "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/hovereffectdisabled(_:)",
                    "title": "func hoverEffectDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/huerotation(_:)",
                    "title": "func hueRotation(Angle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/id(_:)",
                    "title": "func id<ID>(ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ignoressafearea(_:edges:)",
                    "title": "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/imagescale(_:)",
                    "title": "func imageScale(Image.Scale) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/indexviewstyle(_:)",
                    "title": "func indexViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/inspector(ispresented:content:)",
                    "title": "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/inspectorcolumnwidth(_:)",
                    "title": "func inspectorColumnWidth(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/inspectorcolumnwidth(min:ideal:max:)",
                    "title": "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/interactionactivitytrackingtag(_:)",
                    "title": "func interactionActivityTrackingTag(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/interactivedismissdisabled(_:)",
                    "title": "func interactiveDismissDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/invalidatablecontent(_:)",
                    "title": "func invalidatableContent(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/italic(_:)",
                    "title": "func italic(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/itemprovider(_:)",
                    "title": "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/kerning(_:)",
                    "title": "func kerning(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/keyboardshortcut(_:)-4212u",
                    "title": "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/keyboardshortcut(_:)-rzcp",
                    "title": "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/keyboardshortcut(_:modifiers:)",
                    "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/keyboardshortcut(_:modifiers:localization:)",
                    "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/keyboardtype(_:)",
                    "title": "func keyboardType(UIKeyboardType) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title": "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title": "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/labelstyle(_:)",
                    "title": "func labelStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/labeledcontentstyle(_:)",
                    "title": "func labeledContentStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/labelshidden()",
                    "title": "func labelsHidden() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/labelsvisibility(_:)",
                    "title": "func labelsVisibility(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/layereffect(_:maxsampleoffset:isenabled:)",
                    "title": "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/layoutdirectionbehavior(_:)",
                    "title": "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/layoutpriority(_:)",
                    "title": "func layoutPriority(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/layoutvalue(key:value:)",
                    "title": "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/linelimit(_:)-2hw7t",
                    "title": "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/linelimit(_:)-36wru",
                    "title": "func lineLimit(ClosedRange<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/linelimit(_:)-6opjo",
                    "title": "func lineLimit(Int?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/linelimit(_:)-9suxp",
                    "title": "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/linelimit(_:reservesspace:)",
                    "title": "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/linespacing(_:)",
                    "title": "func lineSpacing(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listitemtint(_:)-29p3e",
                    "title": "func listItemTint(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listitemtint(_:)-7dbfc",
                    "title": "func listItemTint(ListItemTint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listrowbackground(_:)",
                    "title": "func listRowBackground<V>(V?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listrowinsets(_:)",
                    "title": "func listRowInsets(EdgeInsets?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listrowseparator(_:edges:)",
                    "title": "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listrowseparatortint(_:edges:)",
                    "title": "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listrowspacing(_:)",
                    "title": "func listRowSpacing(CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listsectionseparator(_:edges:)",
                    "title": "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listsectionseparatortint(_:edges:)",
                    "title": "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listsectionspacing(_:)-9khne",
                    "title": "func listSectionSpacing(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/listsectionspacing(_:)-hsbl",
                    "title": "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/liststyle(_:)",
                    "title": "func listStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/luminancetoalpha()",
                    "title": "func luminanceToAlpha() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/managedcontentstyle(_:)",
                    "title": "func managedContentStyle(ManagedContentStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/mask(_:)",
                    "title": "func mask<Mask>(Mask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/mask(alignment:_:)",
                    "title": "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title": "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/matchedtransitionsource(id:in:)",
                    "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/matchedtransitionsource(id:in:configuration:)",
                    "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/materialactiveappearance(_:)",
                    "title": "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/menuactiondismissbehavior(_:)",
                    "title": "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/menuindicator(_:)",
                    "title": "func menuIndicator(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/menuorder(_:)",
                    "title": "func menuOrder(MenuOrder) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/menustyle(_:)",
                    "title": "func menuStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/minimumscalefactor(_:)",
                    "title": "func minimumScaleFactor(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/modifier(_:)",
                    "title": "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/monospaced(_:)",
                    "title": "func monospaced(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/monospaceddigit()",
                    "title": "func monospacedDigit() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/movedisabled(_:)",
                    "title": "func moveDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/multilinetextalignment(_:)",
                    "title": "func multilineTextAlignment(TextAlignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbarbackbuttonhidden(_:)",
                    "title": "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbarhidden(_:)",
                    "title": "func navigationBarHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbaritems(leading:)",
                    "title": "func navigationBarItems<L>(leading: L) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbaritems(leading:trailing:)",
                    "title": "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbaritems(trailing:)",
                    "title": "func navigationBarItems<T>(trailing: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbartitle(_:)-18zh3",
                    "title": "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbartitle(_:)-6pncb",
                    "title": "func navigationBarTitle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbartitle(_:)-9akdh",
                    "title": "func navigationBarTitle(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbartitle(_:displaymode:)-4uagh",
                    "title": "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbartitle(_:displaymode:)-68koy",
                    "title": "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbartitle(_:displaymode:)-92rlm",
                    "title": "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationbartitledisplaymode(_:)",
                    "title": "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdestination(for:destination:)",
                    "title": "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdestination(ispresented:destination:)",
                    "title": "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdestination(item:destination:)",
                    "title": "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdocument(_:)-7frvc",
                    "title": "func navigationDocument<D>(D) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdocument(_:)-7sy96",
                    "title": "func navigationDocument(URL) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdocument(_:preview:)-121dp",
                    "title": "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdocument(_:preview:)-3uj9b",
                    "title": "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdocument(_:preview:)-955u3",
                    "title": "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationdocument(_:preview:)-9t6kw",
                    "title": "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationsplitviewcolumnwidth(_:)",
                    "title": "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title": "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationsplitviewstyle(_:)",
                    "title": "func navigationSplitViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationtitle(_:)-31qxy",
                    "title": "func navigationTitle(Binding<String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationtitle(_:)-7a5w8",
                    "title": "func navigationTitle(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationtitle(_:)-85civ",
                    "title": "func navigationTitle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationtitle(_:)-892dt",
                    "title": "func navigationTitle(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationtitle(_:)-m0qd",
                    "title": "func navigationTitle<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationtransition(_:)",
                    "title": "func navigationTransition(some NavigationTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/navigationviewstyle(_:)",
                    "title": "func navigationViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/offset(_:)",
                    "title": "func offset(CGSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/offset(x:y:)",
                    "title": "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onappear(perform:)",
                    "title": "func onAppear(perform: (() -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onchange(of:initial:_:)-8d325",
                    "title": "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onchange(of:initial:_:)-9j726",
                    "title": "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/onchange(of:perform:)",
                    "title": "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/oncontinueuseractivity(_:perform:)",
                    "title": "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/oncontinuoushover(coordinatespace:perform:)",
                    "title": "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ondisappear(perform:)",
                    "title": "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrag(_:)",
                    "title": "func onDrag(() -> NSItemProvider) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrag(_:preview:)",
                    "title": "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrop(of:delegate:)-27lac",
                    "title": "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrop(of:delegate:)-77ia",
                    "title": "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrop(of:istargeted:perform:)-3fddn",
                    "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrop(of:istargeted:perform:)-80x8u",
                    "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrop(of:istargeted:perform:)-83k1w",
                    "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/ondrop(of:istargeted:perform:)-8xl63",
                    "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ongeometrychange(for:of:action:)-9jbjt",
                    "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ongeometrychange(for:of:action:)-scxp",
                    "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onhover(perform:)",
                    "title": "func onHover(perform: (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onkeypress(_:action:)",
                    "title": "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onkeypress(_:phases:action:)",
                    "title": "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onkeypress(characters:phases:action:)",
                    "title": "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onkeypress(keys:phases:action:)",
                    "title": "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onkeypress(phases:action:)",
                    "title": "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onopenurl(perform:)",
                    "title": "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onpencildoubletap(perform:)",
                    "title": "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onpencilsqueeze(perform:)",
                    "title": "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onpreferencechange(_:perform:)",
                    "title": "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onreceive(_:perform:)",
                    "title": "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onscrollgeometrychange(for:of:action:)",
                    "title": "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onscrollphasechange(_:)-12z2z",
                    "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onscrollphasechange(_:)-7avgp",
                    "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title": "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onscrollvisibilitychange(threshold:_:)",
                    "title": "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/onsubmit(of:_:)",
                    "title": "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ontapgesture(count:coordinatespace:perform:)",
                    "title": "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/ontapgesture(count:perform:)",
                    "title": "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/opacity(_:)",
                    "title": "func opacity(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/overlay(_:alignment:)",
                    "title": "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/overlay(_:ignoressafeareaedges:)",
                    "title": "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/overlay(_:in:fillstyle:)",
                    "title": "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/overlay(alignment:content:)",
                    "title": "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/overlaypreferencevalue(_:_:)",
                    "title": "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/overlaypreferencevalue(_:alignment:_:)",
                    "title": "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/padding(_:)-3o7wn",
                    "title": "func padding(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/padding(_:)-8j0sc",
                    "title": "func padding(EdgeInsets) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/padding(_:_:)",
                    "title": "func padding(Edge.Set, CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/paletteselectioneffect(_:)",
                    "title": "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/persistentsystemoverlays(_:)",
                    "title": "func persistentSystemOverlays(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/phaseanimator(_:content:animation:)",
                    "title": "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/phaseanimator(_:trigger:content:animation:)",
                    "title": "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/pickerstyle(_:)",
                    "title": "func pickerStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title": "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/popover(item:attachmentanchor:arrowedge:content:)",
                    "title": "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/position(_:)",
                    "title": "func position(CGPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/position(x:y:)",
                    "title": "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/preference(key:value:)",
                    "title": "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/preferredcolorscheme(_:)",
                    "title": "func preferredColorScheme(ColorScheme?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationbackground(_:)",
                    "title": "func presentationBackground<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationbackground(alignment:content:)",
                    "title": "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationbackgroundinteraction(_:)",
                    "title": "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationcompactadaptation(_:)",
                    "title": "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationcompactadaptation(horizontal:vertical:)",
                    "title": "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationcontentinteraction(_:)",
                    "title": "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationcornerradius(_:)",
                    "title": "func presentationCornerRadius(CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationdetents(_:)",
                    "title": "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationdetents(_:selection:)",
                    "title": "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationdragindicator(_:)",
                    "title": "func presentationDragIndicator(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/presentationsizing(_:)",
                    "title": "func presentationSizing(some PresentationSizing) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/previewcontext(_:)",
                    "title": "func previewContext<C>(C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/previewdevice(_:)",
                    "title": "func previewDevice(PreviewDevice?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/previewdisplayname(_:)",
                    "title": "func previewDisplayName(String?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/previewinterfaceorientation(_:)",
                    "title": "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/previewlayout(_:)",
                    "title": "func previewLayout(PreviewLayout) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/privacysensitive(_:)",
                    "title": "func privacySensitive(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/progressviewstyle(_:)",
                    "title": "func progressViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/projectioneffect(_:)",
                    "title": "func projectionEffect(ProjectionTransform) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/redacted(reason:)",
                    "title": "func redacted(reason: RedactionReasons) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/refreshable(action:)",
                    "title": "func refreshable(action: () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/renameaction(_:)-5ayzq",
                    "title": "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/renameaction(_:)-9lm7a",
                    "title": "func renameAction(() -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/replacedisabled(_:)",
                    "title": "func replaceDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title": "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/rotationeffect(_:anchor:)",
                    "title": "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/safeareainset(edge:alignment:spacing:content:)-89sbo",
                    "title": "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/safeareainset(edge:alignment:spacing:content:)-8uy3v",
                    "title": "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/safeareapadding(_:)-30ulv",
                    "title": "func safeAreaPadding(EdgeInsets) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/safeareapadding(_:)-6vc5",
                    "title": "func safeAreaPadding(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/safeareapadding(_:_:)",
                    "title": "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/saturation(_:)",
                    "title": "func saturation(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scaleeffect(_:anchor:)-18wi5",
                    "title": "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scaleeffect(_:anchor:)-5kn8a",
                    "title": "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scaleeffect(x:y:anchor:)",
                    "title": "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scaledtofill()",
                    "title": "func scaledToFill() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scaledtofit()",
                    "title": "func scaledToFit() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scenepadding(_:)",
                    "title": "func scenePadding(Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scenepadding(_:edges:)",
                    "title": "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollbouncebehavior(_:axes:)",
                    "title": "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollclipdisabled(_:)",
                    "title": "func scrollClipDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollcontentbackground(_:)",
                    "title": "func scrollContentBackground(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrolldisabled(_:)",
                    "title": "func scrollDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrolldismisseskeyboard(_:)",
                    "title": "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollindicators(_:axes:)",
                    "title": "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollindicatorsflash(onappear:)",
                    "title": "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollindicatorsflash(trigger:)",
                    "title": "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollinputbehavior(_:for:)",
                    "title": "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollposition(_:anchor:)",
                    "title": "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrollposition(id:anchor:)",
                    "title": "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrolltargetbehavior(_:)",
                    "title": "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrolltargetlayout(isenabled:)",
                    "title": "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrolltransition(_:axis:transition:)",
                    "title": "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title": "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchcompletion(_:)-7em9s",
                    "title": "func searchCompletion<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchcompletion(_:)-89s95",
                    "title": "func searchCompletion(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchdictationbehavior(_:)",
                    "title": "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchfocused(_:)",
                    "title": "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchfocused(_:equals:)",
                    "title": "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchpresentationtoolbarbehavior(_:)",
                    "title": "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchscopes(_:activation:_:)",
                    "title": "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchscopes(_:scopes:)",
                    "title": "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchsuggestions(_:)",
                    "title": "func searchSuggestions<S>(() -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchsuggestions(_:for:)",
                    "title": "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2l6jb",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9qtre",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9s17y",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:editabletokens:placement:prompt:token:)-19uzm",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:editabletokens:placement:prompt:token:)-218jx",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:editabletokens:placement:prompt:token:)-9kb2",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:ispresented:placement:prompt:)-1k3wn",
                    "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:ispresented:placement:prompt:)-3y9zl",
                    "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:ispresented:placement:prompt:)-8g1pt",
                    "title": "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:placement:prompt:)-26qo4",
                    "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:placement:prompt:)-3b6al",
                    "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:placement:prompt:)-3pb2a",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:placement:prompt:suggestions:)-3i7fz",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:placement:prompt:suggestions:)-4lp84",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:placement:prompt:suggestions:)-4u1ru",
                    "title": "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:ispresented:placement:prompt:token:)-5biej",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:ispresented:placement:prompt:token:)-5c9kd",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:ispresented:placement:prompt:token:)-72po0",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:placement:prompt:token:)-2ea6p",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:placement:prompt:token:)-klt1",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:placement:prompt:token:)-qk2i",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1x4r7",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-47nfg",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7ea5d",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1ucag",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2o50p",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3ltws",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/sectionactions(content:)",
                    "title": "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/selectiondisabled(_:)",
                    "title": "func selectionDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/sensoryfeedback(_:trigger:)",
                    "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/sensoryfeedback(_:trigger:condition:)",
                    "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/sensoryfeedback(trigger:_:)",
                    "title": "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/shadow(color:radius:x:y:)",
                    "title": "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/sheet(ispresented:ondismiss:content:)",
                    "title": "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/sheet(item:ondismiss:content:)",
                    "title": "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/simultaneousgesture(_:including:)",
                    "title": "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/simultaneousgesture(_:isenabled:)",
                    "title": "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/simultaneousgesture(_:name:isenabled:)",
                    "title": "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/speechadjustedpitch(_:)",
                    "title": "func speechAdjustedPitch(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/speechalwaysincludespunctuation(_:)",
                    "title": "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/speechannouncementsqueued(_:)",
                    "title": "func speechAnnouncementsQueued(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/speechspellsoutcharacters(_:)",
                    "title": "func speechSpellsOutCharacters(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/springloadingbehavior(_:)",
                    "title": "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/statusbar(hidden:)",
                    "title": "func statusBar(hidden: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/statusbarhidden(_:)",
                    "title": "func statusBarHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/strikethrough(_:pattern:color:)",
                    "title": "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/submitlabel(_:)",
                    "title": "func submitLabel(SubmitLabel) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/submitscope(_:)",
                    "title": "func submitScope(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/swipeactions(edge:allowsfullswipe:content:)",
                    "title": "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/symboleffect(_:options:isactive:)",
                    "title": "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/symboleffect(_:options:value:)",
                    "title": "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/symboleffectsremoved(_:)",
                    "title": "func symbolEffectsRemoved(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/symbolrenderingmode(_:)",
                    "title": "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/symbolvariant(_:)",
                    "title": "func symbolVariant(SymbolVariants) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tabitem(_:)",
                    "title": "func tabItem<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tabviewcustomization(_:)",
                    "title": "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tabviewsidebarbottombar(content:)",
                    "title": "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tabviewsidebarfooter(content:)",
                    "title": "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tabviewsidebarheader(content:)",
                    "title": "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tabviewstyle(_:)",
                    "title": "func tabViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tablecolumnheaders(_:)",
                    "title": "func tableColumnHeaders(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tablestyle(_:)",
                    "title": "func tableStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tag(_:includeoptional:)",
                    "title": "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/task(id:priority:_:)",
                    "title": "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/task(priority:_:)",
                    "title": "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textcase(_:)",
                    "title": "func textCase(Text.Case?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textcontenttype(_:)",
                    "title": "func textContentType(UITextContentType?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/texteditorstyle(_:)",
                    "title": "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textfieldstyle(_:)",
                    "title": "func textFieldStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textinputautocapitalization(_:)",
                    "title": "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textrenderer(_:)",
                    "title": "func textRenderer<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textscale(_:isenabled:)",
                    "title": "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textselection(_:)",
                    "title": "func textSelection<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/textselectionaffinity(_:)",
                    "title": "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tint(_:)",
                    "title": "func tint(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/togglestyle(_:)",
                    "title": "func toggleStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbar(_:for:)",
                    "title": "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbar(content:)-788rs",
                    "title": "func toolbar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbar(content:)-874gh",
                    "title": "func toolbar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbar(id:content:)",
                    "title": "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbar(removing:)",
                    "title": "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbarbackground(_:for:)-5v1x",
                    "title": "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbarbackground(_:for:)-81x00",
                    "title": "func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbarbackgroundvisibility(_:for:)",
                    "title": "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbarcolorscheme(_:for:)",
                    "title": "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbarforegroundstyle(_:for:)",
                    "title": "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbarrole(_:)",
                    "title": "func toolbarRole(ToolbarRole) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbartitledisplaymode(_:)",
                    "title": "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbartitlemenu(content:)",
                    "title": "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/toolbarvisibility(_:for:)",
                    "title": "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/tracking(_:)",
                    "title": "func tracking(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transaction(_:)",
                    "title": "func transaction((inout Transaction) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transaction(_:body:)",
                    "title": "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transaction(value:_:)",
                    "title": "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transformanchorpreference(key:value:transform:)",
                    "title": "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transformeffect(_:)",
                    "title": "func transformEffect(CGAffineTransform) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transformenvironment(_:transform:)",
                    "title": "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transformpreference(_:_:)",
                    "title": "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transition(_:)-1ptk4",
                    "title": "func transition<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/transition(_:)-61pmy",
                    "title": "func transition(AnyTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/truncationmode(_:)",
                    "title": "func truncationMode(Text.TruncationMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/typeselectequivalent(_:)-49cf8",
                    "title": "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/typeselectequivalent(_:)-5cazx",
                    "title": "func typeSelectEquivalent<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/typeselectequivalent(_:)-8ihvh",
                    "title": "func typeSelectEquivalent(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/typesettinglanguage(_:isenabled:)-3m58d",
                    "title": "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/typesettinglanguage(_:isenabled:)-6vc6r",
                    "title": "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/underline(_:pattern:color:)",
                    "title": "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/unredacted()",
                    "title": "func unredacted() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/useractivity(_:element:_:)",
                    "title": "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/useractivity(_:isactive:_:)",
                    "title": "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/visualeffect(_:)",
                    "title": "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/windowtoolbarfullscreenvisibility(_:)",
                    "title": "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/managedappdistribution/managedcontentview/writingtoolsaffordancevisibility(_:)",
                    "title": "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/writingtoolsbehavior(_:)",
                    "title": "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentview/zindex(_:)",
                    "title": "func zIndex(Double) -> some View",
                    "type": "method"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedcontentview/view-implementations",
                "title": "View Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/managedappdistribution/managedcontentview",
            "title": "ManagedContentView",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating states",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/custom(title:)",
                "title": "static func custom(title: String) -> ManagedContentOfferState",
                "type": "method"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/installing(progress:)",
                "title": "static func installing(progress: Double?) -> ManagedContentOfferState",
                "type": "method"
              },
              {
                "title": "Determining installation status",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/installed",
                "title": "static var installed: ManagedContentOfferState",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/notinstalled",
                "title": "static var notInstalled: ManagedContentOfferState",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/neverinstalled",
                "title": "static var neverInstalled: ManagedContentOfferState",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/noninteractive",
                "title": "static var noninteractive: ManagedContentOfferState",
                "type": "property"
              },
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/==(_:_:)",
                "title": "static func == (ManagedContentOfferState, ManagedContentOfferState) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentofferstate/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedcontentofferstate/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedcontentofferstate/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/managedappdistribution/managedcontentofferstate",
            "title": "ManagedContentOfferState",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Determining styles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentstyle/automatic",
                "title": "static var automatic: ManagedContentStyle",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentstyle/compact",
                "title": "static var compact: ManagedContentStyle",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedcontentstyle/header",
                "title": "static var header: ManagedContentStyle",
                "type": "property"
              }
            ],
            "path": "/documentation/managedappdistribution/managedcontentstyle",
            "title": "ManagedContentStyle",
            "type": "struct"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating an error object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "title": "Inspecting errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/devicenotmanaged",
                "title": "case deviceNotManaged",
                "type": "case"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/networkerror",
                "title": "case networkError",
                "type": "case"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/unrecoverableerror",
                "title": "case unrecoverableError",
                "type": "case"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/unsupportedplatform",
                "title": "case unsupportedPlatform",
                "type": "case"
              },
              {
                "title": "Providing error information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/description",
                "title": "var description: String",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/errordescription",
                "title": "var errorDescription: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/failurereason",
                "title": "var failureReason: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/recoveryoptions",
                "title": "var recoveryOptions: [String]",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/recoverysuggestion",
                "title": "var recoverySuggestion: String?",
                "type": "property"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/localizedstringresource",
                "title": "var localizedStringResource: LocalizedStringResource",
                "type": "property"
              },
              {
                "title": "Providing help information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/helpanchor",
                "title": "var helpAnchor: String?",
                "type": "property"
              },
              {
                "title": "Recovering from errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/attemptrecovery(optionindex:)",
                "title": "func attemptRecovery(optionIndex: Int) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/attemptrecovery(optionindex:resulthandler:)",
                "title": "func attemptRecovery(optionIndex: Int, resultHandler: (Bool) -> Void)",
                "type": "method"
              },
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/==(_:_:)",
                "title": "static func == (ManagedAppDistributionError, ManagedAppDistributionError) -> Bool",
                "type": "op"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/appnotmanaged",
                "title": "case appNotManaged",
                "type": "case"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/licensenotfound",
                "title": "case licenseNotFound",
                "type": "case"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "path": "/documentation/managedappdistribution/managedappdistributionerror/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappdistributionerror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedappdistributionerror/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/managedappdistribution/managedappdistributionerror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/managedappdistribution/managedappdistributionerror/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/managedappdistribution/managedappdistributionerror",
            "title": "ManagedAppDistributionError",
            "type": "enum"
          }
        ],
        "path": "/documentation/managedappdistribution",
        "title": "ManagedAppDistribution",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
