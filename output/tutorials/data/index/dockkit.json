{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Controlling the dock accessory",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/dockkit/controlling-a-dockkit-accessory-using-your-camera-app",
            "title": "Controlling a DockKit accessory using your camera app",
            "type": "sampleCode"
          },
          {
            "title": "Customizing tracking behavior",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/dockkit/modify-rotation-and-positioning-behavior-programmatically",
            "title": "Modify rotation and positioning programmatically",
            "type": "article"
          },
          {
            "path": "/documentation/dockkit/track-custom-objects-in-a-frame",
            "title": "Track custom objects in a frame",
            "type": "article"
          }
        ],
        "path": "/documentation/dockkit",
        "title": "DockKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Controlling the dock accessory",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/dockkit/controlling-a-dockkit-accessory-using-your-camera-app",
            "title": "Controlling a DockKit accessory using your camera app",
            "type": "sampleCode"
          },
          {
            "title": "Customizing tracking behavior",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/dockkit/modify-rotation-and-positioning-behavior-programmatically",
            "title": "Modify rotation and positioning programmatically",
            "type": "article"
          },
          {
            "path": "/documentation/dockkit/track-custom-objects-in-a-frame",
            "title": "Track custom objects in a frame",
            "type": "article"
          }
        ],
        "path": "/documentation/dockkit",
        "title": "DockKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Controlling the dock accessory",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/dockkit/controlling-a-dockkit-accessory-using-your-camera-app",
            "title": "Controlling a DockKit accessory using your camera app",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Obtaining a manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessorymanager/shared",
                "title": "static let shared: DockAccessoryManager",
                "type": "property"
              },
              {
                "title": "Controlling dock accessories",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessorymanager/accessorystatechanges",
                "title": "var accessoryStateChanges: DockAccessory.StateChanges",
                "type": "property"
              },
              {
                "title": "Changing tracking behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessorymanager/issystemtrackingenabled",
                "title": "var isSystemTrackingEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/dockkit/dockaccessorymanager/setsystemtrackingenabled(_:)",
                "title": "func setSystemTrackingEnabled(Bool) async throws",
                "type": "method"
              }
            ],
            "path": "/documentation/dockkit/dockaccessorymanager",
            "title": "DockAccessoryManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Selecting and tracking",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/selectsubject(at:)",
                "title": "func selectSubject(at: CGPoint) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/track(_:camerainformation:)-4yl9b",
                "title": "func track([AVMetadataObject], cameraInformation: DockAccessory.CameraInformation) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/track(_:camerainformation:)-44mwn",
                "title": "func track([DockAccessory.Observation], cameraInformation: DockAccessory.CameraInformation) async throws",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an observation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/observation/init(identifier:type:rect:faceyawangle:)",
                    "title": "init(identifier: Int, type: DockAccessory.Observation.ObservationType, rect: CGRect, faceYawAngle: Measurement<UnitAngle>?)",
                    "type": "init"
                  },
                  {
                    "title": "Getting properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/observation/faceyawangle",
                    "title": "let faceYawAngle: Measurement<UnitAngle>?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/observation/rect",
                    "title": "let rect: CGRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/observation/type",
                    "title": "let type: DockAccessory.Observation.ObservationType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/observation/identifier",
                    "title": "let identifier: Int",
                    "type": "property"
                  },
                  {
                    "title": "Defining types",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/observation/observationtype/==(_:_:)",
                        "title": "static func == (DockAccessory.Observation.ObservationType, DockAccessory.Observation.ObservationType) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/observation/observationtype/humanbody",
                        "title": "case humanBody",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/observation/observationtype/humanface",
                        "title": "case humanFace",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/observation/observationtype/object",
                        "title": "case object",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/observation/observationtype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/observation/observationtype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/observation/observationtype/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/dockkit/dockaccessory/observation/observationtype/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/observation/observationtype",
                    "title": "DockAccessory.Observation.ObservationType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/observation",
                "title": "DockAccessory.Observation",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/camerainformation/init(capturedevice:cameraposition:orientation:cameraintrinsics:referencedimensions:)",
                    "title": "init(captureDevice: AVCaptureDevice.DeviceType, cameraPosition: AVCaptureDevice.Position, orientation: DockAccessory.CameraOrientation, cameraIntrinsics: matrix_float3x3?, referenceDimensions: CGSize?)",
                    "type": "init"
                  },
                  {
                    "title": "Getting camera information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/camerainformation/cameraposition",
                    "title": "let cameraPosition: AVCaptureDevice.Position",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/camerainformation/cameraintrinsics",
                    "title": "let cameraIntrinsics: matrix_float3x3?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/camerainformation/capturedevice",
                    "title": "let captureDevice: AVCaptureDevice.DeviceType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/camerainformation/orientation",
                    "title": "let orientation: DockAccessory.CameraOrientation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/camerainformation/referencedimensions",
                    "title": "let referenceDimensions: CGSize?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/camerainformation",
                "title": "DockAccessory.CameraInformation",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting camera orientation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/corrected",
                    "title": "case corrected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/faceup",
                    "title": "case faceUp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/facedown",
                    "title": "case faceDown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/landscapeleft",
                    "title": "case landscapeLeft",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/landscaperight",
                    "title": "case landscapeRight",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/portrait",
                    "title": "case portrait",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/portraitupsidedown",
                    "title": "case portraitUpsideDown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/==(_:_:)",
                    "title": "static func == (DockAccessory.CameraOrientation, DockAccessory.CameraOrientation) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/cameraorientation/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/cameraorientation/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/cameraorientation",
                "title": "DockAccessory.CameraOrientation",
                "type": "enum"
              },
              {
                "title": "Performing animation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/animate(motion:)",
                "title": "func animate(motion: DockAccessory.Animation) async throws -> Progress",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/setregionofinterest(_:)",
                "title": "func setRegionOfInterest(CGRect) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/regionofinterest",
                "title": "var regionOfInterest: CGRect",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/animation/==(_:_:)",
                    "title": "static func == (DockAccessory.Animation, DockAccessory.Animation) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/animation/kapow",
                    "title": "case kapow",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/animation/no",
                    "title": "case no",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/animation/wakeup",
                    "title": "case wakeup",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/animation/yes",
                    "title": "case yes",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/animation/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/animation/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/animation/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/animation/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/animation",
                "title": "DockAccessory.Animation",
                "type": "enum"
              },
              {
                "title": "Setting position and limits",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/setlimits(_:)",
                "title": "func setLimits(DockAccessory.Limits) throws",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/dockkit/dockaccessory/setorientation(_:duration:relative:)-2epe2",
                "title": "func setOrientation(Vector3D, duration: Duration, relative: Bool) throws -> Progress",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/dockkit/dockaccessory/setorientation(_:duration:relative:)-6b0fl",
                "title": "func setOrientation(Rotation3D, duration: Duration, relative: Bool) throws -> Progress",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/setangularvelocity(_:)",
                "title": "func setAngularVelocity(Vector3D) async throws",
                "type": "method"
              },
              {
                "title": "Setting framing mode",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/setframingmode(_:)",
                "title": "func setFramingMode(DockAccessory.FramingMode) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/framingmode-swift.property",
                "title": "var framingMode: DockAccessory.FramingMode",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Defining the framing mode",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/automatic",
                    "title": "case automatic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/center",
                    "title": "case center",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/left",
                    "title": "case left",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/right",
                    "title": "case right",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/==(_:_:)",
                    "title": "static func == (DockAccessory.FramingMode, DockAccessory.FramingMode) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/framingmode-swift.enum",
                "title": "DockAccessory.FramingMode",
                "type": "enum"
              },
              {
                "title": "Getting position and limits",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/motionstates-swift.property",
                "title": "var motionStates: DockAccessory.MotionStates",
                "type": "property"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/limits-swift.property",
                "title": "var limits: DockAccessory.Limits",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/motionstate/angularpositions",
                    "title": "let angularPositions: Vector3D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/motionstate/angularvelocities",
                    "title": "let angularVelocities: Vector3D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/motionstate/timestamp",
                    "title": "let timestamp: TimeInterval",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/motionstate/error",
                    "title": "let error: (any Error)?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/motionstate",
                "title": "DockAccessory.MotionState",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Iterating over motion states",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/iterator/next()",
                        "title": "func next() async -> DockAccessory.MotionState?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/iterator/element",
                        "title": "DockAccessory.MotionStates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/iterator/next()-6ilyh",
                            "title": "func next() async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/iterator",
                    "title": "DockAccessory.MotionStates.Iterator",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> DockAccessory.MotionStates.Iterator",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/element",
                    "title": "DockAccessory.MotionStates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/asynciterator",
                    "title": "DockAccessory.MotionStates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/compactmap(_:)-2h3k0",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/compactmap(_:)-98xlk",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/flatmap(_:)-241g9",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/flatmap(_:)-3i69c",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/flatmap(_:)-6ikff",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/flatmap(_:)-95dp9",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/map(_:)-77wl3",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/map(_:)-8m990",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/motionstates-swift.struct",
                "title": "DockAccessory.MotionStates",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating limits",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/init(yaw:pitch:roll:)",
                    "title": "init(yaw: DockAccessory.Limits.Limit?, pitch: DockAccessory.Limits.Limit?, roll: DockAccessory.Limits.Limit?)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying limits",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Limiting speed and position",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/limit/maximumspeed",
                        "title": "let maximumSpeed: Double",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/limit/positionrange",
                        "title": "let positionRange: Range<Double>",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/limit/init(positionrange:maximumspeed:)",
                        "title": "init(positionRange: Range<Double>, maximumSpeed: Double) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/limit",
                    "title": "DockAccessory.Limits.Limit",
                    "type": "struct"
                  },
                  {
                    "title": "Getting properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/pitch",
                    "title": "let pitch: DockAccessory.Limits.Limit?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/roll",
                    "title": "let roll: DockAccessory.Limits.Limit?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/limits-swift.struct/yaw",
                    "title": "let yaw: DockAccessory.Limits.Limit?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/limits-swift.struct",
                "title": "DockAccessory.Limits",
                "type": "struct"
              },
              {
                "title": "Getting accessory information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/firmwareversion",
                "title": "var firmwareVersion: String?",
                "type": "property"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/hardwaremodel",
                "title": "var hardwareModel: String?",
                "type": "property"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/identifier-swift.property",
                "title": "let identifier: DockAccessory.Identifier",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/name",
                    "title": "let name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/category",
                    "title": "let category: DockAccessory.Category",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/uuid",
                    "title": "let uuid: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/==(_:_:)",
                    "title": "static func == (DockAccessory.Identifier, DockAccessory.Identifier) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/identifier-swift.struct",
                "title": "DockAccessory.Identifier",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/category/trackingstand",
                    "title": "case trackingStand",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/category/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/category/==(_:_:)",
                    "title": "static func == (DockAccessory.Category, DockAccessory.Category) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/category/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/category/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/category/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/category/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/category/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/category/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/category",
                "title": "DockAccessory.Category",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Getting properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/state/docked",
                    "title": "case docked",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/state/undocked",
                    "title": "case undocked",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/state/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/state/==(_:_:)",
                    "title": "static func == (DockAccessory.State, DockAccessory.State) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/state/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/state/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/state/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/state/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/state",
                "title": "DockAccessory.State",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Getting properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/statechange/accessory",
                    "title": "let accessory: DockAccessory?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/statechange/state",
                    "title": "let state: DockAccessory.State",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/statechange/trackingbuttonenabled",
                    "title": "let trackingButtonEnabled: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/statechange",
                "title": "DockAccessory.StateChange",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Iterating over state changes",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Iterating over state changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/iterator/next()",
                        "title": "func next() async -> DockAccessory.StateChange?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/iterator/element",
                        "title": "DockAccessory.StateChanges.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/statechanges/iterator/next()-1ekd4",
                            "title": "func next() async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/statechanges/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/dockkit/dockaccessory/statechanges/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/statechanges/iterator",
                    "title": "DockAccessory.StateChanges.Iterator",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/statechanges/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> DockAccessory.StateChanges.Iterator",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/statechanges/element",
                    "title": "DockAccessory.StateChanges.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/statechanges/asynciterator",
                    "title": "DockAccessory.StateChanges.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/compactmap(_:)-1wzy4",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/compactmap(_:)-2rz97",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/flatmap(_:)-19gj9",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/flatmap(_:)-3dzdl",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/flatmap(_:)-6edck",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/flatmap(_:)-zhnd",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/map(_:)-2xwp5",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/map(_:)-8i2f1",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/statechanges/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/statechanges/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/statechanges",
                "title": "DockAccessory.StateChanges",
                "type": "struct"
              },
              {
                "title": "Inspecting the object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/debugdescription",
                "title": "var debugDescription: String",
                "type": "property"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/iterator/next()",
                        "title": "func next() async -> DockAccessory.AccessoryEvent?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/iterator/element",
                        "title": "DockAccessory.AccessoryEvents.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/iterator/next()-1s74y",
                            "title": "func next() async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/iterator",
                    "title": "DockAccessory.AccessoryEvents.Iterator",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> DockAccessory.AccessoryEvents.Iterator",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/asynciterator",
                    "title": "DockAccessory.AccessoryEvents.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/element",
                    "title": "DockAccessory.AccessoryEvents.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/compactmap(_:)-16z57",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/compactmap(_:)-9lp17",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/contains(_:)",
                        "title": "func contains(Self.Element) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/flatmap(_:)-2apj",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/flatmap(_:)-2vpno",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/flatmap(_:)-63vx1",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/flatmap(_:)-f4w6",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/map(_:)-4zo3l",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/map(_:)-5yxiy",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.struct",
                "title": "DockAccessory.AccessoryEvents",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystate/==(_:_:)",
                    "title": "static func == (DockAccessory.BatteryState, DockAccessory.BatteryState) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystate/batterylevel",
                    "title": "let batteryLevel: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystate/chargestate",
                    "title": "let chargeState: DockAccessory.BatteryChargeState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystate/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystate/lowbattery",
                    "title": "let lowBattery: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystate/name",
                    "title": "let name: String",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystate/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystate/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/batterystate/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/batterystate",
                "title": "DockAccessory.BatteryState",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/iterator/next()",
                        "title": "func next() async -> DockAccessory.BatteryState?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/iterator/element",
                        "title": "DockAccessory.BatteryStates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/iterator/next()-2rgbn",
                            "title": "func next() async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/iterator",
                    "title": "DockAccessory.BatteryStates.Iterator",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> DockAccessory.BatteryStates.Iterator",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/asynciterator",
                    "title": "DockAccessory.BatteryStates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/element",
                    "title": "DockAccessory.BatteryStates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/compactmap(_:)-12jay",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/compactmap(_:)-76cw1",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/contains(_:)",
                        "title": "func contains(Self.Element) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/flatmap(_:)-2mf2k",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/flatmap(_:)-4o961",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/flatmap(_:)-6fe7m",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/flatmap(_:)-7bg10",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/map(_:)-49n7y",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/map(_:)-5m4iq",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/batterystates-swift.struct",
                "title": "DockAccessory.BatteryStates",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedobject/==(_:_:)",
                    "title": "static func == (DockAccessory.TrackedObject, DockAccessory.TrackedObject) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedobject/identifier",
                    "title": "var identifier: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedobject/rect",
                    "title": "var rect: CGRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedobject/saliencyrank",
                    "title": "var saliencyRank: Int?",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackedobject/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/trackedobject/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/trackedobject",
                "title": "DockAccessory.TrackedObject",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedperson/==(_:_:)",
                    "title": "static func == (DockAccessory.TrackedPerson, DockAccessory.TrackedPerson) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedperson/identifier",
                    "title": "var identifier: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedperson/lookingatcameraconfidence",
                    "title": "var lookingAtCameraConfidence: Double?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedperson/rect",
                    "title": "var rect: CGRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedperson/saliencyrank",
                    "title": "var saliencyRank: Int?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedperson/speakingconfidence",
                    "title": "var speakingConfidence: Double?",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackedperson/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/trackedperson/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/trackedperson",
                "title": "DockAccessory.TrackedPerson",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackingstate/description",
                    "title": "var description: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackingstate/time",
                    "title": "var time: Date",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackingstate/trackedsubjects",
                    "title": "var trackedSubjects: [DockAccessory.TrackedSubjectType]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/trackingstate",
                "title": "DockAccessory.TrackingState",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/iterator/next()",
                        "title": "func next() async -> DockAccessory.TrackingState?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/iterator/element",
                        "title": "DockAccessory.TrackingStates.Iterator.Element",
                        "type": "typealias"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/iterator/next()-7omhh",
                            "title": "func next() async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/iterator/next(isolation:)",
                            "title": "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/iterator/asynciteratorprotocol-implementations",
                        "title": "AsyncIteratorProtocol Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/iterator",
                    "title": "DockAccessory.TrackingStates.Iterator",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/makeasynciterator()",
                    "title": "func makeAsyncIterator() -> DockAccessory.TrackingStates.Iterator",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/asynciterator",
                    "title": "DockAccessory.TrackingStates.AsyncIterator",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/element",
                    "title": "DockAccessory.TrackingStates.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/compactmap(_:)-47siq",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/compactmap(_:)-4qn1",
                        "title": "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/contains(where:)",
                        "title": "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/drop(while:)",
                        "title": "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/filter(_:)",
                        "title": "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/first(where:)",
                        "title": "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/flatmap(_:)-25w27",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/flatmap(_:)-43ko1",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/flatmap(_:)-8cpne",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/flatmap(_:)-drrg",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/map(_:)-16eg0",
                        "title": "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/map(_:)-9c9my",
                        "title": "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/prefix(_:)",
                        "title": "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct/asyncsequence-implementations",
                    "title": "AsyncSequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.struct",
                "title": "DockAccessory.TrackingStates",
                "type": "struct"
              },
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/==(_:_:)",
                "title": "static func == (DockAccessory, DockAccessory) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/accessoryevents-swift.property",
                "title": "var accessoryEvents: DockAccessory.AccessoryEvents",
                "type": "property"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/batterystates-swift.property",
                "title": "var batteryStates: DockAccessory.BatteryStates",
                "type": "property"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/trackingstates-swift.property",
                "title": "var trackingStates: DockAccessory.TrackingStates",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/selectsubjects(_:)",
                "title": "func selectSubjects([UUID]) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/setorientation(_:duration:relative:)-6h2ah",
                "title": "func setOrientation(Rotation3D, duration: Duration, relative: Bool) async throws -> Progress",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/setorientation(_:duration:relative:)-84z7i",
                "title": "func setOrientation(Vector3D, duration: Duration, relative: Bool) async throws -> Progress",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/track(_:camerainformation:image:)-3uuza",
                "title": "func track([DockAccessory.Observation], cameraInformation: DockAccessory.CameraInformation, image: CVPixelBuffer) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/dockkit/dockaccessory/track(_:camerainformation:image:)-82m61",
                "title": "func track([AVMetadataObject], cameraInformation: DockAccessory.CameraInformation, image: CVPixelBuffer) async throws",
                "type": "method"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/==(_:_:)",
                    "title": "static func == (DockAccessory.AccessoryEvent, DockAccessory.AccessoryEvent) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/button(id:pressed:)",
                    "title": "case button(id: Int, pressed: Bool)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/cameraflip",
                    "title": "case cameraFlip",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/camerashutter",
                    "title": "case cameraShutter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/camerazoom(factor:)",
                    "title": "case cameraZoom(factor: Double)",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/accessoryevent/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/accessoryevent/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/accessoryevent",
                "title": "DockAccessory.AccessoryEvent",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterychargestate/==(_:_:)",
                    "title": "static func == (DockAccessory.BatteryChargeState, DockAccessory.BatteryChargeState) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterychargestate/charging",
                    "title": "case charging",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterychargestate/notchargeable",
                    "title": "case notChargeable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterychargestate/notcharging",
                    "title": "case notCharging",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterychargestate/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/batterychargestate/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/batterychargestate/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/batterychargestate/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/batterychargestate",
                "title": "DockAccessory.BatteryChargeState",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedsubjecttype/==(_:_:)",
                    "title": "static func == (DockAccessory.TrackedSubjectType, DockAccessory.TrackedSubjectType) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedsubjecttype/object(_:)",
                    "title": "case object(DockAccessory.TrackedObject)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/trackedsubjecttype/person(_:)",
                    "title": "case person(DockAccessory.TrackedPerson)",
                    "type": "case"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/dockkit/dockaccessory/trackedsubjecttype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/dockkit/dockaccessory/trackedsubjecttype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/trackedsubjecttype",
                "title": "DockAccessory.TrackedSubjectType",
                "type": "enum"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockaccessory/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/dockkit/dockaccessory/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/dockkit/dockaccessory",
            "title": "DockAccessory",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/invalidparameter",
                "title": "case invalidParameter",
                "type": "case"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/notconnected",
                "title": "case notConnected",
                "type": "case"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/notsupported",
                "title": "case notSupported",
                "type": "case"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/notsupportedbydevice",
                "title": "case notSupportedByDevice",
                "type": "case"
              },
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/==(_:_:)",
                "title": "static func == (DockKitError, DockKitError) -> Bool",
                "type": "op"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/cameratccmissing",
                "title": "case cameraTCCMissing",
                "type": "case"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/frameratetoohigh",
                "title": "case frameRateTooHigh",
                "type": "case"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/frameratetoolow",
                "title": "case frameRateTooLow",
                "type": "case"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/nosubjectfound",
                "title": "case noSubjectFound",
                "type": "case"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/dockkit/dockkiterror/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockkiterror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/dockkit/dockkiterror/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockkiterror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/dockkit/dockkiterror/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/dockkit/dockkiterror/errordescription",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockkiterror/errordescription-4v4fc",
                    "title": "var errorDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockkiterror/failurereason",
                    "title": "var failureReason: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockkiterror/helpanchor",
                    "title": "var helpAnchor: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/dockkit/dockkiterror/recoverysuggestion",
                    "title": "var recoverySuggestion: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/dockkit/dockkiterror/localizederror-implementations",
                "title": "LocalizedError Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/dockkit/dockkiterror",
            "title": "DockKitError",
            "type": "enum"
          },
          {
            "title": "Customizing tracking behavior",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/dockkit/modify-rotation-and-positioning-behavior-programmatically",
            "title": "Modify rotation and positioning programmatically",
            "type": "article"
          },
          {
            "path": "/documentation/dockkit/track-custom-objects-in-a-frame",
            "title": "Track custom objects in a frame",
            "type": "article"
          }
        ],
        "path": "/documentation/dockkit",
        "title": "DockKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
