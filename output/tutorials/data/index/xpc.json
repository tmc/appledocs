{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/updates/xpc",
            "title": "XPC updates",
            "type": "article"
          },
          {
            "title": "Interprocess communication",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/xpc/creating-xpc-services",
            "title": "Creating XPC services",
            "type": "article"
          },
          {
            "title": "Tasks",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Registration",
                "type": "groupMarker"
              },
              {
                "title": "State",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/xpc/xpc-activity-state-t-swift-consts",
                "title": "xpc_activity_state_t",
                "type": "collection"
              },
              {
                "title": "Execution criteria",
                "type": "groupMarker"
              },
              {
                "title": "Scheduling",
                "type": "groupMarker"
              },
              {
                "title": "Time Intervals",
                "type": "groupMarker"
              },
              {
                "title": "Priority",
                "type": "groupMarker"
              },
              {
                "title": "Power consumption",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/xpc/xpc-activities",
            "title": "XPC activities",
            "type": "collection"
          },
          {
            "title": "Events",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Event handling",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/xpc/xpc-events",
            "title": "XPC events",
            "type": "collection"
          },
          {
            "title": "Additional Types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Objects",
                "type": "groupMarker"
              },
              {
                "title": "Identity",
                "type": "groupMarker"
              },
              {
                "title": "Comparison",
                "type": "groupMarker"
              },
              {
                "title": "Copying",
                "type": "groupMarker"
              },
              {
                "title": "Boolean objects",
                "type": "groupMarker"
              },
              {
                "title": "Data objects",
                "type": "groupMarker"
              },
              {
                "title": "Number objects",
                "type": "groupMarker"
              },
              {
                "title": "Array objects",
                "type": "groupMarker"
              },
              {
                "title": "Dictionary objects",
                "type": "groupMarker"
              },
              {
                "title": "String objects",
                "type": "groupMarker"
              },
              {
                "title": "File Descriptor objects",
                "type": "groupMarker"
              },
              {
                "title": "Date objects",
                "type": "groupMarker"
              },
              {
                "title": "UUID objects",
                "type": "groupMarker"
              },
              {
                "title": "Shared memory objects",
                "type": "groupMarker"
              },
              {
                "title": "Null objects",
                "type": "groupMarker"
              },
              {
                "title": "Object life cycle",
                "type": "groupMarker"
              },
              {
                "title": "Types of objects",
                "type": "groupMarker"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/xpc/xpc-objects",
            "title": "XPC objects",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Debug Functions",
                "type": "groupMarker"
              },
              {
                "title": "Version Details",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/xpc/utilities",
            "title": "Utilities",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creation",
                "type": "groupMarker"
              },
              {
                "title": "Event handling",
                "type": "groupMarker"
              },
              {
                "title": "Life cycle",
                "type": "groupMarker"
              },
              {
                "title": "Messages",
                "type": "groupMarker"
              },
              {
                "title": "Remote peer information",
                "type": "groupMarker"
              },
              {
                "title": "Context",
                "type": "groupMarker"
              },
              {
                "title": "Endpoints",
                "type": "groupMarker"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/xpc/xpc-connections",
            "title": "XPC connections",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/xpc",
        "title": "XPC",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/updates/xpc",
            "title": "XPC updates",
            "type": "article"
          },
          {
            "title": "Interprocess communication",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/xpc/creating-xpc-services",
            "title": "Creating XPC services",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a listener",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_listener_create",
                "title": "xpc_listener_create",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Listener state",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpc_listener_create_flags_t/xpc_listener_create_inactive",
                    "title": "XPC_LISTENER_CREATE_INACTIVE",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_listener_create_flags_t/xpc_listener_create_none",
                    "title": "XPC_LISTENER_CREATE_NONE",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpc_listener_create_flags_t/xpc_listener_create_force_mach",
                    "title": "XPC_LISTENER_CREATE_FORCE_MACH",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_listener_create_flags_t/xpc_listener_create_force_xpcservice",
                    "title": "XPC_LISTENER_CREATE_FORCE_XPCSERVICE",
                    "type": "case"
                  }
                ],
                "path": "/documentation/xpc/xpc_listener_create_flags_t",
                "title": "xpc_listener_create_flags_t",
                "type": "enum"
              },
              {
                "path": "/documentation/xpc/xpc_listener_incoming_session_handler_t",
                "title": "xpc_listener_incoming_session_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_listener_copy_description",
                "title": "xpc_listener_copy_description",
                "type": "func"
              },
              {
                "title": "Managing the life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_listener_activate",
                "title": "xpc_listener_activate",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_listener_cancel",
                "title": "xpc_listener_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_listener_reject_peer",
                "title": "xpc_listener_reject_peer",
                "type": "func"
              },
              {
                "title": "Working with code signing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_listener_set_peer_code_signing_requirement(_:_:)",
                "title": "xpc_listener_set_peer_code_signing_requirement",
                "type": "func"
              }
            ],
            "path": "/documentation/xpc/xpc_listener_t",
            "title": "xpc_listener_t",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Creating a session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_session_create_xpc_service",
                "title": "xpc_session_create_xpc_service",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_create_mach_service",
                "title": "xpc_session_create_mach_service",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Configuration options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpc_session_create_flags_t-c.enum/xpc_session_create_none",
                    "title": "XPC_SESSION_CREATE_NONE",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_session_create_flags_t-c.enum/xpc_session_create_inactive",
                    "title": "XPC_SESSION_CREATE_INACTIVE",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_session_create_flags_t-c.enum/xpc_session_create_mach_privileged",
                    "title": "XPC_SESSION_CREATE_MACH_PRIVILEGED",
                    "type": "case"
                  }
                ],
                "path": "/documentation/xpc/xpc_session_create_flags_t-c.enum",
                "title": "xpc_session_create_flags_t",
                "type": "enum"
              },
              {
                "path": "/documentation/xpc/xpc_session_set_target_queue",
                "title": "xpc_session_set_target_queue",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_copy_description",
                "title": "xpc_session_copy_description",
                "type": "func"
              },
              {
                "title": "Managing life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_session_activate",
                "title": "xpc_session_activate",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_set_incoming_message_handler",
                "title": "xpc_session_set_incoming_message_handler",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_incoming_message_handler_t-3eb2a",
                "title": "xpc_session_incoming_message_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_session_cancel",
                "title": "xpc_session_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_set_cancel_handler",
                "title": "xpc_session_set_cancel_handler",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_cancel_handler_t-7y2lv",
                "title": "xpc_session_cancel_handler_t",
                "type": "typealias"
              },
              {
                "title": "Sending messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_session_send_message",
                "title": "xpc_session_send_message",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_send_message_with_reply_async",
                "title": "xpc_session_send_message_with_reply_async",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_session_reply_handler_t-7kfe4",
                "title": "xpc_session_reply_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_session_send_message_with_reply_sync",
                "title": "xpc_session_send_message_with_reply_sync",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_rich_error_t",
                "title": "xpc_rich_error_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_rich_error_can_retry(_:)",
                "title": "xpc_rich_error_can_retry",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_rich_error_copy_description(_:)",
                "title": "xpc_rich_error_copy_description",
                "type": "func"
              },
              {
                "title": "Working with code signing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_session_set_peer_code_signing_requirement(_:_:)",
                "title": "xpc_session_set_peer_code_signing_requirement",
                "type": "func"
              }
            ],
            "path": "/documentation/xpc/xpc_session_t-10if0",
            "title": "xpc_session_t",
            "type": "typealias"
          },
          {
            "title": "Tasks",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Registration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_register(_:_:_:)",
                "title": "xpc_activity_register",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_unregister(_:)",
                "title": "xpc_activity_unregister",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_check_in",
                "title": "XPC_ACTIVITY_CHECK_IN",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_t",
                "title": "xpc_activity_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_activity_handler_t",
                "title": "xpc_activity_handler_t",
                "type": "typealias"
              },
              {
                "title": "State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_get_state(_:)",
                "title": "xpc_activity_get_state",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_set_state(_:_:)",
                "title": "xpc_activity_set_state",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_should_defer(_:)",
                "title": "xpc_activity_should_defer",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_check_in",
                    "title": "XPC_ACTIVITY_STATE_CHECK_IN",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_continue",
                    "title": "XPC_ACTIVITY_STATE_CONTINUE",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_defer",
                    "title": "XPC_ACTIVITY_STATE_DEFER",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_done",
                    "title": "XPC_ACTIVITY_STATE_DONE",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_run",
                    "title": "XPC_ACTIVITY_STATE_RUN",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_wait",
                    "title": "XPC_ACTIVITY_STATE_WAIT",
                    "type": "case"
                  }
                ],
                "path": "/documentation/xpc/xpc-activity-state-t-swift-consts",
                "title": "xpc_activity_state_t",
                "type": "collection"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_t",
                "title": "xpc_activity_state_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_check_in",
                "title": "XPC_ACTIVITY_STATE_CHECK_IN",
                "type": "case"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_wait",
                "title": "XPC_ACTIVITY_STATE_WAIT",
                "type": "case"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_run",
                "title": "XPC_ACTIVITY_STATE_RUN",
                "type": "case"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_defer",
                "title": "XPC_ACTIVITY_STATE_DEFER",
                "type": "case"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_continue",
                "title": "XPC_ACTIVITY_STATE_CONTINUE",
                "type": "case"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_done",
                "title": "XPC_ACTIVITY_STATE_DONE",
                "type": "case"
              },
              {
                "title": "Execution criteria",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_copy_criteria(_:)",
                "title": "xpc_activity_copy_criteria",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_set_criteria(_:_:)",
                "title": "xpc_activity_set_criteria",
                "type": "func"
              },
              {
                "title": "Scheduling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_repeating",
                "title": "XPC_ACTIVITY_REPEATING",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_delay",
                "title": "XPC_ACTIVITY_DELAY",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_grace_period",
                "title": "XPC_ACTIVITY_GRACE_PERIOD",
                "type": "var"
              },
              {
                "title": "Time Intervals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval",
                "title": "XPC_ACTIVITY_INTERVAL",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_1_min",
                "title": "XPC_ACTIVITY_INTERVAL_1_MIN",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_5_min",
                "title": "XPC_ACTIVITY_INTERVAL_5_MIN",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_15_min",
                "title": "XPC_ACTIVITY_INTERVAL_15_MIN",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_30_min",
                "title": "XPC_ACTIVITY_INTERVAL_30_MIN",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_1_hour",
                "title": "XPC_ACTIVITY_INTERVAL_1_HOUR",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_4_hours",
                "title": "XPC_ACTIVITY_INTERVAL_4_HOURS",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_8_hours",
                "title": "XPC_ACTIVITY_INTERVAL_8_HOURS",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_1_day",
                "title": "XPC_ACTIVITY_INTERVAL_1_DAY",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_7_days",
                "title": "XPC_ACTIVITY_INTERVAL_7_DAYS",
                "type": "var"
              },
              {
                "title": "Priority",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_priority",
                "title": "XPC_ACTIVITY_PRIORITY",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_priority_maintenance",
                "title": "XPC_ACTIVITY_PRIORITY_MAINTENANCE",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_priority_utility",
                "title": "XPC_ACTIVITY_PRIORITY_UTILITY",
                "type": "var"
              },
              {
                "title": "Power consumption",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_allow_battery",
                "title": "XPC_ACTIVITY_ALLOW_BATTERY",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_require_screen_sleep",
                "title": "XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_prevent_device_sleep",
                "title": "XPC_ACTIVITY_PREVENT_DEVICE_SLEEP",
                "type": "var"
              }
            ],
            "path": "/documentation/xpc/xpc-activities",
            "title": "XPC activities",
            "type": "collection"
          },
          {
            "title": "Events",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Event handling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_set_event_stream_handler(_:_:_:)",
                "title": "xpc_set_event_stream_handler",
                "type": "func"
              }
            ],
            "path": "/documentation/xpc/xpc-events",
            "title": "XPC events",
            "type": "collection"
          },
          {
            "title": "Additional Types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_object_t",
                "title": "xpc_object_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_type_t",
                "title": "xpc_type_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/os_xpc_object",
                "title": "OS_xpc_object",
                "type": "protocol"
              },
              {
                "title": "Identity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_get_type(_:)",
                "title": "xpc_get_type",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_type_get_name(_:)",
                "title": "xpc_type_get_name",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_hash(_:)",
                "title": "xpc_hash",
                "type": "func"
              },
              {
                "title": "Comparison",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_equal(_:_:)",
                "title": "xpc_equal",
                "type": "func"
              },
              {
                "title": "Copying",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_copy(_:)",
                "title": "xpc_copy",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_copy_description(_:)",
                "title": "xpc_copy_description",
                "type": "func"
              },
              {
                "title": "Boolean objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_bool_create(_:)",
                "title": "xpc_bool_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_bool_get_value(_:)",
                "title": "xpc_bool_get_value",
                "type": "func"
              },
              {
                "title": "Data objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_data_create(_:_:)",
                "title": "xpc_data_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_create_with_dispatch_data(_:)",
                "title": "xpc_data_create_with_dispatch_data",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_get_bytes(_:_:_:_:)",
                "title": "xpc_data_get_bytes",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_get_bytes_ptr(_:)",
                "title": "xpc_data_get_bytes_ptr",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_get_length(_:)",
                "title": "xpc_data_get_length",
                "type": "func"
              },
              {
                "title": "Number objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_double_create(_:)",
                "title": "xpc_double_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_double_get_value(_:)",
                "title": "xpc_double_get_value",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_int64_create(_:)",
                "title": "xpc_int64_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_int64_get_value(_:)",
                "title": "xpc_int64_get_value",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_uint64_create(_:)",
                "title": "xpc_uint64_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_uint64_get_value(_:)",
                "title": "xpc_uint64_get_value",
                "type": "func"
              },
              {
                "title": "Array objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_array_create(_:_:)",
                "title": "xpc_array_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_create_empty()",
                "title": "xpc_array_create_empty",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_create_connection(_:_:)",
                "title": "xpc_array_create_connection",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_value(_:_:_:)",
                "title": "xpc_array_set_value",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_value(_:_:)",
                "title": "xpc_array_get_value",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_append_value(_:_:)",
                "title": "xpc_array_append_value",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_count(_:)",
                "title": "xpc_array_get_count",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_apply(_:_:)",
                "title": "xpc_array_apply",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_dup_fd(_:_:)",
                "title": "xpc_array_dup_fd",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_array(_:_:)",
                "title": "xpc_array_get_array",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_bool(_:_:)",
                "title": "xpc_array_get_bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_data(_:_:_:)",
                "title": "xpc_array_get_data",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_date(_:_:)",
                "title": "xpc_array_get_date",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_dictionary(_:_:)",
                "title": "xpc_array_get_dictionary",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_double(_:_:)",
                "title": "xpc_array_get_double",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_int64(_:_:)",
                "title": "xpc_array_get_int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_string(_:_:)",
                "title": "xpc_array_get_string",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_uint64(_:_:)",
                "title": "xpc_array_get_uint64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_uuid(_:_:)",
                "title": "xpc_array_get_uuid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_bool(_:_:_:)",
                "title": "xpc_array_set_bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_connection(_:_:_:)",
                "title": "xpc_array_set_connection",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_data(_:_:_:_:)",
                "title": "xpc_array_set_data",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_date(_:_:_:)",
                "title": "xpc_array_set_date",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_double(_:_:_:)",
                "title": "xpc_array_set_double",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_fd(_:_:_:)",
                "title": "xpc_array_set_fd",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_int64(_:_:_:)",
                "title": "xpc_array_set_int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_string(_:_:_:)",
                "title": "xpc_array_set_string",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_uint64(_:_:_:)",
                "title": "xpc_array_set_uint64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_uuid(_:_:_:)",
                "title": "xpc_array_set_uuid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_applier_t",
                "title": "xpc_array_applier_t",
                "type": "typealias"
              },
              {
                "title": "Dictionary objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create(_:_:_:)",
                "title": "xpc_dictionary_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create_empty()",
                "title": "xpc_dictionary_create_empty",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create_connection(_:_:)",
                "title": "xpc_dictionary_create_connection",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create_reply(_:)",
                "title": "xpc_dictionary_create_reply",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_value(_:_:_:)",
                "title": "xpc_dictionary_set_value",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_count(_:)",
                "title": "xpc_dictionary_get_count",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_value(_:_:)",
                "title": "xpc_dictionary_get_value",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_apply(_:_:)",
                "title": "xpc_dictionary_apply",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_dup_fd(_:_:)",
                "title": "xpc_dictionary_dup_fd",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_array(_:_:)",
                "title": "xpc_dictionary_get_array",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_bool(_:_:)",
                "title": "xpc_dictionary_get_bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_data(_:_:_:)",
                "title": "xpc_dictionary_get_data",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_date(_:_:)",
                "title": "xpc_dictionary_get_date",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_dictionary(_:_:)",
                "title": "xpc_dictionary_get_dictionary",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_double(_:_:)",
                "title": "xpc_dictionary_get_double",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_int64(_:_:)",
                "title": "xpc_dictionary_get_int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_remote_connection(_:)",
                "title": "xpc_dictionary_get_remote_connection",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_string(_:_:)",
                "title": "xpc_dictionary_get_string",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_uint64(_:_:)",
                "title": "xpc_dictionary_get_uint64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_uuid(_:_:)",
                "title": "xpc_dictionary_get_uuid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_bool(_:_:_:)",
                "title": "xpc_dictionary_set_bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_connection(_:_:_:)",
                "title": "xpc_dictionary_set_connection",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_data(_:_:_:_:)",
                "title": "xpc_dictionary_set_data",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_date(_:_:_:)",
                "title": "xpc_dictionary_set_date",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_double(_:_:_:)",
                "title": "xpc_dictionary_set_double",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_fd(_:_:_:)",
                "title": "xpc_dictionary_set_fd",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_int64(_:_:_:)",
                "title": "xpc_dictionary_set_int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_string(_:_:_:)",
                "title": "xpc_dictionary_set_string",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_uint64(_:_:_:)",
                "title": "xpc_dictionary_set_uint64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_uuid(_:_:_:)",
                "title": "xpc_dictionary_set_uuid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_applier_t",
                "title": "xpc_dictionary_applier_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_copy_mach_send(_:_:)",
                "title": "xpc_dictionary_copy_mach_send",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_mach_send(_:_:_:)",
                "title": "xpc_dictionary_set_mach_send",
                "type": "func"
              },
              {
                "title": "String objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_string_create(_:)",
                "title": "xpc_string_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_string_create_with_format_and_arguments(_:_:)",
                "title": "xpc_string_create_with_format_and_arguments",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_string_get_length(_:)",
                "title": "xpc_string_get_length",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_string_get_string_ptr(_:)",
                "title": "xpc_string_get_string_ptr",
                "type": "func"
              },
              {
                "title": "File Descriptor objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_fd_create(_:)",
                "title": "xpc_fd_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_fd_dup(_:)",
                "title": "xpc_fd_dup",
                "type": "func"
              },
              {
                "title": "Date objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_date_create(_:)",
                "title": "xpc_date_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_date_create_from_current()",
                "title": "xpc_date_create_from_current",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_date_get_value(_:)",
                "title": "xpc_date_get_value",
                "type": "func"
              },
              {
                "title": "UUID objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_uuid_create(_:)",
                "title": "xpc_uuid_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_uuid_get_bytes(_:)",
                "title": "xpc_uuid_get_bytes",
                "type": "func"
              },
              {
                "title": "Shared memory objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_shmem_create(_:_:)",
                "title": "xpc_shmem_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_shmem_map(_:_:)",
                "title": "xpc_shmem_map",
                "type": "func"
              },
              {
                "title": "Null objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_null_create()",
                "title": "xpc_null_create",
                "type": "func"
              },
              {
                "title": "Object life cycle",
                "type": "groupMarker"
              },
              {
                "title": "Types of objects",
                "type": "groupMarker"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/xpc/xpc-objects",
            "title": "XPC objects",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Debug Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_debugger_api_misuse_info()",
                "title": "xpc_debugger_api_misuse_info",
                "type": "func"
              },
              {
                "title": "Version Details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_api_version",
                "title": "XPC_API_VERSION",
                "type": "macro"
              },
              {
                "path": "/documentation/xpc/iphone_simulator_host_min_version_required",
                "title": "IPHONE_SIMULATOR_HOST_MIN_VERSION_REQUIRED",
                "type": "macro"
              }
            ],
            "path": "/documentation/xpc/utilities",
            "title": "Utilities",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_t",
                "title": "xpc_connection_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_connection_create(_:_:)",
                "title": "xpc_connection_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_create_from_endpoint(_:)",
                "title": "xpc_connection_create_from_endpoint",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_create_mach_service(_:_:_:)",
                "title": "xpc_connection_create_mach_service",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_target_queue(_:_:)",
                "title": "xpc_connection_set_target_queue",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_mach_service_listener",
                "title": "XPC_CONNECTION_MACH_SERVICE_LISTENER",
                "type": "macro"
              },
              {
                "path": "/documentation/xpc/xpc_connection_mach_service_privileged",
                "title": "XPC_CONNECTION_MACH_SERVICE_PRIVILEGED",
                "type": "macro"
              },
              {
                "title": "Event handling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_event_handler(_:_:)",
                "title": "xpc_connection_set_event_handler",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_handler_t",
                "title": "xpc_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_connection_handler_t",
                "title": "xpc_connection_handler_t",
                "type": "typealias"
              },
              {
                "title": "Life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_main(_:)",
                "title": "xpc_main",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_activate(_:)",
                "title": "xpc_connection_activate",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_suspend(_:)",
                "title": "xpc_connection_suspend",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_resume(_:)",
                "title": "xpc_connection_resume",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_cancel(_:)",
                "title": "xpc_connection_cancel",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_transaction_begin()",
                "title": "xpc_transaction_begin",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_transaction_end()",
                "title": "xpc_transaction_end",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_copy_invalidation_reason(_:)",
                "title": "xpc_connection_copy_invalidation_reason",
                "type": "func"
              },
              {
                "title": "Messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_message(_:_:)",
                "title": "xpc_connection_send_message",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_barrier(_:_:)",
                "title": "xpc_connection_send_barrier",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_message_with_reply(_:_:_:_:)",
                "title": "xpc_connection_send_message_with_reply",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_message_with_reply_sync(_:_:)",
                "title": "xpc_connection_send_message_with_reply_sync",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_main(_:)",
                "title": "xpc_main",
                "type": "func"
              },
              {
                "title": "Remote peer information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_name(_:)",
                "title": "xpc_connection_get_name",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_euid(_:)",
                "title": "xpc_connection_get_euid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_egid(_:)",
                "title": "xpc_connection_get_egid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_pid(_:)",
                "title": "xpc_connection_get_pid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_asid(_:)",
                "title": "xpc_connection_get_asid",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_entitlement_exists_requirement(_:_:)",
                "title": "xpc_connection_set_peer_entitlement_exists_requirement",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_entitlement_matches_value_requirement(_:_:_:)",
                "title": "xpc_connection_set_peer_entitlement_matches_value_requirement",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_lightweight_code_requirement(_:_:)",
                "title": "xpc_connection_set_peer_lightweight_code_requirement",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_platform_identity_requirement(_:_:)",
                "title": "xpc_connection_set_peer_platform_identity_requirement",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_team_identity_requirement(_:_:)",
                "title": "xpc_connection_set_peer_team_identity_requirement",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_code_signing_requirement(_:_:)",
                "title": "xpc_connection_set_peer_code_signing_requirement",
                "type": "func"
              },
              {
                "title": "Context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_context(_:_:)",
                "title": "xpc_connection_set_context",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_context(_:)",
                "title": "xpc_connection_get_context",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_finalizer_f(_:_:)",
                "title": "xpc_connection_set_finalizer_f",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_finalizer_t",
                "title": "xpc_finalizer_t",
                "type": "typealias"
              },
              {
                "title": "Endpoints",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_endpoint_create(_:)",
                "title": "xpc_endpoint_create",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_endpoint_t",
                "title": "xpc_endpoint_t",
                "type": "typealias"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/xpc/xpc-connections",
            "title": "XPC connections",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/xpc",
        "title": "XPC",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/updates/xpc",
            "title": "XPC updates",
            "type": "article"
          },
          {
            "title": "Interprocess communication",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/xpc/creating-xpc-services",
            "title": "Creating XPC services",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a listener",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpclistener/init(service:targetqueue:options:incomingsessionhandler:)",
                "title": "init(service: String, targetQueue: DispatchQueue?, options: XPCListener.InitializationOptions, incomingSessionHandler: (XPCListener.IncomingSessionRequest) -> XPCListener.IncomingSessionRequest.Decision) throws",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Listener creation options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/initializationoptions/inactive",
                    "title": "static var inactive: XPCListener.InitializationOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/initializationoptions/none",
                    "title": "static var none: XPCListener.InitializationOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/xpc/xpclistener/initializationoptions",
                "title": "XPCListener.InitializationOptions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Responding to client sessions requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(_:)-73k8w",
                    "title": "func accept<Handler>((XPCSession) -> Handler) -> XPCListener.IncomingSessionRequest.Decision",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(_:)-35eh9",
                    "title": "func accept<Handler>((XPCSession) -> Handler) -> XPCListener.IncomingSessionRequest.Decision",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(_:)-tkrp",
                    "title": "func accept<Handler>((XPCSession) -> Handler) -> XPCListener.IncomingSessionRequest.Decision",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(incomingmessagehandler:cancellationhandler:)-56fch",
                    "title": "func accept<Message>(incomingMessageHandler: (Message) -> (any Encodable)?, cancellationHandler: ((XPCRichError) -> Void)?) -> XPCListener.IncomingSessionRequest.Decision",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(incomingmessagehandler:cancellationhandler:)-9oa3z",
                    "title": "func accept(incomingMessageHandler: (XPCReceivedMessage) -> (any Encodable)?, cancellationHandler: ((XPCRichError) -> Void)?) -> XPCListener.IncomingSessionRequest.Decision",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(incomingmessagehandler:cancellationhandler:)-8rodk",
                    "title": "func accept(incomingMessageHandler: (XPCDictionary) -> XPCDictionary?, cancellationHandler: ((XPCRichError) -> Void)?) -> XPCListener.IncomingSessionRequest.Decision",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(incomingmessagehandler:cancellationhandler:)-50tzb",
                    "title": "func accept<Message>(incomingMessageHandler: (Message) -> (any Encodable)?, cancellationHandler: ((XPCRichError) -> Void)?) -> (XPCListener.IncomingSessionRequest.Decision, XPCSession)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(incomingmessagehandler:cancellationhandler:)-6oelg",
                    "title": "func accept(incomingMessageHandler: (XPCReceivedMessage) -> (any Encodable)?, cancellationHandler: ((XPCRichError) -> Void)?) -> (XPCListener.IncomingSessionRequest.Decision, XPCSession)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/accept(incomingmessagehandler:cancellationhandler:)-48c3k",
                    "title": "func accept(incomingMessageHandler: (XPCDictionary) -> XPCDictionary?, cancellationHandler: ((XPCRichError) -> Void)?) -> (XPCListener.IncomingSessionRequest.Decision, XPCSession)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/reject(reason:)",
                    "title": "func reject(reason: String) -> XPCListener.IncomingSessionRequest.Decision",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpclistener/incomingsessionrequest/decision",
                    "title": "XPCListener.IncomingSessionRequest.Decision",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/xpc/xpclistener/incomingsessionrequest",
                "title": "XPCListener.IncomingSessionRequest",
                "type": "class"
              },
              {
                "title": "Managing the life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpclistener/activate()",
                "title": "func activate() throws",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpclistener/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Handling incoming messages",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Receiving client messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcpeerhandler/handleincomingrequest(_:)",
                    "title": "func handleIncomingRequest(Self.Input) -> Self.Output?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpcpeerhandler/input",
                    "title": "Input",
                    "type": "associatedtype"
                  },
                  {
                    "path": "/documentation/xpc/xpcpeerhandler/output",
                    "title": "Output",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Responding to session cancellation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcpeerhandler/handlecancellation(error:)",
                    "title": "func handleCancellation(error: XPCRichError)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/xpc/xpcpeerhandler",
                "title": "XPCPeerHandler",
                "type": "protocol"
              }
            ],
            "path": "/documentation/xpc/xpclistener",
            "title": "XPCListener",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(xpcservice:targetqueue:options:incomingmessagehandler:cancellationhandler:)-407h2",
                "title": "convenience init<Message>(xpcService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, incomingMessageHandler: ((Message) -> (any Encodable)?)?, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(xpcservice:targetqueue:options:incomingmessagehandler:cancellationhandler:)-9f4u0",
                "title": "convenience init(xpcService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, incomingMessageHandler: ((XPCReceivedMessage) -> (any Encodable)?)?, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(xpcservice:targetqueue:options:incomingmessagehandler:cancellationhandler:)-bel3",
                "title": "convenience init(xpcService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, incomingMessageHandler: ((XPCDictionary) -> XPCDictionary?)?, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(xpcservice:targetqueue:options:cancellationhandler:)",
                "title": "convenience init(xpcService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(machservice:targetqueue:options:incomingmessagehandler:cancellationhandler:)-l3rz",
                "title": "convenience init<Message>(machService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, incomingMessageHandler: ((Message) -> (any Encodable)?)?, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(machservice:targetqueue:options:incomingmessagehandler:cancellationhandler:)-2xuyi",
                "title": "convenience init(machService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, incomingMessageHandler: ((XPCReceivedMessage) -> (any Encodable)?)?, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(machservice:targetqueue:options:incomingmessagehandler:cancellationhandler:)-6jz7y",
                "title": "convenience init(machService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, incomingMessageHandler: ((XPCDictionary) -> XPCDictionary?)?, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/xpc/xpcsession/init(machservice:targetqueue:options:cancellationhandler:)",
                "title": "convenience init(machService: String, targetQueue: DispatchQueue?, options: XPCSession.InitializationOptions, cancellationHandler: ((XPCRichError) -> Void)?) throws",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Session creation options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcsession/initializationoptions/inactive",
                    "title": "static var inactive: XPCSession.InitializationOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/xpc/xpcsession/initializationoptions/privileged",
                    "title": "static var privileged: XPCSession.InitializationOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/xpc/xpcsession/initializationoptions/none",
                    "title": "static var none: XPCSession.InitializationOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/xpc/xpcsession/initializationoptions",
                "title": "XPCSession.InitializationOptions",
                "type": "struct"
              },
              {
                "path": "/documentation/xpc/xpcsession/settargetqueue(_:)",
                "title": "func setTargetQueue(DispatchQueue)",
                "type": "method"
              },
              {
                "title": "Managing the life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpcsession/activate()",
                "title": "func activate() throws",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/setincomingmessagehandler(_:)-2ukdh",
                "title": "func setIncomingMessageHandler<Message>((Message) -> (any Encodable)?)",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/setincomingmessagehandler(_:)-5lu26",
                "title": "func setIncomingMessageHandler((XPCReceivedMessage) -> (any Encodable)?)",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/setincomingmessagehandler(_:)-75ou9",
                "title": "func setIncomingMessageHandler((XPCDictionary) -> XPCDictionary?)",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/cancel(reason:)",
                "title": "func cancel(reason: String)",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/setcancellationhandler(_:)",
                "title": "func setCancellationHandler((XPCRichError) -> Void)",
                "type": "method"
              },
              {
                "title": "Sending messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpcsession/send(_:)",
                "title": "func send<Message>(Message) throws",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/send(_:replyhandler:)-3wjln",
                "title": "func send<Message>(Message, replyHandler: (Result<XPCReceivedMessage, XPCRichError>) -> Void) throws",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/send(_:replyhandler:)-9an0u",
                "title": "func send<Message, Reply>(Message, replyHandler: (Result<Reply, any Error>) -> Void) throws",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/send(message:)",
                "title": "func send(message: XPCDictionary) throws",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/send(message:replyhandler:)",
                "title": "func send(message: XPCDictionary, replyHandler: (Result<XPCDictionary, XPCRichError>) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/sendsync(_:)-8a284",
                "title": "func sendSync<Message>(Message) throws -> XPCReceivedMessage",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/sendsync(_:)-88u0s",
                "title": "func sendSync<Message, Reply>(Message) throws -> Reply",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcsession/sendsync(message:)",
                "title": "func sendSync(message: XPCDictionary) throws -> XPCDictionary",
                "type": "method"
              }
            ],
            "path": "/documentation/xpc/xpcsession",
            "title": "XPCSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing message content",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpcreceivedmessage/decode(as:)",
                "title": "func decode<T>(as: T.Type) throws -> T",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcreceivedmessage/issync",
                "title": "var isSync: Bool",
                "type": "property"
              },
              {
                "title": "Replying to messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpcreceivedmessage/expectsreply",
                "title": "var expectsReply: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/xpc/xpcreceivedmessage/reply(_:)",
                "title": "func reply<Message>(Message)",
                "type": "method"
              },
              {
                "path": "/documentation/xpc/xpcreceivedmessage/handoffreply(to:_:)",
                "title": "func handoffReply(to: DispatchQueue, () -> Void) -> (any Encodable)?",
                "type": "method"
              }
            ],
            "path": "/documentation/xpc/xpcreceivedmessage",
            "title": "XPCReceivedMessage",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a listener",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_listener_incoming_session_handler_t",
                "title": "xpc_listener_incoming_session_handler_t",
                "type": "typealias"
              },
              {
                "title": "Working with code signing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_listener_set_peer_code_signing_requirement(_:_:)",
                "title": "func xpc_listener_set_peer_code_signing_requirement(xpc_listener_t, UnsafePointer<CChar>) -> Int32",
                "type": "func"
              }
            ],
            "path": "/documentation/xpc/xpc_listener_t",
            "title": "xpc_listener_t",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Creating a session",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_t-49tiv",
                "title": "xpc_session_t",
                "type": "typealias"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_create_mach_service(_:_:_:_:)",
                "title": "func xpc_session_create_mach_service(UnsafePointer<CChar>, dispatch_queue_t?, xpc_session_create_flags_t, AutoreleasingUnsafeMutablePointer<xpc_rich_error_t?>?) -> (any OS_xpc_object)?",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_create_xpc_service(_:_:_:_:)",
                "title": "func xpc_session_create_xpc_service(UnsafePointer<CChar>, dispatch_queue_t?, xpc_session_create_flags_t, AutoreleasingUnsafeMutablePointer<xpc_rich_error_t?>?) -> (any OS_xpc_object)?",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/xpc/xpc_session_create_flags_t-swift.struct/inactive",
                    "title": "static let inactive: xpc_session_create_flags_t",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/xpc/xpc_session_create_flags_t-swift.struct/none",
                    "title": "static let none: xpc_session_create_flags_t",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/xpc/xpc_session_create_flags_t-swift.struct/privileged",
                    "title": "static let privileged: xpc_session_create_flags_t",
                    "type": "property"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_create_flags_t-swift.struct",
                "title": "xpc_session_create_flags_t",
                "type": "struct"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_copy_description(_:)",
                "title": "func xpc_session_copy_description(any OS_xpc_object) -> UnsafeMutablePointer<CChar>?",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_set_target_queue(_:_:)",
                "title": "func xpc_session_set_target_queue(any OS_xpc_object, dispatch_queue_t?)",
                "type": "func"
              },
              {
                "title": "Managing life cycle",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_activate(_:_:)",
                "title": "func xpc_session_activate(any OS_xpc_object, AutoreleasingUnsafeMutablePointer<xpc_rich_error_t?>?) -> Bool",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_cancel(_:)",
                "title": "func xpc_session_cancel(any OS_xpc_object)",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_set_cancel_handler(_:_:)",
                "title": "func xpc_session_set_cancel_handler(any OS_xpc_object, xpc_session_cancel_handler_t)",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_set_incoming_message_handler(_:_:)",
                "title": "func xpc_session_set_incoming_message_handler(any OS_xpc_object, xpc_session_incoming_message_handler_t)",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_incoming_message_handler_t-elj",
                "title": "xpc_session_incoming_message_handler_t",
                "type": "typealias"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_cancel_handler_t-65b6f",
                "title": "xpc_session_cancel_handler_t",
                "type": "typealias"
              },
              {
                "title": "Sending messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_rich_error_t",
                "title": "xpc_rich_error_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_rich_error_can_retry(_:)",
                "title": "func xpc_rich_error_can_retry(xpc_rich_error_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_rich_error_copy_description(_:)",
                "title": "func xpc_rich_error_copy_description(xpc_rich_error_t) -> UnsafeMutablePointer<CChar>?",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_send_message(_:_:)",
                "title": "func xpc_session_send_message(any OS_xpc_object, xpc_object_t) -> xpc_rich_error_t?",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_send_message_with_reply_async(_:_:_:)",
                "title": "func xpc_session_send_message_with_reply_async(any OS_xpc_object, xpc_object_t, xpc_session_reply_handler_t)",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_reply_handler_t-2hf7c",
                "title": "xpc_session_reply_handler_t",
                "type": "typealias"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_session_send_message_with_reply_sync(_:_:_:)",
                "title": "func xpc_session_send_message_with_reply_sync(any OS_xpc_object, xpc_object_t, AutoreleasingUnsafeMutablePointer<xpc_rich_error_t?>?) -> xpc_object_t?",
                "type": "func"
              },
              {
                "title": "Working with code signing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_session_set_peer_code_signing_requirement(_:_:)",
                "title": "func xpc_session_set_peer_code_signing_requirement(xpc_session_t, UnsafePointer<CChar>) -> Int32",
                "type": "func"
              }
            ],
            "path": "/documentation/xpc/xpc_session_t-10if0",
            "title": "xpc_session_t",
            "type": "typealias"
          },
          {
            "title": "Tasks",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Registration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_register(_:_:_:)",
                "title": "func xpc_activity_register(UnsafePointer<CChar>, xpc_object_t, xpc_activity_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_unregister(_:)",
                "title": "func xpc_activity_unregister(UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_check_in",
                "title": "let XPC_ACTIVITY_CHECK_IN: xpc_object_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_t",
                "title": "xpc_activity_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_activity_handler_t",
                "title": "xpc_activity_handler_t",
                "type": "typealias"
              },
              {
                "title": "State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_get_state(_:)",
                "title": "func xpc_activity_get_state(xpc_activity_t) -> xpc_activity_state_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_set_state(_:_:)",
                "title": "func xpc_activity_set_state(xpc_activity_t, xpc_activity_state_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_should_defer(_:)",
                "title": "func xpc_activity_should_defer(xpc_activity_t) -> Bool",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_check_in",
                    "title": "var XPC_ACTIVITY_STATE_CHECK_IN: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_continue",
                    "title": "var XPC_ACTIVITY_STATE_CONTINUE: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_defer",
                    "title": "var XPC_ACTIVITY_STATE_DEFER: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_done",
                    "title": "var XPC_ACTIVITY_STATE_DONE: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_run",
                    "title": "var XPC_ACTIVITY_STATE_RUN: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/xpc/xpc_activity_state_wait",
                    "title": "var XPC_ACTIVITY_STATE_WAIT: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/xpc/xpc-activity-state-t-swift-consts",
                "title": "xpc_activity_state_t",
                "type": "collection"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_t",
                "title": "xpc_activity_state_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_check_in",
                "title": "var XPC_ACTIVITY_STATE_CHECK_IN: Int",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_wait",
                "title": "var XPC_ACTIVITY_STATE_WAIT: Int",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_run",
                "title": "var XPC_ACTIVITY_STATE_RUN: Int",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_defer",
                "title": "var XPC_ACTIVITY_STATE_DEFER: Int",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_continue",
                "title": "var XPC_ACTIVITY_STATE_CONTINUE: Int",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_state_done",
                "title": "var XPC_ACTIVITY_STATE_DONE: Int",
                "type": "var"
              },
              {
                "title": "Execution criteria",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_copy_criteria(_:)",
                "title": "func xpc_activity_copy_criteria(xpc_activity_t) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_activity_set_criteria(_:_:)",
                "title": "func xpc_activity_set_criteria(xpc_activity_t, xpc_object_t)",
                "type": "func"
              },
              {
                "title": "Scheduling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_repeating",
                "title": "let XPC_ACTIVITY_REPEATING: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_delay",
                "title": "let XPC_ACTIVITY_DELAY: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_grace_period",
                "title": "let XPC_ACTIVITY_GRACE_PERIOD: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "title": "Time Intervals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval",
                "title": "let XPC_ACTIVITY_INTERVAL: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_1_min",
                "title": "let XPC_ACTIVITY_INTERVAL_1_MIN: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_5_min",
                "title": "let XPC_ACTIVITY_INTERVAL_5_MIN: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_15_min",
                "title": "let XPC_ACTIVITY_INTERVAL_15_MIN: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_30_min",
                "title": "let XPC_ACTIVITY_INTERVAL_30_MIN: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_1_hour",
                "title": "let XPC_ACTIVITY_INTERVAL_1_HOUR: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_4_hours",
                "title": "let XPC_ACTIVITY_INTERVAL_4_HOURS: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_8_hours",
                "title": "let XPC_ACTIVITY_INTERVAL_8_HOURS: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_1_day",
                "title": "let XPC_ACTIVITY_INTERVAL_1_DAY: Int64",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_interval_7_days",
                "title": "let XPC_ACTIVITY_INTERVAL_7_DAYS: Int64",
                "type": "var"
              },
              {
                "title": "Priority",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_priority",
                "title": "let XPC_ACTIVITY_PRIORITY: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_priority_maintenance",
                "title": "let XPC_ACTIVITY_PRIORITY_MAINTENANCE: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_priority_utility",
                "title": "let XPC_ACTIVITY_PRIORITY_UTILITY: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "title": "Power consumption",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_activity_allow_battery",
                "title": "let XPC_ACTIVITY_ALLOW_BATTERY: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_require_screen_sleep",
                "title": "let XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_activity_prevent_device_sleep",
                "title": "let XPC_ACTIVITY_PREVENT_DEVICE_SLEEP: UnsafePointer<CChar>",
                "type": "var"
              }
            ],
            "path": "/documentation/xpc/xpc-activities",
            "title": "XPC activities",
            "type": "collection"
          },
          {
            "title": "Events",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Event handling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_set_event_stream_handler(_:_:_:)",
                "title": "func xpc_set_event_stream_handler(UnsafePointer<CChar>, dispatch_queue_t?, xpc_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_event_key_name-swift.var",
                "title": "let XPC_EVENT_KEY_NAME: UnsafePointer<CChar>",
                "type": "var"
              }
            ],
            "path": "/documentation/xpc/xpc-events",
            "title": "XPC events",
            "type": "collection"
          },
          {
            "title": "Additional Types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_object_t",
                "title": "xpc_object_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_type_t",
                "title": "xpc_type_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/os_xpc_object",
                "title": "OS_xpc_object",
                "type": "protocol"
              },
              {
                "path": "/documentation/xpc/os_xpc_listener-swift.class",
                "title": "OS_xpc_listener",
                "type": "class"
              },
              {
                "title": "Identity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_get_type(_:)",
                "title": "func xpc_get_type(xpc_object_t) -> xpc_type_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_type_get_name(_:)",
                "title": "func xpc_type_get_name(xpc_type_t) -> UnsafePointer<CChar>",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_hash(_:)",
                "title": "func xpc_hash(xpc_object_t) -> Int",
                "type": "func"
              },
              {
                "title": "Comparison",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_equal(_:_:)",
                "title": "func xpc_equal(xpc_object_t, xpc_object_t) -> Bool",
                "type": "func"
              },
              {
                "title": "Copying",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_copy(_:)",
                "title": "func xpc_copy(xpc_object_t) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_copy_description(_:)",
                "title": "func xpc_copy_description(xpc_object_t) -> UnsafeMutablePointer<CChar>",
                "type": "func"
              },
              {
                "title": "Boolean objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_bool_create(_:)",
                "title": "func xpc_bool_create(Bool) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_bool_get_value(_:)",
                "title": "func xpc_bool_get_value(xpc_object_t) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_bool_true-swift.var",
                "title": "var XPC_BOOL_TRUE: xpc_object_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_bool_false-swift.var",
                "title": "var XPC_BOOL_FALSE: xpc_object_t",
                "type": "var"
              },
              {
                "title": "Data objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_data_create(_:_:)",
                "title": "func xpc_data_create(UnsafeRawPointer?, Int) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_create_with_dispatch_data(_:)",
                "title": "func xpc_data_create_with_dispatch_data(dispatch_data_t) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_get_bytes(_:_:_:_:)",
                "title": "func xpc_data_get_bytes(xpc_object_t, UnsafeMutableRawPointer, Int, Int) -> Int",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_get_bytes_ptr(_:)",
                "title": "func xpc_data_get_bytes_ptr(xpc_object_t) -> UnsafeRawPointer?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_data_get_length(_:)",
                "title": "func xpc_data_get_length(xpc_object_t) -> Int",
                "type": "func"
              },
              {
                "title": "Number objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_double_create(_:)",
                "title": "func xpc_double_create(Double) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_double_get_value(_:)",
                "title": "func xpc_double_get_value(xpc_object_t) -> Double",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_int64_create(_:)",
                "title": "func xpc_int64_create(Int64) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_int64_get_value(_:)",
                "title": "func xpc_int64_get_value(xpc_object_t) -> Int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_uint64_create(_:)",
                "title": "func xpc_uint64_create(UInt64) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_uint64_get_value(_:)",
                "title": "func xpc_uint64_get_value(xpc_object_t) -> UInt64",
                "type": "func"
              },
              {
                "title": "Array objects",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an array",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/init(_:)",
                    "title": "init(xpc_object_t)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/copy(into:)",
                    "title": "func copy(into: XPCArray)",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting an array",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/isempty",
                    "title": "var isEmpty: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/count",
                    "title": "var count: Int",
                    "type": "property"
                  },
                  {
                    "title": "Accessing elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:)-1s7qq",
                    "title": "subscript(Int) -> XPCDictionary?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:)-6c9gh",
                    "title": "subscript(Int) -> String?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:)-i6v5",
                    "title": "subscript(Int) -> Bool?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:)-56wjj",
                    "title": "subscript(Int) -> xpc_object_t?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:)-8wubg",
                    "title": "subscript<T>(Int) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:)-9x9ho",
                    "title": "subscript<T>(Int) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:)-2f94n",
                    "title": "subscript<T>(Int) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:)-3ae6x",
                    "title": "subscript(Int, as _: XPCDictionary.Type) -> XPCDictionary?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:)-9ukjj",
                    "title": "subscript(Int, as _: String.Type) -> String?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:)-1bilh",
                    "title": "subscript(Int, as _: Bool.Type) -> Bool?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:)-931lh",
                    "title": "subscript(Int, as _: any OS_xpc_object.Type) -> xpc_object_t?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:)-3tgp4",
                    "title": "subscript(Int, as _: xpc_type_t) -> xpc_object_t?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:)-2hql9",
                    "title": "subscript<T>(Int, as _: T.Type) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:)-6grs4",
                    "title": "subscript<T>(Int, as _: T.Type) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:default:)-2bn95",
                    "title": "subscript(Int, as _: Bool.Type, default _: @autoclosure () -> Bool) -> Bool",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/subscript(_:as:default:)-3k2qm",
                    "title": "subscript<T>(Int, as _: T.Type, default _: @autoclosure () -> T) -> T",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/withunsafeunderlyingarray(_:)",
                    "title": "func withUnsafeUnderlyingArray<ReturnType>((xpc_object_t) throws -> ReturnType) rethrows -> ReturnType",
                    "type": "method"
                  },
                  {
                    "title": "Iterating over an array’s elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/foreach(_:)-6obs3",
                    "title": "func forEach((XPCArray.IndexValuePair) throws -> Void) rethrows",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/foreach(_:)-2ib8a",
                    "title": "func forEach((Int, xpc_object_t) throws -> Void) rethrows",
                    "type": "method"
                  },
                  {
                    "title": "Transforming an array",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/map(_:)",
                    "title": "func map<ReturnType>((XPCArray.IndexValuePair) throws -> ReturnType) rethrows -> [ReturnType]",
                    "type": "method"
                  },
                  {
                    "title": "Supporting types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcarray/indexvaluepair",
                    "title": "XPCArray.IndexValuePair",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/xpc/xpcarray",
                "title": "XPCArray",
                "type": "struct"
              },
              {
                "path": "/documentation/xpc/xpc_array_create(_:_:)",
                "title": "func xpc_array_create(UnsafePointer<xpc_object_t>?, Int) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_create_empty()",
                "title": "func xpc_array_create_empty() -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_create_connection(_:_:)",
                "title": "func xpc_array_create_connection(xpc_object_t, Int) -> xpc_connection_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_value(_:_:_:)",
                "title": "func xpc_array_set_value(xpc_object_t, Int, xpc_object_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_value(_:_:)",
                "title": "func xpc_array_get_value(xpc_object_t, Int) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_append_value(_:_:)",
                "title": "func xpc_array_append_value(xpc_object_t, xpc_object_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_count(_:)",
                "title": "func xpc_array_get_count(xpc_object_t) -> Int",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_apply(_:_:)",
                "title": "func xpc_array_apply(xpc_object_t, (Int, xpc_object_t) -> Bool) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_dup_fd(_:_:)",
                "title": "func xpc_array_dup_fd(xpc_object_t, Int) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_array(_:_:)",
                "title": "func xpc_array_get_array(xpc_object_t, Int) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_bool(_:_:)",
                "title": "func xpc_array_get_bool(xpc_object_t, Int) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_data(_:_:_:)",
                "title": "func xpc_array_get_data(xpc_object_t, Int, UnsafeMutablePointer<Int>?) -> UnsafeRawPointer?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_date(_:_:)",
                "title": "func xpc_array_get_date(xpc_object_t, Int) -> Int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_dictionary(_:_:)",
                "title": "func xpc_array_get_dictionary(xpc_object_t, Int) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_double(_:_:)",
                "title": "func xpc_array_get_double(xpc_object_t, Int) -> Double",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_int64(_:_:)",
                "title": "func xpc_array_get_int64(xpc_object_t, Int) -> Int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_string(_:_:)",
                "title": "func xpc_array_get_string(xpc_object_t, Int) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_uint64(_:_:)",
                "title": "func xpc_array_get_uint64(xpc_object_t, Int) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_get_uuid(_:_:)",
                "title": "func xpc_array_get_uuid(xpc_object_t, Int) -> UnsafePointer<UInt8>?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_bool(_:_:_:)",
                "title": "func xpc_array_set_bool(xpc_object_t, Int, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_connection(_:_:_:)",
                "title": "func xpc_array_set_connection(xpc_object_t, Int, xpc_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_data(_:_:_:_:)",
                "title": "func xpc_array_set_data(xpc_object_t, Int, UnsafeRawPointer, Int)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_date(_:_:_:)",
                "title": "func xpc_array_set_date(xpc_object_t, Int, Int64)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_double(_:_:_:)",
                "title": "func xpc_array_set_double(xpc_object_t, Int, Double)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_fd(_:_:_:)",
                "title": "func xpc_array_set_fd(xpc_object_t, Int, Int32)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_int64(_:_:_:)",
                "title": "func xpc_array_set_int64(xpc_object_t, Int, Int64)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_string(_:_:_:)",
                "title": "func xpc_array_set_string(xpc_object_t, Int, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_uint64(_:_:_:)",
                "title": "func xpc_array_set_uint64(xpc_object_t, Int, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_set_uuid(_:_:_:)",
                "title": "func xpc_array_set_uuid(xpc_object_t, Int, UnsafePointer<UInt8>)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_array_applier_t",
                "title": "xpc_array_applier_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_array_append-swift.var",
                "title": "var XPC_ARRAY_APPEND: size_t",
                "type": "var"
              },
              {
                "title": "Dictionary objects",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a dictionary",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/init(_:)",
                    "title": "init(xpc_object_t)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/copy(into:)",
                    "title": "func copy(into: XPCDictionary)",
                    "type": "method"
                  },
                  {
                    "title": "Replying to client messages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/reply(_:)",
                    "title": "func reply(XPCDictionary)",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting a dictionary",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/isempty",
                    "title": "var isEmpty: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/count",
                    "title": "var count: Int",
                    "type": "property"
                  },
                  {
                    "title": "Accessing keys and values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/keys",
                    "title": "var keys: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/values",
                    "title": "var values: [xpc_object_t]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:)-4hbmg",
                    "title": "subscript(String) -> XPCDictionary?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:)-80fs2",
                    "title": "subscript(String) -> String?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:)-gas6",
                    "title": "subscript(String) -> Bool?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:)-4j21u",
                    "title": "subscript(String) -> xpc_object_t?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:)-8gyze",
                    "title": "subscript<T>(String) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:)-4vrsa",
                    "title": "subscript<T>(String) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:)-3i01t",
                    "title": "subscript<T>(String) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:)-1mm7n",
                    "title": "subscript(String, as _: XPCDictionary.Type) -> XPCDictionary?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:)-4zxc8",
                    "title": "subscript(String, as _: String.Type) -> String?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:)-18db5",
                    "title": "subscript(String, as _: Bool.Type) -> Bool?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:)-5y39v",
                    "title": "subscript(String, as _: any OS_xpc_object.Type) -> xpc_object_t?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:)-qjxa",
                    "title": "subscript(String, as _: xpc_type_t) -> xpc_object_t?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:)-3mzgc",
                    "title": "subscript<T>(String, as _: T.Type) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:)-119cl",
                    "title": "subscript<T>(String, as _: T.Type) -> T?",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:default:)-5ufgs",
                    "title": "subscript(String, as _: Bool.Type, default _: @autoclosure () -> Bool) -> Bool",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/subscript(_:as:default:)-4ssx3",
                    "title": "subscript<T>(String, as _: T.Type, default _: @autoclosure () -> T) -> T",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/withunsafeunderlyingdictionary(_:)",
                    "title": "func withUnsafeUnderlyingDictionary<ReturnType>((xpc_object_t) throws -> ReturnType) rethrows -> ReturnType",
                    "type": "method"
                  },
                  {
                    "title": "Removing keys and values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/removevalue(forkey:)",
                    "title": "func removeValue(forKey: String) -> xpc_object_t?",
                    "type": "method"
                  },
                  {
                    "title": "Supporting types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/keyvaluepair",
                    "title": "XPCDictionary.KeyValuePair",
                    "type": "typealias"
                  },
                  {
                    "title": "Iterating over keys and values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/foreach(_:)-9hufx",
                    "title": "func forEach((XPCDictionary.KeyValuePair) throws -> Void) rethrows",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/foreach(_:)-6riqn",
                    "title": "func forEach((String, xpc_object_t) throws -> Void) rethrows",
                    "type": "method"
                  },
                  {
                    "title": "Transforming a dictionary",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcdictionary/map(_:)",
                    "title": "func map<ReturnType>((XPCDictionary.KeyValuePair) throws -> ReturnType) rethrows -> [ReturnType]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/xpc/xpcdictionary",
                "title": "XPCDictionary",
                "type": "struct"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create(_:_:_:)",
                "title": "func xpc_dictionary_create(UnsafePointer<UnsafePointer<CChar>>?, UnsafePointer<xpc_object_t?>?, Int) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create_empty()",
                "title": "func xpc_dictionary_create_empty() -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create_connection(_:_:)",
                "title": "func xpc_dictionary_create_connection(xpc_object_t, UnsafePointer<CChar>) -> xpc_connection_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_create_reply(_:)",
                "title": "func xpc_dictionary_create_reply(xpc_object_t) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_value(_:_:_:)",
                "title": "func xpc_dictionary_set_value(xpc_object_t, UnsafePointer<CChar>, xpc_object_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_count(_:)",
                "title": "func xpc_dictionary_get_count(xpc_object_t) -> Int",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_value(_:_:)",
                "title": "func xpc_dictionary_get_value(xpc_object_t, UnsafePointer<CChar>) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_apply(_:_:)",
                "title": "func xpc_dictionary_apply(xpc_object_t, (UnsafePointer<CChar>, xpc_object_t) -> Bool) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_dup_fd(_:_:)",
                "title": "func xpc_dictionary_dup_fd(xpc_object_t, UnsafePointer<CChar>) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_array(_:_:)",
                "title": "func xpc_dictionary_get_array(xpc_object_t, UnsafePointer<CChar>) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_bool(_:_:)",
                "title": "func xpc_dictionary_get_bool(xpc_object_t, UnsafePointer<CChar>) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_data(_:_:_:)",
                "title": "func xpc_dictionary_get_data(xpc_object_t, UnsafePointer<CChar>, UnsafeMutablePointer<Int>?) -> UnsafeRawPointer?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_date(_:_:)",
                "title": "func xpc_dictionary_get_date(xpc_object_t, UnsafePointer<CChar>) -> Int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_dictionary(_:_:)",
                "title": "func xpc_dictionary_get_dictionary(xpc_object_t, UnsafePointer<CChar>) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_double(_:_:)",
                "title": "func xpc_dictionary_get_double(xpc_object_t, UnsafePointer<CChar>) -> Double",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_int64(_:_:)",
                "title": "func xpc_dictionary_get_int64(xpc_object_t, UnsafePointer<CChar>) -> Int64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_remote_connection(_:)",
                "title": "func xpc_dictionary_get_remote_connection(xpc_object_t) -> xpc_connection_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_string(_:_:)",
                "title": "func xpc_dictionary_get_string(xpc_object_t, UnsafePointer<CChar>) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_uint64(_:_:)",
                "title": "func xpc_dictionary_get_uint64(xpc_object_t, UnsafePointer<CChar>) -> UInt64",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_get_uuid(_:_:)",
                "title": "func xpc_dictionary_get_uuid(xpc_object_t, UnsafePointer<CChar>) -> UnsafePointer<UInt8>?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_bool(_:_:_:)",
                "title": "func xpc_dictionary_set_bool(xpc_object_t, UnsafePointer<CChar>, Bool)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_connection(_:_:_:)",
                "title": "func xpc_dictionary_set_connection(xpc_object_t, UnsafePointer<CChar>, xpc_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_data(_:_:_:_:)",
                "title": "func xpc_dictionary_set_data(xpc_object_t, UnsafePointer<CChar>, UnsafeRawPointer, Int)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_date(_:_:_:)",
                "title": "func xpc_dictionary_set_date(xpc_object_t, UnsafePointer<CChar>, Int64)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_double(_:_:_:)",
                "title": "func xpc_dictionary_set_double(xpc_object_t, UnsafePointer<CChar>, Double)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_fd(_:_:_:)",
                "title": "func xpc_dictionary_set_fd(xpc_object_t, UnsafePointer<CChar>, Int32)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_int64(_:_:_:)",
                "title": "func xpc_dictionary_set_int64(xpc_object_t, UnsafePointer<CChar>, Int64)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_string(_:_:_:)",
                "title": "func xpc_dictionary_set_string(xpc_object_t, UnsafePointer<CChar>, UnsafePointer<CChar>)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_uint64(_:_:_:)",
                "title": "func xpc_dictionary_set_uint64(xpc_object_t, UnsafePointer<CChar>, UInt64)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_uuid(_:_:_:)",
                "title": "func xpc_dictionary_set_uuid(xpc_object_t, UnsafePointer<CChar>, UnsafePointer<UInt8>)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_applier_t",
                "title": "xpc_dictionary_applier_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_copy_mach_send(_:_:)",
                "title": "func xpc_dictionary_copy_mach_send(xpc_object_t, UnsafePointer<CChar>) -> mach_port_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_dictionary_set_mach_send(_:_:_:)",
                "title": "func xpc_dictionary_set_mach_send(xpc_object_t, UnsafePointer<CChar>, mach_port_t)",
                "type": "func"
              },
              {
                "title": "String objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_string_create(_:)",
                "title": "func xpc_string_create(UnsafePointer<CChar>) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_string_create_with_format_and_arguments(_:_:)",
                "title": "func xpc_string_create_with_format_and_arguments(UnsafePointer<CChar>, CVaListPointer) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_string_get_length(_:)",
                "title": "func xpc_string_get_length(xpc_object_t) -> Int",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_string_get_string_ptr(_:)",
                "title": "func xpc_string_get_string_ptr(xpc_object_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "title": "File Descriptor objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_fd_create(_:)",
                "title": "func xpc_fd_create(Int32) -> xpc_object_t?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_fd_dup(_:)",
                "title": "func xpc_fd_dup(xpc_object_t) -> Int32",
                "type": "func"
              },
              {
                "title": "Date objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_date_create(_:)",
                "title": "func xpc_date_create(Int64) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_date_create_from_current()",
                "title": "func xpc_date_create_from_current() -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_date_get_value(_:)",
                "title": "func xpc_date_get_value(xpc_object_t) -> Int64",
                "type": "func"
              },
              {
                "title": "UUID objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_uuid_create(_:)",
                "title": "func xpc_uuid_create(UnsafePointer<UInt8>) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_uuid_get_bytes(_:)",
                "title": "func xpc_uuid_get_bytes(xpc_object_t) -> UnsafePointer<UInt8>?",
                "type": "func"
              },
              {
                "title": "Shared memory objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_shmem_create(_:_:)",
                "title": "func xpc_shmem_create(UnsafeMutableRawPointer, Int) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_shmem_map(_:_:)",
                "title": "func xpc_shmem_map(xpc_object_t, UnsafeMutablePointer<UnsafeMutableRawPointer?>) -> Int",
                "type": "func"
              },
              {
                "title": "Null objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_null_create()",
                "title": "func xpc_null_create() -> xpc_object_t",
                "type": "func"
              },
              {
                "title": "Object life cycle",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_retain(_:)",
                "title": "func xpc_retain(xpc_object_t) -> xpc_object_t",
                "type": "func"
              },
              {
                "deprecated": true,
                "path": "/documentation/xpc/xpc_release(_:)",
                "title": "func xpc_release(xpc_object_t)",
                "type": "func"
              },
              {
                "title": "Types of objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_type_activity-swift.var",
                "title": "var XPC_TYPE_ACTIVITY: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_array-swift.var",
                "title": "var XPC_TYPE_ARRAY: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_bool-swift.var",
                "title": "var XPC_TYPE_BOOL: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_connection-swift.var",
                "title": "var XPC_TYPE_CONNECTION: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_data-swift.var",
                "title": "var XPC_TYPE_DATA: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_date-swift.var",
                "title": "var XPC_TYPE_DATE: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_dictionary-swift.var",
                "title": "var XPC_TYPE_DICTIONARY: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_double-swift.var",
                "title": "var XPC_TYPE_DOUBLE: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_endpoint-swift.var",
                "title": "var XPC_TYPE_ENDPOINT: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_fd-swift.var",
                "title": "var XPC_TYPE_FD: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_int64-swift.var",
                "title": "var XPC_TYPE_INT64: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_null-swift.var",
                "title": "var XPC_TYPE_NULL: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_shmem-swift.var",
                "title": "var XPC_TYPE_SHMEM: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_string-swift.var",
                "title": "var XPC_TYPE_STRING: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_uint64-swift.var",
                "title": "var XPC_TYPE_UINT64: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_uuid-swift.var",
                "title": "var XPC_TYPE_UUID: xpc_type_t",
                "type": "var"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/xpc/xpcricherror/canretry",
                    "title": "var canRetry: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/xpc/xpcricherror",
                "title": "XPCRichError",
                "type": "struct"
              },
              {
                "path": "/documentation/xpc/xpc_type_rich_error-swift.var",
                "title": "var XPC_TYPE_RICH_ERROR: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_type_error-swift.var",
                "title": "var XPC_TYPE_ERROR: xpc_type_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_error_key_description-swift.var",
                "title": "let XPC_ERROR_KEY_DESCRIPTION: UnsafePointer<CChar>",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_error_peer_code_signing_requirement-swift.var",
                "title": "var XPC_ERROR_PEER_CODE_SIGNING_REQUIREMENT: xpc_object_t",
                "type": "var"
              }
            ],
            "path": "/documentation/xpc/xpc-objects",
            "title": "XPC objects",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Debug Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_debugger_api_misuse_info()",
                "title": "func xpc_debugger_api_misuse_info() -> UnsafePointer<CChar>!",
                "type": "func"
              },
              {
                "title": "Version Details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_api_version",
                "title": "var XPC_API_VERSION: Int32",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/iphone_simulator_host_min_version_required",
                "title": "var IPHONE_SIMULATOR_HOST_MIN_VERSION_REQUIRED: Int32",
                "type": "var"
              }
            ],
            "path": "/documentation/xpc/utilities",
            "title": "Utilities",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_t",
                "title": "xpc_connection_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_connection_create(_:_:)",
                "title": "func xpc_connection_create(UnsafePointer<CChar>?, dispatch_queue_t?) -> xpc_connection_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_create_from_endpoint(_:)",
                "title": "func xpc_connection_create_from_endpoint(xpc_endpoint_t) -> xpc_connection_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_create_mach_service(_:_:_:)",
                "title": "func xpc_connection_create_mach_service(UnsafePointer<CChar>, dispatch_queue_t?, UInt64) -> xpc_connection_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_target_queue(_:_:)",
                "title": "func xpc_connection_set_target_queue(xpc_connection_t, dispatch_queue_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_mach_service_listener",
                "title": "var XPC_CONNECTION_MACH_SERVICE_LISTENER: Int32",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_connection_mach_service_privileged",
                "title": "var XPC_CONNECTION_MACH_SERVICE_PRIVILEGED: Int32",
                "type": "var"
              },
              {
                "title": "Event handling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_event_handler(_:_:)",
                "title": "func xpc_connection_set_event_handler(xpc_connection_t, xpc_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_handler_t",
                "title": "xpc_handler_t",
                "type": "typealias"
              },
              {
                "path": "/documentation/xpc/xpc_connection_handler_t",
                "title": "xpc_connection_handler_t",
                "type": "typealias"
              },
              {
                "title": "Life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_main(_:)",
                "title": "func xpc_main(xpc_connection_handler_t) -> Never",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_activate(_:)",
                "title": "func xpc_connection_activate(xpc_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_suspend(_:)",
                "title": "func xpc_connection_suspend(xpc_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_resume(_:)",
                "title": "func xpc_connection_resume(xpc_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_cancel(_:)",
                "title": "func xpc_connection_cancel(xpc_connection_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_transaction_begin()",
                "title": "func xpc_transaction_begin()",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_transaction_end()",
                "title": "func xpc_transaction_end()",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_copy_invalidation_reason(_:)",
                "title": "func xpc_connection_copy_invalidation_reason(xpc_connection_t) -> UnsafeMutablePointer<CChar>?",
                "type": "func"
              },
              {
                "title": "Messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_message(_:_:)",
                "title": "func xpc_connection_send_message(xpc_connection_t, xpc_object_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_barrier(_:_:)",
                "title": "func xpc_connection_send_barrier(xpc_connection_t, () -> Void)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_message_with_reply(_:_:_:_:)",
                "title": "func xpc_connection_send_message_with_reply(xpc_connection_t, xpc_object_t, dispatch_queue_t?, xpc_handler_t)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_send_message_with_reply_sync(_:_:)",
                "title": "func xpc_connection_send_message_with_reply_sync(xpc_connection_t, xpc_object_t) -> xpc_object_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_main(_:)",
                "title": "func xpc_main(xpc_connection_handler_t) -> Never",
                "type": "func"
              },
              {
                "title": "Remote peer information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_name(_:)",
                "title": "func xpc_connection_get_name(xpc_connection_t) -> UnsafePointer<CChar>?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_euid(_:)",
                "title": "func xpc_connection_get_euid(xpc_connection_t) -> uid_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_egid(_:)",
                "title": "func xpc_connection_get_egid(xpc_connection_t) -> gid_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_pid(_:)",
                "title": "func xpc_connection_get_pid(xpc_connection_t) -> pid_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_asid(_:)",
                "title": "func xpc_connection_get_asid(xpc_connection_t) -> au_asid_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_entitlement_exists_requirement(_:_:)",
                "title": "func xpc_connection_set_peer_entitlement_exists_requirement(xpc_connection_t, UnsafePointer<CChar>) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_entitlement_matches_value_requirement(_:_:_:)",
                "title": "func xpc_connection_set_peer_entitlement_matches_value_requirement(xpc_connection_t, UnsafePointer<CChar>, xpc_object_t) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_lightweight_code_requirement(_:_:)",
                "title": "func xpc_connection_set_peer_lightweight_code_requirement(xpc_connection_t, xpc_object_t) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_platform_identity_requirement(_:_:)",
                "title": "func xpc_connection_set_peer_platform_identity_requirement(xpc_connection_t, UnsafePointer<CChar>?) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_team_identity_requirement(_:_:)",
                "title": "func xpc_connection_set_peer_team_identity_requirement(xpc_connection_t, UnsafePointer<CChar>?) -> Int32",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_peer_code_signing_requirement(_:_:)",
                "title": "func xpc_connection_set_peer_code_signing_requirement(xpc_connection_t, UnsafePointer<CChar>) -> Int32",
                "type": "func"
              },
              {
                "title": "Context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_context(_:_:)",
                "title": "func xpc_connection_set_context(xpc_connection_t, UnsafeMutableRawPointer?)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_get_context(_:)",
                "title": "func xpc_connection_get_context(xpc_connection_t) -> UnsafeMutableRawPointer?",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_connection_set_finalizer_f(_:_:)",
                "title": "func xpc_connection_set_finalizer_f(xpc_connection_t, xpc_finalizer_t?)",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_finalizer_t",
                "title": "xpc_finalizer_t",
                "type": "typealias"
              },
              {
                "title": "Endpoints",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_endpoint_create(_:)",
                "title": "func xpc_endpoint_create(xpc_connection_t) -> xpc_endpoint_t",
                "type": "func"
              },
              {
                "path": "/documentation/xpc/xpc_endpoint_t",
                "title": "xpc_endpoint_t",
                "type": "typealias"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/xpc/xpc_error_connection_invalid-swift.var",
                "title": "var XPC_ERROR_CONNECTION_INVALID: xpc_object_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_error_connection_interrupted-swift.var",
                "title": "var XPC_ERROR_CONNECTION_INTERRUPTED: xpc_object_t",
                "type": "var"
              },
              {
                "path": "/documentation/xpc/xpc_error_termination_imminent-swift.var",
                "title": "var XPC_ERROR_TERMINATION_IMMINENT: xpc_object_t",
                "type": "var"
              }
            ],
            "path": "/documentation/xpc/xpc-connections",
            "title": "XPC connections",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/xpc/os_xpc_session-swift.class",
            "title": "OS_xpc_session",
            "type": "class"
          }
        ],
        "path": "/documentation/xpc",
        "title": "XPC",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
