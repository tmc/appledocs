{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Tokenization",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/tokenizing-natural-language-text",
            "title": "Tokenizing natural language text",
            "type": "article"
          },
          {
            "title": "Language identification",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/identifying-the-language-in-text",
            "title": "Identifying the language in text",
            "type": "article"
          },
          {
            "title": "Linguistic tags",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/identifying-parts-of-speech",
            "title": "Identifying parts of speech",
            "type": "article"
          },
          {
            "path": "/documentation/naturallanguage/identifying-people-places-and-organizations",
            "title": "Identifying people, places, and organizations",
            "type": "article"
          },
          {
            "title": "Text embedding",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/finding-similarities-between-pieces-of-text",
            "title": "Finding similarities between pieces of text",
            "type": "article"
          },
          {
            "title": "Contextual embedding",
            "type": "groupMarker"
          },
          {
            "title": "Natural language models",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/createml/creating-a-text-classifier-model",
            "title": "Creating a text classifier model",
            "type": "article"
          },
          {
            "path": "/documentation/naturallanguage/creating-a-word-tagger-model",
            "title": "Creating a word tagger model",
            "type": "article"
          }
        ],
        "path": "/documentation/naturallanguage",
        "title": "Natural Language",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Tokenization",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/tokenizing-natural-language-text",
            "title": "Tokenizing natural language text",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a tokenizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/init(unit:)",
                "title": "- initWithUnit:",
                "type": "method"
              },
              {
                "title": "Configuring a tokenizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/string",
                "title": "string",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/setlanguage(_:)",
                "title": "- setLanguage:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/unit",
                "title": "unit",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Contents",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenizer/attributes/emoji",
                    "title": "NLTokenizerAttributeEmoji",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenizer/attributes/numeric",
                    "title": "NLTokenizerAttributeNumeric",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenizer/attributes/symbolic",
                    "title": "NLTokenizerAttributeSymbolic",
                    "type": "case"
                  }
                ],
                "path": "/documentation/naturallanguage/nltokenizer/attributes",
                "title": "NLTokenizerAttributes",
                "type": "enum"
              },
              {
                "title": "Enumerating the tokens",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/enumeratetokensinrange:usingblock:",
                "title": "- enumerateTokensInRange:usingBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/tokensforrange:",
                "title": "- tokensForRange:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/tokenrangeatindex:",
                "title": "- tokenRangeAtIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/tokenrangeforrange:",
                "title": "- tokenRangeForRange:",
                "type": "method"
              }
            ],
            "path": "/documentation/naturallanguage/nltokenizer",
            "title": "NLTokenizer",
            "type": "class"
          },
          {
            "title": "Language identification",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/identifying-the-language-in-text",
            "title": "Identifying the language in text",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a recognizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "title": "Determining the language",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/dominantlanguage(for:)",
                "title": "+ dominantLanguageForString:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/processstring(_:)",
                "title": "- processString:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/dominantlanguage",
                "title": "dominantLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/languagehypotheseswithmaximum:",
                "title": "- languageHypothesesWithMaximum:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/reset()",
                "title": "- reset",
                "type": "method"
              },
              {
                "title": "Guiding the recognizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/languagehints-3gy00",
                "title": "languageHints",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/languageconstraints",
                "title": "languageConstraints",
                "type": "property"
              }
            ],
            "path": "/documentation/naturallanguage/nllanguagerecognizer",
            "title": "NLLanguageRecognizer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting standard languages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/amharic",
                "title": "NLLanguageAmharic",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/arabic",
                "title": "NLLanguageArabic",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/armenian",
                "title": "NLLanguageArmenian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/bengali",
                "title": "NLLanguageBengali",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/bulgarian",
                "title": "NLLanguageBulgarian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/burmese",
                "title": "NLLanguageBurmese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/catalan",
                "title": "NLLanguageCatalan",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/cherokee",
                "title": "NLLanguageCherokee",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/croatian",
                "title": "NLLanguageCroatian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/czech",
                "title": "NLLanguageCzech",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/danish",
                "title": "NLLanguageDanish",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/dutch",
                "title": "NLLanguageDutch",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/english",
                "title": "NLLanguageEnglish",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/finnish",
                "title": "NLLanguageFinnish",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/french",
                "title": "NLLanguageFrench",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/georgian",
                "title": "NLLanguageGeorgian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/german",
                "title": "NLLanguageGerman",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/greek",
                "title": "NLLanguageGreek",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/gujarati",
                "title": "NLLanguageGujarati",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/hebrew",
                "title": "NLLanguageHebrew",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/hindi",
                "title": "NLLanguageHindi",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/hungarian",
                "title": "NLLanguageHungarian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/icelandic",
                "title": "NLLanguageIcelandic",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/indonesian",
                "title": "NLLanguageIndonesian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/italian",
                "title": "NLLanguageItalian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/japanese",
                "title": "NLLanguageJapanese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/kannada",
                "title": "NLLanguageKannada",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/kazakh",
                "title": "NLLanguageKazakh",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/khmer",
                "title": "NLLanguageKhmer",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/korean",
                "title": "NLLanguageKorean",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/lao",
                "title": "NLLanguageLao",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/malay",
                "title": "NLLanguageMalay",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/malayalam",
                "title": "NLLanguageMalayalam",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/marathi",
                "title": "NLLanguageMarathi",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/mongolian",
                "title": "NLLanguageMongolian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/norwegian",
                "title": "NLLanguageNorwegian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/oriya",
                "title": "NLLanguageOriya",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/persian",
                "title": "NLLanguagePersian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/polish",
                "title": "NLLanguagePolish",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/portuguese",
                "title": "NLLanguagePortuguese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/punjabi",
                "title": "NLLanguagePunjabi",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/romanian",
                "title": "NLLanguageRomanian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/russian",
                "title": "NLLanguageRussian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/simplifiedchinese",
                "title": "NLLanguageSimplifiedChinese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/sinhalese",
                "title": "NLLanguageSinhalese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/slovak",
                "title": "NLLanguageSlovak",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/spanish",
                "title": "NLLanguageSpanish",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/swedish",
                "title": "NLLanguageSwedish",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/tamil",
                "title": "NLLanguageTamil",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/telugu",
                "title": "NLLanguageTelugu",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/thai",
                "title": "NLLanguageThai",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/tibetan",
                "title": "NLLanguageTibetan",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/traditionalchinese",
                "title": "NLLanguageTraditionalChinese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/turkish",
                "title": "NLLanguageTurkish",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/ukrainian",
                "title": "NLLanguageUkrainian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/urdu",
                "title": "NLLanguageUrdu",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/vietnamese",
                "title": "NLLanguageVietnamese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/undetermined",
                "title": "NLLanguageUndetermined",
                "type": "var"
              }
            ],
            "path": "/documentation/naturallanguage/nllanguage",
            "title": "NLLanguage",
            "type": "typealias"
          },
          {
            "title": "Linguistic tags",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/identifying-parts-of-speech",
            "title": "Identifying parts of speech",
            "type": "article"
          },
          {
            "path": "/documentation/naturallanguage/identifying-people-places-and-organizations",
            "title": "Identifying people, places, and organizations",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a tagger",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/init(tagschemes:)",
                "title": "- initWithTagSchemes:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/string",
                "title": "string",
                "type": "property"
              },
              {
                "title": "Getting the tag schemes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/availabletagschemes(for:language:)",
                "title": "+ availableTagSchemesForUnit:language:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/requestassets(for:tagscheme:completionhandler:)",
                "title": "+ requestAssetsForLanguage:tagScheme:completionHandler:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Asset request responses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/assetsresult/available",
                    "title": "NLTaggerAssetsResultAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/assetsresult/notavailable",
                    "title": "NLTaggerAssetsResultNotAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/assetsresult/error",
                    "title": "NLTaggerAssetsResultError",
                    "type": "case"
                  }
                ],
                "path": "/documentation/naturallanguage/nltagger/assetsresult",
                "title": "NLTaggerAssetsResult",
                "type": "enum"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tagschemes",
                "title": "tagSchemes",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Schemes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/tokentype",
                    "title": "NLTagSchemeTokenType",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/lexicalclass",
                    "title": "NLTagSchemeLexicalClass",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/nametype",
                    "title": "NLTagSchemeNameType",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/nametypeorlexicalclass",
                    "title": "NLTagSchemeNameTypeOrLexicalClass",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/lemma",
                    "title": "NLTagSchemeLemma",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/language",
                    "title": "NLTagSchemeLanguage",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/script",
                    "title": "NLTagSchemeScript",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/sentimentscore",
                    "title": "NLTagSchemeSentimentScore",
                    "type": "var"
                  }
                ],
                "path": "/documentation/naturallanguage/nltagscheme",
                "title": "NLTagScheme",
                "type": "typealias"
              },
              {
                "title": "Determining the dominant language and orthography",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/dominantlanguage",
                "title": "dominantLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setlanguage:range:",
                "title": "- setLanguage:range:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setorthography:range:",
                "title": "- setOrthography:range:",
                "type": "method"
              },
              {
                "title": "Enumerating linguistic tags",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/enumeratetagsinrange:unit:scheme:options:usingblock:",
                "title": "- enumerateTagsInRange:unit:scheme:options:usingBlock:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitwords",
                    "title": "NLTaggerOmitWords",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitpunctuation",
                    "title": "NLTaggerOmitPunctuation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitwhitespace",
                    "title": "NLTaggerOmitWhitespace",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitother",
                    "title": "NLTaggerOmitOther",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/joinnames",
                    "title": "NLTaggerJoinNames",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/joincontractions",
                    "title": "NLTaggerJoinContractions",
                    "type": "case"
                  }
                ],
                "path": "/documentation/naturallanguage/nltagger/options",
                "title": "NLTaggerOptions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Token types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/word",
                    "title": "NLTagWord",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/punctuation",
                    "title": "NLTagPunctuation",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/whitespace",
                    "title": "NLTagWhitespace",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/other",
                    "title": "NLTagOther",
                    "type": "var"
                  },
                  {
                    "title": "Lexical classes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/noun",
                    "title": "NLTagNoun",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/verb",
                    "title": "NLTagVerb",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/adjective",
                    "title": "NLTagAdjective",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/adverb",
                    "title": "NLTagAdverb",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/pronoun",
                    "title": "NLTagPronoun",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/determiner",
                    "title": "NLTagDeterminer",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/particle",
                    "title": "NLTagParticle",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/preposition",
                    "title": "NLTagPreposition",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/number",
                    "title": "NLTagNumber",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/conjunction",
                    "title": "NLTagConjunction",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/interjection",
                    "title": "NLTagInterjection",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/classifier",
                    "title": "NLTagClassifier",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/idiom",
                    "title": "NLTagIdiom",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/otherword",
                    "title": "NLTagOtherWord",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/sentenceterminator",
                    "title": "NLTagSentenceTerminator",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/openquote",
                    "title": "NLTagOpenQuote",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/closequote",
                    "title": "NLTagCloseQuote",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/openparenthesis",
                    "title": "NLTagOpenParenthesis",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/closeparenthesis",
                    "title": "NLTagCloseParenthesis",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/wordjoiner",
                    "title": "NLTagWordJoiner",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/dash",
                    "title": "NLTagDash",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/otherpunctuation",
                    "title": "NLTagOtherPunctuation",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/paragraphbreak",
                    "title": "NLTagParagraphBreak",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/otherwhitespace",
                    "title": "NLTagOtherWhitespace",
                    "type": "var"
                  },
                  {
                    "title": "Name types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/personalname",
                    "title": "NLTagPersonalName",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/organizationname",
                    "title": "NLTagOrganizationName",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/placename",
                    "title": "NLTagPlaceName",
                    "type": "var"
                  }
                ],
                "path": "/documentation/naturallanguage/nltag",
                "title": "NLTag",
                "type": "typealias"
              },
              {
                "title": "Getting linguistic tags",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tagsinrange:unit:scheme:options:tokenranges:",
                "title": "- tagsInRange:unit:scheme:options:tokenRanges:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tagatindex:unit:scheme:tokenrange:",
                "title": "- tagAtIndex:unit:scheme:tokenRange:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/taghypothesesatindex:unit:scheme:maximumcount:tokenrange:",
                "title": "- tagHypothesesAtIndex:unit:scheme:maximumCount:tokenRange:",
                "type": "method"
              },
              {
                "title": "Determining the range of a unit token",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tokenrangeatindex:unit:",
                "title": "- tokenRangeAtIndex:unit:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tokenrangeforrange:unit:",
                "title": "- tokenRangeForRange:unit:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/word",
                    "title": "NLTokenUnitWord",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/sentence",
                    "title": "NLTokenUnitSentence",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/paragraph",
                    "title": "NLTokenUnitParagraph",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/document",
                    "title": "NLTokenUnitDocument",
                    "type": "case"
                  }
                ],
                "path": "/documentation/naturallanguage/nltokenunit",
                "title": "NLTokenUnit",
                "type": "enum"
              },
              {
                "title": "Using models with a tagger",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setmodels(_:fortagscheme:)",
                "title": "- setModels:forTagScheme:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/models(fortagscheme:)",
                "title": "- modelsForTagScheme:",
                "type": "method"
              },
              {
                "title": "Using gazetteers with a tagger",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setgazetteers(_:for:)",
                "title": "- setGazetteers:forTagScheme:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/gazetteers(for:)",
                "title": "- gazetteersForTagScheme:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a Gazetteer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/init(contentsof:)",
                    "title": "- initWithContentsOfURL:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/gazetteerwithcontentsofurl:error:",
                    "title": "+ gazetteerWithContentsOfURL:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/init(data:)",
                    "title": "- initWithData:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/init(dictionary:language:)",
                    "title": "- initWithDictionary:language:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/write(_:language:to:)",
                    "title": "+ writeGazetteerForDictionary:language:toURL:error:",
                    "type": "method"
                  },
                  {
                    "title": "Looking Up Labels for Terms",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/label(for:)",
                    "title": "- labelForString:",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting a Gazetteer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/data",
                    "title": "data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/language",
                    "title": "language",
                    "type": "property"
                  }
                ],
                "path": "/documentation/naturallanguage/nlgazetteer",
                "title": "NLGazetteer",
                "type": "class"
              }
            ],
            "path": "/documentation/naturallanguage/nltagger",
            "title": "NLTagger",
            "type": "class"
          },
          {
            "title": "Text embedding",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/finding-similarities-between-pieces-of-text",
            "title": "Finding similarities between pieces of text",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a word embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/wordembedding(for:)",
                "title": "+ wordEmbeddingForLanguage:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/wordembedding(for:revision:)",
                "title": "+ wordEmbeddingForLanguage:revision:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/init(contentsof:)",
                "title": "+ embeddingWithContentsOfURL:error:",
                "type": "method"
              },
              {
                "title": "Creating a sentence embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/sentenceembedding(for:)",
                "title": "+ sentenceEmbeddingForLanguage:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/sentenceembedding(for:revision:)",
                "title": "+ sentenceEmbeddingForLanguage:revision:",
                "type": "method"
              },
              {
                "title": "Finding strings and their distances in an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/neighborsforstring:maximumcount:distancetype:",
                "title": "- neighborsForString:maximumCount:distanceType:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/neighborsforstring:maximumcount:maximumdistance:distancetype:",
                "title": "- neighborsForString:maximumCount:maximumDistance:distanceType:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/neighborsforvector:maximumcount:distancetype:",
                "title": "- neighborsForVector:maximumCount:distanceType:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/neighborsforvector:maximumcount:maximumdistance:distancetype:",
                "title": "- neighborsForVector:maximumCount:maximumDistance:distanceType:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/enumerateneighborsforstring:maximumcount:distancetype:usingblock:",
                "title": "- enumerateNeighborsForString:maximumCount:distanceType:usingBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/enumerateneighborsforstring:maximumcount:maximumdistance:distancetype:usingblock:",
                "title": "- enumerateNeighborsForString:maximumCount:maximumDistance:distanceType:usingBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/enumerateneighborsforvector:maximumcount:distancetype:usingblock:",
                "title": "- enumerateNeighborsForVector:maximumCount:distanceType:usingBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/enumerateneighborsforvector:maximumcount:maximumdistance:distancetype:usingblock:",
                "title": "- enumerateNeighborsForVector:maximumCount:maximumDistance:distanceType:usingBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/distancebetweenstring:andstring:distancetype:",
                "title": "- distanceBetweenString:andString:distanceType:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Calculating Distance",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Distance Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/naturallanguage/nldistancetype/cosine",
                        "title": "NLDistanceTypeCosine",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/naturallanguage/nldistancetype",
                    "title": "NLDistanceType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/naturallanguage/nldistance",
                "title": "NLDistance",
                "type": "typealias"
              },
              {
                "title": "Inspecting the vocabulary of an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/dimension",
                "title": "dimension",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/vocabularysize",
                "title": "vocabularySize",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/language",
                "title": "language",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/contains(_:)",
                "title": "- containsString:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/vectorforstring:",
                "title": "- vectorForString:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/getvector:forstring:",
                "title": "- getVector:forString:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/revision",
                "title": "revision",
                "type": "property"
              },
              {
                "title": "Saving an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/writeembeddingfordictionary:language:revision:tourl:error:",
                "title": "+ writeEmbeddingForDictionary:language:revision:toURL:error:",
                "type": "method"
              },
              {
                "title": "Checking for Natural Language support",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/currentrevision(for:)",
                "title": "+ currentRevisionForLanguage:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/supportedrevisions(for:)",
                "title": "+ supportedRevisionsForLanguage:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/currentsentenceembeddingrevision(for:)",
                "title": "+ currentSentenceEmbeddingRevisionForLanguage:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/supportedsentenceembeddingrevisions(for:)",
                "title": "+ supportedSentenceEmbeddingRevisionsForLanguage:",
                "type": "method"
              }
            ],
            "path": "/documentation/naturallanguage/nlembedding",
            "title": "NLEmbedding",
            "type": "class"
          },
          {
            "title": "Contextual embedding",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a contextual embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/init(modelidentifier:)",
                "title": "+ contextualEmbeddingWithModelIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/init(language:)",
                "title": "+ contextualEmbeddingWithLanguage:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/init(script:)",
                "title": "+ contextualEmbeddingWithScript:",
                "type": "method"
              },
              {
                "title": "Inspecting the contextual embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/dimension",
                "title": "dimension",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/hasavailableassets",
                "title": "hasAvailableAssets",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/languages",
                "title": "languages",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/maximumsequencelength",
                "title": "maximumSequenceLength",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/modelidentifier",
                "title": "modelIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/revision",
                "title": "revision",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/scripts",
                "title": "scripts",
                "type": "property"
              },
              {
                "title": "Requesting assets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/requestassets(completionhandler:)",
                "title": "- requestEmbeddingAssetsWithCompletionHandler:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting the result status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult/available",
                    "title": "NLContextualEmbeddingAssetsResultAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult/notavailable",
                    "title": "NLContextualEmbeddingAssetsResultNotAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult/error",
                    "title": "NLContextualEmbeddingAssetsResultError",
                    "type": "case"
                  }
                ],
                "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult",
                "title": "NLContextualEmbeddingAssetsResult",
                "type": "enum"
              },
              {
                "title": "Loading and unloading assets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/load()",
                "title": "- loadWithError:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/unload()",
                "title": "- unload",
                "type": "method"
              },
              {
                "title": "Applying an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/embeddingresult(for:language:)",
                "title": "- embeddingResultForString:language:error:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/language",
                    "title": "language",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/sequencelength",
                    "title": "sequenceLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/string",
                    "title": "string",
                    "type": "property"
                  },
                  {
                    "title": "Enumerating the vectors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/enumeratetokenvectorsinrange:usingblock:",
                    "title": "- enumerateTokenVectorsInRange:usingBlock:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/tokenvectoratindex:tokenrange:",
                    "title": "- tokenVectorAtIndex:tokenRange:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/naturallanguage/nlcontextualembeddingresult",
                "title": "NLContextualEmbeddingResult",
                "type": "class"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/contextualembeddings(forvalues:)",
                "title": "+ contextualEmbeddingsForValues:",
                "type": "method"
              }
            ],
            "path": "/documentation/naturallanguage/nlcontextualembedding",
            "title": "NLContextualEmbedding",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting embedding keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/languages",
                "title": "NLContextualEmbeddingKeyLanguages",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/revision",
                "title": "NLContextualEmbeddingKeyRevision",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/scripts",
                "title": "NLContextualEmbeddingKeyScripts",
                "type": "var"
              }
            ],
            "path": "/documentation/naturallanguage/nlcontextualembeddingkey",
            "title": "NLContextualEmbeddingKey",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Getting standard scripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/arabic",
                "title": "NLScriptArabic",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/armenian",
                "title": "NLScriptArmenian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/bengali",
                "title": "NLScriptBengali",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/canadianaboriginalsyllabics",
                "title": "NLScriptCanadianAboriginalSyllabics",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/cherokee",
                "title": "NLScriptCherokee",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/cyrillic",
                "title": "NLScriptCyrillic",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/devanagari",
                "title": "NLScriptDevanagari",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/ethiopic",
                "title": "NLScriptEthiopic",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/georgian",
                "title": "NLScriptGeorgian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/greek",
                "title": "NLScriptGreek",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/gujarati",
                "title": "NLScriptGujarati",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/gurmukhi",
                "title": "NLScriptGurmukhi",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/hebrew",
                "title": "NLScriptHebrew",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/japanese",
                "title": "NLScriptJapanese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/kannada",
                "title": "NLScriptKannada",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/khmer",
                "title": "NLScriptKhmer",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/korean",
                "title": "NLScriptKorean",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/lao",
                "title": "NLScriptLao",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/latin",
                "title": "NLScriptLatin",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/malayalam",
                "title": "NLScriptMalayalam",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/mongolian",
                "title": "NLScriptMongolian",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/myanmar",
                "title": "NLScriptMyanmar",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/oriya",
                "title": "NLScriptOriya",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/simplifiedchinese",
                "title": "NLScriptSimplifiedChinese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/sinhala",
                "title": "NLScriptSinhala",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/tamil",
                "title": "NLScriptTamil",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/telugu",
                "title": "NLScriptTelugu",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/thai",
                "title": "NLScriptThai",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/tibetan",
                "title": "NLScriptTibetan",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/traditionalchinese",
                "title": "NLScriptTraditionalChinese",
                "type": "var"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/undetermined",
                "title": "NLScriptUndetermined",
                "type": "var"
              }
            ],
            "path": "/documentation/naturallanguage/nlscript",
            "title": "NLScript",
            "type": "typealias"
          },
          {
            "title": "Natural language models",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/createml/creating-a-text-classifier-model",
            "title": "Creating a text classifier model",
            "type": "article"
          },
          {
            "path": "/documentation/naturallanguage/creating-a-word-tagger-model",
            "title": "Creating a word tagger model",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/init(mlmodel:)",
                "title": "+ modelWithMLModel:error:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/init(contentsof:)",
                "title": "+ modelWithContentsOfURL:error:",
                "type": "method"
              },
              {
                "title": "Making predictions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabel(for:)",
                "title": "- predictedLabelForString:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabels(fortokens:)",
                "title": "- predictedLabelsForTokens:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabelhypothesesforstring:maximumcount:",
                "title": "- predictedLabelHypothesesForString:maximumCount:",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabelhypothesesfortokens:maximumcount:",
                "title": "- predictedLabelHypothesesForTokens:maximumCount:",
                "type": "method"
              },
              {
                "title": "Inspecting a model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/configuration",
                "title": "configuration",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessing the configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/language",
                    "title": "language",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/revision",
                    "title": "revision",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/supportedrevisions(for:)",
                    "title": "+ supportedRevisionsForType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/currentrevision(for:)",
                    "title": "+ currentRevisionForType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Model types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/naturallanguage/nlmodel/modeltype/sequence",
                        "title": "NLModelTypeSequence",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/naturallanguage/nlmodel/modeltype/classifier",
                        "title": "NLModelTypeClassifier",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/naturallanguage/nlmodel/modeltype",
                    "title": "NLModelType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/naturallanguage/nlmodelconfiguration",
                "title": "NLModelConfiguration",
                "type": "class"
              }
            ],
            "path": "/documentation/naturallanguage/nlmodel",
            "title": "NLModel",
            "type": "class"
          }
        ],
        "path": "/documentation/naturallanguage",
        "title": "Natural Language",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Tokenization",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/tokenizing-natural-language-text",
            "title": "Tokenizing natural language text",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a tokenizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/init(unit:)",
                "title": "init(unit: NLTokenUnit)",
                "type": "init"
              },
              {
                "title": "Configuring a tokenizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/string",
                "title": "var string: String?",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/setlanguage(_:)",
                "title": "func setLanguage(NLLanguage)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/unit",
                "title": "var unit: NLTokenUnit",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Contents",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenizer/attributes/emoji",
                    "title": "static var emoji: NLTokenizer.Attributes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenizer/attributes/numeric",
                    "title": "static var numeric: NLTokenizer.Attributes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenizer/attributes/symbolic",
                    "title": "static var symbolic: NLTokenizer.Attributes",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenizer/attributes/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/naturallanguage/nltokenizer/attributes",
                "title": "NLTokenizer.Attributes",
                "type": "struct"
              },
              {
                "title": "Enumerating the tokens",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/enumeratetokens(in:using:)",
                "title": "func enumerateTokens(in: Range<String.Index>, using: (Range<String.Index>, NLTokenizer.Attributes) -> Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/tokens(for:)",
                "title": "func tokens(for: Range<String.Index>) -> [Range<String.Index>]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/tokenrange(at:)",
                "title": "func tokenRange(at: String.Index) -> Range<String.Index>",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltokenizer/tokenrange(for:)",
                "title": "func tokenRange(for: Range<String.Index>) -> Range<String.Index>",
                "type": "method"
              }
            ],
            "path": "/documentation/naturallanguage/nltokenizer",
            "title": "NLTokenizer",
            "type": "class"
          },
          {
            "title": "Language identification",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/identifying-the-language-in-text",
            "title": "Identifying the language in text",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a recognizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Determining the language",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/dominantlanguage(for:)",
                "title": "class func dominantLanguage(for: String) -> NLLanguage?",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/processstring(_:)",
                "title": "func processString(String)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/dominantlanguage",
                "title": "var dominantLanguage: NLLanguage?",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/languagehypotheses(withmaximum:)",
                "title": "func languageHypotheses(withMaximum: Int) -> [NLLanguage : Double]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/reset()",
                "title": "func reset()",
                "type": "method"
              },
              {
                "title": "Guiding the recognizer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/languagehints-7dwgv",
                "title": "var languageHints: [NLLanguage : Double]",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguagerecognizer/languageconstraints",
                "title": "var languageConstraints: [NLLanguage]",
                "type": "property"
              }
            ],
            "path": "/documentation/naturallanguage/nllanguagerecognizer",
            "title": "NLLanguageRecognizer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting standard languages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/amharic",
                "title": "static let amharic: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/arabic",
                "title": "static let arabic: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/armenian",
                "title": "static let armenian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/bengali",
                "title": "static let bengali: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/bulgarian",
                "title": "static let bulgarian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/burmese",
                "title": "static let burmese: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/catalan",
                "title": "static let catalan: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/cherokee",
                "title": "static let cherokee: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/croatian",
                "title": "static let croatian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/czech",
                "title": "static let czech: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/danish",
                "title": "static let danish: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/dutch",
                "title": "static let dutch: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/english",
                "title": "static let english: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/finnish",
                "title": "static let finnish: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/french",
                "title": "static let french: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/georgian",
                "title": "static let georgian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/german",
                "title": "static let german: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/greek",
                "title": "static let greek: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/gujarati",
                "title": "static let gujarati: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/hebrew",
                "title": "static let hebrew: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/hindi",
                "title": "static let hindi: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/hungarian",
                "title": "static let hungarian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/icelandic",
                "title": "static let icelandic: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/indonesian",
                "title": "static let indonesian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/italian",
                "title": "static let italian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/japanese",
                "title": "static let japanese: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/kannada",
                "title": "static let kannada: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/kazakh",
                "title": "static let kazakh: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/khmer",
                "title": "static let khmer: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/korean",
                "title": "static let korean: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/lao",
                "title": "static let lao: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/malay",
                "title": "static let malay: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/malayalam",
                "title": "static let malayalam: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/marathi",
                "title": "static let marathi: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/mongolian",
                "title": "static let mongolian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/norwegian",
                "title": "static let norwegian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/oriya",
                "title": "static let oriya: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/persian",
                "title": "static let persian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/polish",
                "title": "static let polish: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/portuguese",
                "title": "static let portuguese: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/punjabi",
                "title": "static let punjabi: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/romanian",
                "title": "static let romanian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/russian",
                "title": "static let russian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/simplifiedchinese",
                "title": "static let simplifiedChinese: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/sinhalese",
                "title": "static let sinhalese: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/slovak",
                "title": "static let slovak: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/spanish",
                "title": "static let spanish: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/swedish",
                "title": "static let swedish: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/tamil",
                "title": "static let tamil: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/telugu",
                "title": "static let telugu: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/thai",
                "title": "static let thai: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/tibetan",
                "title": "static let tibetan: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/traditionalchinese",
                "title": "static let traditionalChinese: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/turkish",
                "title": "static let turkish: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/ukrainian",
                "title": "static let ukrainian: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/urdu",
                "title": "static let urdu: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/vietnamese",
                "title": "static let vietnamese: NLLanguage",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/undetermined",
                "title": "static let undetermined: NLLanguage",
                "type": "property"
              },
              {
                "title": "Creating custom language tags",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/init(_:)",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/naturallanguage/nllanguage/init(rawvalue:)",
                "title": "init(rawValue: String)",
                "type": "init"
              }
            ],
            "path": "/documentation/naturallanguage/nllanguage",
            "title": "NLLanguage",
            "type": "struct"
          },
          {
            "title": "Linguistic tags",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/identifying-parts-of-speech",
            "title": "Identifying parts of speech",
            "type": "article"
          },
          {
            "path": "/documentation/naturallanguage/identifying-people-places-and-organizations",
            "title": "Identifying people, places, and organizations",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a tagger",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/init(tagschemes:)",
                "title": "init(tagSchemes: [NLTagScheme])",
                "type": "init"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/string",
                "title": "var string: String?",
                "type": "property"
              },
              {
                "title": "Getting the tag schemes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/availabletagschemes(for:language:)",
                "title": "class func availableTagSchemes(for: NLTokenUnit, language: NLLanguage) -> [NLTagScheme]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/requestassets(for:tagscheme:completionhandler:)",
                "title": "class func requestAssets(for: NLLanguage, tagScheme: NLTagScheme, completionHandler: (NLTagger.AssetsResult, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Asset request responses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/assetsresult/available",
                    "title": "case available",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/assetsresult/notavailable",
                    "title": "case notAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/assetsresult/error",
                    "title": "case error",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/assetsresult/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/naturallanguage/nltagger/assetsresult",
                "title": "NLTagger.AssetsResult",
                "type": "enum"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tagschemes",
                "title": "var tagSchemes: [NLTagScheme]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Schemes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/tokentype",
                    "title": "static let tokenType: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/lexicalclass",
                    "title": "static let lexicalClass: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/nametype",
                    "title": "static let nameType: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/nametypeorlexicalclass",
                    "title": "static let nameTypeOrLexicalClass: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/lemma",
                    "title": "static let lemma: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/language",
                    "title": "static let language: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/script",
                    "title": "static let script: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/sentimentscore",
                    "title": "static let sentimentScore: NLTagScheme",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagscheme/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/naturallanguage/nltagscheme",
                "title": "NLTagScheme",
                "type": "struct"
              },
              {
                "title": "Determining the dominant language and orthography",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/dominantlanguage",
                "title": "var dominantLanguage: NLLanguage?",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setlanguage(_:range:)",
                "title": "func setLanguage(NLLanguage, range: Range<String.Index>)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setorthography(_:range:)",
                "title": "func setOrthography(NSOrthography, range: Range<String.Index>)",
                "type": "method"
              },
              {
                "title": "Enumerating linguistic tags",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/enumeratetags(in:unit:scheme:options:using:)",
                "title": "func enumerateTags(in: Range<String.Index>, unit: NLTokenUnit, scheme: NLTagScheme, options: NLTagger.Options, using: (NLTag?, Range<String.Index>) -> Bool)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitwords",
                    "title": "static var omitWords: NLTagger.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitpunctuation",
                    "title": "static var omitPunctuation: NLTagger.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitwhitespace",
                    "title": "static var omitWhitespace: NLTagger.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/omitother",
                    "title": "static var omitOther: NLTagger.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/joinnames",
                    "title": "static var joinNames: NLTagger.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/joincontractions",
                    "title": "static var joinContractions: NLTagger.Options",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltagger/options/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/naturallanguage/nltagger/options",
                "title": "NLTagger.Options",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Token types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/word",
                    "title": "static let word: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/punctuation",
                    "title": "static let punctuation: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/whitespace",
                    "title": "static let whitespace: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/other",
                    "title": "static let other: NLTag",
                    "type": "property"
                  },
                  {
                    "title": "Lexical classes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/noun",
                    "title": "static let noun: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/verb",
                    "title": "static let verb: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/adjective",
                    "title": "static let adjective: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/adverb",
                    "title": "static let adverb: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/pronoun",
                    "title": "static let pronoun: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/determiner",
                    "title": "static let determiner: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/particle",
                    "title": "static let particle: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/preposition",
                    "title": "static let preposition: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/number",
                    "title": "static let number: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/conjunction",
                    "title": "static let conjunction: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/interjection",
                    "title": "static let interjection: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/classifier",
                    "title": "static let classifier: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/idiom",
                    "title": "static let idiom: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/otherword",
                    "title": "static let otherWord: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/sentenceterminator",
                    "title": "static let sentenceTerminator: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/openquote",
                    "title": "static let openQuote: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/closequote",
                    "title": "static let closeQuote: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/openparenthesis",
                    "title": "static let openParenthesis: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/closeparenthesis",
                    "title": "static let closeParenthesis: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/wordjoiner",
                    "title": "static let wordJoiner: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/dash",
                    "title": "static let dash: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/otherpunctuation",
                    "title": "static let otherPunctuation: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/paragraphbreak",
                    "title": "static let paragraphBreak: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/otherwhitespace",
                    "title": "static let otherWhitespace: NLTag",
                    "type": "property"
                  },
                  {
                    "title": "Name types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/personalname",
                    "title": "static let personalName: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/organizationname",
                    "title": "static let organizationName: NLTag",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/placename",
                    "title": "static let placeName: NLTag",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltag/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/naturallanguage/nltag",
                "title": "NLTag",
                "type": "struct"
              },
              {
                "title": "Getting linguistic tags",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tags(in:unit:scheme:options:)",
                "title": "func tags(in: Range<String.Index>, unit: NLTokenUnit, scheme: NLTagScheme, options: NLTagger.Options) -> [(NLTag?, Range<String.Index>)]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tag(at:unit:scheme:)",
                "title": "func tag(at: String.Index, unit: NLTokenUnit, scheme: NLTagScheme) -> (NLTag?, Range<String.Index>)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/taghypotheses(at:unit:scheme:maximumcount:)",
                "title": "func tagHypotheses(at: String.Index, unit: NLTokenUnit, scheme: NLTagScheme, maximumCount: Int) -> ([String : Double], Range<String.Index>)",
                "type": "method"
              },
              {
                "title": "Determining the range of a unit token",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tokenrange(at:unit:)",
                "title": "func tokenRange(at: String.Index, unit: NLTokenUnit) -> Range<String.Index>",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/tokenrange(for:unit:)",
                "title": "func tokenRange(for: Range<String.Index>, unit: NLTokenUnit) -> Range<String.Index>",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/word",
                    "title": "case word",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/sentence",
                    "title": "case sentence",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/paragraph",
                    "title": "case paragraph",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/document",
                    "title": "case document",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nltokenunit/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/naturallanguage/nltokenunit",
                "title": "NLTokenUnit",
                "type": "enum"
              },
              {
                "title": "Using models with a tagger",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setmodels(_:fortagscheme:)",
                "title": "func setModels([NLModel], forTagScheme: NLTagScheme)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/models(fortagscheme:)",
                "title": "func models(forTagScheme: NLTagScheme) -> [NLModel]",
                "type": "method"
              },
              {
                "title": "Using gazetteers with a tagger",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/setgazetteers(_:for:)",
                "title": "func setGazetteers([NLGazetteer], for: NLTagScheme)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nltagger/gazetteers(for:)",
                "title": "func gazetteers(for: NLTagScheme) -> [NLGazetteer]",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a Gazetteer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/init(contentsof:)",
                    "title": "init(contentsOf: URL) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/init(data:)",
                    "title": "init(data: Data) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/init(dictionary:language:)",
                    "title": "init(dictionary: [String : [String]], language: NLLanguage?) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/write(_:language:to:)",
                    "title": "class func write([String : [String]], language: NLLanguage?, to: URL) throws",
                    "type": "method"
                  },
                  {
                    "title": "Looking Up Labels for Terms",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/label(for:)",
                    "title": "func label(for: String) -> String?",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting a Gazetteer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/data",
                    "title": "var data: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlgazetteer/language",
                    "title": "var language: NLLanguage?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/naturallanguage/nlgazetteer",
                "title": "NLGazetteer",
                "type": "class"
              }
            ],
            "path": "/documentation/naturallanguage/nltagger",
            "title": "NLTagger",
            "type": "class"
          },
          {
            "title": "Text embedding",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/naturallanguage/finding-similarities-between-pieces-of-text",
            "title": "Finding similarities between pieces of text",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a word embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/wordembedding(for:)",
                "title": "class func wordEmbedding(for: NLLanguage) -> NLEmbedding?",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/wordembedding(for:revision:)",
                "title": "class func wordEmbedding(for: NLLanguage, revision: Int) -> NLEmbedding?",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/init(contentsof:)",
                "title": "convenience init(contentsOf: URL) throws",
                "type": "init"
              },
              {
                "title": "Creating a sentence embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/sentenceembedding(for:)",
                "title": "class func sentenceEmbedding(for: NLLanguage) -> NLEmbedding?",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/sentenceembedding(for:revision:)",
                "title": "class func sentenceEmbedding(for: NLLanguage, revision: Int) -> NLEmbedding?",
                "type": "method"
              },
              {
                "title": "Finding strings and their distances in an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/neighbors(for:maximumcount:distancetype:)-8f1jc",
                "title": "func neighbors(for: String, maximumCount: Int, distanceType: NLDistanceType) -> [(String, NLDistance)]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/neighbors(for:maximumcount:distancetype:)-8lp4z",
                "title": "func neighbors(for: [Double], maximumCount: Int, distanceType: NLDistanceType) -> [(String, NLDistance)]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/enumerateneighbors(for:maximumcount:distancetype:using:)-72jda",
                "title": "func enumerateNeighbors(for: String, maximumCount: Int, distanceType: NLDistanceType, using: (String, NLDistance) -> Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/enumerateneighbors(for:maximumcount:distancetype:using:)-6dy4x",
                "title": "func enumerateNeighbors(for: [Double], maximumCount: Int, distanceType: NLDistanceType, using: (String, NLDistance) -> Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/distance(between:and:distancetype:)",
                "title": "func distance(between: String, and: String, distanceType: NLDistanceType) -> NLDistance",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Calculating Distance",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Distance Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/naturallanguage/nldistancetype/cosine",
                        "title": "case cosine",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/naturallanguage/nldistancetype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/naturallanguage/nldistancetype",
                    "title": "NLDistanceType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/naturallanguage/nldistance",
                "title": "NLDistance",
                "type": "typealias"
              },
              {
                "title": "Inspecting the vocabulary of an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/dimension",
                "title": "var dimension: Int",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/vocabularysize",
                "title": "var vocabularySize: Int",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/language",
                "title": "var language: NLLanguage?",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/contains(_:)",
                "title": "func contains(String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/vector(for:)",
                "title": "func vector(for: String) -> [Double]?",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/revision",
                "title": "var revision: Int",
                "type": "property"
              },
              {
                "title": "Saving an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/write(_:language:revision:to:)",
                "title": "class func write([String : [Double]], language: NLLanguage?, revision: Int, to: URL) throws",
                "type": "method"
              },
              {
                "title": "Checking for Natural Language support",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/currentrevision(for:)",
                "title": "class func currentRevision(for: NLLanguage) -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/supportedrevisions(for:)",
                "title": "class func supportedRevisions(for: NLLanguage) -> IndexSet",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/currentsentenceembeddingrevision(for:)",
                "title": "class func currentSentenceEmbeddingRevision(for: NLLanguage) -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlembedding/supportedsentenceembeddingrevisions(for:)",
                "title": "class func supportedSentenceEmbeddingRevisions(for: NLLanguage) -> IndexSet",
                "type": "method"
              }
            ],
            "path": "/documentation/naturallanguage/nlembedding",
            "title": "NLEmbedding",
            "type": "class"
          },
          {
            "title": "Contextual embedding",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a contextual embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/init(modelidentifier:)",
                "title": "convenience init?(modelIdentifier: String)",
                "type": "init"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/init(language:)",
                "title": "init?(language: NLLanguage)",
                "type": "init"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/init(script:)",
                "title": "init?(script: NLScript)",
                "type": "init"
              },
              {
                "title": "Inspecting the contextual embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/dimension",
                "title": "var dimension: Int",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/hasavailableassets",
                "title": "var hasAvailableAssets: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/languages",
                "title": "var languages: [NLLanguage]",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/maximumsequencelength",
                "title": "var maximumSequenceLength: Int",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/modelidentifier",
                "title": "var modelIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/revision",
                "title": "var revision: Int",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/scripts",
                "title": "var scripts: [NLScript]",
                "type": "property"
              },
              {
                "title": "Requesting assets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/requestassets(completionhandler:)",
                "title": "func requestAssets(completionHandler: (NLContextualEmbedding.AssetsResult, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting the result status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult/available",
                    "title": "case available",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult/notavailable",
                    "title": "case notAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult/error",
                    "title": "case error",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/naturallanguage/nlcontextualembedding/assetsresult",
                "title": "NLContextualEmbedding.AssetsResult",
                "type": "enum"
              },
              {
                "title": "Loading and unloading assets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/load()",
                "title": "func load() throws",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/unload()",
                "title": "func unload()",
                "type": "method"
              },
              {
                "title": "Applying an embedding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/embeddingresult(for:language:)",
                "title": "func embeddingResult(for: String, language: NLLanguage?) throws -> NLContextualEmbeddingResult",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/language",
                    "title": "var language: NLLanguage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/sequencelength",
                    "title": "var sequenceLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/string",
                    "title": "var string: String",
                    "type": "property"
                  },
                  {
                    "title": "Enumerating the vectors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/enumeratetokenvectors(in:using:)",
                    "title": "func enumerateTokenVectors(in: Range<String.Index>, using: ([Double], Range<String.Index>) -> Bool)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlcontextualembeddingresult/tokenvector(at:)",
                    "title": "func tokenVector(at: String.Index) -> ([Double], Range<String.Index>)?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/naturallanguage/nlcontextualembeddingresult",
                "title": "NLContextualEmbeddingResult",
                "type": "class"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembedding/contextualembeddings(forvalues:)",
                "title": "class func contextualEmbeddings(forValues: [NLContextualEmbeddingKey : Any]) -> [NLContextualEmbedding]",
                "type": "method"
              }
            ],
            "path": "/documentation/naturallanguage/nlcontextualembedding",
            "title": "NLContextualEmbedding",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting embedding keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/languages",
                "title": "static let languages: NLContextualEmbeddingKey",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/revision",
                "title": "static let revision: NLContextualEmbeddingKey",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/scripts",
                "title": "static let scripts: NLContextualEmbeddingKey",
                "type": "property"
              },
              {
                "title": "Creating embedding keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/init(_:)",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/naturallanguage/nlcontextualembeddingkey/init(rawvalue:)",
                "title": "init(rawValue: String)",
                "type": "init"
              }
            ],
            "path": "/documentation/naturallanguage/nlcontextualembeddingkey",
            "title": "NLContextualEmbeddingKey",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting standard scripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/arabic",
                "title": "static let arabic: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/armenian",
                "title": "static let armenian: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/bengali",
                "title": "static let bengali: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/canadianaboriginalsyllabics",
                "title": "static let canadianAboriginalSyllabics: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/cherokee",
                "title": "static let cherokee: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/cyrillic",
                "title": "static let cyrillic: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/devanagari",
                "title": "static let devanagari: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/ethiopic",
                "title": "static let ethiopic: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/georgian",
                "title": "static let georgian: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/greek",
                "title": "static let greek: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/gujarati",
                "title": "static let gujarati: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/gurmukhi",
                "title": "static let gurmukhi: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/hebrew",
                "title": "static let hebrew: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/japanese",
                "title": "static let japanese: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/kannada",
                "title": "static let kannada: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/khmer",
                "title": "static let khmer: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/korean",
                "title": "static let korean: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/lao",
                "title": "static let lao: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/latin",
                "title": "static let latin: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/malayalam",
                "title": "static let malayalam: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/mongolian",
                "title": "static let mongolian: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/myanmar",
                "title": "static let myanmar: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/oriya",
                "title": "static let oriya: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/simplifiedchinese",
                "title": "static let simplifiedChinese: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/sinhala",
                "title": "static let sinhala: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/tamil",
                "title": "static let tamil: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/telugu",
                "title": "static let telugu: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/thai",
                "title": "static let thai: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/tibetan",
                "title": "static let tibetan: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/traditionalchinese",
                "title": "static let traditionalChinese: NLScript",
                "type": "property"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/undetermined",
                "title": "static let undetermined: NLScript",
                "type": "property"
              },
              {
                "title": "Creating custom script tags",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/init(_:)",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/naturallanguage/nlscript/init(rawvalue:)",
                "title": "init(rawValue: String)",
                "type": "init"
              }
            ],
            "path": "/documentation/naturallanguage/nlscript",
            "title": "NLScript",
            "type": "struct"
          },
          {
            "title": "Natural language models",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/createml/creating-a-text-classifier-model",
            "title": "Creating a text classifier model",
            "type": "article"
          },
          {
            "path": "/documentation/naturallanguage/creating-a-word-tagger-model",
            "title": "Creating a word tagger model",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/init(mlmodel:)",
                "title": "convenience init(mlModel: MLModel) throws",
                "type": "init"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/init(contentsof:)",
                "title": "convenience init(contentsOf: URL) throws",
                "type": "init"
              },
              {
                "title": "Making predictions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabel(for:)",
                "title": "func predictedLabel(for: String) -> String?",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabels(fortokens:)",
                "title": "func predictedLabels(forTokens: [String]) -> [String]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabelhypotheses(for:maximumcount:)",
                "title": "func predictedLabelHypotheses(for: String, maximumCount: Int) -> [String : Double]",
                "type": "method"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/predictedlabelhypotheses(fortokens:maximumcount:)",
                "title": "func predictedLabelHypotheses(forTokens: [String], maximumCount: Int) -> [[String : Double]]",
                "type": "method"
              },
              {
                "title": "Inspecting a model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/naturallanguage/nlmodel/configuration",
                "title": "var configuration: NLModelConfiguration",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessing the configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/language",
                    "title": "var language: NLLanguage?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/revision",
                    "title": "var revision: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/supportedrevisions(for:)",
                    "title": "class func supportedRevisions(for: NLModel.ModelType) -> IndexSet",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/currentrevision(for:)",
                    "title": "class func currentRevision(for: NLModel.ModelType) -> Int",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/naturallanguage/nlmodelconfiguration/type",
                    "title": "var type: NLModel.ModelType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Model types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/naturallanguage/nlmodel/modeltype/sequence",
                        "title": "case sequence",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/naturallanguage/nlmodel/modeltype/classifier",
                        "title": "case classifier",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/naturallanguage/nlmodel/modeltype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/naturallanguage/nlmodel/modeltype",
                    "title": "NLModel.ModelType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/naturallanguage/nlmodelconfiguration",
                "title": "NLModelConfiguration",
                "type": "class"
              },
              {
                "title": "Related Documentation",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/createml/mltextclassifier",
                "title": "MLTextClassifier",
                "type": "struct"
              },
              {
                "external": true,
                "path": "/documentation/createml/mlwordtagger",
                "title": "MLWordTagger",
                "type": "struct"
              }
            ],
            "path": "/documentation/naturallanguage/nlmodel",
            "title": "NLModel",
            "type": "class"
          }
        ],
        "path": "/documentation/naturallanguage",
        "title": "Natural Language",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
