{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/journalingsuggestions/presenting-the-suggestions-picker-and-processing-a-selection",
            "title": "Presenting the suggestions picker and processing a selection",
            "type": "article"
          },
          {
            "title": "Implementation",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/journalingsuggestions",
        "title": "Journaling Suggestions",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/journalingsuggestions/presenting-the-suggestions-picker-and-processing-a-selection",
            "title": "Presenting the suggestions picker and processing a selection",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.journal.allow",
            "title": "com.apple.developer.journal.allow",
            "type": "typealias"
          },
          {
            "title": "Implementation",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/journalingsuggestions",
        "title": "Journaling Suggestions",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/journalingsuggestions/presenting-the-suggestions-picker-and-processing-a-selection",
            "title": "Presenting the suggestions picker and processing a selection",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.journal.allow",
            "title": "com.apple.developer.journal.allow",
            "type": "typealias"
          },
          {
            "title": "Implementation",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a suggestions picker",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/init(label:oncompletion:)",
                "title": "init(label: () -> Label, onCompletion: (JournalingSuggestion) async -> Void)",
                "type": "init"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/init(_:oncompletion:)-7uxov",
                "title": "init(LocalizedStringKey, onCompletion: (JournalingSuggestion) async -> Void)",
                "type": "init"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/init(_:oncompletion:)-4e82p",
                "title": "init<S>(S, onCompletion: (JournalingSuggestion) async -> Void)",
                "type": "init"
              },
              {
                "title": "Displaying a suggestions picker",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/body-swift.property",
                "title": "var body: some View",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/body-swift.typealias",
                "title": "JournalingSuggestionsPicker.Body",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accentcolor(_:)",
                    "title": "func accentColor(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(activationpoint:)-154v2",
                    "title": "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(activationpoint:)-1l8i5",
                    "title": "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(addtraits:)",
                    "title": "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(hidden:)",
                    "title": "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(hint:)",
                    "title": "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(identifier:)",
                    "title": "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(inputlabels:)",
                    "title": "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(label:)",
                    "title": "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(removetraits:)",
                    "title": "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(selectionidentifier:)",
                    "title": "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(sortpriority:)",
                    "title": "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibility(value:)",
                    "title": "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityaction(_:_:)",
                    "title": "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityaction(action:label:)",
                    "title": "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityaction(named:_:)-1hgvn",
                    "title": "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityaction(named:_:)-5vmp4",
                    "title": "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityaction(named:_:)-6fe24",
                    "title": "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityactions(_:)",
                    "title": "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityactions(category:_:)",
                    "title": "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityactivationpoint(_:)-75i1j",
                    "title": "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityactivationpoint(_:)-9gwwg",
                    "title": "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityactivationpoint(_:isenabled:)-858uf",
                    "title": "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityactivationpoint(_:isenabled:)-b5lw",
                    "title": "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityaddtraits(_:)",
                    "title": "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityadjustableaction(_:)",
                    "title": "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitychartdescriptor(_:)",
                    "title": "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitychildren(children:)",
                    "title": "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-2s1it",
                    "title": "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-4j0xt",
                    "title": "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-61jzh",
                    "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-6mpul",
                    "title": "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-73f7v",
                    "title": "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-8cu5o",
                    "title": "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-9su3q",
                    "title": "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitycustomcontent(_:_:importance:)-9ycw5",
                    "title": "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydirecttouch(_:options:)",
                    "title": "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydragpoint(_:description:)-42oyd",
                    "title": "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydragpoint(_:description:)-4nohi",
                    "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydragpoint(_:description:)-72lg9",
                    "title": "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydragpoint(_:description:isenabled:)-1f1gm",
                    "title": "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydragpoint(_:description:isenabled:)-6al8z",
                    "title": "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydragpoint(_:description:isenabled:)-7ruf9",
                    "title": "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydroppoint(_:description:)-1a24n",
                    "title": "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydroppoint(_:description:)-1ulec",
                    "title": "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydroppoint(_:description:)-4rzo3",
                    "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydroppoint(_:description:isenabled:)-58pa8",
                    "title": "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydroppoint(_:description:isenabled:)-8owda",
                    "title": "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitydroppoint(_:description:isenabled:)-91yzh",
                    "title": "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityelement(children:)",
                    "title": "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityfocused(_:)",
                    "title": "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityfocused(_:equals:)",
                    "title": "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityheading(_:)",
                    "title": "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhidden(_:)",
                    "title": "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhidden(_:isenabled:)",
                    "title": "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhint(_:)-81zrv",
                    "title": "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhint(_:)-8ozjn",
                    "title": "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhint(_:)-91ruu",
                    "title": "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhint(_:isenabled:)-3rqym",
                    "title": "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhint(_:isenabled:)-6571y",
                    "title": "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityhint(_:isenabled:)-iv5c",
                    "title": "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityidentifier(_:)",
                    "title": "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityidentifier(_:isenabled:)",
                    "title": "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityignoresinvertcolors(_:)",
                    "title": "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityinputlabels(_:)-36j6m",
                    "title": "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityinputlabels(_:)-9foyj",
                    "title": "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityinputlabels(_:)-ch20",
                    "title": "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityinputlabels(_:isenabled:)-3uepl",
                    "title": "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityinputlabels(_:isenabled:)-8aplv",
                    "title": "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityinputlabels(_:isenabled:)-nofo",
                    "title": "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabel(_:)-690od",
                    "title": "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabel(_:)-71kse",
                    "title": "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabel(_:)-8ako1",
                    "title": "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabel(_:isenabled:)-36h5o",
                    "title": "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabel(_:isenabled:)-6pa09",
                    "title": "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabel(_:isenabled:)-bsj3",
                    "title": "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabel(content:)",
                    "title": "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylabeledpair(role:id:in:)",
                    "title": "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitylinkedgroup(id:in:)",
                    "title": "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityremovetraits(_:)",
                    "title": "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrepresentation(representation:)",
                    "title": "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrespondstouserinteraction(_:)",
                    "title": "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title": "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:)-4ifg",
                    "title": "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:)-4lmpc",
                    "title": "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:)-64kh1",
                    "title": "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:)-7a1dz",
                    "title": "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entryid:entrylabel:)-466fa",
                    "title": "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entryid:entrylabel:)-4dumf",
                    "title": "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entryid:entrylabel:)-4vb8l",
                    "title": "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entryid:entrylabel:)-9jzy3",
                    "title": "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entrylabel:)-16ta9",
                    "title": "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entrylabel:)-3i32p",
                    "title": "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entrylabel:)-5a567",
                    "title": "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:entries:entrylabel:)-9eig4",
                    "title": "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:textranges:)-1ljs7",
                    "title": "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:textranges:)-22ntj",
                    "title": "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:textranges:)-2fptc",
                    "title": "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotor(_:textranges:)-925bi",
                    "title": "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityrotorentry(id:in:)",
                    "title": "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityscrollaction(_:)",
                    "title": "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityshowslargecontentviewer()",
                    "title": "func accessibilityShowsLargeContentViewer() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityshowslargecontentviewer(_:)",
                    "title": "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitysortpriority(_:)",
                    "title": "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilitytextcontenttype(_:)",
                    "title": "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityvalue(_:)-1naia",
                    "title": "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityvalue(_:)-6qtyn",
                    "title": "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityvalue(_:)-84e5b",
                    "title": "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityvalue(_:isenabled:)-2ynz",
                    "title": "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityvalue(_:isenabled:)-84w4v",
                    "title": "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityvalue(_:isenabled:)-95ywt",
                    "title": "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/accessibilityzoomaction(_:)",
                    "title": "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/actionsheet(ispresented:content:)",
                    "title": "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/actionsheet(item:content:)",
                    "title": "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:actions:)-4cm3e",
                    "title": "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:actions:)-4u7ie",
                    "title": "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:actions:)-6rupk",
                    "title": "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:actions:message:)-37ofv",
                    "title": "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:actions:message:)-4iraz",
                    "title": "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:actions:message:)-94saw",
                    "title": "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:presenting:actions:)-2s6i8",
                    "title": "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:presenting:actions:)-7jknh",
                    "title": "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:presenting:actions:)-9mca",
                    "title": "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:presenting:actions:message:)-1vdud",
                    "title": "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:presenting:actions:message:)-2y0qv",
                    "title": "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(_:ispresented:presenting:actions:message:)-5hfk3",
                    "title": "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(ispresented:content:)",
                    "title": "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(ispresented:error:actions:)",
                    "title": "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(ispresented:error:actions:message:)",
                    "title": "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alert(item:content:)",
                    "title": "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alignmentguide(_:computevalue:)-2l22x",
                    "title": "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alignmentguide(_:computevalue:)-7sksb",
                    "title": "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/alloweddynamicrange(_:)",
                    "title": "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/allowshittesting(_:)",
                    "title": "func allowsHitTesting(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/allowstightening(_:)",
                    "title": "func allowsTightening(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/allowswindowactivationevents(_:)",
                    "title": "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/anchorpreference(key:value:transform:)",
                    "title": "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/animation(_:)",
                    "title": "func animation(Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/animation(_:body:)",
                    "title": "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/animation(_:value:)",
                    "title": "func animation<V>(Animation?, value: V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/aspectratio(_:contentmode:)-2ig0q",
                    "title": "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/aspectratio(_:contentmode:)-es33",
                    "title": "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/autocapitalization(_:)",
                    "title": "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/autocorrectiondisabled(_:)",
                    "title": "func autocorrectionDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(_:alignment:)",
                    "title": "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(_:ignoressafeareaedges:)",
                    "title": "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(_:in:fillstyle:)-15ich",
                    "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(_:in:fillstyle:)-6jdt0",
                    "title": "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(alignment:content:)",
                    "title": "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(ignoressafeareaedges:)",
                    "title": "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(in:fillstyle:)-49tnk",
                    "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/background(in:fillstyle:)-6sg8w",
                    "title": "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/backgroundpreferencevalue(_:_:)",
                    "title": "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/backgroundpreferencevalue(_:alignment:_:)",
                    "title": "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/backgroundstyle(_:)",
                    "title": "func backgroundStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/badge(_:)-1zuj9",
                    "title": "func badge<S>(S?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/badge(_:)-53mkl",
                    "title": "func badge(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/badge(_:)-5r843",
                    "title": "func badge(LocalizedStringKey?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/badge(_:)-97edb",
                    "title": "func badge(Int) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/badgeprominence(_:)",
                    "title": "func badgeProminence(BadgeProminence) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/baselineoffset(_:)",
                    "title": "func baselineOffset(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/blendmode(_:)",
                    "title": "func blendMode(BlendMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/blur(radius:opaque:)",
                    "title": "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/bold(_:)",
                    "title": "func bold(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/border(_:width:)",
                    "title": "func border<S>(S, width: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/brightness(_:)",
                    "title": "func brightness(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/buttonbordershape(_:)",
                    "title": "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/buttonrepeatbehavior(_:)",
                    "title": "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/buttonstyle(_:)-8jpwp",
                    "title": "func buttonStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/buttonstyle(_:)-h9rk",
                    "title": "func buttonStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/clipshape(_:style:)",
                    "title": "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/clipped(antialiased:)",
                    "title": "func clipped(antialiased: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/coloreffect(_:isenabled:)",
                    "title": "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/colorinvert()",
                    "title": "func colorInvert() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/colormultiply(_:)",
                    "title": "func colorMultiply(Color) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/colorscheme(_:)",
                    "title": "func colorScheme(ColorScheme) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/compositinggroup()",
                    "title": "func compositingGroup() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:actions:)-41cbh",
                    "title": "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:actions:)-5tjfg",
                    "title": "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:actions:)-61jug",
                    "title": "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4jcth",
                    "title": "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7aol7",
                    "title": "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9pevg",
                    "title": "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-16dbi",
                    "title": "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1fpg5",
                    "title": "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4e2j4",
                    "title": "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-746xc",
                    "title": "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-91mq9",
                    "title": "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-979au",
                    "title": "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/containerbackground(_:for:)",
                    "title": "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/containerbackground(for:alignment:content:)",
                    "title": "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/containerrelativeframe(_:alignment:)",
                    "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/containerrelativeframe(_:alignment:_:)",
                    "title": "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title": "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/containershape(_:)",
                    "title": "func containerShape<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/containervalue(_:_:)",
                    "title": "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contentmargins(_:_:for:)-8v7l9",
                    "title": "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contentmargins(_:_:for:)-v9v1",
                    "title": "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contentmargins(_:for:)",
                    "title": "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contentshape(_:_:eofill:)",
                    "title": "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contentshape(_:eofill:)",
                    "title": "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contenttoolbar(for:content:)-1c5n7",
                    "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contenttoolbar(for:content:)-9judx",
                    "title": "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contenttransition(_:)",
                    "title": "func contentTransition(ContentTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contextmenu(_:)",
                    "title": "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title": "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contextmenu(menuitems:)",
                    "title": "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contextmenu(menuitems:preview:)",
                    "title": "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/contrast(_:)",
                    "title": "func contrast(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/controlgroupstyle(_:)",
                    "title": "func controlGroupStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/controlsize(_:)",
                    "title": "func controlSize(ControlSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/coordinatespace(_:)",
                    "title": "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/coordinatespace(name:)",
                    "title": "func coordinateSpace<T>(name: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/cornerradius(_:antialiased:)",
                    "title": "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/datepickerstyle(_:)",
                    "title": "func datePickerStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/defaultadaptabletabbarplacement(_:)",
                    "title": "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/defaultappstorage(_:)",
                    "title": "func defaultAppStorage(UserDefaults) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/defaultfocus(_:_:priority:)",
                    "title": "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/defaulthovereffect(_:)-199fr",
                    "title": "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/defaulthovereffect(_:)-wybe",
                    "title": "func defaultHoverEffect(some CustomHoverEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/defaultscrollanchor(_:)",
                    "title": "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/defaultscrollanchor(_:for:)",
                    "title": "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/deferssystemgestures(on:)",
                    "title": "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/deletedisabled(_:)",
                    "title": "func deleteDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dialogicon(_:)",
                    "title": "func dialogIcon(Image?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dialogsuppressiontoggle(_:issuppressed:)-3gep6",
                    "title": "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dialogsuppressiontoggle(_:issuppressed:)-3sb32",
                    "title": "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dialogsuppressiontoggle(_:issuppressed:)-5gkok",
                    "title": "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dialogsuppressiontoggle(issuppressed:)",
                    "title": "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/disableautocorrection(_:)",
                    "title": "func disableAutocorrection(Bool?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/disabled(_:)",
                    "title": "func disabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/disclosuregroupstyle(_:)",
                    "title": "func disclosureGroupStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title": "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/documentbrowsercontextmenu(_:)",
                    "title": "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/draggable(_:)",
                    "title": "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/draggable(_:preview:)",
                    "title": "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/drawinggroup(opaque:colormode:)",
                    "title": "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dropdestination(for:action:istargeted:)",
                    "title": "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dynamictypesize(_:)-67m9c",
                    "title": "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/dynamictypesize(_:)-7p3q1",
                    "title": "func dynamicTypeSize<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/edgesignoringsafearea(_:)",
                    "title": "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/environment(_:)",
                    "title": "func environment<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/environment(_:_:)",
                    "title": "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/environmentobject(_:)",
                    "title": "func environmentObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogbrowseroptions(_:)",
                    "title": "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogconfirmationlabel(_:)-51cbl",
                    "title": "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogconfirmationlabel(_:)-5vs50",
                    "title": "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogconfirmationlabel(_:)-9ka3e",
                    "title": "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogcustomizationid(_:)",
                    "title": "func fileDialogCustomizationID(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogdefaultdirectory(_:)",
                    "title": "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogimportsunresolvedaliases(_:)",
                    "title": "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogmessage(_:)-29w2r",
                    "title": "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogmessage(_:)-7ert0",
                    "title": "func fileDialogMessage<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogmessage(_:)-7vxsv",
                    "title": "func fileDialogMessage(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filedialogurlenabled(_:)",
                    "title": "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2ky8u",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-rebn",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-92yq8",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-gisu",
                    "title": "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:documents:contenttype:oncompletion:)-3t9nz",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:documents:contenttype:oncompletion:)-80301",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7n8kq",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9k99q",
                    "title": "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title": "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title": "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporterfilenamelabel(_:)-3rau0",
                    "title": "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporterfilenamelabel(_:)-7cr5p",
                    "title": "func fileExporterFilenameLabel(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileexporterfilenamelabel(_:)-92kie",
                    "title": "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title": "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filemover(ispresented:file:oncompletion:)",
                    "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title": "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filemover(ispresented:files:oncompletion:)",
                    "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title": "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/finddisabled(_:)",
                    "title": "func findDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/findnavigator(ispresented:)",
                    "title": "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fixedsize()",
                    "title": "func fixedSize() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fixedsize(horizontal:vertical:)",
                    "title": "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/flipsforrighttoleftlayoutdirection(_:)",
                    "title": "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focuseffectdisabled(_:)",
                    "title": "func focusEffectDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusable(_:)",
                    "title": "func focusable(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusable(_:interactions:)",
                    "title": "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focused(_:)",
                    "title": "func focused(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focused(_:equals:)",
                    "title": "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedobject(_:)-3uuu7",
                    "title": "func focusedObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedobject(_:)-84i41",
                    "title": "func focusedObject<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedsceneobject(_:)-1035e",
                    "title": "func focusedSceneObject<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedsceneobject(_:)-4njvc",
                    "title": "func focusedSceneObject<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedscenevalue(_:)",
                    "title": "func focusedSceneValue<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedscenevalue(_:_:)-5vzu3",
                    "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedscenevalue(_:_:)-5ye8",
                    "title": "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedvalue(_:)",
                    "title": "func focusedValue<T>(T?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedvalue(_:_:)-2klxw",
                    "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/focusedvalue(_:_:)-3vjz7",
                    "title": "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/font(_:)",
                    "title": "func font(Font?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fontdesign(_:)",
                    "title": "func fontDesign(Font.Design?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fontweight(_:)",
                    "title": "func fontWeight(Font.Weight?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fontwidth(_:)",
                    "title": "func fontWidth(Font.Width?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/foregroundcolor(_:)",
                    "title": "func foregroundColor(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/foregroundstyle(_:)",
                    "title": "func foregroundStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/foregroundstyle(_:_:)",
                    "title": "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/foregroundstyle(_:_:_:)",
                    "title": "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/formstyle(_:)",
                    "title": "func formStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/frame()",
                    "title": "func frame() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title": "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/frame(width:height:alignment:)",
                    "title": "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fullscreencover(ispresented:ondismiss:content:)",
                    "title": "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/fullscreencover(item:ondismiss:content:)",
                    "title": "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gaugestyle(_:)",
                    "title": "func gaugeStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/geometrygroup()",
                    "title": "func geometryGroup() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gesture(_:)",
                    "title": "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gesture(_:including:)",
                    "title": "func gesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gesture(_:isenabled:)",
                    "title": "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gesture(_:name:isenabled:)",
                    "title": "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/grayscale(_:)",
                    "title": "func grayscale(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gridcellanchor(_:)",
                    "title": "func gridCellAnchor(UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gridcellcolumns(_:)",
                    "title": "func gridCellColumns(Int) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gridcellunsizedaxes(_:)",
                    "title": "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/gridcolumnalignment(_:)",
                    "title": "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/groupboxstyle(_:)",
                    "title": "func groupBoxStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/handgestureshortcut(_:isenabled:)",
                    "title": "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/handlesexternalevents(preferring:allowing:)",
                    "title": "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/headerprominence(_:)",
                    "title": "func headerProminence(Prominence) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/help(_:)-572a9",
                    "title": "func help<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/help(_:)-62k7e",
                    "title": "func help(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/help(_:)-6hknj",
                    "title": "func help(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/hidden()",
                    "title": "func hidden() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/highprioritygesture(_:including:)",
                    "title": "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/highprioritygesture(_:isenabled:)",
                    "title": "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/highprioritygesture(_:name:isenabled:)",
                    "title": "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/hovereffect(_:)",
                    "title": "func hoverEffect(HoverEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/hovereffect(_:isenabled:)",
                    "title": "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/hovereffectdisabled(_:)",
                    "title": "func hoverEffectDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/huerotation(_:)",
                    "title": "func hueRotation(Angle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/id(_:)",
                    "title": "func id<ID>(ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ignoressafearea(_:edges:)",
                    "title": "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/imagescale(_:)",
                    "title": "func imageScale(Image.Scale) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/indexviewstyle(_:)",
                    "title": "func indexViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/inspector(ispresented:content:)",
                    "title": "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/inspectorcolumnwidth(_:)",
                    "title": "func inspectorColumnWidth(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/inspectorcolumnwidth(min:ideal:max:)",
                    "title": "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/interactionactivitytrackingtag(_:)",
                    "title": "func interactionActivityTrackingTag(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/interactivedismissdisabled(_:)",
                    "title": "func interactiveDismissDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/invalidatablecontent(_:)",
                    "title": "func invalidatableContent(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/italic(_:)",
                    "title": "func italic(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/itemprovider(_:)",
                    "title": "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/journalingsuggestionspicker(ispresented:oncompletion:)",
                    "title": "func journalingSuggestionsPicker(isPresented: Binding<Bool>, onCompletion: (JournalingSuggestion) async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/kerning(_:)",
                    "title": "func kerning(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/keyboardshortcut(_:)-1b5lm",
                    "title": "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/keyboardshortcut(_:)-nwwx",
                    "title": "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/keyboardshortcut(_:modifiers:)",
                    "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/keyboardshortcut(_:modifiers:localization:)",
                    "title": "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/keyboardtype(_:)",
                    "title": "func keyboardType(UIKeyboardType) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title": "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title": "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/labelstyle(_:)",
                    "title": "func labelStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/labeledcontentstyle(_:)",
                    "title": "func labeledContentStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/labelshidden()",
                    "title": "func labelsHidden() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/labelsvisibility(_:)",
                    "title": "func labelsVisibility(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/layereffect(_:maxsampleoffset:isenabled:)",
                    "title": "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/layoutdirectionbehavior(_:)",
                    "title": "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/layoutpriority(_:)",
                    "title": "func layoutPriority(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/layoutvalue(key:value:)",
                    "title": "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/linelimit(_:)-1ddrr",
                    "title": "func lineLimit(Int?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/linelimit(_:)-3ll3c",
                    "title": "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/linelimit(_:)-4sksu",
                    "title": "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/linelimit(_:)-898hk",
                    "title": "func lineLimit(ClosedRange<Int>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/linelimit(_:reservesspace:)",
                    "title": "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/linespacing(_:)",
                    "title": "func lineSpacing(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listitemtint(_:)-1hp9b",
                    "title": "func listItemTint(ListItemTint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listitemtint(_:)-8f3cd",
                    "title": "func listItemTint(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listrowbackground(_:)",
                    "title": "func listRowBackground<V>(V?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listrowinsets(_:)",
                    "title": "func listRowInsets(EdgeInsets?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listrowseparator(_:edges:)",
                    "title": "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listrowseparatortint(_:edges:)",
                    "title": "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listrowspacing(_:)",
                    "title": "func listRowSpacing(CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listsectionseparator(_:edges:)",
                    "title": "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listsectionseparatortint(_:edges:)",
                    "title": "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listsectionspacing(_:)-7yxd8",
                    "title": "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/listsectionspacing(_:)-9q60d",
                    "title": "func listSectionSpacing(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/liststyle(_:)",
                    "title": "func listStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/luminancetoalpha()",
                    "title": "func luminanceToAlpha() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/mask(_:)",
                    "title": "func mask<Mask>(Mask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/mask(alignment:_:)",
                    "title": "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title": "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/matchedtransitionsource(id:in:)",
                    "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/matchedtransitionsource(id:in:configuration:)",
                    "title": "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/materialactiveappearance(_:)",
                    "title": "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/menuactiondismissbehavior(_:)",
                    "title": "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/menuindicator(_:)",
                    "title": "func menuIndicator(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/menuorder(_:)",
                    "title": "func menuOrder(MenuOrder) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/menustyle(_:)",
                    "title": "func menuStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/minimumscalefactor(_:)",
                    "title": "func minimumScaleFactor(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/modifier(_:)",
                    "title": "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/monospaced(_:)",
                    "title": "func monospaced(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/monospaceddigit()",
                    "title": "func monospacedDigit() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/movedisabled(_:)",
                    "title": "func moveDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/multilinetextalignment(_:)",
                    "title": "func multilineTextAlignment(TextAlignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbarbackbuttonhidden(_:)",
                    "title": "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbarhidden(_:)",
                    "title": "func navigationBarHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbaritems(leading:)",
                    "title": "func navigationBarItems<L>(leading: L) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbaritems(leading:trailing:)",
                    "title": "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbaritems(trailing:)",
                    "title": "func navigationBarItems<T>(trailing: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbartitle(_:)-4h48t",
                    "title": "func navigationBarTitle(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbartitle(_:)-e5h6",
                    "title": "func navigationBarTitle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbartitle(_:)-hky0",
                    "title": "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbartitle(_:displaymode:)-4y379",
                    "title": "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbartitle(_:displaymode:)-5w06n",
                    "title": "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbartitle(_:displaymode:)-8bm9c",
                    "title": "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationbartitledisplaymode(_:)",
                    "title": "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdestination(for:destination:)",
                    "title": "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdestination(ispresented:destination:)",
                    "title": "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdestination(item:destination:)",
                    "title": "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdocument(_:)-355x4",
                    "title": "func navigationDocument(URL) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdocument(_:)-9j3fc",
                    "title": "func navigationDocument<D>(D) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdocument(_:preview:)-4ntv5",
                    "title": "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdocument(_:preview:)-5vxwj",
                    "title": "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdocument(_:preview:)-86xvd",
                    "title": "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationdocument(_:preview:)-9qt8f",
                    "title": "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationsplitviewcolumnwidth(_:)",
                    "title": "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title": "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationsplitviewstyle(_:)",
                    "title": "func navigationSplitViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationtitle(_:)-6halb",
                    "title": "func navigationTitle<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationtitle(_:)-707tj",
                    "title": "func navigationTitle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationtitle(_:)-7256q",
                    "title": "func navigationTitle(Binding<String>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationtitle(_:)-8181p",
                    "title": "func navigationTitle(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationtitle(_:)-dz7u",
                    "title": "func navigationTitle(Text) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationtransition(_:)",
                    "title": "func navigationTransition(some NavigationTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/navigationviewstyle(_:)",
                    "title": "func navigationViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/offset(_:)",
                    "title": "func offset(CGSize) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/offset(x:y:)",
                    "title": "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onappear(perform:)",
                    "title": "func onAppear(perform: (() -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onchange(of:initial:_:)-30nzx",
                    "title": "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onchange(of:initial:_:)-68ega",
                    "title": "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onchange(of:perform:)",
                    "title": "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/oncontinueuseractivity(_:perform:)",
                    "title": "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/oncontinuoushover(coordinatespace:perform:)",
                    "title": "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondisappear(perform:)",
                    "title": "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrag(_:)",
                    "title": "func onDrag(() -> NSItemProvider) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrag(_:preview:)",
                    "title": "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrop(of:delegate:)-5oj4b",
                    "title": "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrop(of:delegate:)-xtrh",
                    "title": "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrop(of:istargeted:perform:)-38nqi",
                    "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrop(of:istargeted:perform:)-3kyg9",
                    "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrop(of:istargeted:perform:)-4nk4l",
                    "title": "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ondrop(of:istargeted:perform:)-6s0ki",
                    "title": "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ongeometrychange(for:of:action:)-2ro4j",
                    "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ongeometrychange(for:of:action:)-6vh47",
                    "title": "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onhover(perform:)",
                    "title": "func onHover(perform: (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onkeypress(_:action:)",
                    "title": "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onkeypress(_:phases:action:)",
                    "title": "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onkeypress(characters:phases:action:)",
                    "title": "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onkeypress(keys:phases:action:)",
                    "title": "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onkeypress(phases:action:)",
                    "title": "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title": "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onopenurl(perform:)",
                    "title": "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onpencildoubletap(perform:)",
                    "title": "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onpencilsqueeze(perform:)",
                    "title": "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onpreferencechange(_:perform:)",
                    "title": "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onreceive(_:perform:)",
                    "title": "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onscrollgeometrychange(for:of:action:)",
                    "title": "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onscrollphasechange(_:)-6brst",
                    "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onscrollphasechange(_:)-9xmz0",
                    "title": "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title": "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onscrollvisibilitychange(threshold:_:)",
                    "title": "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/onsubmit(of:_:)",
                    "title": "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ontapgesture(count:coordinatespace:perform:)",
                    "title": "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/ontapgesture(count:perform:)",
                    "title": "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/opacity(_:)",
                    "title": "func opacity(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/overlay(_:alignment:)",
                    "title": "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/overlay(_:ignoressafeareaedges:)",
                    "title": "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/overlay(_:in:fillstyle:)",
                    "title": "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/overlay(alignment:content:)",
                    "title": "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/overlaypreferencevalue(_:_:)",
                    "title": "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/overlaypreferencevalue(_:alignment:_:)",
                    "title": "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/padding(_:)-5weyk",
                    "title": "func padding(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/padding(_:)-6ivqh",
                    "title": "func padding(EdgeInsets) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/padding(_:_:)",
                    "title": "func padding(Edge.Set, CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/paletteselectioneffect(_:)",
                    "title": "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/persistentsystemoverlays(_:)",
                    "title": "func persistentSystemOverlays(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/phaseanimator(_:content:animation:)",
                    "title": "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/phaseanimator(_:trigger:content:animation:)",
                    "title": "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/pickerstyle(_:)",
                    "title": "func pickerStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/popover(ispresented:attachmentanchor:arrowedge:content:)",
                    "title": "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/popover(item:attachmentanchor:arrowedge:content:)",
                    "title": "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/position(_:)",
                    "title": "func position(CGPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/position(x:y:)",
                    "title": "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/preference(key:value:)",
                    "title": "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/preferredcolorscheme(_:)",
                    "title": "func preferredColorScheme(ColorScheme?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationbackground(_:)",
                    "title": "func presentationBackground<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationbackground(alignment:content:)",
                    "title": "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationbackgroundinteraction(_:)",
                    "title": "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationcompactadaptation(_:)",
                    "title": "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationcompactadaptation(horizontal:vertical:)",
                    "title": "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationcontentinteraction(_:)",
                    "title": "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationcornerradius(_:)",
                    "title": "func presentationCornerRadius(CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationdetents(_:)",
                    "title": "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationdetents(_:selection:)",
                    "title": "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationdragindicator(_:)",
                    "title": "func presentationDragIndicator(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/presentationsizing(_:)",
                    "title": "func presentationSizing(some PresentationSizing) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/previewcontext(_:)",
                    "title": "func previewContext<C>(C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/previewdevice(_:)",
                    "title": "func previewDevice(PreviewDevice?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/previewdisplayname(_:)",
                    "title": "func previewDisplayName(String?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/previewinterfaceorientation(_:)",
                    "title": "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/previewlayout(_:)",
                    "title": "func previewLayout(PreviewLayout) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/privacysensitive(_:)",
                    "title": "func privacySensitive(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/progressviewstyle(_:)",
                    "title": "func progressViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/projectioneffect(_:)",
                    "title": "func projectionEffect(ProjectionTransform) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/redacted(reason:)",
                    "title": "func redacted(reason: RedactionReasons) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/refreshable(action:)",
                    "title": "func refreshable(action: () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/renameaction(_:)-6v7kc",
                    "title": "func renameAction(() -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/renameaction(_:)-ojv0",
                    "title": "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/replacedisabled(_:)",
                    "title": "func replaceDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title": "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/rotationeffect(_:anchor:)",
                    "title": "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/safeareainset(edge:alignment:spacing:content:)-62h2w",
                    "title": "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/safeareainset(edge:alignment:spacing:content:)-lxvq",
                    "title": "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/safeareapadding(_:)-26d5f",
                    "title": "func safeAreaPadding(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/safeareapadding(_:)-7sa3o",
                    "title": "func safeAreaPadding(EdgeInsets) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/safeareapadding(_:_:)",
                    "title": "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/saturation(_:)",
                    "title": "func saturation(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scaleeffect(_:anchor:)-52z27",
                    "title": "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scaleeffect(_:anchor:)-fk4u",
                    "title": "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scaleeffect(x:y:anchor:)",
                    "title": "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scaledtofill()",
                    "title": "func scaledToFill() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scaledtofit()",
                    "title": "func scaledToFit() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scenepadding(_:)",
                    "title": "func scenePadding(Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scenepadding(_:edges:)",
                    "title": "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollbouncebehavior(_:axes:)",
                    "title": "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollclipdisabled(_:)",
                    "title": "func scrollClipDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollcontentbackground(_:)",
                    "title": "func scrollContentBackground(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrolldisabled(_:)",
                    "title": "func scrollDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrolldismisseskeyboard(_:)",
                    "title": "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollindicators(_:axes:)",
                    "title": "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollindicatorsflash(onappear:)",
                    "title": "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollindicatorsflash(trigger:)",
                    "title": "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollinputbehavior(_:for:)",
                    "title": "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollposition(_:anchor:)",
                    "title": "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrollposition(id:anchor:)",
                    "title": "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrolltargetbehavior(_:)",
                    "title": "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrolltargetlayout(isenabled:)",
                    "title": "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrolltransition(_:axis:transition:)",
                    "title": "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title": "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchcompletion(_:)-894w4",
                    "title": "func searchCompletion(String) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchcompletion(_:)-90oem",
                    "title": "func searchCompletion<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchdictationbehavior(_:)",
                    "title": "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchfocused(_:)",
                    "title": "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchfocused(_:equals:)",
                    "title": "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchpresentationtoolbarbehavior(_:)",
                    "title": "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchscopes(_:activation:_:)",
                    "title": "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchscopes(_:scopes:)",
                    "title": "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchsuggestions(_:)",
                    "title": "func searchSuggestions<S>(() -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchsuggestions(_:for:)",
                    "title": "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1zxs1",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:editabletokens:ispresented:placement:prompt:token:)-85ojf",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9rly1",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:editabletokens:placement:prompt:token:)-3fvlt",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:editabletokens:placement:prompt:token:)-8uku9",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:editabletokens:placement:prompt:token:)-9mvg6",
                    "title": "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:ispresented:placement:prompt:)-19qfi",
                    "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:ispresented:placement:prompt:)-3vbfq",
                    "title": "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:ispresented:placement:prompt:)-5s0sp",
                    "title": "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:placement:prompt:)-10v5x",
                    "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:placement:prompt:)-3qexo",
                    "title": "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:placement:prompt:)-73l5h",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:placement:prompt:suggestions:)-3mk4m",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:placement:prompt:suggestions:)-3x0q5",
                    "title": "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:placement:prompt:suggestions:)-974e5",
                    "title": "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:ispresented:placement:prompt:token:)-4juwy",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:ispresented:placement:prompt:token:)-4x089",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:ispresented:placement:prompt:token:)-zatq",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:placement:prompt:token:)-2xpkm",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:placement:prompt:token:)-6s0e",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:placement:prompt:token:)-geuu",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6u7a0",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7410l",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-nds6",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3lws2",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-70me4",
                    "title": "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7zv4k",
                    "title": "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/sectionactions(content:)",
                    "title": "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/selectiondisabled(_:)",
                    "title": "func selectionDisabled(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/sensoryfeedback(_:trigger:)",
                    "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/sensoryfeedback(_:trigger:condition:)",
                    "title": "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/sensoryfeedback(trigger:_:)",
                    "title": "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/shadow(color:radius:x:y:)",
                    "title": "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/sheet(ispresented:ondismiss:content:)",
                    "title": "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/sheet(item:ondismiss:content:)",
                    "title": "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/simultaneousgesture(_:including:)",
                    "title": "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/simultaneousgesture(_:isenabled:)",
                    "title": "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/simultaneousgesture(_:name:isenabled:)",
                    "title": "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/speechadjustedpitch(_:)",
                    "title": "func speechAdjustedPitch(Double) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/speechalwaysincludespunctuation(_:)",
                    "title": "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/speechannouncementsqueued(_:)",
                    "title": "func speechAnnouncementsQueued(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/speechspellsoutcharacters(_:)",
                    "title": "func speechSpellsOutCharacters(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/springloadingbehavior(_:)",
                    "title": "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/statusbar(hidden:)",
                    "title": "func statusBar(hidden: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/statusbarhidden(_:)",
                    "title": "func statusBarHidden(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/strikethrough(_:pattern:color:)",
                    "title": "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/submitlabel(_:)",
                    "title": "func submitLabel(SubmitLabel) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/submitscope(_:)",
                    "title": "func submitScope(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/swipeactions(edge:allowsfullswipe:content:)",
                    "title": "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/symboleffect(_:options:isactive:)",
                    "title": "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/symboleffect(_:options:value:)",
                    "title": "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/symboleffectsremoved(_:)",
                    "title": "func symbolEffectsRemoved(Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/symbolrenderingmode(_:)",
                    "title": "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/symbolvariant(_:)",
                    "title": "func symbolVariant(SymbolVariants) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tabitem(_:)",
                    "title": "func tabItem<V>(() -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tabviewcustomization(_:)",
                    "title": "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tabviewsidebarbottombar(content:)",
                    "title": "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tabviewsidebarfooter(content:)",
                    "title": "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tabviewsidebarheader(content:)",
                    "title": "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tabviewstyle(_:)",
                    "title": "func tabViewStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tablecolumnheaders(_:)",
                    "title": "func tableColumnHeaders(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tablestyle(_:)",
                    "title": "func tableStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tag(_:includeoptional:)",
                    "title": "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/task(id:priority:_:)",
                    "title": "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/task(priority:_:)",
                    "title": "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textcase(_:)",
                    "title": "func textCase(Text.Case?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textcontenttype(_:)",
                    "title": "func textContentType(UITextContentType?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/texteditorstyle(_:)",
                    "title": "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textfieldstyle(_:)",
                    "title": "func textFieldStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textinputautocapitalization(_:)",
                    "title": "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textrenderer(_:)",
                    "title": "func textRenderer<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textscale(_:isenabled:)",
                    "title": "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textselection(_:)",
                    "title": "func textSelection<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/textselectionaffinity(_:)",
                    "title": "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tint(_:)",
                    "title": "func tint(Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/togglestyle(_:)",
                    "title": "func toggleStyle<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbar(_:for:)",
                    "title": "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbar(content:)-8csc5",
                    "title": "func toolbar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbar(content:)-8he4j",
                    "title": "func toolbar<Content>(content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbar(id:content:)",
                    "title": "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbar(removing:)",
                    "title": "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbarbackground(_:for:)-24qb6",
                    "title": "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbarbackground(_:for:)-jxo8",
                    "title": "func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbarbackgroundvisibility(_:for:)",
                    "title": "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbarcolorscheme(_:for:)",
                    "title": "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbarforegroundstyle(_:for:)",
                    "title": "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbarrole(_:)",
                    "title": "func toolbarRole(ToolbarRole) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbartitledisplaymode(_:)",
                    "title": "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbartitlemenu(content:)",
                    "title": "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/toolbarvisibility(_:for:)",
                    "title": "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/tracking(_:)",
                    "title": "func tracking(CGFloat) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transaction(_:)",
                    "title": "func transaction((inout Transaction) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transaction(_:body:)",
                    "title": "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transaction(value:_:)",
                    "title": "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transformanchorpreference(key:value:transform:)",
                    "title": "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transformeffect(_:)",
                    "title": "func transformEffect(CGAffineTransform) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transformenvironment(_:transform:)",
                    "title": "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transformpreference(_:_:)",
                    "title": "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transition(_:)-6kwsx",
                    "title": "func transition<T>(T) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/transition(_:)-8bkjh",
                    "title": "func transition(AnyTransition) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/truncationmode(_:)",
                    "title": "func truncationMode(Text.TruncationMode) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/typeselectequivalent(_:)-160ex",
                    "title": "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/typeselectequivalent(_:)-4b6dl",
                    "title": "func typeSelectEquivalent<S>(S) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/typeselectequivalent(_:)-61u5k",
                    "title": "func typeSelectEquivalent(Text?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/typesettinglanguage(_:isenabled:)-1yu7d",
                    "title": "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/typesettinglanguage(_:isenabled:)-4mxdm",
                    "title": "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/underline(_:pattern:color:)",
                    "title": "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/unredacted()",
                    "title": "func unredacted() -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/useractivity(_:element:_:)",
                    "title": "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/useractivity(_:isactive:_:)",
                    "title": "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/visualeffect(_:)",
                    "title": "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/windowtoolbarfullscreenvisibility(_:)",
                    "title": "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/writingtoolsaffordancevisibility(_:)",
                    "title": "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/writingtoolsbehavior(_:)",
                    "title": "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/zindex(_:)",
                    "title": "func zIndex(Double) -> some View",
                    "type": "method"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestionspicker/view-implementations",
                "title": "View Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/journalingsuggestions/journalingsuggestionspicker",
            "title": "JournalingSuggestionsPicker",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Inspecting suggestion details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestion/date",
                "title": "let date: DateInterval?",
                "type": "property"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestion/title",
                "title": "let title: String",
                "type": "property"
              },
              {
                "title": "Accessing suggestion data by type",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestion/items",
                "title": "let items: [JournalingSuggestion.ItemContent]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Identifying item contents",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/itemcontent/id-swift.property",
                    "title": "var id: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/itemcontent/representations",
                    "title": "var representations: [any JournalingSuggestionAsset.Type]",
                    "type": "property"
                  },
                  {
                    "title": "Accessing suggestion data by type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/itemcontent/content(fortype:)",
                    "title": "func content<Content>(forType: Content.Type) async throws -> Content?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/itemcontent/hascontent(oftype:)",
                    "title": "func hasContent<Content>(ofType: Content.Type) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/itemcontent/id-swift.typealias",
                    "title": "JournalingSuggestion.ItemContent.ID",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/itemcontent",
                "title": "JournalingSuggestion.ItemContent",
                "type": "struct"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestion/content(fortype:)",
                "title": "func content<Content>(forType: Content.Type) async -> [Content]",
                "type": "method"
              },
              {
                "title": "Interacting with suggestion types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting contact information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/contact/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/contact/photo",
                    "title": "let photo: URL?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/contact/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Contact.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/contact",
                "title": "JournalingSuggestion.Contact",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing media data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/genericmedia/album",
                    "title": "var album: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/genericmedia/appicon",
                    "title": "var appIcon: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/genericmedia/artist",
                    "title": "var artist: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/genericmedia/date",
                    "title": "var date: Date?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/genericmedia/title",
                    "title": "var title: String?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/genericmedia/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.GenericMedia.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/genericmedia",
                "title": "JournalingSuggestion.GenericMedia",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing Live Photo data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/livephoto/image",
                    "title": "var image: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/livephoto/video",
                    "title": "var video: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/livephoto/date",
                    "title": "var date: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/livephoto/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.LivePhoto.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/livephoto",
                "title": "JournalingSuggestion.LivePhoto",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Identifying the location",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/location/city",
                    "title": "var city: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/location/place",
                    "title": "var place: String?",
                    "type": "property"
                  },
                  {
                    "title": "Plotting a location geographically",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/location/location",
                    "title": "var location: CLLocation?",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the visitation date",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/location/date",
                    "title": "var date: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/location/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Location.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/location",
                "title": "JournalingSuggestion.Location",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing individual locations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/locationgroup/locations",
                    "title": "var locations: [JournalingSuggestion.Location]",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/locationgroup/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.LocationGroup.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/locationgroup",
                "title": "JournalingSuggestion.LocationGroup",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing motion summary information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/icon",
                    "title": "var icon: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/date",
                    "title": "var date: DateInterval?",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting motion details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/steps",
                    "title": "var steps: Int",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Recording movement type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/running",
                        "title": "static let running: JournalingSuggestion.MotionActivity.MovementType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/runningwalking",
                        "title": "static let runningWalking: JournalingSuggestion.MotionActivity.MovementType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/walking",
                        "title": "static let walking: JournalingSuggestion.MotionActivity.MovementType",
                        "type": "property"
                      },
                      {
                        "title": "Decoding a value",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/==(_:_:)",
                        "title": "static func == (JournalingSuggestion.MotionActivity.MovementType, JournalingSuggestion.MotionActivity.MovementType) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.struct",
                    "title": "JournalingSuggestion.MotionActivity.MovementType",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/movementtype-swift.property",
                    "title": "var movementType: JournalingSuggestion.MotionActivity.MovementType?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.MotionActivity.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/motionactivity",
                "title": "JournalingSuggestion.MotionActivity",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing photo data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/photo/photo",
                    "title": "var photo: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/photo/date",
                    "title": "var date: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/photo/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Photo.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/photo",
                "title": "JournalingSuggestion.Photo",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Identifying the podcast",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/podcast/show",
                    "title": "var show: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/podcast/episode",
                    "title": "var episode: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/podcast/artwork",
                    "title": "var artwork: URL?",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting interaction details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/podcast/date",
                    "title": "var date: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/podcast/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Podcast.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/podcast",
                "title": "JournalingSuggestion.Podcast",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Identifying a reflection prompt",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/reflection/color",
                    "title": "var color: Color?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/reflection/prompt",
                    "title": "var prompt: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/reflection/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Reflection.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/reflection",
                "title": "JournalingSuggestion.Reflection",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the state of mind data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/stateofmind/darkbackground",
                    "title": "var darkBackground: Gradient?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/stateofmind/lightbackground",
                    "title": "var lightBackground: Gradient?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/stateofmind/icon",
                    "title": "var icon: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/stateofmind/state",
                    "title": "var state: HKStateOfMind",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/stateofmind/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.StateOfMind.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/stateofmind",
                "title": "JournalingSuggestion.StateOfMind",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Identifying the song",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/song/song",
                    "title": "var song: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/song/artist",
                    "title": "var artist: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/song/album",
                    "title": "var album: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/song/artwork",
                    "title": "var artwork: URL?",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting interaction details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/song/date",
                    "title": "var date: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/song/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Song.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/song",
                "title": "JournalingSuggestion.Song",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing video data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/video/url",
                    "title": "var url: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/video/date",
                    "title": "var date: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/video/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Video.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/video",
                "title": "JournalingSuggestion.Video",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing workout summary information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/icon",
                    "title": "var icon: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/route",
                    "title": "var route: [CLLocation]?",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting workout details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.property",
                    "title": "var details: JournalingSuggestion.Workout.Details?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.struct/activeenergyburned",
                        "title": "var activeEnergyBurned: HKQuantity?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.struct/activitytype",
                        "title": "var activityType: HKWorkoutActivityType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.struct/averageheartrate",
                        "title": "var averageHeartRate: HKQuantity?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.struct/date",
                        "title": "var date: DateInterval?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.struct/distance",
                        "title": "var distance: HKQuantity?",
                        "type": "property"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.struct/journalingsuggestioncontent",
                        "title": "JournalingSuggestion.Workout.Details.JournalingSuggestionContent",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/details-swift.struct",
                    "title": "JournalingSuggestion.Workout.Details",
                    "type": "struct"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workout/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.Workout.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/workout",
                "title": "JournalingSuggestion.Workout",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing workout summary information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workoutgroup/icon",
                    "title": "var icon: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workoutgroup/duration",
                    "title": "var duration: TimeInterval?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workoutgroup/activeenergyburned",
                    "title": "var activeEnergyBurned: HKQuantity?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workoutgroup/averageheartrate",
                    "title": "var averageHeartRate: HKQuantity?",
                    "type": "property"
                  },
                  {
                    "title": "Accessing individual workouts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workoutgroup/workouts",
                    "title": "var workouts: [JournalingSuggestion.Workout]",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/workoutgroup/journalingsuggestioncontent",
                    "title": "JournalingSuggestion.WorkoutGroup.JournalingSuggestionContent",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/workoutgroup",
                "title": "JournalingSuggestion.WorkoutGroup",
                "type": "struct"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestion/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/==(_:_:)",
                    "title": "static func == (JournalingSuggestion, JournalingSuggestion) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/journalingsuggestions/journalingsuggestion/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/journalingsuggestions/journalingsuggestion/hashable-implementations",
                "title": "Hashable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/journalingsuggestions/journalingsuggestion",
            "title": "JournalingSuggestion",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/journalingsuggestions/journalingsuggestionasset/journalingsuggestioncontent",
                "title": "JournalingSuggestionContent",
                "type": "associatedtype"
              }
            ],
            "path": "/documentation/journalingsuggestions/journalingsuggestionasset",
            "title": "JournalingSuggestionAsset",
            "type": "protocol"
          }
        ],
        "path": "/documentation/journalingsuggestions",
        "title": "Journaling Suggestions",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
