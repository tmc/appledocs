{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "3D Asset Basics",
            "type": "groupMarker"
          },
          {
            "title": "Managing Mesh Data",
            "type": "groupMarker"
          },
          {
            "title": "Materials",
            "type": "groupMarker"
          },
          {
            "title": "Textures",
            "type": "groupMarker"
          },
          {
            "title": "Lights",
            "type": "groupMarker"
          },
          {
            "title": "Cameras",
            "type": "groupMarker"
          },
          {
            "title": "Extensible Asset Format Support",
            "type": "groupMarker"
          },
          {
            "title": "Volumetric Representations",
            "type": "groupMarker"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/modelio/model-i-o-data-types",
            "title": "Model I/O Data Types",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/modelio/model-i-o-structures",
            "title": "Model I/O Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/modelio/model-i-o-enumerations",
            "title": "Model I/O Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/modelio/model-i-o-constants",
            "title": "Model I/O Constants",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/modelio",
        "title": "Model I/O",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "3D Asset Basics",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating an Asset",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/canimportfileextension(_:)",
                "title": "+ canImportFileExtension:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(url:)",
                "title": "- initWithURL:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(bufferallocator:)",
                "title": "- initWithBufferAllocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(url:vertexdescriptor:bufferallocator:)",
                "title": "- initWithURL:vertexDescriptor:bufferAllocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(url:vertexdescriptor:bufferallocator:preservetopology:error:)",
                "title": "- initWithURL:vertexDescriptor:bufferAllocator:preserveTopology:error:",
                "type": "method"
              },
              {
                "title": "Exporting an Asset",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/canexportfileextension(_:)",
                "title": "+ canExportFileExtension:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/exportassettourl:",
                "title": "- exportAssetToURL:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/export(to:)",
                "title": "- exportAssetToURL:error:",
                "type": "method"
              },
              {
                "title": "Working with Asset Content",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/object(at:)",
                "title": "- objectAtIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/subscript(_:)",
                "title": "- objectAtIndexedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/count",
                "title": "count",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/childobjects(of:)",
                "title": "- childObjectsOfClass:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/add(_:)",
                "title": "- addObject:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/remove(_:)",
                "title": "- removeObject:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/boundingbox",
                "title": "boundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/boundingbox(attime:)",
                "title": "- boundingBoxAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/url",
                "title": "URL",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/bufferallocator",
                "title": "bufferAllocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/vertexdescriptor",
                "title": "vertexDescriptor",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlasset/masters",
                "title": "masters",
                "type": "property"
              },
              {
                "title": "Working with Timed Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/frameinterval",
                "title": "frameInterval",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/starttime",
                "title": "startTime",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/endtime",
                "title": "endTime",
                "type": "property"
              },
              {
                "title": "Working with Lights",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/placelightprobes(withdensity:heuristic:using:)",
                "title": "+ placeLightProbesWithDensity:heuristic:usingIrradianceDataSource:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/irradiancedistribution",
                    "title": "MDLProbePlacementIrradianceDistribution",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/uniformgrid",
                    "title": "MDLProbePlacementUniformGrid",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlprobeplacement",
                "title": "MDLProbePlacement",
                "type": "enum"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/kuttypealembic",
                    "title": "kUTTypeAlembic",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttype3dobject",
                    "title": "kUTType3dObject",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttypepolygon",
                    "title": "kUTTypePolygon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttypestereolithography",
                    "title": "kUTTypeStereolithography",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttypeuniversalscenedescription",
                    "title": "kUTTypeUniversalSceneDescription",
                    "type": "var"
                  }
                ],
                "path": "/documentation/modelio/asset-file-types",
                "title": "Asset File Types",
                "type": "collection"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/animations",
                "title": "animations",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/originals",
                "title": "originals",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/resolver",
                "title": "resolver",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/upaxis",
                "title": "upAxis",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/loadtextures()",
                "title": "- loadTextures",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/object(atpath:)",
                "title": "- objectAtPath:",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/assetwithscnscene:",
                "title": "+ assetWithSCNScene:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/assetwithscnscene:bufferallocator:",
                "title": "+ assetWithSCNScene:bufferAllocator:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlasset",
            "title": "MDLAsset",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Customizing Objects with Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/componentconforming(to:)",
                "title": "- componentConformingToProtocol:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/setcomponent(_:for:)",
                "title": "- setComponent:forProtocol:",
                "type": "method"
              },
              {
                "title": "Working with Object Hierarchies",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/parent",
                "title": "parent",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/children",
                "title": "children",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/addchild(_:)",
                "title": "- addChild:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/enumeratechildobjects(of:root:using:stoppointer:)",
                "title": "- enumerateChildObjectsOfClass:root:usingBlock:stopPointer:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/path",
                "title": "path",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/atpath(_:)",
                "title": "- objectAtPath:",
                "type": "method"
              },
              {
                "title": "Working with Objects in Space",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/boundingbox(attime:)",
                "title": "- boundingBoxAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/transform",
                "title": "transform",
                "type": "property"
              },
              {
                "title": "Managing Rendering Intent",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/hidden",
                "title": "hidden",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/instance",
                "title": "instance",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/path",
                "title": "path",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/components",
                "title": "components",
                "type": "property"
              },
              {
                "title": "Object Instancing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/atpath(_:)",
                "title": "- objectAtPath:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/enumeratechildobjects(of:root:using:stoppointer:)",
                "title": "- enumerateChildObjectsOfClass:root:usingBlock:stopPointer:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/subscript(_:)",
                "title": "- objectForKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/setobject:forkeyedsubscript:",
                "title": "- setObject:forKeyedSubscript:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/maxbounds",
                    "title": "maxBounds",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/minbounds",
                    "title": "minBounds",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlaxisalignedboundingbox",
                "title": "MDLAxisAlignedBoundingBox",
                "type": "struct"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/objectwithscnnode:",
                "title": "+ objectWithSCNNode:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/objectwithscnnode:bufferallocator:",
                "title": "+ objectWithSCNNode:bufferAllocator:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlobject",
            "title": "MDLObject",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Transform Object",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdltransform/init(identity:)",
                "title": "- initWithIdentity",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(matrix:)",
                "title": "- initWithMatrix:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(transformcomponent:)",
                "title": "- initWithTransformComponent:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(matrix:resetstransform:)",
                "title": "- initWithMatrix:resetsTransform:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(transformcomponent:resetstransform:)",
                "title": "- initWithTransformComponent:resetsTransform:",
                "type": "method"
              },
              {
                "title": "Using Factors of a Static Transform",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransform/translation",
                "title": "translation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/rotation",
                "title": "rotation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/scale",
                "title": "scale",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/shear",
                "title": "shear",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/setidentity()",
                "title": "- setIdentity",
                "type": "method"
              },
              {
                "title": "Using Factors of an Animated Transform",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransform/translation(attime:)",
                "title": "- translationAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/settranslation(_:fortime:)",
                "title": "- setTranslation:forTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/rotation(attime:)",
                "title": "- rotationAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/rotationmatrix(attime:)",
                "title": "- rotationMatrixAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setrotation(_:fortime:)",
                "title": "- setRotation:forTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/scale(attime:)",
                "title": "- scaleAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setscale(_:fortime:)",
                "title": "- setScale:forTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/shear(attime:)",
                "title": "- shearAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setshear(_:fortime:)",
                "title": "- setShear:forTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setmatrix(_:fortime:)",
                "title": "- setMatrix:forTime:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransform/init()",
                "title": "- init",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdltransform",
            "title": "MDLTransform",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Custom Mesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(vertexbuffer:vertexcount:descriptor:submeshes:)",
                "title": "- initWithVertexBuffer:vertexCount:descriptor:submeshes:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(vertexbuffers:vertexcount:descriptor:submeshes:)",
                "title": "- initWithVertexBuffers:vertexCount:descriptor:submeshes:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(bufferallocator:)",
                "title": "- initWithBufferAllocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newsubdividedmesh(_:submeshindex:subdivisionlevels:)",
                "title": "+ newSubdividedMesh:submeshIndex:subdivisionLevels:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(meshbysubdividingmesh:submeshindex:subdivisionlevels:allocator:)",
                "title": "- initMeshBySubdividingMesh:submeshIndex:subdivisionLevels:allocator:",
                "type": "method"
              },
              {
                "title": "Working with Vertex Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/boundingbox",
                "title": "boundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/submeshes",
                "title": "submeshes",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexbuffers",
                "title": "vertexBuffers",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexcount",
                "title": "vertexCount",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexdescriptor",
                "title": "vertexDescriptor",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/allocator",
                "title": "allocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addattribute(withname:format:)",
                "title": "- addAttributeWithName:format:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addattribute(withname:format:type:data:stride:)",
                "title": "- addAttributeWithName:format:type:data:stride:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addattribute(withname:format:type:data:stride:time:)",
                "title": "- addAttributeWithName:format:type:data:stride:time:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/removeattributenamed(_:)",
                "title": "- removeAttributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/replaceattributenamed(_:with:)",
                "title": "- replaceAttributeNamed:withData:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/updateattributenamed(_:with:)",
                "title": "- updateAttributeNamed:withData:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addunwrappedtexturecoordinates(forattributenamed:)",
                "title": "- addUnwrappedTextureCoordinatesForAttributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexattributedata(forattributenamed:)",
                "title": "- vertexAttributeDataForAttributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexattributedata(forattributenamed:as:)",
                "title": "- vertexAttributeDataForAttributeNamed:asFormat:",
                "type": "method"
              },
              {
                "title": "Generating Geometry Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addnormals(withattributenamed:creasethreshold:)",
                "title": "- addNormalsWithAttributeNamed:creaseThreshold:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addtangentbasis(fortexturecoordinateattributenamed:tangentattributenamed:bitangentattributenamed:)",
                "title": "- addTangentBasisForTextureCoordinateAttributeNamed:tangentAttributeNamed:bitangentAttributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addtangentbasis(fortexturecoordinateattributenamed:normalattributenamed:tangentattributenamed:)",
                "title": "- addTangentBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlmesh/makeverticesunique()",
                "title": "- makeVerticesUnique",
                "type": "method"
              },
              {
                "title": "Generating Ambient Occlusion Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusiontexture(withquality:attenuationfactor:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "- generateAmbientOcclusionTextureWithQuality:attenuationFactor:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusiontexture(withsize:rayspersample:attenuationfactor:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "- generateAmbientOcclusionTextureWithSize:raysPerSample:attenuationFactor:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusionvertexcolors(withquality:attenuationfactor:objectstoconsider:vertexattributenamed:)",
                "title": "- generateAmbientOcclusionVertexColorsWithQuality:attenuationFactor:objectsToConsider:vertexAttributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusionvertexcolors(withrayspersample:attenuationfactor:objectstoconsider:vertexattributenamed:)",
                "title": "- generateAmbientOcclusionVertexColorsWithRaysPerSample:attenuationFactor:objectsToConsider:vertexAttributeNamed:",
                "type": "method"
              },
              {
                "title": "Generating Light Map Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generatelightmaptexture(withquality:lightstoconsider:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "- generateLightMapTextureWithQuality:lightsToConsider:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generatelightmaptexture(withtexturesize:lightstoconsider:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "- generateLightMapTextureWithTextureSize:lightsToConsider:objectsToConsider:vertexAttributeNamed:materialPropertyNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generatelightmapvertexcolorswithlights(toconsider:objectstoconsider:vertexattributenamed:)",
                "title": "- generateLightMapVertexColorsWithLightsToConsider:objectsToConsider:vertexAttributeNamed:",
                "type": "method"
              },
              {
                "title": "Creating Parametric Meshes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newbox(withdimensions:segments:geometrytype:inwardnormals:allocator:)",
                "title": "+ newBoxWithDimensions:segments:geometryType:inwardNormals:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newellipsoid(withradii:radialsegments:verticalsegments:geometrytype:inwardnormals:hemisphere:allocator:)",
                "title": "+ newEllipsoidWithRadii:radialSegments:verticalSegments:geometryType:inwardNormals:hemisphere:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newcylinder(withheight:radii:radialsegments:verticalsegments:geometrytype:inwardnormals:allocator:)",
                "title": "+ newCylinderWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newellipticalcone(withheight:radii:radialsegments:verticalsegments:geometrytype:inwardnormals:allocator:)",
                "title": "+ newEllipticalConeWithHeight:radii:radialSegments:verticalSegments:geometryType:inwardNormals:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newplane(withdimensions:segments:geometrytype:allocator:)",
                "title": "+ newPlaneWithDimensions:segments:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newcapsule(withheight:radii:radialsegments:verticalsegments:hemispheresegments:geometrytype:inwardnormals:allocator:)",
                "title": "+ newCapsuleWithHeight:radii:radialSegments:verticalSegments:hemisphereSegments:geometryType:inwardNormals:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newicosahedron(withradius:inwardnormals:allocator:)",
                "title": "+ newIcosahedronWithRadius:inwardNormals:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newicosahedron(withradius:inwardnormals:geometrytype:allocator:)",
                "title": "+ newIcosahedronWithRadius:inwardNormals:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(boxwithextent:segments:inwardnormals:geometrytype:allocator:)",
                "title": "- initBoxWithExtent:segments:inwardNormals:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(spherewithextent:segments:inwardnormals:geometrytype:allocator:)",
                "title": "- initSphereWithExtent:segments:inwardNormals:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(cylinderwithextent:segments:inwardnormals:topcap:bottomcap:geometrytype:allocator:)",
                "title": "- initCylinderWithExtent:segments:inwardNormals:topCap:bottomCap:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(conewithextent:segments:inwardnormals:cap:geometrytype:allocator:)",
                "title": "- initConeWithExtent:segments:inwardNormals:cap:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(planewithextent:segments:geometrytype:allocator:)",
                "title": "- initPlaneWithExtent:segments:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(icosahedronwithextent:inwardnormals:geometrytype:allocator:)",
                "title": "- initIcosahedronWithExtent:inwardNormals:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(capsulewithextent:cylindersegments:hemispheresegments:inwardnormals:geometrytype:allocator:)",
                "title": "- initCapsuleWithExtent:cylinderSegments:hemisphereSegments:inwardNormals:geometryType:allocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(hemispherewithextent:segments:inwardnormals:cap:geometrytype:allocator:)",
                "title": "- initHemisphereWithExtent:segments:inwardNormals:cap:geometryType:allocator:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addorthtanbasis(fortexturecoordinateattributenamed:normalattributenamed:tangentattributenamed:)",
                "title": "- addOrthTanBasisForTextureCoordinateAttributeNamed:normalAttributeNamed:tangentAttributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/fliptexturecoordinates(inattributenamed:)",
                "title": "- flipTextureCoordinatesInAttributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/makeverticesuniqueandreturnerror()",
                "title": "- makeVerticesUniqueAndReturnError:",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/meshwithscngeometry:",
                "title": "+ meshWithSCNGeometry:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/meshwithscngeometry:bufferallocator:",
                "title": "+ meshWithSCNGeometry:bufferAllocator:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmesh",
            "title": "MDLMesh",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Submesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(indexbuffer:indexcount:indextype:geometrytype:material:)",
                "title": "- initWithIndexBuffer:indexCount:indexType:geometryType:material:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(name:indexbuffer:indexcount:indextype:geometrytype:material:)",
                "title": "- initWithName:indexBuffer:indexCount:indexType:geometryType:material:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(name:indexbuffer:indexcount:indextype:geometrytype:material:topology:)",
                "title": "- initWithName:indexBuffer:indexCount:indexType:geometryType:material:topology:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(mdlsubmesh:indextype:geometrytype:)",
                "title": "- initWithMDLSubmesh:indexType:geometryType:",
                "type": "method"
              },
              {
                "title": "Working with a Submesh’s Index Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indexbuffer",
                "title": "indexBuffer",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indexcount",
                "title": "indexCount",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indextype",
                "title": "indexType",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/geometrytype",
                "title": "geometryType",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/topology",
                "title": "topology",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indexbuffer(asindextype:)",
                "title": "- indexBufferAsIndexType:",
                "type": "method"
              },
              {
                "title": "Associating Materials with a Submesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/material",
                "title": "material",
                "type": "property"
              },
              {
                "title": "Identifying a Submesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/name",
                "title": "name",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/invalid",
                    "title": "MDLIndexBitDepthInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.enum.case",
                    "title": "MDLIndexBitDepthUInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.enum.case",
                    "title": "MDLIndexBitDepthUInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.enum.case",
                    "title": "MDLIndexBitDepthUInt32",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.type.property",
                    "title": "MDLIndexBitDepthUint16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.type.property",
                    "title": "MDLIndexBitDepthUint32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.type.property",
                    "title": "MDLIndexBitDepthUint8",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlindexbitdepth",
                "title": "MDLIndexBitDepth",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/points",
                    "title": "MDLGeometryTypePoints",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/lines",
                    "title": "MDLGeometryTypeLines",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/triangles",
                    "title": "MDLGeometryTypeTriangles",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/trianglestrips",
                    "title": "MDLGeometryTypeTriangleStrips",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/quads",
                    "title": "MDLGeometryTypeQuads",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/variabletopology",
                    "title": "MDLGeometryTypeVariableTopology",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlgeometrytype",
                "title": "MDLGeometryType",
                "type": "enum"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/submeshwithscngeometryelement:",
                "title": "+ submeshWithSCNGeometryElement:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/submeshwithscngeometryelement:bufferallocator:",
                "title": "+ submeshWithSCNGeometryElement:bufferAllocator:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlsubmesh",
            "title": "MDLSubmesh",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying Faces",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/facetopology",
                "title": "faceTopology",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/facecount",
                "title": "faceCount",
                "type": "property"
              },
              {
                "title": "Identifying Creases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/edgecreaseindices",
                "title": "edgeCreaseIndices",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/edgecreases",
                "title": "edgeCreases",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/edgecreasecount",
                "title": "edgeCreaseCount",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/vertexcreaseindices",
                "title": "vertexCreaseIndices",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/vertexcreases",
                "title": "vertexCreases",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/vertexcreasecount",
                "title": "vertexCreaseCount",
                "type": "property"
              },
              {
                "title": "Identifying Holes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/holes",
                "title": "holes",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/holecount",
                "title": "holeCount",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/init(submesh:)",
                "title": "- initWithSubmesh:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlsubmeshtopology",
            "title": "MDLSubmeshTopology",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Naming an Object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnamed/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlnamed",
            "title": "MDLNamed",
            "type": "protocol"
          },
          {
            "title": "Managing Mesh Data",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Working with Data in a Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/fill(_:offset:)",
                "title": "- fillData:offset:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/map()",
                "title": "- map",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/length",
                "title": "length",
                "type": "property"
              },
              {
                "title": "Inspecting a Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/allocator",
                "title": "allocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/zone",
                "title": "zone",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/type",
                "title": "type",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/vertex",
                    "title": "MDLMeshBufferTypeVertex",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/index",
                    "title": "MDLMeshBufferTypeIndex",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/custom",
                    "title": "MDLMeshBufferTypeCustom",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmeshbuffertype",
                "title": "MDLMeshBufferType",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbuffer",
            "title": "MDLMeshBuffer",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Allocating Mesh Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newzone(_:)",
                "title": "- newZone:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newzoneforbuffers(withsize:andtype:)",
                "title": "- newZoneForBuffersWithSize:andType:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(_:type:)",
                "title": "- newBuffer:type:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(from:length:type:)",
                "title": "- newBufferFromZone:length:type:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(with:type:)",
                "title": "- newBufferWithData:type:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(from:data:type:)",
                "title": "- newBufferFromZone:data:type:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferallocator",
            "title": "MDLMeshBufferAllocator",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferdata/init(type:data:)",
                "title": "- initWithType:data:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferdata/init(type:length:)",
                "title": "- initWithType:length:",
                "type": "method"
              },
              {
                "title": "Accessing a Buffer’s Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferdata/data",
                "title": "data",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferdata",
            "title": "MDLMeshBufferData",
            "type": "class"
          },
          {
            "path": "/documentation/modelio/mdlmeshbufferdataallocator",
            "title": "MDLMeshBufferDataAllocator",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Buffer Map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffermap/init(bytes:deallocator:)",
                "title": "- initWithBytes:deallocator:",
                "type": "method"
              },
              {
                "title": "Accessing Buffer Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffermap/bytes",
                "title": "bytes",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbuffermap",
            "title": "MDLMeshBufferMap",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Inspecting a Zone",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzone/allocator",
                "title": "allocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzone/capacity",
                "title": "capacity",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferzone",
            "title": "MDLMeshBufferZone",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzonedefault/allocator",
                "title": "allocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzonedefault/capacity",
                "title": "capacity",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferzonedefault",
            "title": "MDLMeshBufferZoneDefault",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Vertex Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/init(name:format:offset:bufferindex:)",
                "title": "- initWithName:format:offset:bufferIndex:",
                "type": "method"
              },
              {
                "title": "Inspecting a Vertex Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/name",
                "title": "name",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/format",
                "title": "format",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/offset",
                "title": "offset",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/bufferindex",
                "title": "bufferIndex",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/initializationvalue",
                "title": "initializationValue",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeanisotropy",
                    "title": "MDLVertexAttributeAnisotropy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributebinormal",
                    "title": "MDLVertexAttributeBinormal",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributebitangent",
                    "title": "MDLVertexAttributeBitangent",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributecolor",
                    "title": "MDLVertexAttributeColor",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeedgecrease",
                    "title": "MDLVertexAttributeEdgeCrease",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributejointindices",
                    "title": "MDLVertexAttributeJointIndices",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributejointweights",
                    "title": "MDLVertexAttributeJointWeights",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributenormal",
                    "title": "MDLVertexAttributeNormal",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeocclusionvalue",
                    "title": "MDLVertexAttributeOcclusionValue",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeposition",
                    "title": "MDLVertexAttributePosition",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeshadingbasisu",
                    "title": "MDLVertexAttributeShadingBasisU",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeshadingbasisv",
                    "title": "MDLVertexAttributeShadingBasisV",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributesubdivisionstencil",
                    "title": "MDLVertexAttributeSubdivisionStencil",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributetangent",
                    "title": "MDLVertexAttributeTangent",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributetexturecoordinate",
                    "title": "MDLVertexAttributeTextureCoordinate",
                    "type": "var"
                  }
                ],
                "path": "/documentation/modelio/vertex-attributes",
                "title": "Vertex Attributes",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/invalid",
                    "title": "MDLVertexFormatInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/packedbit",
                    "title": "MDLVertexFormatPackedBit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharbits",
                    "title": "MDLVertexFormatUCharBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charbits",
                    "title": "MDLVertexFormatCharBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalizedbits",
                    "title": "MDLVertexFormatUCharNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalizedbits",
                    "title": "MDLVertexFormatCharNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortbits",
                    "title": "MDLVertexFormatUShortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortbits",
                    "title": "MDLVertexFormatShortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalizedbits",
                    "title": "MDLVertexFormatUShortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalizedbits",
                    "title": "MDLVertexFormatShortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uintbits",
                    "title": "MDLVertexFormatUIntBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/intbits",
                    "title": "MDLVertexFormatIntBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/halfbits",
                    "title": "MDLVertexFormatHalfBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/floatbits",
                    "title": "MDLVertexFormatFloatBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar",
                    "title": "MDLVertexFormatUChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2",
                    "title": "MDLVertexFormatUChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3",
                    "title": "MDLVertexFormatUChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4",
                    "title": "MDLVertexFormatUChar4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char",
                    "title": "MDLVertexFormatChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2",
                    "title": "MDLVertexFormatChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3",
                    "title": "MDLVertexFormatChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4",
                    "title": "MDLVertexFormatChar4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalized",
                    "title": "MDLVertexFormatUCharNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2normalized",
                    "title": "MDLVertexFormatUChar2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3normalized",
                    "title": "MDLVertexFormatUChar3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4normalized",
                    "title": "MDLVertexFormatUChar4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalized",
                    "title": "MDLVertexFormatCharNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2normalized",
                    "title": "MDLVertexFormatChar2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3normalized",
                    "title": "MDLVertexFormatChar3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4normalized",
                    "title": "MDLVertexFormatChar4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort",
                    "title": "MDLVertexFormatUShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2",
                    "title": "MDLVertexFormatUShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3",
                    "title": "MDLVertexFormatUShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4",
                    "title": "MDLVertexFormatUShort4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short",
                    "title": "MDLVertexFormatShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2",
                    "title": "MDLVertexFormatShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3",
                    "title": "MDLVertexFormatShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4",
                    "title": "MDLVertexFormatShort4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalized",
                    "title": "MDLVertexFormatUShortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2normalized",
                    "title": "MDLVertexFormatUShort2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3normalized",
                    "title": "MDLVertexFormatUShort3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4normalized",
                    "title": "MDLVertexFormatUShort4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalized",
                    "title": "MDLVertexFormatShortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2normalized",
                    "title": "MDLVertexFormatShort2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3normalized",
                    "title": "MDLVertexFormatShort3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4normalized",
                    "title": "MDLVertexFormatShort4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint",
                    "title": "MDLVertexFormatUInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint2",
                    "title": "MDLVertexFormatUInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint3",
                    "title": "MDLVertexFormatUInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint4",
                    "title": "MDLVertexFormatUInt4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int",
                    "title": "MDLVertexFormatInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int2",
                    "title": "MDLVertexFormatInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int3",
                    "title": "MDLVertexFormatInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int4",
                    "title": "MDLVertexFormatInt4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half",
                    "title": "MDLVertexFormatHalf",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half2",
                    "title": "MDLVertexFormatHalf2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half3",
                    "title": "MDLVertexFormatHalf3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half4",
                    "title": "MDLVertexFormatHalf4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float",
                    "title": "MDLVertexFormatFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float2",
                    "title": "MDLVertexFormatFloat2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float3",
                    "title": "MDLVertexFormatFloat3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float4",
                    "title": "MDLVertexFormatFloat4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int1010102normalized",
                    "title": "MDLVertexFormatInt1010102Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint1010102normalized",
                    "title": "MDLVertexFormatUInt1010102Normalized",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlvertexformat",
                "title": "MDLVertexFormat",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/time",
                "title": "time",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlvertexattribute",
            "title": "MDLVertexAttribute",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing Data for a Vertex Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/datastart",
                "title": "dataStart",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/stride",
                "title": "stride",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/format",
                "title": "format",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/buffersize",
                "title": "bufferSize",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/map",
                "title": "map",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlvertexattributedata",
            "title": "MDLVertexAttributeData",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Layout Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexbufferlayout/stride",
                "title": "stride",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexbufferlayout/init(stride:)",
                "title": "- initWithStride:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlvertexbufferlayout",
            "title": "MDLVertexBufferLayout",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Vertex Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/attributes",
                "title": "attributes",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/attributenamed(_:)",
                "title": "- attributeNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/addorreplaceattribute(_:)",
                "title": "- addOrReplaceAttribute:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/setpackedoffsets()",
                "title": "- setPackedOffsets",
                "type": "method"
              },
              {
                "title": "Working with Vertex Buffer Layouts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/layouts",
                "title": "layouts",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/setpackedstrides()",
                "title": "- setPackedStrides",
                "type": "method"
              },
              {
                "title": "Resetting a Vertex Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/reset()",
                "title": "- reset",
                "type": "method"
              },
              {
                "title": "Copying a Vertex Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/init(vertexdescriptor:)",
                "title": "- initWithVertexDescriptor:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/removeattributenamed(_:)",
                "title": "- removeAttributeNamed:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlvertexdescriptor",
            "title": "MDLVertexDescriptor",
            "type": "class"
          },
          {
            "title": "Materials",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a material",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/init(name:scatteringfunction:)",
                "title": "- initWithName:scatteringFunction:",
                "type": "method"
              },
              {
                "title": "Using a material",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/materialface",
                "title": "materialFace",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/name",
                "title": "name",
                "type": "property"
              },
              {
                "title": "Determining a material’s response to lighting",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/scatteringfunction",
                "title": "scatteringFunction",
                "type": "property"
              },
              {
                "title": "Working with individual material properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/propertynamed(_:)",
                "title": "- propertyNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/property(with:)",
                "title": "- propertyWithSemantic:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/properties(with:)",
                "title": "- propertiesWithSemantic:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/setproperty(_:)",
                "title": "- setProperty:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/remove(_:)",
                "title": "- removeProperty:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/removeallproperties()",
                "title": "- removeAllProperties",
                "type": "method"
              },
              {
                "title": "Sharing material properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/base",
                "title": "baseMaterial",
                "type": "property"
              },
              {
                "title": "Accessing material properties with subscript syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/subscript(_:)-323j3",
                "title": "- objectForKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/subscript(_:)-19j2",
                "title": "- objectAtIndexedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/count",
                "title": "count",
                "type": "property"
              },
              {
                "title": "Working with textures using resolvers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/loadtextures(using:)",
                "title": "- loadTexturesUsingResolver:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/resolvetextures(with:)",
                "title": "- resolveTexturesWithResolver:",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/materialwithscnmaterial:",
                "title": "+ materialWithSCNMaterial:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmaterial",
            "title": "MDLMaterial",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Material Property",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:)",
                "title": "- initWithName:semantic:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:string:)",
                "title": "- initWithName:semantic:string:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:url:)",
                "title": "- initWithName:semantic:URL:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:texturesampler:)",
                "title": "- initWithName:semantic:textureSampler:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:color:)",
                "title": "- initWithName:semantic:color:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float:)",
                "title": "- initWithName:semantic:float:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float2:)",
                "title": "- initWithName:semantic:float2:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float3:)",
                "title": "- initWithName:semantic:float3:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float4:)",
                "title": "- initWithName:semantic:float4:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:matrix4x4:)",
                "title": "- initWithName:semantic:matrix4x4:",
                "type": "method"
              },
              {
                "title": "Using a Material Property",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/name",
                "title": "name",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/semantic",
                "title": "semantic",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/type",
                "title": "type",
                "type": "property"
              },
              {
                "title": "Working with a Material Property’s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/stringvalue",
                "title": "stringValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/urlvalue",
                "title": "URLValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/texturesamplervalue",
                "title": "textureSamplerValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/color",
                "title": "color",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/floatvalue",
                "title": "floatValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/float2value",
                "title": "float2Value",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/float3value",
                "title": "float3Value",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/float4value",
                "title": "float4Value",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/matrix4x4",
                "title": "matrix4x4",
                "type": "property"
              },
              {
                "title": "Copying a Material Property",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/setproperties(_:)",
                "title": "- setProperties:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/basecolor",
                    "title": "MDLMaterialSemanticBaseColor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/subsurface",
                    "title": "MDLMaterialSemanticSubsurface",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/metallic",
                    "title": "MDLMaterialSemanticMetallic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specular",
                    "title": "MDLMaterialSemanticSpecular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specularexponent",
                    "title": "MDLMaterialSemanticSpecularExponent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/speculartint",
                    "title": "MDLMaterialSemanticSpecularTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/roughness",
                    "title": "MDLMaterialSemanticRoughness",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropic",
                    "title": "MDLMaterialSemanticAnisotropic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropicrotation",
                    "title": "MDLMaterialSemanticAnisotropicRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheen",
                    "title": "MDLMaterialSemanticSheen",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheentint",
                    "title": "MDLMaterialSemanticSheenTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoat",
                    "title": "MDLMaterialSemanticClearcoat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoatgloss",
                    "title": "MDLMaterialSemanticClearcoatGloss",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/emission",
                    "title": "MDLMaterialSemanticEmission",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/bump",
                    "title": "MDLMaterialSemanticBump",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/opacity",
                    "title": "MDLMaterialSemanticOpacity",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/interfaceindexofrefraction",
                    "title": "MDLMaterialSemanticInterfaceIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/materialindexofrefraction",
                    "title": "MDLMaterialSemanticMaterialIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/objectspacenormal",
                    "title": "MDLMaterialSemanticObjectSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/tangentspacenormal",
                    "title": "MDLMaterialSemanticTangentSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacement",
                    "title": "MDLMaterialSemanticDisplacement",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacementscale",
                    "title": "MDLMaterialSemanticDisplacementScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusion",
                    "title": "MDLMaterialSemanticAmbientOcclusion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusionscale",
                    "title": "MDLMaterialSemanticAmbientOcclusionScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/none",
                    "title": "MDLMaterialSemanticNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/userdefined",
                    "title": "MDLMaterialSemanticUserDefined",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialsemantic",
                "title": "MDLMaterialSemantic",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/none",
                    "title": "MDLMaterialPropertyTypeNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/string",
                    "title": "MDLMaterialPropertyTypeString",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/url",
                    "title": "MDLMaterialPropertyTypeURL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/texture",
                    "title": "MDLMaterialPropertyTypeTexture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/color",
                    "title": "MDLMaterialPropertyTypeColor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float",
                    "title": "MDLMaterialPropertyTypeFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float2",
                    "title": "MDLMaterialPropertyTypeFloat2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float3",
                    "title": "MDLMaterialPropertyTypeFloat3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float4",
                    "title": "MDLMaterialPropertyTypeFloat4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/matrix44",
                    "title": "MDLMaterialPropertyTypeMatrix44",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/buffer",
                    "title": "MDLMaterialPropertyTypeBuffer",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialpropertytype",
                "title": "MDLMaterialPropertyType",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/luminance",
                "title": "luminance",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialproperty",
            "title": "MDLMaterialProperty",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertyconnection/input",
                "title": "input",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertyconnection/output",
                "title": "output",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertyconnection/init(output:input:)",
                "title": "- initWithOutput:input:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialpropertyconnection",
            "title": "MDLMaterialPropertyConnection",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/connections",
                "title": "connections",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/nodes",
                "title": "nodes",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/evaluate()",
                "title": "- evaluate",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/init(nodes:connections:)",
                "title": "- initWithNodes:connections:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialpropertygraph",
            "title": "MDLMaterialPropertyGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/evaluationfunction",
                "title": "evaluationFunction",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/inputs",
                "title": "inputs",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/outputs",
                "title": "outputs",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/init(inputs:outputs:evaluationfunction:)",
                "title": "- initWithInputs:outputs:evaluationFunction:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialpropertynode",
            "title": "MDLMaterialPropertyNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Naming a Scattering Function",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/name",
                "title": "name",
                "type": "property"
              },
              {
                "title": "Working with Shading Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/basecolor",
                "title": "baseColor",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/emission",
                "title": "emission",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/specular",
                "title": "specular",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/materialindexofrefraction",
                "title": "materialIndexOfRefraction",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/interfaceindexofrefraction",
                "title": "interfaceIndexOfRefraction",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/normal",
                "title": "normal",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/ambientocclusion",
                "title": "ambientOcclusion",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/ambientocclusionscale",
                "title": "ambientOcclusionScale",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlscatteringfunction",
            "title": "MDLScatteringFunction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Shading Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/subsurface",
                "title": "subsurface",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/metallic",
                "title": "metallic",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/specularamount",
                "title": "specularAmount",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/speculartint",
                "title": "specularTint",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/roughness",
                "title": "roughness",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/anisotropic",
                "title": "anisotropic",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/anisotropicrotation",
                "title": "anisotropicRotation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/sheen",
                "title": "sheen",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/sheentint",
                "title": "sheenTint",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/clearcoat",
                "title": "clearcoat",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/clearcoatgloss",
                "title": "clearcoatGloss",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/version",
                "title": "version",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction",
            "title": "MDLPhysicallyPlausibleScatteringFunction",
            "type": "class"
          },
          {
            "title": "Textures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Loading Textures from a Bundle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(named:)",
                "title": "+ textureNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(named:bundle:)",
                "title": "+ textureNamed:bundle:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(cubewithimagesnamed:)",
                "title": "+ textureCubeWithImagesNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(cubewithimagesnamed:bundle:)",
                "title": "+ textureCubeWithImagesNamed:bundle:",
                "type": "method"
              },
              {
                "title": "Creating Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(data:topleftorigin:name:dimensions:rowstride:channelcount:channelencoding:iscube:)",
                "title": "- initWithData:topLeftOrigin:name:dimensions:rowStride:channelCount:channelEncoding:isCube:",
                "type": "method"
              },
              {
                "title": "Exporting Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:)",
                "title": "- writeToURL:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:type:)",
                "title": "- writeToURL:type:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/imagefromtexture()",
                "title": "- imageFromTexture",
                "type": "method"
              },
              {
                "title": "Accessing Texture Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithtopleftorigin()",
                "title": "- texelDataWithTopLeftOrigin",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithbottomleftorigin()",
                "title": "- texelDataWithBottomLeftOrigin",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithtopleftorigin(atmiplevel:create:)",
                "title": "- texelDataWithTopLeftOriginAtMipLevel:create:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithbottomleftorigin(atmiplevel:create:)",
                "title": "- texelDataWithBottomLeftOriginAtMipLevel:create:",
                "type": "method"
              },
              {
                "title": "Examining Texture Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/dimensions",
                "title": "dimensions",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/rowstride",
                "title": "rowStride",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/channelcount",
                "title": "channelCount",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/channelencoding",
                "title": "channelEncoding",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/iscube",
                "title": "isCube",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/miplevelcount",
                "title": "mipLevelCount",
                "type": "property"
              },
              {
                "title": "Creating Irradiance Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/irradiancetexturecube(with:name:dimensions:)",
                "title": "+ irradianceTextureCubeWithTexture:name:dimensions:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/irradiancetexturecube(with:name:dimensions:roughness:)",
                "title": "+ irradianceTextureCubeWithTexture:name:dimensions:roughness:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt24",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16",
                    "title": "MDLTextureChannelEncodingFloat16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float32",
                    "title": "MDLTextureChannelEncodingFloat32",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16sr",
                    "title": "MDLTextureChannelEncodingFloat16SR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint24",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint8",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdltexturechannelencoding",
                "title": "MDLTextureChannelEncoding",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/hasalphavalues",
                "title": "hasAlphaValues",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/imagefromtexture(atlevel:)",
                "title": "- imageFromTextureAtLevel:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:level:)",
                "title": "- writeToURL:level:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:type:level:)",
                "title": "- writeToURL:type:level:",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(named:assetresolver:)",
                "title": "+ textureNamed:assetResolver:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdltexture",
            "title": "MDLTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Checkerboard Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/init(divisions:name:dimensions:channelcount:channelencoding:color1:color2:)",
                "title": "- initWithDivisions:name:dimensions:channelCount:channelEncoding:color1:color2:",
                "type": "method"
              },
              {
                "title": "Configuring the Checkerboard Pattern",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/color1",
                "title": "color1",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/color2",
                "title": "color2",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/divisions",
                "title": "divisions",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlcheckerboardtexture",
            "title": "MDLCheckerboardTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Color Swatch Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcolorswatchtexture/init(colorgradientfrom:to:name:texturedimensions:)",
                "title": "- initWithColorGradientFrom:toColor:name:textureDimensions:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcolorswatchtexture/init(colortemperaturegradientfrom:tocolortemperature:name:texturedimensions:)",
                "title": "- initWithColorTemperatureGradientFrom:toColorTemperature:name:textureDimensions:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlcolorswatchtexture",
            "title": "MDLColorSwatchTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnoisetexture/init(scalarnoisewithsmoothness:name:texturedimensions:channelcount:channelencoding:grayscale:)",
                "title": "- initScalarNoiseWithSmoothness:name:textureDimensions:channelCount:channelEncoding:grayscale:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlnoisetexture/init(vectornoisewithsmoothness:name:texturedimensions:channelencoding:)",
                "title": "- initVectorNoiseWithSmoothness:name:textureDimensions:channelEncoding:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnoisetexture/init(cellularnoisewithfrequency:name:texturedimensions:channelencoding:)",
                "title": "- initCellularNoiseWithFrequency:name:textureDimensions:channelEncoding:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlnoisetexture",
            "title": "MDLNoiseTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Normal Map Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnormalmaptexture/init(bygeneratingnormalmapwith:name:smoothness:contrast:)",
                "title": "- initByGeneratingNormalMapWithTexture:name:smoothness:contrast:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlnormalmaptexture",
            "title": "MDLNormalMapTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Sky Cube Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/init(name:channelencoding:texturedimensions:turbidity:sunelevation:upperatmospherescattering:groundalbedo:)",
                "title": "- initWithName:channelEncoding:textureDimensions:turbidity:sunElevation:upperAtmosphereScattering:groundAlbedo:",
                "type": "method"
              },
              {
                "title": "Working with Sky Simulation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/turbidity",
                "title": "turbidity",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/sunelevation",
                "title": "sunElevation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/upperatmospherescattering",
                "title": "upperAtmosphereScattering",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/groundalbedo",
                "title": "groundAlbedo",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/groundcolor",
                "title": "groundColor",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/horizonelevation",
                "title": "horizonElevation",
                "type": "property"
              },
              {
                "title": "Working with Tone Mapping Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/gamma",
                "title": "gamma",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/exposure",
                "title": "exposure",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/brightness",
                "title": "brightness",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/contrast",
                "title": "contrast",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/saturation",
                "title": "saturation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/highdynamicrangecompression",
                "title": "highDynamicRangeCompression",
                "type": "property"
              },
              {
                "title": "Updating Texture Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/update()",
                "title": "- updateTexture",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/sunazimuth",
                "title": "sunAzimuth",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/init(name:channelencoding:texturedimensions:turbidity:sunelevation:sunazimuth:upperatmospherescattering:groundalbedo:)",
                "title": "- initWithName:channelEncoding:textureDimensions:turbidity:sunElevation:sunAzimuth:upperAtmosphereScattering:groundAlbedo:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlskycubetexture",
            "title": "MDLSkyCubeTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a URL Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlurltexture/init(url:name:)",
                "title": "- initWithURL:name:",
                "type": "method"
              },
              {
                "title": "Inspecting the Texture URL",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlurltexture/url",
                "title": "URL",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlurltexture",
            "title": "MDLURLTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing Texture Coordinate Wrap Modes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/swrapmode",
                "title": "sWrapMode",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/twrapmode",
                "title": "tWrapMode",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/rwrapmode",
                "title": "rWrapMode",
                "type": "property"
              },
              {
                "title": "Managing Texture Filter Modes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/minfilter",
                "title": "minFilter",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/magfilter",
                "title": "magFilter",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/mipfilter",
                "title": "mipFilter",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/clamp",
                    "title": "MDLMaterialTextureWrapModeClamp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/repeat",
                    "title": "MDLMaterialTextureWrapModeRepeat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/mirror",
                    "title": "MDLMaterialTextureWrapModeMirror",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturewrapmode",
                "title": "MDLMaterialTextureWrapMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/nearest",
                    "title": "MDLMaterialTextureFilterModeNearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/linear",
                    "title": "MDLMaterialTextureFilterModeLinear",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturefiltermode",
                "title": "MDLMaterialTextureFilterMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/nearest",
                    "title": "MDLMaterialMipMapFilterModeNearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/linear",
                    "title": "MDLMaterialMipMapFilterModeLinear",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialmipmapfiltermode",
                "title": "MDLMaterialMipMapFilterMode",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/mdltexturefilter",
            "title": "MDLTextureFilter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Texture Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexturesampler/texture",
                "title": "texture",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturesampler/hardwarefilter",
                "title": "hardwareFilter",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturesampler/transform",
                "title": "transform",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltexturesampler",
            "title": "MDLTextureSampler",
            "type": "class"
          },
          {
            "title": "Lights",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Working with Lights",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllight/irradiance(atpoint:)",
                "title": "- irradianceAtPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdllight/irradiance(atpoint:colorspace:)",
                "title": "- irradianceAtPoint:colorSpace:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdllight/lighttype",
                "title": "lightType",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllight/colorspace",
                "title": "colorSpace",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/unknown",
                    "title": "MDLLightTypeUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/ambient",
                    "title": "MDLLightTypeAmbient",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/directional",
                    "title": "MDLLightTypeDirectional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/spot",
                    "title": "MDLLightTypeSpot",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/point",
                    "title": "MDLLightTypePoint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/linear",
                    "title": "MDLLightTypeLinear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/discarea",
                    "title": "MDLLightTypeDiscArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/rectangulararea",
                    "title": "MDLLightTypeRectangularArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/superelliptical",
                    "title": "MDLLightTypeSuperElliptical",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/photometric",
                    "title": "MDLLightTypePhotometric",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/probe",
                    "title": "MDLLightTypeProbe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/environment",
                    "title": "MDLLightTypeEnvironment",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdllighttype",
                "title": "MDLLightType",
                "type": "enum"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllight/lightwithscnlight:",
                "title": "+ lightWithSCNLight:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdllight",
            "title": "MDLLight",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing a Light’s Shape",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlarealight/arearadius",
                "title": "areaRadius",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlarealight/aspect",
                "title": "aspect",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlarealight/superellipticpower",
                "title": "superEllipticPower",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlarealight",
            "title": "MDLAreaLight",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Light Probe",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/init(reflectivetexture:irradiancetexture:)",
                "title": "- initWithReflectiveTexture:irradianceTexture:",
                "type": "method"
              },
              {
                "title": "Working with Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/reflectivetexture",
                "title": "reflectiveTexture",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/irradiancetexture",
                "title": "irradianceTexture",
                "type": "property"
              },
              {
                "title": "Working with Spherical Harmonics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/generatesphericalharmonics(fromirradiance:)",
                "title": "- generateSphericalHarmonicsFromIrradiance:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/sphericalharmonicscoefficients",
                "title": "sphericalHarmonicsCoefficients",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/sphericalharmonicslevel",
                "title": "sphericalHarmonicsLevel",
                "type": "property"
              },
              {
                "title": "Generating Light Probes from Scene Contents",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/init(texturesize:forlocation:lightstoconsider:objectstoconsider:reflectivecubemap:irradiancecubemap:)",
                "title": "+ lightProbeWithTextureSize:forLocation:lightsToConsider:objectsToConsider:reflectiveCubemap:irradianceCubemap:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdllightprobe",
            "title": "MDLLightProbe",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Providing Light Probe Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobeirradiancedatasource/boundingbox",
                "title": "boundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobeirradiancedatasource/sphericalharmonicslevel",
                "title": "sphericalHarmonicsLevel",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobeirradiancedatasource/sphericalharmonicscoefficients(atposition:)",
                "title": "- sphericalHarmonicsCoefficientsAtPosition:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdllightprobeirradiancedatasource",
            "title": "MDLLightProbeIrradianceDataSource",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a Photometric Light",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/init(iesprofile:)",
                "title": "- initWithIESProfile:",
                "type": "method"
              },
              {
                "title": "Interpreting the Light Web as a Cube Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/generatecubemap(fromlight:)",
                "title": "- generateCubemapFromLight:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/lightcubemap",
                "title": "lightCubeMap",
                "type": "property"
              },
              {
                "title": "Interpreting the Light Web as Spherical Harmonics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/generatesphericalharmonics(fromlight:)",
                "title": "- generateSphericalHarmonicsFromLight:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/sphericalharmonicscoefficients",
                "title": "sphericalHarmonicsCoefficients",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/sphericalharmonicslevel",
                "title": "sphericalHarmonicsLevel",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/generatetexture(_:)",
                "title": "- generateTexture:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlphotometriclight",
            "title": "MDLPhotometricLight",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing Light Color and Intensity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/color",
                "title": "color",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/lumens",
                "title": "lumens",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/setcolorbytemperature(_:)",
                "title": "- setColorByTemperature:",
                "type": "method"
              },
              {
                "title": "Managing Light Geometry",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/innerconeangle",
                "title": "innerConeAngle",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/outerconeangle",
                "title": "outerConeAngle",
                "type": "property"
              },
              {
                "title": "Managing Attenuation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/attenuationstartdistance",
                "title": "attenuationStartDistance",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/attenuationenddistance",
                "title": "attenuationEndDistance",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlphysicallyplausiblelight",
            "title": "MDLPhysicallyPlausibleLight",
            "type": "class"
          },
          {
            "title": "Cameras",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Managing Camera Position and Orientation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/frameboundingbox(_:setnearandfar:)",
                "title": "- frameBoundingBox:setNearAndFar:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/look(at:)",
                "title": "- lookAt:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/look(at:from:)",
                "title": "- lookAt:from:",
                "type": "method"
              },
              {
                "title": "Managing Camera Perspective",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/projectionmatrix",
                "title": "projectionMatrix",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/projection",
                "title": "projection",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/orthographic",
                    "title": "MDLCameraProjectionOrthographic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/perspective",
                    "title": "MDLCameraProjectionPerspective",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlcameraprojection",
                "title": "MDLCameraProjection",
                "type": "enum"
              },
              {
                "path": "/documentation/modelio/mdlcamera/nearvisibilitydistance",
                "title": "nearVisibilityDistance",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/farvisibilitydistance",
                "title": "farVisibilityDistance",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/fieldofview",
                "title": "fieldOfView",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/ray(to:forviewport:)",
                "title": "- rayTo:forViewPort:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/worldtometersconversionscale",
                "title": "worldToMetersConversionScale",
                "type": "property"
              },
              {
                "title": "Modeling a Physical Lens",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/barreldistortion",
                "title": "barrelDistortion",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/fisheyedistortion",
                "title": "fisheyeDistortion",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/opticalvignetting",
                "title": "opticalVignetting",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/chromaticaberration",
                "title": "chromaticAberration",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/focallength",
                "title": "focalLength",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/fstop",
                "title": "fStop",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/aperturebladecount",
                "title": "apertureBladeCount",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/bokehkernel(withsize:)",
                "title": "- bokehKernelWithSize:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/maximumcircleofconfusion",
                "title": "maximumCircleOfConfusion",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/focusdistance",
                "title": "focusDistance",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/shutteropeninterval",
                "title": "shutterOpenInterval",
                "type": "property"
              },
              {
                "title": "Modeling a Physical Imaging Surface",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensorverticalaperture",
                "title": "sensorVerticalAperture",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensoraspect",
                "title": "sensorAspect",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensorenlargement",
                "title": "sensorEnlargement",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensorshift",
                "title": "sensorShift",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/flash",
                "title": "flash",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/exposure",
                "title": "exposure",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/exposurecompression",
                "title": "exposureCompression",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/camerawithscncamera:",
                "title": "+ cameraWithSCNCamera:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlcamera",
            "title": "MDLCamera",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Modeling Stereoscopic Imaging",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/interpupillarydistance",
                "title": "interPupillaryDistance",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/overlap",
                "title": "overlap",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/leftvergence",
                "title": "leftVergence",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/rightvergence",
                "title": "rightVergence",
                "type": "property"
              },
              {
                "title": "Generating View and Projection Matrices",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/leftviewmatrix",
                "title": "leftViewMatrix",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/leftprojectionmatrix",
                "title": "leftProjectionMatrix",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/rightviewmatrix",
                "title": "rightViewMatrix",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/rightprojectionmatrix",
                "title": "rightProjectionMatrix",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlstereoscopiccamera",
            "title": "MDLStereoscopicCamera",
            "type": "class"
          },
          {
            "title": "Extensible Asset Format Support",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/modelio/mdlcomponent",
            "title": "MDLComponent",
            "type": "protocol"
          },
          {
            "path": "/documentation/modelio/mdlobjectcontainer",
            "title": "MDLObjectContainer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Child Objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/objects",
                "title": "objects",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/add(_:)",
                "title": "- addObject:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/remove(_:)",
                "title": "- removeObject:",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/count",
                "title": "count",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/subscript(_:)",
                "title": "- objectAtIndexedSubscript:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlobjectcontainercomponent",
            "title": "MDLObjectContainerComponent",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Working with Static Transforms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/matrix",
                "title": "matrix",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/setlocaltransform(_:)",
                "title": "- setLocalTransform:",
                "type": "method"
              },
              {
                "title": "Working with Animated Transforms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/minimumtime",
                "title": "minimumTime",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/maximumtime",
                "title": "maximumTime",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/localtransform(attime:)",
                "title": "- localTransformAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/setlocaltransform(_:fortime:)",
                "title": "- setLocalTransform:forTime:",
                "type": "method"
              },
              {
                "title": "Deriving a Global Transformation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/globaltransform(with:attime:)",
                "title": "+ globalTransformWithObject:atTime:",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/keytimes",
                "title": "keyTimes",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/resetstransform",
                "title": "resetsTransform",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformcomponent",
            "title": "MDLTransformComponent",
            "type": "protocol"
          },
          {
            "title": "Volumetric Representations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Voxel Array",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/init(asset:divisions:interiorshells:exteriorshells:patchradius:)",
                "title": "- initWithAsset:divisions:interiorShells:exteriorShells:patchRadius:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/init(asset:divisions:interiornbwidth:exteriornbwidth:patchradius:)",
                "title": "- initWithAsset:divisions:interiorNBWidth:exteriorNBWidth:patchRadius:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/init(data:boundingbox:voxelextent:)",
                "title": "- initWithData:boundingBox:voxelExtent:",
                "type": "method"
              },
              {
                "title": "Examining Voxels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/count",
                "title": "count",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelindexextent",
                "title": "voxelIndexExtent",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelexists(atindex:allowanyx:allowanyy:allowanyz:allowanyshell:)",
                "title": "- voxelExistsAtIndex:allowAnyX:allowAnyY:allowAnyZ:allowAnyShell:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxels(within:)",
                "title": "- voxelsWithinExtent:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelindices()",
                "title": "- voxelIndices",
                "type": "method"
              },
              {
                "title": "Modifying Voxels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelatindex(_:)",
                "title": "- setVoxelAtIndex:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelsfor(_:divisions:interiornbwidth:exteriornbwidth:patchradius:)",
                "title": "- setVoxelsForMesh:divisions:interiorNBWidth:exteriorNBWidth:patchRadius:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelsfor(_:divisions:interiorshells:exteriorshells:patchradius:)",
                "title": "- setVoxelsForMesh:divisions:interiorShells:exteriorShells:patchRadius:",
                "type": "method"
              },
              {
                "title": "Performing Constructive Solid Geometry Operations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/union(with:)",
                "title": "- unionWithVoxels:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/intersect(with:)",
                "title": "- intersectWithVoxels:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/difference(with:)",
                "title": "- differenceWithVoxels:",
                "type": "method"
              },
              {
                "title": "Relating Voxels to Scene Space",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/boundingbox",
                "title": "boundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/index(ofspatiallocation:)",
                "title": "- indexOfSpatialLocation:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/spatiallocation(ofindex:)",
                "title": "- spatialLocationOfIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelboundingbox(atindex:)",
                "title": "- voxelBoundingBoxAtIndex:",
                "type": "method"
              },
              {
                "title": "Creating a Mesh from Voxels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/mesh(using:)",
                "title": "- meshUsingAllocator:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelindex",
                "title": "MDLVoxelIndex",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/maximumextent",
                    "title": "maximumExtent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/minimumextent",
                    "title": "minimumExtent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlvoxelindexextent",
                "title": "MDLVoxelIndexExtent",
                "type": "struct"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/isvalidsignedshellfield",
                "title": "isValidSignedShellField",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/shellfieldexteriorthickness",
                "title": "shellFieldExteriorThickness",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/shellfieldinteriorthickness",
                "title": "shellFieldInteriorThickness",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/coarsemesh()",
                "title": "- coarseMesh",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/coarsemesh(using:)",
                "title": "- coarseMeshUsingAllocator:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/converttosignedshellfield()",
                "title": "- convertToSignedShellField",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/init(asset:divisions:patchradius:)",
                "title": "- initWithAsset:divisions:patchRadius:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelsfor(_:divisions:patchradius:)",
                "title": "- setVoxelsForMesh:divisions:patchRadius:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlvoxelarray",
            "title": "MDLVoxelArray",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/maxbounds",
                    "title": "maxBounds",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/minbounds",
                    "title": "minBounds",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlaxisalignedboundingbox",
                "title": "MDLAxisAlignedBoundingBox",
                "type": "struct"
              },
              {
                "path": "/documentation/modelio/mdlvoxelindex",
                "title": "MDLVoxelIndex",
                "type": "typealias"
              }
            ],
            "path": "/documentation/modelio/model-i-o-data-types",
            "title": "Model I/O Data Types",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/maximumextent",
                    "title": "maximumExtent",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/minimumextent",
                    "title": "minimumExtent",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlvoxelindexextent",
                "title": "MDLVoxelIndexExtent",
                "type": "struct"
              }
            ],
            "path": "/documentation/modelio/model-i-o-structures",
            "title": "Model I/O Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/orthographic",
                    "title": "MDLCameraProjectionOrthographic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/perspective",
                    "title": "MDLCameraProjectionPerspective",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlcameraprojection",
                "title": "MDLCameraProjection",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/points",
                    "title": "MDLGeometryTypePoints",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/lines",
                    "title": "MDLGeometryTypeLines",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/triangles",
                    "title": "MDLGeometryTypeTriangles",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/trianglestrips",
                    "title": "MDLGeometryTypeTriangleStrips",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/quads",
                    "title": "MDLGeometryTypeQuads",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/variabletopology",
                    "title": "MDLGeometryTypeVariableTopology",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlgeometrytype",
                "title": "MDLGeometryType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/invalid",
                    "title": "MDLIndexBitDepthInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.enum.case",
                    "title": "MDLIndexBitDepthUInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.enum.case",
                    "title": "MDLIndexBitDepthUInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.enum.case",
                    "title": "MDLIndexBitDepthUInt32",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.type.property",
                    "title": "MDLIndexBitDepthUint16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.type.property",
                    "title": "MDLIndexBitDepthUint32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.type.property",
                    "title": "MDLIndexBitDepthUint8",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlindexbitdepth",
                "title": "MDLIndexBitDepth",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/unknown",
                    "title": "MDLLightTypeUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/ambient",
                    "title": "MDLLightTypeAmbient",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/directional",
                    "title": "MDLLightTypeDirectional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/spot",
                    "title": "MDLLightTypeSpot",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/point",
                    "title": "MDLLightTypePoint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/linear",
                    "title": "MDLLightTypeLinear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/discarea",
                    "title": "MDLLightTypeDiscArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/rectangulararea",
                    "title": "MDLLightTypeRectangularArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/superelliptical",
                    "title": "MDLLightTypeSuperElliptical",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/photometric",
                    "title": "MDLLightTypePhotometric",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/probe",
                    "title": "MDLLightTypeProbe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/environment",
                    "title": "MDLLightTypeEnvironment",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdllighttype",
                "title": "MDLLightType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialface/back",
                    "title": "MDLMaterialFaceBack",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialface/doublesided",
                    "title": "MDLMaterialFaceDoubleSided",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialface/front",
                    "title": "MDLMaterialFaceFront",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialface",
                "title": "MDLMaterialFace",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/nearest",
                    "title": "MDLMaterialMipMapFilterModeNearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/linear",
                    "title": "MDLMaterialMipMapFilterModeLinear",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialmipmapfiltermode",
                "title": "MDLMaterialMipMapFilterMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/none",
                    "title": "MDLMaterialPropertyTypeNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/string",
                    "title": "MDLMaterialPropertyTypeString",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/url",
                    "title": "MDLMaterialPropertyTypeURL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/texture",
                    "title": "MDLMaterialPropertyTypeTexture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/color",
                    "title": "MDLMaterialPropertyTypeColor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float",
                    "title": "MDLMaterialPropertyTypeFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float2",
                    "title": "MDLMaterialPropertyTypeFloat2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float3",
                    "title": "MDLMaterialPropertyTypeFloat3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float4",
                    "title": "MDLMaterialPropertyTypeFloat4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/matrix44",
                    "title": "MDLMaterialPropertyTypeMatrix44",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/buffer",
                    "title": "MDLMaterialPropertyTypeBuffer",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialpropertytype",
                "title": "MDLMaterialPropertyType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/basecolor",
                    "title": "MDLMaterialSemanticBaseColor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/subsurface",
                    "title": "MDLMaterialSemanticSubsurface",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/metallic",
                    "title": "MDLMaterialSemanticMetallic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specular",
                    "title": "MDLMaterialSemanticSpecular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specularexponent",
                    "title": "MDLMaterialSemanticSpecularExponent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/speculartint",
                    "title": "MDLMaterialSemanticSpecularTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/roughness",
                    "title": "MDLMaterialSemanticRoughness",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropic",
                    "title": "MDLMaterialSemanticAnisotropic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropicrotation",
                    "title": "MDLMaterialSemanticAnisotropicRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheen",
                    "title": "MDLMaterialSemanticSheen",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheentint",
                    "title": "MDLMaterialSemanticSheenTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoat",
                    "title": "MDLMaterialSemanticClearcoat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoatgloss",
                    "title": "MDLMaterialSemanticClearcoatGloss",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/emission",
                    "title": "MDLMaterialSemanticEmission",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/bump",
                    "title": "MDLMaterialSemanticBump",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/opacity",
                    "title": "MDLMaterialSemanticOpacity",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/interfaceindexofrefraction",
                    "title": "MDLMaterialSemanticInterfaceIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/materialindexofrefraction",
                    "title": "MDLMaterialSemanticMaterialIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/objectspacenormal",
                    "title": "MDLMaterialSemanticObjectSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/tangentspacenormal",
                    "title": "MDLMaterialSemanticTangentSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacement",
                    "title": "MDLMaterialSemanticDisplacement",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacementscale",
                    "title": "MDLMaterialSemanticDisplacementScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusion",
                    "title": "MDLMaterialSemanticAmbientOcclusion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusionscale",
                    "title": "MDLMaterialSemanticAmbientOcclusionScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/none",
                    "title": "MDLMaterialSemanticNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/userdefined",
                    "title": "MDLMaterialSemanticUserDefined",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialsemantic",
                "title": "MDLMaterialSemantic",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/nearest",
                    "title": "MDLMaterialTextureFilterModeNearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/linear",
                    "title": "MDLMaterialTextureFilterModeLinear",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturefiltermode",
                "title": "MDLMaterialTextureFilterMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/clamp",
                    "title": "MDLMaterialTextureWrapModeClamp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/repeat",
                    "title": "MDLMaterialTextureWrapModeRepeat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/mirror",
                    "title": "MDLMaterialTextureWrapModeMirror",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturewrapmode",
                "title": "MDLMaterialTextureWrapMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/vertex",
                    "title": "MDLMeshBufferTypeVertex",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/index",
                    "title": "MDLMeshBufferTypeIndex",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/custom",
                    "title": "MDLMeshBufferTypeCustom",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlmeshbuffertype",
                "title": "MDLMeshBufferType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/irradiancedistribution",
                    "title": "MDLProbePlacementIrradianceDistribution",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/uniformgrid",
                    "title": "MDLProbePlacementUniformGrid",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlprobeplacement",
                "title": "MDLProbePlacement",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt24",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.enum.case",
                    "title": "MDLTextureChannelEncodingUInt32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16",
                    "title": "MDLTextureChannelEncodingFloat16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float32",
                    "title": "MDLTextureChannelEncodingFloat32",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16sr",
                    "title": "MDLTextureChannelEncodingFloat16SR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint24",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.type.property",
                    "title": "MDLTextureChannelEncodingUint8",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdltexturechannelencoding",
                "title": "MDLTextureChannelEncoding",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/invalid",
                    "title": "MDLVertexFormatInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/packedbit",
                    "title": "MDLVertexFormatPackedBit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharbits",
                    "title": "MDLVertexFormatUCharBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charbits",
                    "title": "MDLVertexFormatCharBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalizedbits",
                    "title": "MDLVertexFormatUCharNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalizedbits",
                    "title": "MDLVertexFormatCharNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortbits",
                    "title": "MDLVertexFormatUShortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortbits",
                    "title": "MDLVertexFormatShortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalizedbits",
                    "title": "MDLVertexFormatUShortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalizedbits",
                    "title": "MDLVertexFormatShortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uintbits",
                    "title": "MDLVertexFormatUIntBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/intbits",
                    "title": "MDLVertexFormatIntBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/halfbits",
                    "title": "MDLVertexFormatHalfBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/floatbits",
                    "title": "MDLVertexFormatFloatBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar",
                    "title": "MDLVertexFormatUChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2",
                    "title": "MDLVertexFormatUChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3",
                    "title": "MDLVertexFormatUChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4",
                    "title": "MDLVertexFormatUChar4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char",
                    "title": "MDLVertexFormatChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2",
                    "title": "MDLVertexFormatChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3",
                    "title": "MDLVertexFormatChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4",
                    "title": "MDLVertexFormatChar4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalized",
                    "title": "MDLVertexFormatUCharNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2normalized",
                    "title": "MDLVertexFormatUChar2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3normalized",
                    "title": "MDLVertexFormatUChar3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4normalized",
                    "title": "MDLVertexFormatUChar4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalized",
                    "title": "MDLVertexFormatCharNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2normalized",
                    "title": "MDLVertexFormatChar2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3normalized",
                    "title": "MDLVertexFormatChar3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4normalized",
                    "title": "MDLVertexFormatChar4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort",
                    "title": "MDLVertexFormatUShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2",
                    "title": "MDLVertexFormatUShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3",
                    "title": "MDLVertexFormatUShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4",
                    "title": "MDLVertexFormatUShort4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short",
                    "title": "MDLVertexFormatShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2",
                    "title": "MDLVertexFormatShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3",
                    "title": "MDLVertexFormatShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4",
                    "title": "MDLVertexFormatShort4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalized",
                    "title": "MDLVertexFormatUShortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2normalized",
                    "title": "MDLVertexFormatUShort2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3normalized",
                    "title": "MDLVertexFormatUShort3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4normalized",
                    "title": "MDLVertexFormatUShort4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalized",
                    "title": "MDLVertexFormatShortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2normalized",
                    "title": "MDLVertexFormatShort2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3normalized",
                    "title": "MDLVertexFormatShort3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4normalized",
                    "title": "MDLVertexFormatShort4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint",
                    "title": "MDLVertexFormatUInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint2",
                    "title": "MDLVertexFormatUInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint3",
                    "title": "MDLVertexFormatUInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint4",
                    "title": "MDLVertexFormatUInt4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int",
                    "title": "MDLVertexFormatInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int2",
                    "title": "MDLVertexFormatInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int3",
                    "title": "MDLVertexFormatInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int4",
                    "title": "MDLVertexFormatInt4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half",
                    "title": "MDLVertexFormatHalf",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half2",
                    "title": "MDLVertexFormatHalf2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half3",
                    "title": "MDLVertexFormatHalf3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half4",
                    "title": "MDLVertexFormatHalf4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float",
                    "title": "MDLVertexFormatFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float2",
                    "title": "MDLVertexFormatFloat2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float3",
                    "title": "MDLVertexFormatFloat3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float4",
                    "title": "MDLVertexFormatFloat4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int1010102normalized",
                    "title": "MDLVertexFormatInt1010102Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint1010102normalized",
                    "title": "MDLVertexFormatUInt1010102Normalized",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlvertexformat",
                "title": "MDLVertexFormat",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlanimatedvalueinterpolation/constant",
                    "title": "MDLAnimatedValueInterpolationConstant",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlanimatedvalueinterpolation/linear",
                    "title": "MDLAnimatedValueInterpolationLinear",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdlanimatedvalueinterpolation",
                "title": "MDLAnimatedValueInterpolation",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdldataprecision/double",
                    "title": "MDLDataPrecisionDouble",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdldataprecision/float",
                    "title": "MDLDataPrecisionFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdldataprecision/undefined",
                    "title": "MDLDataPrecisionUndefined",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdldataprecision",
                "title": "MDLDataPrecision",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/xyz",
                    "title": "MDLTransformOpRotationOrderXYZ",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/xzy",
                    "title": "MDLTransformOpRotationOrderXZY",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/yxz",
                    "title": "MDLTransformOpRotationOrderYXZ",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/yzx",
                    "title": "MDLTransformOpRotationOrderYZX",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/zxy",
                    "title": "MDLTransformOpRotationOrderZXY",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/zyx",
                    "title": "MDLTransformOpRotationOrderZYX",
                    "type": "case"
                  }
                ],
                "path": "/documentation/modelio/mdltransformoprotationorder",
                "title": "MDLTransformOpRotationOrder",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/model-i-o-enumerations",
            "title": "Model I/O Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeanisotropy",
                "title": "MDLVertexAttributeAnisotropy",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributebinormal",
                "title": "MDLVertexAttributeBinormal",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributebitangent",
                "title": "MDLVertexAttributeBitangent",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributecolor",
                "title": "MDLVertexAttributeColor",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeedgecrease",
                "title": "MDLVertexAttributeEdgeCrease",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributejointindices",
                "title": "MDLVertexAttributeJointIndices",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributejointweights",
                "title": "MDLVertexAttributeJointWeights",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributenormal",
                "title": "MDLVertexAttributeNormal",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeocclusionvalue",
                "title": "MDLVertexAttributeOcclusionValue",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeposition",
                "title": "MDLVertexAttributePosition",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeshadingbasisu",
                "title": "MDLVertexAttributeShadingBasisU",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeshadingbasisv",
                "title": "MDLVertexAttributeShadingBasisV",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributesubdivisionstencil",
                "title": "MDLVertexAttributeSubdivisionStencil",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributetangent",
                "title": "MDLVertexAttributeTangent",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributetexturecoordinate",
                "title": "MDLVertexAttributeTextureCoordinate",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttype3dobject",
                "title": "kUTType3dObject",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypealembic",
                "title": "kUTTypeAlembic",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypepolygon",
                "title": "kUTTypePolygon",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypestereolithography",
                "title": "kUTTypeStereolithography",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypeuniversalscenedescription",
                "title": "kUTTypeUniversalSceneDescription",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypeuniversalscenedescriptionmobile",
                "title": "kUTTypeUniversalSceneDescriptionMobile",
                "type": "var"
              }
            ],
            "path": "/documentation/modelio/model-i-o-constants",
            "title": "Model I/O Constants",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/double4x4value(attime:)",
                "title": "- double4x4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/float4x4value(attime:)",
                "title": "- float4x4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/getdouble4x4array:maxcount:",
                "title": "- getDouble4x4Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/getfloat4x4array:maxcount:",
                "title": "- getFloat4x4Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/resetwithdouble4x4array:attimes:count:",
                "title": "- resetWithDouble4x4Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/resetwithfloat4x4array:attimes:count:",
                "title": "- resetWithFloat4x4Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/setdouble4x4(_:attime:)",
                "title": "- setDouble4x4:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/setfloat4x4(_:attime:)",
                "title": "- setFloat4x4:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedmatrix4x4",
            "title": "MDLAnimatedMatrix4x4",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/doublequaternionvalue(attime:)",
                "title": "- doubleQuaternionAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/floatquaternionvalue(attime:)",
                "title": "- floatQuaternionAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/getdoublequaternionarray:maxcount:",
                "title": "- getDoubleQuaternionArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/getfloatquaternionarray:maxcount:",
                "title": "- getFloatQuaternionArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/resetwithdoublequaternionarray:attimes:count:",
                "title": "- resetWithDoubleQuaternionArray:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/resetwithfloatquaternionarray:attimes:count:",
                "title": "- resetWithFloatQuaternionArray:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/setdoublequaternion(_:attime:)",
                "title": "- setDoubleQuaternion:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/setfloatquaternion(_:attime:)",
                "title": "- setFloatQuaternion:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedquaternion",
            "title": "MDLAnimatedQuaternion",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/elementcount",
                "title": "elementCount",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/getdoublequaternionarray:maxcount:",
                "title": "- getDoubleQuaternionArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/getdoublequaternionarray:maxcount:attime:",
                "title": "- getDoubleQuaternionArray:maxCount:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/getfloatquaternionarray:maxcount:",
                "title": "- getFloatQuaternionArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/getfloatquaternionarray:maxcount:attime:",
                "title": "- getFloatQuaternionArray:maxCount:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/init(elementcount:)",
                "title": "- initWithElementCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/resetwithdoublequaternionarray:count:attimes:count:",
                "title": "- resetWithDoubleQuaternionArray:count:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/resetwithfloatquaternionarray:count:attimes:count:",
                "title": "- resetWithFloatQuaternionArray:count:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/setdoublequaternionarray:count:attime:",
                "title": "- setDoubleQuaternionArray:count:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/setfloatquaternionarray:count:attime:",
                "title": "- setFloatQuaternionArray:count:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedquaternionarray",
            "title": "MDLAnimatedQuaternionArray",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/doublevalue(attime:)",
                "title": "- doubleAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/floatvalue(attime:)",
                "title": "- floatAtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/getdoublearray:maxcount:",
                "title": "- getDoubleArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/getfloatarray:maxcount:",
                "title": "- getFloatArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/resetwithdoublearray:attimes:count:",
                "title": "- resetWithDoubleArray:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/resetwithfloatarray:attimes:count:",
                "title": "- resetWithFloatArray:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/setdouble(_:attime:)",
                "title": "- setDouble:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/setfloat(_:attime:)",
                "title": "- setFloat:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedscalar",
            "title": "MDLAnimatedScalar",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/elementcount",
                "title": "elementCount",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/getdoublearray:maxcount:",
                "title": "- getDoubleArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/getdoublearray:maxcount:attime:",
                "title": "- getDoubleArray:maxCount:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/getfloatarray:maxcount:",
                "title": "- getFloatArray:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/getfloatarray:maxcount:attime:",
                "title": "- getFloatArray:maxCount:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/init(elementcount:)",
                "title": "- initWithElementCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/resetwithdoublearray:count:attimes:count:",
                "title": "- resetWithDoubleArray:count:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/resetwithfloatarray:count:attimes:count:",
                "title": "- resetWithFloatArray:count:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/setdoublearray:count:attime:",
                "title": "- setDoubleArray:count:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/setfloatarray:count:attime:",
                "title": "- setFloatArray:count:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedscalararray",
            "title": "MDLAnimatedScalarArray",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/interpolation",
                "title": "interpolation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/keytimes",
                "title": "keyTimes",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/maximumtime",
                "title": "maximumTime",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/minimumtime",
                "title": "minimumTime",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/precision",
                "title": "precision",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/timesamplecount",
                "title": "timeSampleCount",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/clear()",
                "title": "- clear",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/gettimes:maxcount:",
                "title": "- getTimes:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/isanimated()",
                "title": "- isAnimated",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvalue",
            "title": "MDLAnimatedValue",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/double2value(attime:)",
                "title": "- double2AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/float2value(attime:)",
                "title": "- float2AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/getdouble2array:maxcount:",
                "title": "- getDouble2Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/getfloat2array:maxcount:",
                "title": "- getFloat2Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/resetwithdouble2array:attimes:count:",
                "title": "- resetWithDouble2Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/resetwithfloat2array:attimes:count:",
                "title": "- resetWithFloat2Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/setdouble2(_:attime:)",
                "title": "- setDouble2:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/setfloat2(_:attime:)",
                "title": "- setFloat2:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector2",
            "title": "MDLAnimatedVector2",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/double3value(attime:)",
                "title": "- double3AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/float3value(attime:)",
                "title": "- float3AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/getdouble3array:maxcount:",
                "title": "- getDouble3Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/getfloat3array:maxcount:",
                "title": "- getFloat3Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/resetwithdouble3array:attimes:count:",
                "title": "- resetWithDouble3Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/resetwithfloat3array:attimes:count:",
                "title": "- resetWithFloat3Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/setdouble3(_:attime:)",
                "title": "- setDouble3:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/setfloat3(_:attime:)",
                "title": "- setFloat3:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector3",
            "title": "MDLAnimatedVector3",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/elementcount",
                "title": "elementCount",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/getdouble3array:maxcount:",
                "title": "- getDouble3Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/getdouble3array:maxcount:attime:",
                "title": "- getDouble3Array:maxCount:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/getfloat3array:maxcount:",
                "title": "- getFloat3Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/getfloat3array:maxcount:attime:",
                "title": "- getFloat3Array:maxCount:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/init(elementcount:)",
                "title": "- initWithElementCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/resetwithdouble3array:count:attimes:count:",
                "title": "- resetWithDouble3Array:count:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/resetwithfloat3array:count:attimes:count:",
                "title": "- resetWithFloat3Array:count:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/setdouble3array:count:attime:",
                "title": "- setDouble3Array:count:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/setfloat3array:count:attime:",
                "title": "- setFloat3Array:count:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector3array",
            "title": "MDLAnimatedVector3Array",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/double4value(attime:)",
                "title": "- double4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/float4value(attime:)",
                "title": "- float4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/getdouble4array:maxcount:",
                "title": "- getDouble4Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/getfloat4array:maxcount:",
                "title": "- getFloat4Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/resetwithdouble4array:attimes:count:",
                "title": "- resetWithDouble4Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/resetwithfloat4array:attimes:count:",
                "title": "- resetWithFloat4Array:atTimes:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/setdouble4(_:attime:)",
                "title": "- setDouble4:atTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/setfloat4(_:attime:)",
                "title": "- setFloat4:atTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector4",
            "title": "MDLAnimatedVector4",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/geometrybindtransform",
                "title": "geometryBindTransform",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/jointanimation",
                "title": "jointAnimation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/jointpaths",
                "title": "jointPaths",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/skeleton",
                "title": "skeleton",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlanimationbindcomponent",
            "title": "MDLAnimationBindComponent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlbundleassetresolver/path",
                "title": "path",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlbundleassetresolver/init(bundle:)",
                "title": "- initWithBundle:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlbundleassetresolver",
            "title": "MDLBundleAssetResolver",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/elementcount",
                "title": "elementCount",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/precision",
                "title": "precision",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/clear()",
                "title": "- clear",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/getdouble4x4array:maxcount:",
                "title": "- getDouble4x4Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/getfloat4x4array:maxcount:",
                "title": "- getFloat4x4Array:maxCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/init(elementcount:)",
                "title": "- initWithElementCount:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/setdouble4x4array:count:",
                "title": "- setDouble4x4Array:count:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/setfloat4x4array:count:",
                "title": "- setFloat4x4Array:count:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmatrix4x4array",
            "title": "MDLMatrix4x4Array",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/jointpaths",
                "title": "jointPaths",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/rotations",
                "title": "rotations",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/scales",
                "title": "scales",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/translations",
                "title": "translations",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/init(name:jointpaths:)",
                "title": "- initWithName:jointPaths:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlpackedjointanimation",
            "title": "MDLPackedJointAnimation",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpathassetresolver/path",
                "title": "path",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpathassetresolver/init(path:)",
                "title": "- initWithPath:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlpathassetresolver",
            "title": "MDLPathAssetResolver",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlrelativeassetresolver/asset",
                "title": "asset",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlrelativeassetresolver/init(asset:)",
                "title": "- initWithAsset:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlrelativeassetresolver",
            "title": "MDLRelativeAssetResolver",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/jointbindtransforms",
                "title": "jointBindTransforms",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/jointpaths",
                "title": "jointPaths",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/jointresttransforms",
                "title": "jointRestTransforms",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/init(name:jointpaths:)",
                "title": "- initWithName:jointPaths:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlskeleton",
            "title": "MDLSkeleton",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformmatrixop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformmatrixop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformmatrixop",
            "title": "MDLTransformMatrixOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformorientop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformorientop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformorientop",
            "title": "MDLTransformOrientOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotateop",
            "title": "MDLTransformRotateOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatexop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatexop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotatexop",
            "title": "MDLTransformRotateXOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateyop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateyop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotateyop",
            "title": "MDLTransformRotateYOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatezop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatezop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotatezop",
            "title": "MDLTransformRotateZOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformscaleop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformscaleop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformscaleop",
            "title": "MDLTransformScaleOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/keytimes",
                "title": "keyTimes",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/transformops",
                "title": "transformOps",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addmatrixop(_:inverse:)",
                "title": "- addMatrixOp:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addorientop(_:inverse:)",
                "title": "- addOrientOp:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotateop(_:order:inverse:)",
                "title": "- addRotateOp:order:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotatexop(_:inverse:)",
                "title": "- addRotateXOp:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotateyop(_:inverse:)",
                "title": "- addRotateYOp:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotatezop(_:inverse:)",
                "title": "- addRotateZOp:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addscaleop(_:inverse:)",
                "title": "- addScaleOp:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addtranslateop(_:inverse:)",
                "title": "- addTranslateOp:inverse:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/animatedvalue(withname:)",
                "title": "- animatedValueWithName:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/count()",
                "title": "- count",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/double4x4(attime:)",
                "title": "- double4x4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/float4x4(attime:)",
                "title": "- float4x4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/init()",
                "title": "- init",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdltransformstack",
            "title": "MDLTransformStack",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformtranslateop/animatedvalue",
                "title": "animatedValue",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformtranslateop/name",
                "title": "name",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformtranslateop",
            "title": "MDLTransformTranslateOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlutility/convert(tousdz:writeto:)",
                "title": "+ convertToUSDZ:writeToURL:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlutility",
            "title": "MDLUtility",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlassetresolver/canresolveassetnamed(_:)",
                "title": "- canResolveAssetNamed:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlassetresolver/resolveassetnamed(_:)",
                "title": "- resolveAssetNamed:",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlassetresolver",
            "title": "MDLAssetResolver",
            "type": "protocol"
          },
          {
            "path": "/documentation/modelio/mdljointanimation",
            "title": "MDLJointAnimation",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformop/name",
                "title": "name",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformop/double4x4(attime:)",
                "title": "- double4x4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformop/float4x4(attime:)",
                "title": "- float4x4AtTime:",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformop/isinverseop()",
                "title": "- IsInverseOp",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdltransformop",
            "title": "MDLTransformOp",
            "type": "protocol"
          }
        ],
        "path": "/documentation/modelio",
        "title": "Model I/O",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "3D Asset Basics",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating an Asset",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/canimportfileextension(_:)",
                "title": "class func canImportFileExtension(String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(url:)",
                "title": "init(url: URL)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(bufferallocator:)",
                "title": "init(bufferAllocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(url:vertexdescriptor:bufferallocator:)",
                "title": "init(url: URL?, vertexDescriptor: MDLVertexDescriptor?, bufferAllocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlasset/init(url:vertexdescriptor:bufferallocator:preservetopology:error:)",
                "title": "init(url: URL, vertexDescriptor: MDLVertexDescriptor?, bufferAllocator: (any MDLMeshBufferAllocator)?, preserveTopology: Bool, error: NSErrorPointer)",
                "type": "init"
              },
              {
                "title": "Exporting an Asset",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/canexportfileextension(_:)",
                "title": "class func canExportFileExtension(String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/export(to:)",
                "title": "func export(to: URL) throws",
                "type": "method"
              },
              {
                "title": "Working with Asset Content",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/object(at:)",
                "title": "func object(at: Int) -> MDLObject",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/subscript(_:)",
                "title": "subscript(Int) -> MDLObject?",
                "type": "subscript"
              },
              {
                "path": "/documentation/modelio/mdlasset/count",
                "title": "var count: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/childobjects(of:)",
                "title": "func childObjects(of: AnyClass) -> [MDLObject]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/add(_:)",
                "title": "func add(MDLObject)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/remove(_:)",
                "title": "func remove(MDLObject)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/boundingbox",
                "title": "var boundingBox: MDLAxisAlignedBoundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/boundingbox(attime:)",
                "title": "func boundingBox(atTime: TimeInterval) -> MDLAxisAlignedBoundingBox",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/url",
                "title": "var url: URL?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/bufferallocator",
                "title": "var bufferAllocator: any MDLMeshBufferAllocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/vertexdescriptor",
                "title": "var vertexDescriptor: MDLVertexDescriptor?",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlasset/masters",
                "title": "var masters: any MDLObjectContainerComponent",
                "type": "property"
              },
              {
                "title": "Working with Timed Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/frameinterval",
                "title": "var frameInterval: TimeInterval",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/starttime",
                "title": "var startTime: TimeInterval",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/endtime",
                "title": "var endTime: TimeInterval",
                "type": "property"
              },
              {
                "title": "Working with Lights",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/placelightprobes(withdensity:heuristic:using:)",
                "title": "class func placeLightProbes(withDensity: Float, heuristic: MDLProbePlacement, using: any MDLLightProbeIrradianceDataSource) -> [MDLLightProbe]",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/irradiancedistribution",
                    "title": "case irradianceDistribution",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/uniformgrid",
                    "title": "case uniformGrid",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlprobeplacement",
                "title": "MDLProbePlacement",
                "type": "enum"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/kuttypealembic",
                    "title": "let kUTTypeAlembic: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttype3dobject",
                    "title": "let kUTType3dObject: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttypepolygon",
                    "title": "let kUTTypePolygon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttypestereolithography",
                    "title": "let kUTTypeStereolithography: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/kuttypeuniversalscenedescription",
                    "title": "let kUTTypeUniversalSceneDescription: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/modelio/asset-file-types",
                "title": "Asset File Types",
                "type": "collection"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/animations",
                "title": "var animations: any MDLObjectContainerComponent",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/originals",
                "title": "var originals: any MDLObjectContainerComponent",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/resolver",
                "title": "var resolver: (any MDLAssetResolver)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlasset/upaxis",
                "title": "var upAxis: vector_float3",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlasset/loadtextures()",
                "title": "func loadTextures()",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlasset/object(atpath:)",
                "title": "func object(atPath: String) -> MDLObject",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlasset",
            "title": "MDLAsset",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Customizing Objects with Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/componentconforming(to:)",
                "title": "func componentConforming(to: Protocol) -> (any MDLComponent)?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/setcomponent(_:for:)",
                "title": "func setComponent(any MDLComponent, for: Protocol)",
                "type": "method"
              },
              {
                "title": "Working with Object Hierarchies",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/parent",
                "title": "var parent: MDLObject?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/children",
                "title": "var children: any MDLObjectContainerComponent",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/addchild(_:)",
                "title": "func addChild(MDLObject)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/enumeratechildobjects(of:root:using:stoppointer:)",
                "title": "func enumerateChildObjects(of: AnyClass, root: MDLObject, using: (MDLObject, UnsafeMutablePointer<ObjCBool>) -> Void, stopPointer: UnsafeMutablePointer<ObjCBool>)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/path",
                "title": "var path: String",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/atpath(_:)",
                "title": "func atPath(String) -> MDLObject",
                "type": "method"
              },
              {
                "title": "Working with Objects in Space",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/boundingbox(attime:)",
                "title": "func boundingBox(atTime: TimeInterval) -> MDLAxisAlignedBoundingBox",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/transform",
                "title": "var transform: (any MDLTransformComponent)?",
                "type": "property"
              },
              {
                "title": "Managing Rendering Intent",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/hidden",
                "title": "var hidden: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/instance",
                "title": "var instance: MDLObject?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/path",
                "title": "var path: String",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobject/components",
                "title": "var components: [any MDLComponent]",
                "type": "property"
              },
              {
                "title": "Object Instancing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobject/atpath(_:)",
                "title": "func atPath(String) -> MDLObject",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/enumeratechildobjects(of:root:using:stoppointer:)",
                "title": "func enumerateChildObjects(of: AnyClass, root: MDLObject, using: (MDLObject, UnsafeMutablePointer<ObjCBool>) -> Void, stopPointer: UnsafeMutablePointer<ObjCBool>)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobject/subscript(_:)",
                "title": "subscript(Protocol) -> (any MDLComponent)?",
                "type": "subscript"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/init(maxbounds:minbounds:)",
                    "title": "init(maxBounds: vector_float3, minBounds: vector_float3)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/maxbounds",
                    "title": "var maxBounds: vector_float3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/minbounds",
                    "title": "var minBounds: vector_float3",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlaxisalignedboundingbox",
                "title": "MDLAxisAlignedBoundingBox",
                "type": "struct"
              }
            ],
            "path": "/documentation/modelio/mdlobject",
            "title": "MDLObject",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Transform Object",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdltransform/init(identity:)",
                "title": "convenience init(identity: ())",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(matrix:)",
                "title": "convenience init(matrix: matrix_float4x4)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(transformcomponent:)",
                "title": "convenience init(transformComponent: any MDLTransformComponent)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(matrix:resetstransform:)",
                "title": "convenience init(matrix: matrix_float4x4, resetsTransform: Bool)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltransform/init(transformcomponent:resetstransform:)",
                "title": "convenience init(transformComponent: any MDLTransformComponent, resetsTransform: Bool)",
                "type": "init"
              },
              {
                "title": "Using Factors of a Static Transform",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransform/translation",
                "title": "var translation: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/rotation",
                "title": "var rotation: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/scale",
                "title": "var scale: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/shear",
                "title": "var shear: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransform/setidentity()",
                "title": "func setIdentity()",
                "type": "method"
              },
              {
                "title": "Using Factors of an Animated Transform",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransform/translation(attime:)",
                "title": "func translation(atTime: TimeInterval) -> vector_float3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/settranslation(_:fortime:)",
                "title": "func setTranslation(vector_float3, forTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/rotation(attime:)",
                "title": "func rotation(atTime: TimeInterval) -> vector_float3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/rotationmatrix(attime:)",
                "title": "func rotationMatrix(atTime: TimeInterval) -> matrix_float4x4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setrotation(_:fortime:)",
                "title": "func setRotation(vector_float3, forTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/scale(attime:)",
                "title": "func scale(atTime: TimeInterval) -> vector_float3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setscale(_:fortime:)",
                "title": "func setScale(vector_float3, forTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/shear(attime:)",
                "title": "func shear(atTime: TimeInterval) -> vector_float3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setshear(_:fortime:)",
                "title": "func setShear(vector_float3, forTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransform/setmatrix(_:fortime:)",
                "title": "func setMatrix(matrix_float4x4, forTime: TimeInterval)",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransform/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/modelio/mdltransform",
            "title": "MDLTransform",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Custom Mesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(vertexbuffer:vertexcount:descriptor:submeshes:)",
                "title": "init(vertexBuffer: any MDLMeshBuffer, vertexCount: Int, descriptor: MDLVertexDescriptor, submeshes: [MDLSubmesh])",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(vertexbuffers:vertexcount:descriptor:submeshes:)",
                "title": "init(vertexBuffers: [any MDLMeshBuffer], vertexCount: Int, descriptor: MDLVertexDescriptor, submeshes: [MDLSubmesh])",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(bufferallocator:)",
                "title": "init(bufferAllocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newsubdividedmesh(_:submeshindex:subdivisionlevels:)",
                "title": "class func newSubdividedMesh(MDLMesh, submeshIndex: Int, subdivisionLevels: Int) -> Self?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(meshbysubdividingmesh:submeshindex:subdivisionlevels:allocator:)",
                "title": "init(meshBySubdividingMesh: MDLMesh, submeshIndex: Int32, subdivisionLevels: UInt32, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "title": "Working with Vertex Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/boundingbox",
                "title": "var boundingBox: MDLAxisAlignedBoundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/submeshes",
                "title": "var submeshes: NSMutableArray?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexbuffers",
                "title": "var vertexBuffers: [any MDLMeshBuffer]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexcount",
                "title": "var vertexCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexdescriptor",
                "title": "var vertexDescriptor: MDLVertexDescriptor",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/allocator",
                "title": "var allocator: any MDLMeshBufferAllocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addattribute(withname:format:)",
                "title": "func addAttribute(withName: String, format: MDLVertexFormat)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addattribute(withname:format:type:data:stride:)",
                "title": "func addAttribute(withName: String, format: MDLVertexFormat, type: String, data: Data, stride: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addattribute(withname:format:type:data:stride:time:)",
                "title": "func addAttribute(withName: String, format: MDLVertexFormat, type: String, data: Data, stride: Int, time: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/removeattributenamed(_:)",
                "title": "func removeAttributeNamed(String)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/replaceattributenamed(_:with:)",
                "title": "func replaceAttributeNamed(String, with: MDLVertexAttributeData)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/updateattributenamed(_:with:)",
                "title": "func updateAttributeNamed(String, with: MDLVertexAttributeData)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addunwrappedtexturecoordinates(forattributenamed:)",
                "title": "func addUnwrappedTextureCoordinates(forAttributeNamed: String)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexattributedata(forattributenamed:)",
                "title": "func vertexAttributeData(forAttributeNamed: String) -> MDLVertexAttributeData?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/vertexattributedata(forattributenamed:as:)",
                "title": "func vertexAttributeData(forAttributeNamed: String, as: MDLVertexFormat) -> MDLVertexAttributeData?",
                "type": "method"
              },
              {
                "title": "Generating Geometry Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addnormals(withattributenamed:creasethreshold:)",
                "title": "func addNormals(withAttributeNamed: String?, creaseThreshold: Float)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addtangentbasis(fortexturecoordinateattributenamed:tangentattributenamed:bitangentattributenamed:)",
                "title": "func addTangentBasis(forTextureCoordinateAttributeNamed: String, tangentAttributeNamed: String, bitangentAttributeNamed: String?)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addtangentbasis(fortexturecoordinateattributenamed:normalattributenamed:tangentattributenamed:)",
                "title": "func addTangentBasis(forTextureCoordinateAttributeNamed: String, normalAttributeNamed: String, tangentAttributeNamed: String)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlmesh/makeverticesunique()",
                "title": "func makeVerticesUnique()",
                "type": "method"
              },
              {
                "title": "Generating Ambient Occlusion Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusiontexture(withquality:attenuationfactor:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "func generateAmbientOcclusionTexture(withQuality: Float, attenuationFactor: Float, objectsToConsider: [MDLObject], vertexAttributeNamed: String, materialPropertyNamed: String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusiontexture(withsize:rayspersample:attenuationfactor:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "func generateAmbientOcclusionTexture(withSize: vector_int2, raysPerSample: Int, attenuationFactor: Float, objectsToConsider: [MDLObject], vertexAttributeNamed: String, materialPropertyNamed: String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusionvertexcolors(withquality:attenuationfactor:objectstoconsider:vertexattributenamed:)",
                "title": "func generateAmbientOcclusionVertexColors(withQuality: Float, attenuationFactor: Float, objectsToConsider: [MDLObject], vertexAttributeNamed: String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generateambientocclusionvertexcolors(withrayspersample:attenuationfactor:objectstoconsider:vertexattributenamed:)",
                "title": "func generateAmbientOcclusionVertexColors(withRaysPerSample: Int, attenuationFactor: Float, objectsToConsider: [MDLObject], vertexAttributeNamed: String) -> Bool",
                "type": "method"
              },
              {
                "title": "Generating Light Map Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generatelightmaptexture(withquality:lightstoconsider:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "func generateLightMapTexture(withQuality: Float, lightsToConsider: [MDLLight], objectsToConsider: [MDLObject], vertexAttributeNamed: String, materialPropertyNamed: String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generatelightmaptexture(withtexturesize:lightstoconsider:objectstoconsider:vertexattributenamed:materialpropertynamed:)",
                "title": "func generateLightMapTexture(withTextureSize: vector_int2, lightsToConsider: [MDLLight], objectsToConsider: [MDLObject], vertexAttributeNamed: String, materialPropertyNamed: String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/generatelightmapvertexcolorswithlights(toconsider:objectstoconsider:vertexattributenamed:)",
                "title": "func generateLightMapVertexColorsWithLights(toConsider: [MDLLight], objectsToConsider: [MDLObject], vertexAttributeNamed: String) -> Bool",
                "type": "method"
              },
              {
                "title": "Creating Parametric Meshes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newbox(withdimensions:segments:geometrytype:inwardnormals:allocator:)",
                "title": "class func newBox(withDimensions: vector_float3, segments: vector_uint3, geometryType: MDLGeometryType, inwardNormals: Bool, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newellipsoid(withradii:radialsegments:verticalsegments:geometrytype:inwardnormals:hemisphere:allocator:)",
                "title": "class func newEllipsoid(withRadii: vector_float3, radialSegments: Int, verticalSegments: Int, geometryType: MDLGeometryType, inwardNormals: Bool, hemisphere: Bool, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newcylinder(withheight:radii:radialsegments:verticalsegments:geometrytype:inwardnormals:allocator:)",
                "title": "class func newCylinder(withHeight: Float, radii: vector_float2, radialSegments: Int, verticalSegments: Int, geometryType: MDLGeometryType, inwardNormals: Bool, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newellipticalcone(withheight:radii:radialsegments:verticalsegments:geometrytype:inwardnormals:allocator:)",
                "title": "class func newEllipticalCone(withHeight: Float, radii: vector_float2, radialSegments: Int, verticalSegments: Int, geometryType: MDLGeometryType, inwardNormals: Bool, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newplane(withdimensions:segments:geometrytype:allocator:)",
                "title": "class func newPlane(withDimensions: vector_float2, segments: vector_uint2, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newcapsule(withheight:radii:radialsegments:verticalsegments:hemispheresegments:geometrytype:inwardnormals:allocator:)",
                "title": "class func newCapsule(withHeight: Float, radii: vector_float2, radialSegments: Int, verticalSegments: Int, hemisphereSegments: Int, geometryType: MDLGeometryType, inwardNormals: Bool, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newicosahedron(withradius:inwardnormals:allocator:)",
                "title": "class func newIcosahedron(withRadius: Float, inwardNormals: Bool, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/newicosahedron(withradius:inwardnormals:geometrytype:allocator:)",
                "title": "class func newIcosahedron(withRadius: Float, inwardNormals: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(boxwithextent:segments:inwardnormals:geometrytype:allocator:)",
                "title": "init(boxWithExtent: vector_float3, segments: vector_uint3, inwardNormals: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(spherewithextent:segments:inwardnormals:geometrytype:allocator:)",
                "title": "init(sphereWithExtent: vector_float3, segments: vector_uint2, inwardNormals: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(cylinderwithextent:segments:inwardnormals:topcap:bottomcap:geometrytype:allocator:)",
                "title": "init(cylinderWithExtent: vector_float3, segments: vector_uint2, inwardNormals: Bool, topCap: Bool, bottomCap: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(conewithextent:segments:inwardnormals:cap:geometrytype:allocator:)",
                "title": "init(coneWithExtent: vector_float3, segments: vector_uint2, inwardNormals: Bool, cap: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(planewithextent:segments:geometrytype:allocator:)",
                "title": "init(planeWithExtent: vector_float3, segments: vector_uint2, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(icosahedronwithextent:inwardnormals:geometrytype:allocator:)",
                "title": "init(icosahedronWithExtent: vector_float3, inwardNormals: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(capsulewithextent:cylindersegments:hemispheresegments:inwardnormals:geometrytype:allocator:)",
                "title": "init(capsuleWithExtent: vector_float3, cylinderSegments: vector_uint2, hemisphereSegments: Int32, inwardNormals: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmesh/init(hemispherewithextent:segments:inwardnormals:cap:geometrytype:allocator:)",
                "title": "init(hemisphereWithExtent: vector_float3, segments: vector_uint2, inwardNormals: Bool, cap: Bool, geometryType: MDLGeometryType, allocator: (any MDLMeshBufferAllocator)?)",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmesh/addorthtanbasis(fortexturecoordinateattributenamed:normalattributenamed:tangentattributenamed:)",
                "title": "func addOrthTanBasis(forTextureCoordinateAttributeNamed: String, normalAttributeNamed: String, tangentAttributeNamed: String)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/fliptexturecoordinates(inattributenamed:)",
                "title": "func flipTextureCoordinates(inAttributeNamed: String)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmesh/makeverticesuniqueandreturnerror()",
                "title": "func makeVerticesUniqueAndReturnError() throws",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmesh",
            "title": "MDLMesh",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Submesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(indexbuffer:indexcount:indextype:geometrytype:material:)",
                "title": "init(indexBuffer: any MDLMeshBuffer, indexCount: Int, indexType: MDLIndexBitDepth, geometryType: MDLGeometryType, material: MDLMaterial?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(name:indexbuffer:indexcount:indextype:geometrytype:material:)",
                "title": "init(name: String, indexBuffer: any MDLMeshBuffer, indexCount: Int, indexType: MDLIndexBitDepth, geometryType: MDLGeometryType, material: MDLMaterial?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(name:indexbuffer:indexcount:indextype:geometrytype:material:topology:)",
                "title": "init(name: String, indexBuffer: any MDLMeshBuffer, indexCount: Int, indexType: MDLIndexBitDepth, geometryType: MDLGeometryType, material: MDLMaterial?, topology: MDLSubmeshTopology?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/init(mdlsubmesh:indextype:geometrytype:)",
                "title": "init?(mdlSubmesh: MDLSubmesh, indexType: MDLIndexBitDepth, geometryType: MDLGeometryType)",
                "type": "init"
              },
              {
                "title": "Working with a Submesh’s Index Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indexbuffer",
                "title": "var indexBuffer: any MDLMeshBuffer",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indexcount",
                "title": "var indexCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indextype",
                "title": "var indexType: MDLIndexBitDepth",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/geometrytype",
                "title": "var geometryType: MDLGeometryType",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/topology",
                "title": "var topology: MDLSubmeshTopology?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/indexbuffer(asindextype:)",
                "title": "func indexBuffer(asIndexType: MDLIndexBitDepth) -> any MDLMeshBuffer",
                "type": "method"
              },
              {
                "title": "Associating Materials with a Submesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/material",
                "title": "var material: MDLMaterial?",
                "type": "property"
              },
              {
                "title": "Identifying a Submesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmesh/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/invalid",
                    "title": "case invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.enum.case",
                    "title": "case uInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.enum.case",
                    "title": "case uInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.enum.case",
                    "title": "case uInt32",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.type.property",
                    "title": "static var uint16: MDLIndexBitDepth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.type.property",
                    "title": "static var uint32: MDLIndexBitDepth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.type.property",
                    "title": "static var uint8: MDLIndexBitDepth",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlindexbitdepth",
                "title": "MDLIndexBitDepth",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/points",
                    "title": "case points",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/lines",
                    "title": "case lines",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/triangles",
                    "title": "case triangles",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/trianglestrips",
                    "title": "case triangleStrips",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/quads",
                    "title": "case quads",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/variabletopology",
                    "title": "case variableTopology",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlgeometrytype",
                "title": "MDLGeometryType",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/mdlsubmesh",
            "title": "MDLSubmesh",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying Faces",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/facetopology",
                "title": "var faceTopology: (any MDLMeshBuffer)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/facecount",
                "title": "var faceCount: Int",
                "type": "property"
              },
              {
                "title": "Identifying Creases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/edgecreaseindices",
                "title": "var edgeCreaseIndices: (any MDLMeshBuffer)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/edgecreases",
                "title": "var edgeCreases: (any MDLMeshBuffer)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/edgecreasecount",
                "title": "var edgeCreaseCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/vertexcreaseindices",
                "title": "var vertexCreaseIndices: (any MDLMeshBuffer)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/vertexcreases",
                "title": "var vertexCreases: (any MDLMeshBuffer)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/vertexcreasecount",
                "title": "var vertexCreaseCount: Int",
                "type": "property"
              },
              {
                "title": "Identifying Holes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/holes",
                "title": "var holes: (any MDLMeshBuffer)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/holecount",
                "title": "var holeCount: Int",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlsubmeshtopology/init(submesh:)",
                "title": "init(submesh: MDLSubmesh)",
                "type": "init"
              }
            ],
            "path": "/documentation/modelio/mdlsubmeshtopology",
            "title": "MDLSubmeshTopology",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Naming an Object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnamed/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlnamed",
            "title": "MDLNamed",
            "type": "protocol"
          },
          {
            "title": "Managing Mesh Data",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Working with Data in a Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/fill(_:offset:)",
                "title": "func fill(Data, offset: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/map()",
                "title": "func map() -> MDLMeshBufferMap",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/length",
                "title": "var length: Int",
                "type": "property"
              },
              {
                "title": "Inspecting a Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/allocator",
                "title": "var allocator: any MDLMeshBufferAllocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/zone",
                "title": "var zone: any MDLMeshBufferZone",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffer/type",
                "title": "var type: MDLMeshBufferType",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/vertex",
                    "title": "case vertex",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/index",
                    "title": "case index",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/custom",
                    "title": "case custom",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmeshbuffertype",
                "title": "MDLMeshBufferType",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbuffer",
            "title": "MDLMeshBuffer",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Allocating Mesh Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newzone(_:)",
                "title": "func newZone(Int) -> any MDLMeshBufferZone",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newzoneforbuffers(withsize:andtype:)",
                "title": "func newZoneForBuffers(withSize: [NSNumber], andType: [NSNumber]) -> any MDLMeshBufferZone",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(_:type:)",
                "title": "func newBuffer(Int, type: MDLMeshBufferType) -> any MDLMeshBuffer",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(from:length:type:)",
                "title": "func newBuffer(from: (any MDLMeshBufferZone)?, length: Int, type: MDLMeshBufferType) -> (any MDLMeshBuffer)?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(with:type:)",
                "title": "func newBuffer(with: Data, type: MDLMeshBufferType) -> any MDLMeshBuffer",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferallocator/newbuffer(from:data:type:)",
                "title": "func newBuffer(from: (any MDLMeshBufferZone)?, data: Data, type: MDLMeshBufferType) -> (any MDLMeshBuffer)?",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferallocator",
            "title": "MDLMeshBufferAllocator",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a Buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferdata/init(type:data:)",
                "title": "init(type: MDLMeshBufferType, data: Data?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferdata/init(type:length:)",
                "title": "init(type: MDLMeshBufferType, length: Int)",
                "type": "init"
              },
              {
                "title": "Accessing a Buffer’s Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferdata/data",
                "title": "var data: Data",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferdata",
            "title": "MDLMeshBufferData",
            "type": "class"
          },
          {
            "path": "/documentation/modelio/mdlmeshbufferdataallocator",
            "title": "MDLMeshBufferDataAllocator",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Buffer Map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffermap/init(bytes:deallocator:)",
                "title": "init(bytes: UnsafeMutableRawPointer, deallocator: (() -> Void)?)",
                "type": "init"
              },
              {
                "title": "Accessing Buffer Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbuffermap/bytes",
                "title": "var bytes: UnsafeMutableRawPointer",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbuffermap",
            "title": "MDLMeshBufferMap",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Inspecting a Zone",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzone/allocator",
                "title": "var allocator: any MDLMeshBufferAllocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzone/capacity",
                "title": "var capacity: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferzone",
            "title": "MDLMeshBufferZone",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzonedefault/allocator",
                "title": "var allocator: any MDLMeshBufferAllocator",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmeshbufferzonedefault/capacity",
                "title": "var capacity: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmeshbufferzonedefault",
            "title": "MDLMeshBufferZoneDefault",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Vertex Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/init(name:format:offset:bufferindex:)",
                "title": "init(name: String, format: MDLVertexFormat, offset: Int, bufferIndex: Int)",
                "type": "init"
              },
              {
                "title": "Inspecting a Vertex Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/format",
                "title": "var format: MDLVertexFormat",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/offset",
                "title": "var offset: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/bufferindex",
                "title": "var bufferIndex: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/initializationvalue",
                "title": "var initializationValue: vector_float4",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeanisotropy",
                    "title": "let MDLVertexAttributeAnisotropy: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributebinormal",
                    "title": "let MDLVertexAttributeBinormal: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributebitangent",
                    "title": "let MDLVertexAttributeBitangent: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributecolor",
                    "title": "let MDLVertexAttributeColor: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeedgecrease",
                    "title": "let MDLVertexAttributeEdgeCrease: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributejointindices",
                    "title": "let MDLVertexAttributeJointIndices: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributejointweights",
                    "title": "let MDLVertexAttributeJointWeights: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributenormal",
                    "title": "let MDLVertexAttributeNormal: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeocclusionvalue",
                    "title": "let MDLVertexAttributeOcclusionValue: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeposition",
                    "title": "let MDLVertexAttributePosition: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeshadingbasisu",
                    "title": "let MDLVertexAttributeShadingBasisU: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributeshadingbasisv",
                    "title": "let MDLVertexAttributeShadingBasisV: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributesubdivisionstencil",
                    "title": "let MDLVertexAttributeSubdivisionStencil: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributetangent",
                    "title": "let MDLVertexAttributeTangent: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexattributetexturecoordinate",
                    "title": "let MDLVertexAttributeTextureCoordinate: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/modelio/vertex-attributes",
                "title": "Vertex Attributes",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/invalid",
                    "title": "case invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/packedbit",
                    "title": "case packedBit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharbits",
                    "title": "case uCharBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charbits",
                    "title": "case charBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalizedbits",
                    "title": "case uCharNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalizedbits",
                    "title": "case charNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortbits",
                    "title": "case uShortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortbits",
                    "title": "case shortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalizedbits",
                    "title": "case uShortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalizedbits",
                    "title": "case shortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uintbits",
                    "title": "case uIntBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/intbits",
                    "title": "case intBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/halfbits",
                    "title": "case halfBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/floatbits",
                    "title": "case floatBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar",
                    "title": "case uChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2",
                    "title": "case uChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3",
                    "title": "case uChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4",
                    "title": "case uChar4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char",
                    "title": "case char",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2",
                    "title": "case char2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3",
                    "title": "case char3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4",
                    "title": "case char4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalized",
                    "title": "case uCharNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2normalized",
                    "title": "case uChar2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3normalized",
                    "title": "case uChar3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4normalized",
                    "title": "case uChar4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalized",
                    "title": "case charNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2normalized",
                    "title": "case char2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3normalized",
                    "title": "case char3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4normalized",
                    "title": "case char4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort",
                    "title": "case uShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2",
                    "title": "case uShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3",
                    "title": "case uShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4",
                    "title": "case uShort4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short",
                    "title": "case short",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2",
                    "title": "case short2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3",
                    "title": "case short3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4",
                    "title": "case short4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalized",
                    "title": "case uShortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2normalized",
                    "title": "case uShort2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3normalized",
                    "title": "case uShort3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4normalized",
                    "title": "case uShort4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalized",
                    "title": "case shortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2normalized",
                    "title": "case short2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3normalized",
                    "title": "case short3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4normalized",
                    "title": "case short4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint",
                    "title": "case uInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint2",
                    "title": "case uInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint3",
                    "title": "case uInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint4",
                    "title": "case uInt4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int",
                    "title": "case int",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int2",
                    "title": "case int2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int3",
                    "title": "case int3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int4",
                    "title": "case int4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half",
                    "title": "case half",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half2",
                    "title": "case half2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half3",
                    "title": "case half3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half4",
                    "title": "case half4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float",
                    "title": "case float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float2",
                    "title": "case float2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float3",
                    "title": "case float3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float4",
                    "title": "case float4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int1010102normalized",
                    "title": "case int1010102Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint1010102normalized",
                    "title": "case uInt1010102Normalized",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlvertexformat",
                "title": "MDLVertexFormat",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattribute/time",
                "title": "var time: TimeInterval",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlvertexattribute",
            "title": "MDLVertexAttribute",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing Data for a Vertex Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/datastart",
                "title": "var dataStart: UnsafeMutableRawPointer",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/stride",
                "title": "var stride: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/format",
                "title": "var format: MDLVertexFormat",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/buffersize",
                "title": "var bufferSize: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributedata/map",
                "title": "var map: MDLMeshBufferMap",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlvertexattributedata",
            "title": "MDLVertexAttributeData",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Layout Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexbufferlayout/stride",
                "title": "var stride: Int",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexbufferlayout/init(stride:)",
                "title": "init(stride: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/modelio/mdlvertexbufferlayout",
            "title": "MDLVertexBufferLayout",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Vertex Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/attributes",
                "title": "var attributes: NSMutableArray",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/attributenamed(_:)",
                "title": "func attributeNamed(String) -> MDLVertexAttribute?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/addorreplaceattribute(_:)",
                "title": "func addOrReplaceAttribute(MDLVertexAttribute)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/setpackedoffsets()",
                "title": "func setPackedOffsets()",
                "type": "method"
              },
              {
                "title": "Working with Vertex Buffer Layouts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/layouts",
                "title": "var layouts: NSMutableArray",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/setpackedstrides()",
                "title": "func setPackedStrides()",
                "type": "method"
              },
              {
                "title": "Resetting a Vertex Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/reset()",
                "title": "func reset()",
                "type": "method"
              },
              {
                "title": "Copying a Vertex Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/init(vertexdescriptor:)",
                "title": "init(vertexDescriptor: MDLVertexDescriptor)",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexdescriptor/removeattributenamed(_:)",
                "title": "func removeAttributeNamed(String)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlvertexdescriptor",
            "title": "MDLVertexDescriptor",
            "type": "class"
          },
          {
            "title": "Materials",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a material",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/init(name:scatteringfunction:)",
                "title": "init(name: String, scatteringFunction: MDLScatteringFunction)",
                "type": "init"
              },
              {
                "title": "Using a material",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/materialface",
                "title": "var materialFace: MDLMaterialFace",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "title": "Determining a material’s response to lighting",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/scatteringfunction",
                "title": "var scatteringFunction: MDLScatteringFunction",
                "type": "property"
              },
              {
                "title": "Working with individual material properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/propertynamed(_:)",
                "title": "func propertyNamed(String) -> MDLMaterialProperty?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/property(with:)",
                "title": "func property(with: MDLMaterialSemantic) -> MDLMaterialProperty?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/properties(with:)",
                "title": "func properties(with: MDLMaterialSemantic) -> [MDLMaterialProperty]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/setproperty(_:)",
                "title": "func setProperty(MDLMaterialProperty)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/remove(_:)",
                "title": "func remove(MDLMaterialProperty)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/removeallproperties()",
                "title": "func removeAllProperties()",
                "type": "method"
              },
              {
                "title": "Sharing material properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/base",
                "title": "var base: MDLMaterial?",
                "type": "property"
              },
              {
                "title": "Accessing material properties with subscript syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/subscript(_:)-323j3",
                "title": "subscript(String) -> MDLMaterialProperty?",
                "type": "subscript"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/subscript(_:)-19j2",
                "title": "subscript(Int) -> MDLMaterialProperty?",
                "type": "subscript"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/count",
                "title": "var count: Int",
                "type": "property"
              },
              {
                "title": "Working with textures using resolvers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/loadtextures(using:)",
                "title": "func loadTextures(using: any MDLAssetResolver)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlmaterial/resolvetextures(with:)",
                "title": "func resolveTextures(with: any MDLAssetResolver)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmaterial",
            "title": "MDLMaterial",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Material Property",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:)",
                "title": "init(name: String, semantic: MDLMaterialSemantic)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:string:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, string: String?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:url:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, url: URL?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:texturesampler:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, textureSampler: MDLTextureSampler?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:color:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, color: CGColor)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, float: Float)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float2:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, float2: vector_float2)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float3:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, float3: vector_float3)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:float4:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, float4: vector_float4)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/init(name:semantic:matrix4x4:)",
                "title": "convenience init(name: String, semantic: MDLMaterialSemantic, matrix4x4: matrix_float4x4)",
                "type": "init"
              },
              {
                "title": "Using a Material Property",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/semantic",
                "title": "var semantic: MDLMaterialSemantic",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/type",
                "title": "var type: MDLMaterialPropertyType",
                "type": "property"
              },
              {
                "title": "Working with a Material Property’s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/stringvalue",
                "title": "var stringValue: String?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/urlvalue",
                "title": "var urlValue: URL?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/texturesamplervalue",
                "title": "var textureSamplerValue: MDLTextureSampler?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/color",
                "title": "var color: CGColor?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/floatvalue",
                "title": "var floatValue: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/float2value",
                "title": "var float2Value: vector_float2",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/float3value",
                "title": "var float3Value: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/float4value",
                "title": "var float4Value: vector_float4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/matrix4x4",
                "title": "var matrix4x4: matrix_float4x4",
                "type": "property"
              },
              {
                "title": "Copying a Material Property",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/setproperties(_:)",
                "title": "func setProperties(MDLMaterialProperty)",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/basecolor",
                    "title": "case baseColor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/subsurface",
                    "title": "case subsurface",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/metallic",
                    "title": "case metallic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specular",
                    "title": "case specular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specularexponent",
                    "title": "case specularExponent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/speculartint",
                    "title": "case specularTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/roughness",
                    "title": "case roughness",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropic",
                    "title": "case anisotropic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropicrotation",
                    "title": "case anisotropicRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheen",
                    "title": "case sheen",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheentint",
                    "title": "case sheenTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoat",
                    "title": "case clearcoat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoatgloss",
                    "title": "case clearcoatGloss",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/emission",
                    "title": "case emission",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/bump",
                    "title": "case bump",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/opacity",
                    "title": "case opacity",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/interfaceindexofrefraction",
                    "title": "case interfaceIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/materialindexofrefraction",
                    "title": "case materialIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/objectspacenormal",
                    "title": "case objectSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/tangentspacenormal",
                    "title": "case tangentSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacement",
                    "title": "case displacement",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacementscale",
                    "title": "case displacementScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusion",
                    "title": "case ambientOcclusion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusionscale",
                    "title": "case ambientOcclusionScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/userdefined",
                    "title": "case userDefined",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialsemantic",
                "title": "MDLMaterialSemantic",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/string",
                    "title": "case string",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/url",
                    "title": "case URL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/texture",
                    "title": "case texture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/color",
                    "title": "case color",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float",
                    "title": "case float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float2",
                    "title": "case float2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float3",
                    "title": "case float3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float4",
                    "title": "case float4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/matrix44",
                    "title": "case matrix44",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/buffer",
                    "title": "case buffer",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialpropertytype",
                "title": "MDLMaterialPropertyType",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialproperty/luminance",
                "title": "var luminance: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialproperty",
            "title": "MDLMaterialProperty",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertyconnection/init(output:input:)",
                "title": "init(output: MDLMaterialProperty, input: MDLMaterialProperty)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertyconnection/input",
                "title": "var input: MDLMaterialProperty?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertyconnection/output",
                "title": "var output: MDLMaterialProperty?",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialpropertyconnection",
            "title": "MDLMaterialPropertyConnection",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/init(nodes:connections:)",
                "title": "init(nodes: [MDLMaterialPropertyNode], connections: [MDLMaterialPropertyConnection])",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/connections",
                "title": "var connections: [MDLMaterialPropertyConnection]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/nodes",
                "title": "var nodes: [MDLMaterialPropertyNode]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertygraph/evaluate()",
                "title": "func evaluate()",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialpropertygraph",
            "title": "MDLMaterialPropertyGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/init(inputs:outputs:evaluationfunction:)",
                "title": "init(inputs: [MDLMaterialProperty], outputs: [MDLMaterialProperty], evaluationFunction: (MDLMaterialPropertyNode) -> Void)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/evaluationfunction",
                "title": "var evaluationFunction: (MDLMaterialPropertyNode) -> Void",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/inputs",
                "title": "var inputs: [MDLMaterialProperty]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmaterialpropertynode/outputs",
                "title": "var outputs: [MDLMaterialProperty]",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlmaterialpropertynode",
            "title": "MDLMaterialPropertyNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Naming a Scattering Function",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "title": "Working with Shading Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/basecolor",
                "title": "var baseColor: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/emission",
                "title": "var emission: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/specular",
                "title": "var specular: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/materialindexofrefraction",
                "title": "var materialIndexOfRefraction: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/interfaceindexofrefraction",
                "title": "var interfaceIndexOfRefraction: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/normal",
                "title": "var normal: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/ambientocclusion",
                "title": "var ambientOcclusion: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlscatteringfunction/ambientocclusionscale",
                "title": "var ambientOcclusionScale: MDLMaterialProperty",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlscatteringfunction",
            "title": "MDLScatteringFunction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Shading Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/subsurface",
                "title": "var subsurface: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/metallic",
                "title": "var metallic: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/specularamount",
                "title": "var specularAmount: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/speculartint",
                "title": "var specularTint: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/roughness",
                "title": "var roughness: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/anisotropic",
                "title": "var anisotropic: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/anisotropicrotation",
                "title": "var anisotropicRotation: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/sheen",
                "title": "var sheen: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/sheentint",
                "title": "var sheenTint: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/clearcoat",
                "title": "var clearcoat: MDLMaterialProperty",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/clearcoatgloss",
                "title": "var clearcoatGloss: MDLMaterialProperty",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction/version",
                "title": "var version: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlphysicallyplausiblescatteringfunction",
            "title": "MDLPhysicallyPlausibleScatteringFunction",
            "type": "class"
          },
          {
            "title": "Textures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Loading Textures from a Bundle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(named:)",
                "title": "convenience init?(named: String)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(named:bundle:)",
                "title": "convenience init?(named: String, bundle: Bundle?)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(cubewithimagesnamed:)",
                "title": "convenience init?(cubeWithImagesNamed: [String])",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(cubewithimagesnamed:bundle:)",
                "title": "convenience init?(cubeWithImagesNamed: [String], bundle: Bundle?)",
                "type": "init"
              },
              {
                "title": "Creating Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(data:topleftorigin:name:dimensions:rowstride:channelcount:channelencoding:iscube:)",
                "title": "init(data: Data?, topLeftOrigin: Bool, name: String?, dimensions: vector_int2, rowStride: Int, channelCount: Int, channelEncoding: MDLTextureChannelEncoding, isCube: Bool)",
                "type": "init"
              },
              {
                "title": "Exporting Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:)",
                "title": "func write(to: URL) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:type:)",
                "title": "func write(to: URL, type: CFString) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/imagefromtexture()",
                "title": "func imageFromTexture() -> Unmanaged<CGImage>?",
                "type": "method"
              },
              {
                "title": "Accessing Texture Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithtopleftorigin()",
                "title": "func texelDataWithTopLeftOrigin() -> Data?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithbottomleftorigin()",
                "title": "func texelDataWithBottomLeftOrigin() -> Data?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithtopleftorigin(atmiplevel:create:)",
                "title": "func texelDataWithTopLeftOrigin(atMipLevel: Int, create: Bool) -> Data?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/texeldatawithbottomleftorigin(atmiplevel:create:)",
                "title": "func texelDataWithBottomLeftOrigin(atMipLevel: Int, create: Bool) -> Data?",
                "type": "method"
              },
              {
                "title": "Examining Texture Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/dimensions",
                "title": "var dimensions: vector_int2",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/rowstride",
                "title": "var rowStride: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/channelcount",
                "title": "var channelCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/channelencoding",
                "title": "var channelEncoding: MDLTextureChannelEncoding",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/iscube",
                "title": "var isCube: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexture/miplevelcount",
                "title": "var mipLevelCount: Int",
                "type": "property"
              },
              {
                "title": "Creating Irradiance Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/irradiancetexturecube(with:name:dimensions:)",
                "title": "class func irradianceTextureCube(with: MDLTexture, name: String?, dimensions: vector_int2) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/irradiancetexturecube(with:name:dimensions:roughness:)",
                "title": "class func irradianceTextureCube(with: MDLTexture, name: String?, dimensions: vector_int2, roughness: Float) -> Self",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.enum.case",
                    "title": "case uInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.enum.case",
                    "title": "case uInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.enum.case",
                    "title": "case uInt24",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.enum.case",
                    "title": "case uInt32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16",
                    "title": "case float16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float32",
                    "title": "case float32",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16sr",
                    "title": "case float16SR",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.type.property",
                    "title": "static var uint16: MDLTextureChannelEncoding",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.type.property",
                    "title": "static var uint24: MDLTextureChannelEncoding",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.type.property",
                    "title": "static var uint32: MDLTextureChannelEncoding",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.type.property",
                    "title": "static var uint8: MDLTextureChannelEncoding",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdltexturechannelencoding",
                "title": "MDLTextureChannelEncoding",
                "type": "enum"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdltexture/init(named:assetresolver:)",
                "title": "convenience init?(named: String, assetResolver: any MDLAssetResolver)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/hasalphavalues",
                "title": "var hasAlphaValues: Bool",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexture/imagefromtexture(atlevel:)",
                "title": "func imageFromTexture(atLevel: Int) -> Unmanaged<CGImage>?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:level:)",
                "title": "func write(to: URL, level: Int) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltexture/write(to:type:level:)",
                "title": "func write(to: URL, type: CFString, level: Int) -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdltexture",
            "title": "MDLTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Checkerboard Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/init(divisions:name:dimensions:channelcount:channelencoding:color1:color2:)",
                "title": "init(divisions: Float, name: String?, dimensions: vector_int2, channelCount: Int32, channelEncoding: MDLTextureChannelEncoding, color1: CGColor, color2: CGColor)",
                "type": "init"
              },
              {
                "title": "Configuring the Checkerboard Pattern",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/color1",
                "title": "var color1: CGColor?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/color2",
                "title": "var color2: CGColor?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcheckerboardtexture/divisions",
                "title": "var divisions: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlcheckerboardtexture",
            "title": "MDLCheckerboardTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Color Swatch Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcolorswatchtexture/init(colorgradientfrom:to:name:texturedimensions:)",
                "title": "init(colorGradientFrom: CGColor, to: CGColor, name: String?, textureDimensions: vector_int2)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlcolorswatchtexture/init(colortemperaturegradientfrom:tocolortemperature:name:texturedimensions:)",
                "title": "init(colorTemperatureGradientFrom: Float, toColorTemperature: Float, name: String?, textureDimensions: vector_int2)",
                "type": "init"
              }
            ],
            "path": "/documentation/modelio/mdlcolorswatchtexture",
            "title": "MDLColorSwatchTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnoisetexture/init(scalarnoisewithsmoothness:name:texturedimensions:channelcount:channelencoding:grayscale:)",
                "title": "init(scalarNoiseWithSmoothness: Float, name: String?, textureDimensions: vector_int2, channelCount: Int32, channelEncoding: MDLTextureChannelEncoding, grayscale: Bool)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlnoisetexture/init(vectornoisewithsmoothness:name:texturedimensions:channelencoding:)",
                "title": "init(vectorNoiseWithSmoothness: Float, name: String?, textureDimensions: vector_int2, channelEncoding: MDLTextureChannelEncoding)",
                "type": "init"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnoisetexture/init(cellularnoisewithfrequency:name:texturedimensions:channelencoding:)",
                "title": "init(cellularNoiseWithFrequency: Float, name: String?, textureDimensions: vector_int2, channelEncoding: MDLTextureChannelEncoding)",
                "type": "init"
              }
            ],
            "path": "/documentation/modelio/mdlnoisetexture",
            "title": "MDLNoiseTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Normal Map Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlnormalmaptexture/init(bygeneratingnormalmapwith:name:smoothness:contrast:)",
                "title": "init(byGeneratingNormalMapWith: MDLTexture, name: String?, smoothness: Float, contrast: Float)",
                "type": "init"
              }
            ],
            "path": "/documentation/modelio/mdlnormalmaptexture",
            "title": "MDLNormalMapTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Sky Cube Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/init(name:channelencoding:texturedimensions:turbidity:sunelevation:upperatmospherescattering:groundalbedo:)",
                "title": "init(name: String?, channelEncoding: MDLTextureChannelEncoding, textureDimensions: vector_int2, turbidity: Float, sunElevation: Float, upperAtmosphereScattering: Float, groundAlbedo: Float)",
                "type": "init"
              },
              {
                "title": "Working with Sky Simulation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/turbidity",
                "title": "var turbidity: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/sunelevation",
                "title": "var sunElevation: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/upperatmospherescattering",
                "title": "var upperAtmosphereScattering: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/groundalbedo",
                "title": "var groundAlbedo: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/groundcolor",
                "title": "var groundColor: CGColor?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/horizonelevation",
                "title": "var horizonElevation: Float",
                "type": "property"
              },
              {
                "title": "Working with Tone Mapping Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/gamma",
                "title": "var gamma: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/exposure",
                "title": "var exposure: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/brightness",
                "title": "var brightness: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/contrast",
                "title": "var contrast: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/saturation",
                "title": "var saturation: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/highdynamicrangecompression",
                "title": "var highDynamicRangeCompression: vector_float2",
                "type": "property"
              },
              {
                "title": "Updating Texture Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/update()",
                "title": "func update()",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/init(name:channelencoding:texturedimensions:turbidity:sunelevation:sunazimuth:upperatmospherescattering:groundalbedo:)",
                "title": "init(name: String?, channelEncoding: MDLTextureChannelEncoding, textureDimensions: vector_int2, turbidity: Float, sunElevation: Float, sunAzimuth: Float, upperAtmosphereScattering: Float, groundAlbedo: Float)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskycubetexture/sunazimuth",
                "title": "var sunAzimuth: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlskycubetexture",
            "title": "MDLSkyCubeTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a URL Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlurltexture/init(url:name:)",
                "title": "init(url: URL, name: String?)",
                "type": "init"
              },
              {
                "title": "Inspecting the Texture URL",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlurltexture/url",
                "title": "var url: URL",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlurltexture",
            "title": "MDLURLTexture",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing Texture Coordinate Wrap Modes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/swrapmode",
                "title": "var sWrapMode: MDLMaterialTextureWrapMode",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/twrapmode",
                "title": "var tWrapMode: MDLMaterialTextureWrapMode",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/rwrapmode",
                "title": "var rWrapMode: MDLMaterialTextureWrapMode",
                "type": "property"
              },
              {
                "title": "Managing Texture Filter Modes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/minfilter",
                "title": "var minFilter: MDLMaterialTextureFilterMode",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/magfilter",
                "title": "var magFilter: MDLMaterialTextureFilterMode",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturefilter/mipfilter",
                "title": "var mipFilter: MDLMaterialMipMapFilterMode",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/clamp",
                    "title": "case clamp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/repeat",
                    "title": "case `repeat`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/mirror",
                    "title": "case mirror",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturewrapmode",
                "title": "MDLMaterialTextureWrapMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/nearest",
                    "title": "case nearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturefiltermode",
                "title": "MDLMaterialTextureFilterMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/nearest",
                    "title": "case nearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialmipmapfiltermode",
                "title": "MDLMaterialMipMapFilterMode",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/mdltexturefilter",
            "title": "MDLTextureFilter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Texture Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltexturesampler/texture",
                "title": "var texture: MDLTexture?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturesampler/hardwarefilter",
                "title": "var hardwareFilter: MDLTextureFilter?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltexturesampler/transform",
                "title": "var transform: MDLTransform?",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltexturesampler",
            "title": "MDLTextureSampler",
            "type": "class"
          },
          {
            "title": "Lights",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Working with Lights",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllight/irradiance(atpoint:)",
                "title": "func irradiance(atPoint: vector_float3) -> Unmanaged<CGColor>",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdllight/irradiance(atpoint:colorspace:)",
                "title": "func irradiance(atPoint: vector_float3, colorSpace: CGColorSpace) -> Unmanaged<CGColor>",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdllight/lighttype",
                "title": "var lightType: MDLLightType",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllight/colorspace",
                "title": "var colorSpace: String",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/ambient",
                    "title": "case ambient",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/directional",
                    "title": "case directional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/spot",
                    "title": "case spot",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/point",
                    "title": "case point",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/discarea",
                    "title": "case discArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/rectangulararea",
                    "title": "case rectangularArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/superelliptical",
                    "title": "case superElliptical",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/photometric",
                    "title": "case photometric",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/probe",
                    "title": "case probe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/environment",
                    "title": "case environment",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdllighttype",
                "title": "MDLLightType",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/mdllight",
            "title": "MDLLight",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing a Light’s Shape",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlarealight/arearadius",
                "title": "var areaRadius: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlarealight/aspect",
                "title": "var aspect: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlarealight/superellipticpower",
                "title": "var superEllipticPower: vector_float2",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlarealight",
            "title": "MDLAreaLight",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Light Probe",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/init(reflectivetexture:irradiancetexture:)",
                "title": "init(reflectiveTexture: MDLTexture?, irradianceTexture: MDLTexture?)",
                "type": "init"
              },
              {
                "title": "Working with Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/reflectivetexture",
                "title": "var reflectiveTexture: MDLTexture?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/irradiancetexture",
                "title": "var irradianceTexture: MDLTexture?",
                "type": "property"
              },
              {
                "title": "Working with Spherical Harmonics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/generatesphericalharmonics(fromirradiance:)",
                "title": "func generateSphericalHarmonics(fromIrradiance: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/sphericalharmonicscoefficients",
                "title": "var sphericalHarmonicsCoefficients: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/sphericalharmonicslevel",
                "title": "var sphericalHarmonicsLevel: Int",
                "type": "property"
              },
              {
                "title": "Generating Light Probes from Scene Contents",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobe/init(texturesize:forlocation:lightstoconsider:objectstoconsider:reflectivecubemap:irradiancecubemap:)",
                "title": "init?(textureSize: Int, forLocation: MDLTransform, lightsToConsider: [MDLLight], objectsToConsider: [MDLObject], reflectiveCubemap: MDLTexture?, irradianceCubemap: MDLTexture?)",
                "type": "init"
              }
            ],
            "path": "/documentation/modelio/mdllightprobe",
            "title": "MDLLightProbe",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Providing Light Probe Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdllightprobeirradiancedatasource/boundingbox",
                "title": "var boundingBox: MDLAxisAlignedBoundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobeirradiancedatasource/sphericalharmonicslevel",
                "title": "var sphericalHarmonicsLevel: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdllightprobeirradiancedatasource/sphericalharmonicscoefficients(atposition:)",
                "title": "func sphericalHarmonicsCoefficients(atPosition: vector_float3) -> Data",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdllightprobeirradiancedatasource",
            "title": "MDLLightProbeIrradianceDataSource",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a Photometric Light",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/init(iesprofile:)",
                "title": "init?(iesProfile: URL)",
                "type": "init"
              },
              {
                "title": "Interpreting the Light Web as a Cube Texture",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/generatecubemap(fromlight:)",
                "title": "func generateCubemap(fromLight: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/lightcubemap",
                "title": "var lightCubeMap: MDLTexture?",
                "type": "property"
              },
              {
                "title": "Interpreting the Light Web as Spherical Harmonics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/generatesphericalharmonics(fromlight:)",
                "title": "func generateSphericalHarmonics(fromLight: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/sphericalharmonicscoefficients",
                "title": "var sphericalHarmonicsCoefficients: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/sphericalharmonicslevel",
                "title": "var sphericalHarmonicsLevel: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphotometriclight/generatetexture(_:)",
                "title": "func generateTexture(Int) -> MDLTexture",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlphotometriclight",
            "title": "MDLPhotometricLight",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing Light Color and Intensity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/color",
                "title": "var color: CGColor?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/lumens",
                "title": "var lumens: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/setcolorbytemperature(_:)",
                "title": "func setColorByTemperature(Float)",
                "type": "method"
              },
              {
                "title": "Managing Light Geometry",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/innerconeangle",
                "title": "var innerConeAngle: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/outerconeangle",
                "title": "var outerConeAngle: Float",
                "type": "property"
              },
              {
                "title": "Managing Attenuation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/attenuationstartdistance",
                "title": "var attenuationStartDistance: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlphysicallyplausiblelight/attenuationenddistance",
                "title": "var attenuationEndDistance: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlphysicallyplausiblelight",
            "title": "MDLPhysicallyPlausibleLight",
            "type": "class"
          },
          {
            "title": "Cameras",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Managing Camera Position and Orientation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/frameboundingbox(_:setnearandfar:)",
                "title": "func frameBoundingBox(MDLAxisAlignedBoundingBox, setNearAndFar: Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/look(at:)",
                "title": "func look(at: vector_float3)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/look(at:from:)",
                "title": "func look(at: vector_float3, from: vector_float3)",
                "type": "method"
              },
              {
                "title": "Managing Camera Perspective",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/projectionmatrix",
                "title": "var projectionMatrix: matrix_float4x4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/projection",
                "title": "var projection: MDLCameraProjection",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/orthographic",
                    "title": "case orthographic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/perspective",
                    "title": "case perspective",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlcameraprojection",
                "title": "MDLCameraProjection",
                "type": "enum"
              },
              {
                "path": "/documentation/modelio/mdlcamera/nearvisibilitydistance",
                "title": "var nearVisibilityDistance: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/farvisibilitydistance",
                "title": "var farVisibilityDistance: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/fieldofview",
                "title": "var fieldOfView: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/ray(to:forviewport:)",
                "title": "func ray(to: vector_int2, forViewPort: vector_int2) -> vector_float3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/worldtometersconversionscale",
                "title": "var worldToMetersConversionScale: Float",
                "type": "property"
              },
              {
                "title": "Modeling a Physical Lens",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/barreldistortion",
                "title": "var barrelDistortion: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/fisheyedistortion",
                "title": "var fisheyeDistortion: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/opticalvignetting",
                "title": "var opticalVignetting: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/chromaticaberration",
                "title": "var chromaticAberration: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/focallength",
                "title": "var focalLength: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/fstop",
                "title": "var fStop: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/aperturebladecount",
                "title": "var apertureBladeCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/bokehkernel(withsize:)",
                "title": "func bokehKernel(withSize: vector_int2) -> MDLTexture",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlcamera/maximumcircleofconfusion",
                "title": "var maximumCircleOfConfusion: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/focusdistance",
                "title": "var focusDistance: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/shutteropeninterval",
                "title": "var shutterOpenInterval: TimeInterval",
                "type": "property"
              },
              {
                "title": "Modeling a Physical Imaging Surface",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensorverticalaperture",
                "title": "var sensorVerticalAperture: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensoraspect",
                "title": "var sensorAspect: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensorenlargement",
                "title": "var sensorEnlargement: vector_float2",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/sensorshift",
                "title": "var sensorShift: vector_float2",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/flash",
                "title": "var flash: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/exposure",
                "title": "var exposure: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlcamera/exposurecompression",
                "title": "var exposureCompression: vector_float2",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlcamera",
            "title": "MDLCamera",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Modeling Stereoscopic Imaging",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/interpupillarydistance",
                "title": "var interPupillaryDistance: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/overlap",
                "title": "var overlap: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/leftvergence",
                "title": "var leftVergence: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/rightvergence",
                "title": "var rightVergence: Float",
                "type": "property"
              },
              {
                "title": "Generating View and Projection Matrices",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/leftviewmatrix",
                "title": "var leftViewMatrix: matrix_float4x4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/leftprojectionmatrix",
                "title": "var leftProjectionMatrix: matrix_float4x4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/rightviewmatrix",
                "title": "var rightViewMatrix: matrix_float4x4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlstereoscopiccamera/rightprojectionmatrix",
                "title": "var rightProjectionMatrix: matrix_float4x4",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlstereoscopiccamera",
            "title": "MDLStereoscopicCamera",
            "type": "class"
          },
          {
            "title": "Extensible Asset Format Support",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/modelio/mdlcomponent",
            "title": "MDLComponent",
            "type": "protocol"
          },
          {
            "path": "/documentation/modelio/mdlobjectcontainer",
            "title": "MDLObjectContainer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Child Objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/objects",
                "title": "var objects: [MDLObject]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/add(_:)",
                "title": "func add(MDLObject)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/remove(_:)",
                "title": "func remove(MDLObject)",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/count",
                "title": "var count: Int",
                "type": "property"
              },
              {
                "title": "Subscripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlobjectcontainercomponent/subscript(_:)",
                "title": "subscript(Int) -> MDLObject",
                "type": "subscript"
              }
            ],
            "path": "/documentation/modelio/mdlobjectcontainercomponent",
            "title": "MDLObjectContainerComponent",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Working with Static Transforms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/matrix",
                "title": "var matrix: matrix_float4x4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/setlocaltransform(_:)",
                "title": "func setLocalTransform(matrix_float4x4)",
                "type": "method"
              },
              {
                "title": "Working with Animated Transforms",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/minimumtime",
                "title": "var minimumTime: TimeInterval",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/maximumtime",
                "title": "var maximumTime: TimeInterval",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/localtransform(attime:)",
                "title": "func localTransform(atTime: TimeInterval) -> matrix_float4x4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/setlocaltransform(_:fortime:)",
                "title": "func setLocalTransform(matrix_float4x4, forTime: TimeInterval)",
                "type": "method"
              },
              {
                "title": "Deriving a Global Transformation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/globaltransform(with:attime:)",
                "title": "static func globalTransform(with: MDLObject, atTime: TimeInterval) -> matrix_float4x4",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/keytimes",
                "title": "var keyTimes: [NSNumber]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformcomponent/resetstransform",
                "title": "var resetsTransform: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformcomponent",
            "title": "MDLTransformComponent",
            "type": "protocol"
          },
          {
            "title": "Volumetric Representations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Voxel Array",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/init(asset:divisions:interiorshells:exteriorshells:patchradius:)",
                "title": "init(asset: MDLAsset, divisions: Int32, interiorShells: Int32, exteriorShells: Int32, patchRadius: Float)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/init(asset:divisions:interiornbwidth:exteriornbwidth:patchradius:)",
                "title": "init(asset: MDLAsset, divisions: Int32, interiorNBWidth: Float, exteriorNBWidth: Float, patchRadius: Float)",
                "type": "init"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/init(data:boundingbox:voxelextent:)",
                "title": "init(data: Data, boundingBox: MDLAxisAlignedBoundingBox, voxelExtent: Float)",
                "type": "init"
              },
              {
                "title": "Examining Voxels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/count",
                "title": "var count: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelindexextent",
                "title": "var voxelIndexExtent: MDLVoxelIndexExtent",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelexists(atindex:allowanyx:allowanyy:allowanyz:allowanyshell:)",
                "title": "func voxelExists(atIndex: MDLVoxelIndex, allowAnyX: Bool, allowAnyY: Bool, allowAnyZ: Bool, allowAnyShell: Bool) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxels(within:)",
                "title": "func voxels(within: MDLVoxelIndexExtent) -> Data?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelindices()",
                "title": "func voxelIndices() -> Data?",
                "type": "method"
              },
              {
                "title": "Modifying Voxels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelatindex(_:)",
                "title": "func setVoxelAtIndex(MDLVoxelIndex)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelsfor(_:divisions:interiornbwidth:exteriornbwidth:patchradius:)",
                "title": "func setVoxelsFor(MDLMesh, divisions: Int32, interiorNBWidth: Float, exteriorNBWidth: Float, patchRadius: Float)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelsfor(_:divisions:interiorshells:exteriorshells:patchradius:)",
                "title": "func setVoxelsFor(MDLMesh, divisions: Int32, interiorShells: Int32, exteriorShells: Int32, patchRadius: Float)",
                "type": "method"
              },
              {
                "title": "Performing Constructive Solid Geometry Operations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/union(with:)",
                "title": "func union(with: MDLVoxelArray)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/intersect(with:)",
                "title": "func intersect(with: MDLVoxelArray)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/difference(with:)",
                "title": "func difference(with: MDLVoxelArray)",
                "type": "method"
              },
              {
                "title": "Relating Voxels to Scene Space",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/boundingbox",
                "title": "var boundingBox: MDLAxisAlignedBoundingBox",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/index(ofspatiallocation:)",
                "title": "func index(ofSpatialLocation: vector_float3) -> MDLVoxelIndex",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/spatiallocation(ofindex:)",
                "title": "func spatialLocation(ofIndex: MDLVoxelIndex) -> vector_float3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/voxelboundingbox(atindex:)",
                "title": "func voxelBoundingBox(atIndex: MDLVoxelIndex) -> MDLAxisAlignedBoundingBox",
                "type": "method"
              },
              {
                "title": "Creating a Mesh from Voxels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/mesh(using:)",
                "title": "func mesh(using: (any MDLMeshBufferAllocator)?) -> MDLMesh?",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelindex",
                "title": "MDLVoxelIndex",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/init(minimumextent:maximumextent:)",
                    "title": "init(minimumExtent: MDLVoxelIndex, maximumExtent: MDLVoxelIndex)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/maximumextent",
                    "title": "var maximumExtent: MDLVoxelIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/minimumextent",
                    "title": "var minimumExtent: MDLVoxelIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlvoxelindexextent",
                "title": "MDLVoxelIndexExtent",
                "type": "struct"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/init(asset:divisions:patchradius:)",
                "title": "init(asset: MDLAsset, divisions: Int32, patchRadius: Float)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/isvalidsignedshellfield",
                "title": "var isValidSignedShellField: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/shellfieldexteriorthickness",
                "title": "var shellFieldExteriorThickness: Float",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/shellfieldinteriorthickness",
                "title": "var shellFieldInteriorThickness: Float",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/coarsemesh()",
                "title": "func coarseMesh() -> MDLMesh?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/coarsemesh(using:)",
                "title": "func coarseMesh(using: (any MDLMeshBufferAllocator)?) -> MDLMesh?",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/converttosignedshellfield()",
                "title": "func convertToSignedShellField()",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlvoxelarray/setvoxelsfor(_:divisions:patchradius:)",
                "title": "func setVoxelsFor(MDLMesh, divisions: Int32, patchRadius: Float)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlvoxelarray",
            "title": "MDLVoxelArray",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/init(maxbounds:minbounds:)",
                    "title": "init(maxBounds: vector_float3, minBounds: vector_float3)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/maxbounds",
                    "title": "var maxBounds: vector_float3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlaxisalignedboundingbox/minbounds",
                    "title": "var minBounds: vector_float3",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlaxisalignedboundingbox",
                "title": "MDLAxisAlignedBoundingBox",
                "type": "struct"
              },
              {
                "path": "/documentation/modelio/mdlvoxelindex",
                "title": "MDLVoxelIndex",
                "type": "typealias"
              }
            ],
            "path": "/documentation/modelio/model-i-o-data-types",
            "title": "Model I/O Data Types",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/init(minimumextent:maximumextent:)",
                    "title": "init(minimumExtent: MDLVoxelIndex, maximumExtent: MDLVoxelIndex)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/maximumextent",
                    "title": "var maximumExtent: MDLVoxelIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlvoxelindexextent/minimumextent",
                    "title": "var minimumExtent: MDLVoxelIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlvoxelindexextent",
                "title": "MDLVoxelIndexExtent",
                "type": "struct"
              }
            ],
            "path": "/documentation/modelio/model-i-o-structures",
            "title": "Model I/O Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/orthographic",
                    "title": "case orthographic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/perspective",
                    "title": "case perspective",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlcameraprojection/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlcameraprojection",
                "title": "MDLCameraProjection",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/points",
                    "title": "case points",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/lines",
                    "title": "case lines",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/triangles",
                    "title": "case triangles",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/trianglestrips",
                    "title": "case triangleStrips",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/quads",
                    "title": "case quads",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/variabletopology",
                    "title": "case variableTopology",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlgeometrytype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlgeometrytype",
                "title": "MDLGeometryType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/invalid",
                    "title": "case invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.enum.case",
                    "title": "case uInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.enum.case",
                    "title": "case uInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.enum.case",
                    "title": "case uInt32",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint16-swift.type.property",
                    "title": "static var uint16: MDLIndexBitDepth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint32-swift.type.property",
                    "title": "static var uint32: MDLIndexBitDepth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdlindexbitdepth/uint8-swift.type.property",
                    "title": "static var uint8: MDLIndexBitDepth",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdlindexbitdepth",
                "title": "MDLIndexBitDepth",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/ambient",
                    "title": "case ambient",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/directional",
                    "title": "case directional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/spot",
                    "title": "case spot",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/point",
                    "title": "case point",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/discarea",
                    "title": "case discArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/rectangulararea",
                    "title": "case rectangularArea",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/superelliptical",
                    "title": "case superElliptical",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/photometric",
                    "title": "case photometric",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/probe",
                    "title": "case probe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/environment",
                    "title": "case environment",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdllighttype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdllighttype",
                "title": "MDLLightType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialface/back",
                    "title": "case back",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialface/doublesided",
                    "title": "case doubleSided",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialface/front",
                    "title": "case front",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialface/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialface",
                "title": "MDLMaterialFace",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/nearest",
                    "title": "case nearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialmipmapfiltermode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialmipmapfiltermode",
                "title": "MDLMaterialMipMapFilterMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/string",
                    "title": "case string",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/url",
                    "title": "case URL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/texture",
                    "title": "case texture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/color",
                    "title": "case color",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float",
                    "title": "case float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float2",
                    "title": "case float2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float3",
                    "title": "case float3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/float4",
                    "title": "case float4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/matrix44",
                    "title": "case matrix44",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/buffer",
                    "title": "case buffer",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialpropertytype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialpropertytype",
                "title": "MDLMaterialPropertyType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/basecolor",
                    "title": "case baseColor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/subsurface",
                    "title": "case subsurface",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/metallic",
                    "title": "case metallic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specular",
                    "title": "case specular",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/specularexponent",
                    "title": "case specularExponent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/speculartint",
                    "title": "case specularTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/roughness",
                    "title": "case roughness",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropic",
                    "title": "case anisotropic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/anisotropicrotation",
                    "title": "case anisotropicRotation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheen",
                    "title": "case sheen",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/sheentint",
                    "title": "case sheenTint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoat",
                    "title": "case clearcoat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/clearcoatgloss",
                    "title": "case clearcoatGloss",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/emission",
                    "title": "case emission",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/bump",
                    "title": "case bump",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/opacity",
                    "title": "case opacity",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/interfaceindexofrefraction",
                    "title": "case interfaceIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/materialindexofrefraction",
                    "title": "case materialIndexOfRefraction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/objectspacenormal",
                    "title": "case objectSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/tangentspacenormal",
                    "title": "case tangentSpaceNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacement",
                    "title": "case displacement",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/displacementscale",
                    "title": "case displacementScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusion",
                    "title": "case ambientOcclusion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/ambientocclusionscale",
                    "title": "case ambientOcclusionScale",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/userdefined",
                    "title": "case userDefined",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialsemantic/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialsemantic",
                "title": "MDLMaterialSemantic",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/nearest",
                    "title": "case nearest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturefiltermode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturefiltermode",
                "title": "MDLMaterialTextureFilterMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/clamp",
                    "title": "case clamp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/repeat",
                    "title": "case `repeat`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/mirror",
                    "title": "case mirror",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmaterialtexturewrapmode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmaterialtexturewrapmode",
                "title": "MDLMaterialTextureWrapMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/vertex",
                    "title": "case vertex",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/index",
                    "title": "case index",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/custom",
                    "title": "case custom",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlmeshbuffertype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlmeshbuffertype",
                "title": "MDLMeshBufferType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/irradiancedistribution",
                    "title": "case irradianceDistribution",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/uniformgrid",
                    "title": "case uniformGrid",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlprobeplacement/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlprobeplacement",
                "title": "MDLProbePlacement",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.enum.case",
                    "title": "case uInt8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.enum.case",
                    "title": "case uInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.enum.case",
                    "title": "case uInt24",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.enum.case",
                    "title": "case uInt32",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16",
                    "title": "case float16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float32",
                    "title": "case float32",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/float16sr",
                    "title": "case float16SR",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint16-swift.type.property",
                    "title": "static var uint16: MDLTextureChannelEncoding",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint24-swift.type.property",
                    "title": "static var uint24: MDLTextureChannelEncoding",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint32-swift.type.property",
                    "title": "static var uint32: MDLTextureChannelEncoding",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/modelio/mdltexturechannelencoding/uint8-swift.type.property",
                    "title": "static var uint8: MDLTextureChannelEncoding",
                    "type": "property"
                  }
                ],
                "path": "/documentation/modelio/mdltexturechannelencoding",
                "title": "MDLTextureChannelEncoding",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/invalid",
                    "title": "case invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/packedbit",
                    "title": "case packedBit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharbits",
                    "title": "case uCharBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charbits",
                    "title": "case charBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalizedbits",
                    "title": "case uCharNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalizedbits",
                    "title": "case charNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortbits",
                    "title": "case uShortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortbits",
                    "title": "case shortBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalizedbits",
                    "title": "case uShortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalizedbits",
                    "title": "case shortNormalizedBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uintbits",
                    "title": "case uIntBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/intbits",
                    "title": "case intBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/halfbits",
                    "title": "case halfBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/floatbits",
                    "title": "case floatBits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar",
                    "title": "case uChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2",
                    "title": "case uChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3",
                    "title": "case uChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4",
                    "title": "case uChar4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char",
                    "title": "case char",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2",
                    "title": "case char2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3",
                    "title": "case char3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4",
                    "title": "case char4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ucharnormalized",
                    "title": "case uCharNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar2normalized",
                    "title": "case uChar2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar3normalized",
                    "title": "case uChar3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uchar4normalized",
                    "title": "case uChar4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/charnormalized",
                    "title": "case charNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char2normalized",
                    "title": "case char2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char3normalized",
                    "title": "case char3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/char4normalized",
                    "title": "case char4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort",
                    "title": "case uShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2",
                    "title": "case uShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3",
                    "title": "case uShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4",
                    "title": "case uShort4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short",
                    "title": "case short",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2",
                    "title": "case short2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3",
                    "title": "case short3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4",
                    "title": "case short4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushortnormalized",
                    "title": "case uShortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort2normalized",
                    "title": "case uShort2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort3normalized",
                    "title": "case uShort3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/ushort4normalized",
                    "title": "case uShort4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/shortnormalized",
                    "title": "case shortNormalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short2normalized",
                    "title": "case short2Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short3normalized",
                    "title": "case short3Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/short4normalized",
                    "title": "case short4Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint",
                    "title": "case uInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint2",
                    "title": "case uInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint3",
                    "title": "case uInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint4",
                    "title": "case uInt4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int",
                    "title": "case int",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int2",
                    "title": "case int2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int3",
                    "title": "case int3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int4",
                    "title": "case int4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half",
                    "title": "case half",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half2",
                    "title": "case half2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half3",
                    "title": "case half3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/half4",
                    "title": "case half4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float",
                    "title": "case float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float2",
                    "title": "case float2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float3",
                    "title": "case float3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/float4",
                    "title": "case float4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/int1010102normalized",
                    "title": "case int1010102Normalized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/uint1010102normalized",
                    "title": "case uInt1010102Normalized",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlvertexformat/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlvertexformat",
                "title": "MDLVertexFormat",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlanimatedvalueinterpolation/constant",
                    "title": "case constant",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdlanimatedvalueinterpolation/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdlanimatedvalueinterpolation/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdlanimatedvalueinterpolation",
                "title": "MDLAnimatedValueInterpolation",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdldataprecision/double",
                    "title": "case double",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdldataprecision/float",
                    "title": "case float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdldataprecision/undefined",
                    "title": "case undefined",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdldataprecision/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdldataprecision",
                "title": "MDLDataPrecision",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/xyz",
                    "title": "case XYZ",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/xzy",
                    "title": "case XZY",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/yxz",
                    "title": "case YXZ",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/yzx",
                    "title": "case YZX",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/zxy",
                    "title": "case ZXY",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/zyx",
                    "title": "case ZYX",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/modelio/mdltransformoprotationorder/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/modelio/mdltransformoprotationorder",
                "title": "MDLTransformOpRotationOrder",
                "type": "enum"
              }
            ],
            "path": "/documentation/modelio/model-i-o-enumerations",
            "title": "Model I/O Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeanisotropy",
                "title": "let MDLVertexAttributeAnisotropy: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributebinormal",
                "title": "let MDLVertexAttributeBinormal: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributebitangent",
                "title": "let MDLVertexAttributeBitangent: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributecolor",
                "title": "let MDLVertexAttributeColor: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeedgecrease",
                "title": "let MDLVertexAttributeEdgeCrease: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributejointindices",
                "title": "let MDLVertexAttributeJointIndices: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributejointweights",
                "title": "let MDLVertexAttributeJointWeights: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributenormal",
                "title": "let MDLVertexAttributeNormal: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeocclusionvalue",
                "title": "let MDLVertexAttributeOcclusionValue: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeposition",
                "title": "let MDLVertexAttributePosition: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeshadingbasisu",
                "title": "let MDLVertexAttributeShadingBasisU: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributeshadingbasisv",
                "title": "let MDLVertexAttributeShadingBasisV: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributesubdivisionstencil",
                "title": "let MDLVertexAttributeSubdivisionStencil: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributetangent",
                "title": "let MDLVertexAttributeTangent: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/mdlvertexattributetexturecoordinate",
                "title": "let MDLVertexAttributeTextureCoordinate: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttype3dobject",
                "title": "let kUTType3dObject: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypealembic",
                "title": "let kUTTypeAlembic: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypepolygon",
                "title": "let kUTTypePolygon: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypestereolithography",
                "title": "let kUTTypeStereolithography: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypeuniversalscenedescription",
                "title": "let kUTTypeUniversalSceneDescription: String",
                "type": "var"
              },
              {
                "path": "/documentation/modelio/kuttypeuniversalscenedescriptionmobile",
                "title": "let kUTTypeUniversalSceneDescriptionMobile: String",
                "type": "var"
              }
            ],
            "path": "/documentation/modelio/model-i-o-constants",
            "title": "Model I/O Constants",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/double4x4array",
                "title": "var double4x4Array: [double4x4]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/float4x4array",
                "title": "var float4x4Array: [float4x4]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/double4x4value(attime:)",
                "title": "func double4x4Value(atTime: TimeInterval) -> matrix_double4x4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/float4x4value(attime:)",
                "title": "func float4x4Value(atTime: TimeInterval) -> matrix_float4x4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/reset(double4array:attimes:)",
                "title": "func reset(double4Array: [double4x4], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/reset(float4x4array:attimes:)",
                "title": "func reset(float4x4Array: [float4x4], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/setdouble4x4(_:attime:)",
                "title": "func setDouble4x4(matrix_double4x4, atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedmatrix4x4/setfloat4x4(_:attime:)",
                "title": "func setFloat4x4(matrix_float4x4, atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedmatrix4x4",
            "title": "MDLAnimatedMatrix4x4",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/doublequaternionarray",
                "title": "var doubleQuaternionArray: [simd_quatd]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/floatquaternionarray",
                "title": "var floatQuaternionArray: [simd_quatf]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/doublequaternionvalue(attime:)",
                "title": "func doubleQuaternionValue(atTime: TimeInterval) -> simd_quatd",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/floatquaternionvalue(attime:)",
                "title": "func floatQuaternionValue(atTime: TimeInterval) -> simd_quatf",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/reset(doublequaternionarray:attimes:)",
                "title": "func reset(doubleQuaternionArray: [simd_quatd], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/reset(floatquaternionarray:attimes:)",
                "title": "func reset(floatQuaternionArray: [simd_quatf], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/setdoublequaternion(_:attime:)",
                "title": "func setDoubleQuaternion(simd_quatd, atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternion/setfloatquaternion(_:attime:)",
                "title": "func setFloatQuaternion(simd_quatf, atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedquaternion",
            "title": "MDLAnimatedQuaternion",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/init(elementcount:)",
                "title": "init(elementCount: Int)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/doublequaternionarray",
                "title": "var doubleQuaternionArray: [simd_quatd]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/elementcount",
                "title": "var elementCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/floatquaternionarray",
                "title": "var floatQuaternionArray: [simd_quatf]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/doublequaternionarray(attime:)",
                "title": "func doubleQuaternionArray(atTime: TimeInterval) -> [simd_quatd]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/floatquaternionarray(attime:)",
                "title": "func floatQuaternionArray(atTime: TimeInterval) -> [simd_quatf]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/reset(doublequaternionarray:attimes:)",
                "title": "func reset(doubleQuaternionArray: [simd_quatd], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/reset(floatquaternionarray:attimes:)",
                "title": "func reset(floatQuaternionArray: [simd_quatf], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/set(doublequaternionarray:attime:)",
                "title": "func set(doubleQuaternionArray: [simd_quatd], atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedquaternionarray/set(floatquaternionarray:attime:)",
                "title": "func set(floatQuaternionArray: [simd_quatf], atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedquaternionarray",
            "title": "MDLAnimatedQuaternionArray",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/doublearray",
                "title": "var doubleArray: [Double]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/floatarray",
                "title": "var floatArray: [Float]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/doublevalue(attime:)",
                "title": "func doubleValue(atTime: TimeInterval) -> Double",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/floatvalue(attime:)",
                "title": "func floatValue(atTime: TimeInterval) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/reset(doublearray:attimes:)",
                "title": "func reset(doubleArray: [Double], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/reset(floatarray:attimes:)",
                "title": "func reset(floatArray: [Float], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/setdouble(_:attime:)",
                "title": "func setDouble(Double, atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalar/setfloat(_:attime:)",
                "title": "func setFloat(Float, atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedscalar",
            "title": "MDLAnimatedScalar",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/init(elementcount:)",
                "title": "init(elementCount: Int)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/doublearray",
                "title": "var doubleArray: [Double]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/elementcount",
                "title": "var elementCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/floatarray",
                "title": "var floatArray: [Float]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/doublearray(attime:)",
                "title": "func doubleArray(atTime: TimeInterval) -> [Double]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/floatarray(attime:)",
                "title": "func floatArray(atTime: TimeInterval) -> [Float]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/reset(doublearray:attimes:)",
                "title": "func reset(doubleArray: [Double], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/reset(floatarray:attimes:)",
                "title": "func reset(floatArray: [Float], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/set(doublearray:attime:)",
                "title": "func set(doubleArray: [Double], atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedscalararray/set(floatarray:attime:)",
                "title": "func set(floatArray: [Float], atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedscalararray",
            "title": "MDLAnimatedScalarArray",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/interpolation",
                "title": "var interpolation: MDLAnimatedValueInterpolation",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/keytimes",
                "title": "var keyTimes: [NSNumber]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/maximumtime",
                "title": "var maximumTime: TimeInterval",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/minimumtime",
                "title": "var minimumTime: TimeInterval",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/precision",
                "title": "var precision: MDLDataPrecision",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/timesamplecount",
                "title": "var timeSampleCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/times",
                "title": "var times: [TimeInterval]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/clear()",
                "title": "func clear()",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvalue/isanimated()",
                "title": "func isAnimated() -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvalue",
            "title": "MDLAnimatedValue",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/double2array",
                "title": "var double2Array: [SIMD2<Double>]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/float2array",
                "title": "var float2Array: [SIMD2<Float>]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/double2value(attime:)",
                "title": "func double2Value(atTime: TimeInterval) -> vector_double2",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/float2value(attime:)",
                "title": "func float2Value(atTime: TimeInterval) -> vector_float2",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/reset(double2array:attimes:)",
                "title": "func reset(double2Array: [SIMD2<Double>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/reset(float2array:attimes:)",
                "title": "func reset(float2Array: [SIMD2<Float>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/setdouble2(_:attime:)",
                "title": "func setDouble2(vector_double2, atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector2/setfloat2(_:attime:)",
                "title": "func setFloat2(vector_float2, atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector2",
            "title": "MDLAnimatedVector2",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/double3array",
                "title": "var double3Array: [SIMD3<Double>]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/float3array",
                "title": "var float3Array: [SIMD3<Float>]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/double3value(attime:)",
                "title": "func double3Value(atTime: TimeInterval) -> vector_double3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/float3value(attime:)",
                "title": "func float3Value(atTime: TimeInterval) -> vector_float3",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/reset(double3array:attimes:)",
                "title": "func reset(double3Array: [SIMD3<Double>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/reset(float3array:attimes:)",
                "title": "func reset(float3Array: [SIMD3<Float>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/setdouble3(_:attime:)",
                "title": "func setDouble3(vector_double3, atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3/setfloat3(_:attime:)",
                "title": "func setFloat3(vector_float3, atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector3",
            "title": "MDLAnimatedVector3",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/init(elementcount:)",
                "title": "init(elementCount: Int)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/double3array",
                "title": "var double3Array: [SIMD3<Double>]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/elementcount",
                "title": "var elementCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/float3array",
                "title": "var float3Array: [SIMD3<Float>]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/double3array(attime:)",
                "title": "func double3Array(atTime: TimeInterval) -> [SIMD3<Double>]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/float3array(attime:)",
                "title": "func float3Array(atTime: TimeInterval) -> [SIMD3<Float>]",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/reset(double3array:attimes:)",
                "title": "func reset(double3Array: [SIMD3<Double>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/reset(float3array:attimes:)",
                "title": "func reset(float3Array: [SIMD3<Float>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/set(double3array:attime:)",
                "title": "func set(double3Array: [SIMD3<Double>], atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector3array/set(float3array:attime:)",
                "title": "func set(float3Array: [SIMD3<Float>], atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector3array",
            "title": "MDLAnimatedVector3Array",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/double4array",
                "title": "var double4Array: [SIMD4<Double>]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/float4array",
                "title": "var float4Array: [SIMD4<Float>]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/double4value(attime:)",
                "title": "func double4Value(atTime: TimeInterval) -> vector_double4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/float4value(attime:)",
                "title": "func float4Value(atTime: TimeInterval) -> vector_float4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/reset(double4array:attimes:)",
                "title": "func reset(double4Array: [SIMD4<Double>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/reset(float4array:attimes:)",
                "title": "func reset(float4Array: [SIMD4<Float>], atTimes: [TimeInterval])",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/setdouble4(_:attime:)",
                "title": "func setDouble4(vector_double4, atTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlanimatedvector4/setfloat4(_:attime:)",
                "title": "func setFloat4(vector_float4, atTime: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlanimatedvector4",
            "title": "MDLAnimatedVector4",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/geometrybindtransform",
                "title": "var geometryBindTransform: matrix_double4x4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/jointanimation",
                "title": "var jointAnimation: (any MDLJointAnimation)?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/jointpaths",
                "title": "var jointPaths: [String]?",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlanimationbindcomponent/skeleton",
                "title": "var skeleton: MDLSkeleton?",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlanimationbindcomponent",
            "title": "MDLAnimationBindComponent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlbundleassetresolver/init(bundle:)",
                "title": "init(bundle: String)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlbundleassetresolver/path",
                "title": "var path: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlbundleassetresolver",
            "title": "MDLBundleAssetResolver",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/init(elementcount:)",
                "title": "init(elementCount: Int)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/double4x4array",
                "title": "var double4x4Array: [double4x4]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/elementcount",
                "title": "var elementCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/float4x4array",
                "title": "var float4x4Array: [float4x4]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/precision",
                "title": "var precision: MDLDataPrecision",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlmatrix4x4array/clear()",
                "title": "func clear()",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlmatrix4x4array",
            "title": "MDLMatrix4x4Array",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/init(name:jointpaths:)",
                "title": "init(name: String, jointPaths: [String])",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/jointpaths",
                "title": "var jointPaths: [String]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/rotations",
                "title": "var rotations: MDLAnimatedQuaternionArray",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/scales",
                "title": "var scales: MDLAnimatedVector3Array",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlpackedjointanimation/translations",
                "title": "var translations: MDLAnimatedVector3Array",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlpackedjointanimation",
            "title": "MDLPackedJointAnimation",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpathassetresolver/init(path:)",
                "title": "init(path: String)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlpathassetresolver/path",
                "title": "var path: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlpathassetresolver",
            "title": "MDLPathAssetResolver",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlrelativeassetresolver/init(asset:)",
                "title": "init(asset: MDLAsset)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlrelativeassetresolver/asset",
                "title": "var asset: MDLAsset?",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlrelativeassetresolver",
            "title": "MDLRelativeAssetResolver",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/init(name:jointpaths:)",
                "title": "init(name: String, jointPaths: [String])",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/jointbindtransforms",
                "title": "var jointBindTransforms: MDLMatrix4x4Array",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/jointpaths",
                "title": "var jointPaths: [String]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdlskeleton/jointresttransforms",
                "title": "var jointRestTransforms: MDLMatrix4x4Array",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdlskeleton",
            "title": "MDLSkeleton",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformmatrixop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedMatrix4x4",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformmatrixop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformmatrixop",
            "title": "MDLTransformMatrixOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformorientop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedQuaternion",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformorientop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformorientop",
            "title": "MDLTransformOrientOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedVector3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotateop",
            "title": "MDLTransformRotateOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatexop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedScalar",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatexop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotatexop",
            "title": "MDLTransformRotateXOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateyop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedScalar",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotateyop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotateyop",
            "title": "MDLTransformRotateYOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatezop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedScalar",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformrotatezop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformrotatezop",
            "title": "MDLTransformRotateZOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformscaleop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedVector3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformscaleop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformscaleop",
            "title": "MDLTransformScaleOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/keytimes",
                "title": "var keyTimes: [NSNumber]",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/transformops",
                "title": "var transformOps: [any MDLTransformOp]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addmatrixop(_:inverse:)",
                "title": "func addMatrixOp(String, inverse: Bool) -> MDLTransformMatrixOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addorientop(_:inverse:)",
                "title": "func addOrientOp(String, inverse: Bool) -> MDLTransformOrientOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotateop(_:order:inverse:)",
                "title": "func addRotateOp(String, order: MDLTransformOpRotationOrder, inverse: Bool) -> MDLTransformRotateOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotatexop(_:inverse:)",
                "title": "func addRotateXOp(String, inverse: Bool) -> MDLTransformRotateXOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotateyop(_:inverse:)",
                "title": "func addRotateYOp(String, inverse: Bool) -> MDLTransformRotateYOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addrotatezop(_:inverse:)",
                "title": "func addRotateZOp(String, inverse: Bool) -> MDLTransformRotateZOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addscaleop(_:inverse:)",
                "title": "func addScaleOp(String, inverse: Bool) -> MDLTransformScaleOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/addtranslateop(_:inverse:)",
                "title": "func addTranslateOp(String, inverse: Bool) -> MDLTransformTranslateOp",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/animatedvalue(withname:)",
                "title": "func animatedValue(withName: String) -> MDLAnimatedValue",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/count()",
                "title": "func count() -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/double4x4(attime:)",
                "title": "func double4x4(atTime: TimeInterval) -> matrix_double4x4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformstack/float4x4(attime:)",
                "title": "func float4x4(atTime: TimeInterval) -> matrix_float4x4",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdltransformstack",
            "title": "MDLTransformStack",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformtranslateop/animatedvalue",
                "title": "var animatedValue: MDLAnimatedVector3",
                "type": "property"
              },
              {
                "path": "/documentation/modelio/mdltransformtranslateop/name",
                "title": "var name: String",
                "type": "property"
              }
            ],
            "path": "/documentation/modelio/mdltransformtranslateop",
            "title": "MDLTransformTranslateOp",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlutility/convert(tousdz:writeto:)",
                "title": "class func convert(toUSDZ: URL, writeTo: URL)",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlutility",
            "title": "MDLUtility",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdlassetresolver/canresolveassetnamed(_:)",
                "title": "func canResolveAssetNamed(String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdlassetresolver/resolveassetnamed(_:)",
                "title": "func resolveAssetNamed(String) -> URL",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdlassetresolver",
            "title": "MDLAssetResolver",
            "type": "protocol"
          },
          {
            "path": "/documentation/modelio/mdljointanimation",
            "title": "MDLJointAnimation",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformop/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/modelio/mdltransformop/double4x4(attime:)",
                "title": "func double4x4(atTime: TimeInterval) -> matrix_double4x4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformop/float4x4(attime:)",
                "title": "func float4x4(atTime: TimeInterval) -> matrix_float4x4",
                "type": "method"
              },
              {
                "path": "/documentation/modelio/mdltransformop/isinverseop()",
                "title": "func isInverseOp() -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/modelio/mdltransformop",
            "title": "MDLTransformOp",
            "type": "protocol"
          }
        ],
        "path": "/documentation/modelio",
        "title": "Model I/O",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
