{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Centrals",
            "type": "groupMarker"
          },
          {
            "title": "Peripherals",
            "type": "groupMarker"
          },
          {
            "title": "Data Transfer",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/transferring-data-between-bluetooth-low-energy-devices",
            "title": "Transferring Data Between Bluetooth Low Energy Devices",
            "type": "sampleCode"
          },
          {
            "title": "Services",
            "type": "groupMarker"
          },
          {
            "title": "Supporting Types",
            "type": "groupMarker"
          },
          {
            "title": "Bluetooth Classic Support",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/using-core-bluetooth-classic",
            "title": "Using Core Bluetooth Classic",
            "type": "sampleCode"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/corebluetooth/deprecated-constants",
            "title": "Deprecated Constants",
            "type": "collection"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/corebluetooth",
        "title": "Core Bluetooth",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Centrals",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying a Remote Central",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanager/updatevalue(_:for:onsubscribedcentrals:)",
                    "title": "- updateValue:forCharacteristic:onSubscribedCentrals:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcentral/maximumupdatevaluelength",
                "title": "maximumUpdateValueLength",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbcentral",
            "title": "CBCentral",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing a Central Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/init(delegate:queue:)",
                "title": "- initWithDelegate:queue:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/init(delegate:queue:options:)",
                "title": "- initWithDelegate:queue:options:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanageroptionshowpoweralertkey",
                    "title": "CBCentralManagerOptionShowPowerAlertKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanageroptionrestoreidentifierkey",
                    "title": "CBCentralManagerOptionRestoreIdentifierKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/central-manager-initialization-options",
                "title": "Central Manager Initialization Options",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "State Restoration Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerrestoredstateperipheralskey",
                    "title": "CBCentralManagerRestoredStatePeripheralsKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerrestoredstatescanserviceskey",
                    "title": "CBCentralManagerRestoredStateScanServicesKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerrestoredstatescanoptionskey",
                    "title": "CBCentralManagerRestoredStateScanOptionsKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/central-manager-state-restoration-options",
                "title": "Central Manager State Restoration Options",
                "type": "collection"
              },
              {
                "title": "Establishing or Canceling Connections with Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/connect(_:options:)",
                "title": "- connectPeripheral:options:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenableautoreconnect",
                    "title": "CBConnectPeripheralOptionEnableAutoReconnect",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenabletransportbridgingkey",
                    "title": "CBConnectPeripheralOptionEnableTransportBridgingKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonconnectionkey",
                    "title": "CBConnectPeripheralOptionNotifyOnConnectionKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyondisconnectionkey",
                    "title": "CBConnectPeripheralOptionNotifyOnDisconnectionKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                    "title": "CBConnectPeripheralOptionNotifyOnNotificationKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionrequiresancs",
                    "title": "CBConnectPeripheralOptionRequiresANCS",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionstartdelaykey",
                    "title": "CBConnectPeripheralOptionStartDelayKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-connection-options",
                "title": "Peripheral Connection Options",
                "type": "collection"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/cancelperipheralconnection(_:)",
                "title": "- cancelPeripheralConnection:",
                "type": "method"
              },
              {
                "title": "Retrieving Lists of Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/retrieveconnectedperipherals(withservices:)",
                "title": "- retrieveConnectedPeripheralsWithServices:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/retrieveperipherals(withidentifiers:)",
                "title": "- retrievePeripheralsWithIdentifiers:",
                "type": "method"
              },
              {
                "title": "Scanning or Stopping Scans of Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/scanforperipherals(withservices:options:)",
                "title": "- scanForPeripheralsWithServices:options:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerscanoptionallowduplicateskey",
                    "title": "CBCentralManagerScanOptionAllowDuplicatesKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerscanoptionsolicitedserviceuuidskey",
                    "title": "CBCentralManagerScanOptionSolicitedServiceUUIDsKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-scanning-options",
                "title": "Peripheral Scanning Options",
                "type": "collection"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/stopscan()",
                "title": "- stopScan",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/isscanning",
                "title": "isScanning",
                "type": "property"
              },
              {
                "title": "Inspecting Feature Support",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/supports(_:)",
                "title": "+ supportsFeatures:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Extended Scan Features",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanager/feature/extendedscanandconnect",
                    "title": "CBCentralManagerFeatureExtendedScanAndConnect",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcentralmanager/feature",
                "title": "CBCentralManagerFeature",
                "type": "enum"
              },
              {
                "title": "Monitoring Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "title": "Receiving Connection Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/registerforconnectionevents(options:)",
                "title": "- registerForConnectionEventsWithOptions:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenableautoreconnect",
                    "title": "CBConnectPeripheralOptionEnableAutoReconnect",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenabletransportbridgingkey",
                    "title": "CBConnectPeripheralOptionEnableTransportBridgingKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonconnectionkey",
                    "title": "CBConnectPeripheralOptionNotifyOnConnectionKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyondisconnectionkey",
                    "title": "CBConnectPeripheralOptionNotifyOnDisconnectionKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                    "title": "CBConnectPeripheralOptionNotifyOnNotificationKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionrequiresancs",
                    "title": "CBConnectPeripheralOptionRequiresANCS",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionstartdelaykey",
                    "title": "CBConnectPeripheralOptionStartDelayKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-connection-options",
                "title": "Peripheral Connection Options",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectionevent/peerconnected",
                    "title": "CBConnectionEventPeerConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectionevent/peerdisconnected",
                    "title": "CBConnectionEventPeerDisconnected",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbconnectionevent",
                "title": "CBConnectionEvent",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Matching Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectioneventmatchingoption/peripheraluuids",
                    "title": "CBConnectionEventMatchingOptionPeripheralUUIDs",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectioneventmatchingoption/serviceuuids",
                    "title": "CBConnectionEventMatchingOptionServiceUUIDs",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/cbconnectioneventmatchingoption",
                "title": "CBConnectionEventMatchingOption",
                "type": "typealias"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredoff",
                    "title": "CBCentralManagerStatePoweredOff",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredon",
                    "title": "CBCentralManagerStatePoweredOn",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/resetting",
                    "title": "CBCentralManagerStateResetting",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/unauthorized",
                    "title": "CBCentralManagerStateUnauthorized",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/unknown",
                    "title": "CBCentralManagerStateUnknown",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/unsupported",
                    "title": "CBCentralManagerStateUnsupported",
                    "type": "case"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate",
                "title": "CBCentralManagerState",
                "type": "enum"
              }
            ],
            "path": "/documentation/corebluetooth/cbcentralmanager",
            "title": "CBCentralManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Monitoring Connections with Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:didconnect:)",
                "title": "- centralManager:didConnectPeripheral:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:diddisconnectperipheral:error:)",
                "title": "- centralManager:didDisconnectPeripheral:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:didfailtoconnect:error:)",
                "title": "- centralManager:didFailToConnectPeripheral:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:connectioneventdidoccur:for:)",
                "title": "- centralManager:connectionEventDidOccur:forPeripheral:",
                "type": "method"
              },
              {
                "title": "Discovering and Retrieving Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:diddiscover:advertisementdata:rssi:)",
                "title": "- centralManager:didDiscoverPeripheral:advertisementData:RSSI:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Advertisement Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatalocalnamekey",
                    "title": "CBAdvertisementDataLocalNameKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatamanufacturerdatakey",
                    "title": "CBAdvertisementDataManufacturerDataKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataservicedatakey",
                    "title": "CBAdvertisementDataServiceDataKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataserviceuuidskey",
                    "title": "CBAdvertisementDataServiceUUIDsKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataoverflowserviceuuidskey",
                    "title": "CBAdvertisementDataOverflowServiceUUIDsKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatatxpowerlevelkey",
                    "title": "CBAdvertisementDataTxPowerLevelKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataisconnectable",
                    "title": "CBAdvertisementDataIsConnectable",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatasolicitedserviceuuidskey",
                    "title": "CBAdvertisementDataSolicitedServiceUUIDsKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/advertisement-data-retrieval-keys",
                "title": "Advertisement Data Retrieval Keys",
                "type": "collection"
              },
              {
                "title": "Monitoring the Central Manager’s State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanagerdidupdatestate(_:)",
                "title": "- centralManagerDidUpdateState:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:willrestorestate:)",
                "title": "- centralManager:willRestoreState:",
                "type": "method"
              },
              {
                "title": "Monitoring the Central Manager’s Authorization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:didupdateancsauthorizationfor:)",
                "title": "- centralManager:didUpdateANCSAuthorizationForPeripheral:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:diddisconnectperipheral:timestamp:isreconnecting:error:)",
                "title": "- centralManager:didDisconnectPeripheral:timestamp:isReconnecting:error:",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbcentralmanagerdelegate",
            "title": "CBCentralManagerDelegate",
            "type": "protocol"
          },
          {
            "title": "Peripherals",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying a Peripheral",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheraldidupdatename(_:)",
                    "title": "- peripheralDidUpdateName:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheral/name",
                "title": "name",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "title": "Discovering Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discoverservices(_:)",
                "title": "- discoverServices:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discoverincludedservices(_:for:)",
                "title": "- discoverIncludedServices:forService:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/services",
                "title": "services",
                "type": "property"
              },
              {
                "title": "Discovering Characteristics and Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discovercharacteristics(_:for:)",
                "title": "- discoverCharacteristics:forService:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discoverdescriptors(for:)",
                "title": "- discoverDescriptorsForCharacteristic:",
                "type": "method"
              },
              {
                "title": "Reading Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/readvalue(for:)-6u2kr",
                "title": "- readValueForCharacteristic:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/readvalue(for:)-91hhp",
                "title": "- readValueForDescriptor:",
                "type": "method"
              },
              {
                "title": "Writing Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/writevalue(_:for:type:)",
                "title": "- writeValue:forCharacteristic:type:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/writevalue(_:for:)",
                "title": "- writeValue:forDescriptor:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/maximumwritevaluelength(for:)",
                "title": "- maximumWriteValueLengthForType:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Write Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicwritetype/withresponse",
                    "title": "CBCharacteristicWriteWithResponse",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicwritetype/withoutresponse",
                    "title": "CBCharacteristicWriteWithoutResponse",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcharacteristicwritetype",
                "title": "CBCharacteristicWriteType",
                "type": "enum"
              },
              {
                "title": "Setting Notifications for a Characteristic’s Value",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                    "title": "CBConnectPeripheralOptionNotifyOnNotificationKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheral/setnotifyvalue(_:for:)",
                "title": "- setNotifyValue:forCharacteristic:",
                "type": "method"
              },
              {
                "title": "Monitoring a Peripheral’s Connection State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/state",
                "title": "state",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Peripheral States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/disconnected",
                    "title": "CBPeripheralStateDisconnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/connecting",
                    "title": "CBPeripheralStateConnecting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/connected",
                    "title": "CBPeripheralStateConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/disconnecting",
                    "title": "CBPeripheralStateDisconnecting",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheralstate",
                "title": "CBPeripheralState",
                "type": "enum"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/cansendwritewithoutresponse",
                "title": "canSendWriteWithoutResponse",
                "type": "property"
              },
              {
                "title": "Accessing a Peripheral’s Signal Strength",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/readrssi()",
                "title": "- readRSSI",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheral/rssi",
                "title": "RSSI",
                "type": "property"
              },
              {
                "title": "Working with L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/openl2capchannel(_:)",
                "title": "- openL2CAPChannel:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Accessing Streams",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/inputstream",
                    "title": "inputStream",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/outputstream",
                    "title": "outputStream",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Peer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/peer",
                    "title": "peer",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Protocol/Service Multiplexer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/psm",
                    "title": "PSM",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corebluetooth/cbl2capchannel",
                "title": "CBL2CAPChannel",
                "type": "class"
              },
              {
                "path": "/documentation/corebluetooth/cbl2cappsm",
                "title": "CBL2CAPPSM",
                "type": "typealias"
              },
              {
                "title": "Working with Apple Notification Center Service (ANCS)",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/ancsauthorized",
                "title": "ancsAuthorized",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheral",
            "title": "CBPeripheral",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Discovering Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscoverservices:)",
                "title": "- peripheral:didDiscoverServices:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscoverincludedservicesfor:error:)",
                "title": "- peripheral:didDiscoverIncludedServicesForService:error:",
                "type": "method"
              },
              {
                "title": "Discovering Characteristics and their Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscovercharacteristicsfor:error:)",
                "title": "- peripheral:didDiscoverCharacteristicsForService:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscoverdescriptorsfor:error:)",
                "title": "- peripheral:didDiscoverDescriptorsForCharacteristic:error:",
                "type": "method"
              },
              {
                "title": "Retrieving Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didupdatevaluefor:error:)-1xyna",
                "title": "- peripheral:didUpdateValueForCharacteristic:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didupdatevaluefor:error:)-1t3wm",
                "title": "- peripheral:didUpdateValueForDescriptor:error:",
                "type": "method"
              },
              {
                "title": "Writing Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didwritevaluefor:error:)-4f5ea",
                "title": "- peripheral:didWriteValueForCharacteristic:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didwritevaluefor:error:)-1ybl3",
                "title": "- peripheral:didWriteValueForDescriptor:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheralisready(tosendwritewithoutresponse:)",
                "title": "- peripheralIsReadyToSendWriteWithoutResponse:",
                "type": "method"
              },
              {
                "title": "Managing Notifications for a Characteristic’s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didupdatenotificationstatefor:error:)",
                "title": "- peripheral:didUpdateNotificationStateForCharacteristic:error:",
                "type": "method"
              },
              {
                "title": "Retrieving a Peripheral’s RSSI Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didreadrssi:error:)",
                "title": "- peripheral:didReadRSSI:error:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheraldidupdaterssi(_:error:)",
                "title": "- peripheralDidUpdateRSSI:error:",
                "type": "method"
              },
              {
                "title": "Monitoring Changes to a Peripheral’s Name or Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheraldidupdatename(_:)",
                "title": "- peripheralDidUpdateName:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didmodifyservices:)",
                "title": "- peripheral:didModifyServices:",
                "type": "method"
              },
              {
                "title": "Monitoring L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didopen:error:)",
                "title": "- peripheral:didOpenL2CAPChannel:error:",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheraldelegate",
            "title": "CBPeripheralDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Initializing a Peripheral Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/init(delegate:queue:)",
                "title": "- initWithDelegate:queue:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/init(delegate:queue:options:)",
                "title": "- initWithDelegate:queue:options:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Initialization Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanageroptionshowpoweralertkey",
                    "title": "CBPeripheralManagerOptionShowPowerAlertKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanageroptionrestoreidentifierkey",
                    "title": "CBPeripheralManagerOptionRestoreIdentifierKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-manager-initialization-options",
                "title": "Peripheral Manager Initialization Options",
                "type": "collection"
              },
              {
                "title": "Monitoring the State of a Peripheral Manager",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanager/authorizationstatus()",
                "title": "+ authorizationStatus",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/notdetermined",
                    "title": "CBPeripheralManagerAuthorizationStatusNotDetermined",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/restricted",
                    "title": "CBPeripheralManagerAuthorizationStatusRestricted",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/denied",
                    "title": "CBPeripheralManagerAuthorizationStatusDenied",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/authorized",
                    "title": "CBPeripheralManagerAuthorizationStatusAuthorized",
                    "type": "case"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus",
                "title": "CBPeripheralManagerAuthorizationStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unknown",
                    "title": "CBPeripheralManagerStateUnknown",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/resetting",
                    "title": "CBPeripheralManagerStateResetting",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unsupported",
                    "title": "CBPeripheralManagerStateUnsupported",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unauthorized",
                    "title": "CBPeripheralManagerStateUnauthorized",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredoff",
                    "title": "CBPeripheralManagerStatePoweredOff",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredon",
                    "title": "CBPeripheralManagerStatePoweredOn",
                    "type": "case"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate",
                "title": "CBPeripheralManagerState",
                "type": "enum"
              },
              {
                "title": "Adding and Removing Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/add(_:)",
                "title": "- addService:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/remove(_:)",
                "title": "- removeService:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/removeallservices()",
                "title": "- removeAllServices",
                "type": "method"
              },
              {
                "title": "Managing Advertising",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataoverflowserviceuuidskey",
                    "title": "CBAdvertisementDataOverflowServiceUUIDsKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheralmanager/startadvertising(_:)",
                "title": "- startAdvertising:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Advertising Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataisconnectable",
                    "title": "CBAdvertisementDataIsConnectable",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatalocalnamekey",
                    "title": "CBAdvertisementDataLocalNameKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatamanufacturerdatakey",
                    "title": "CBAdvertisementDataManufacturerDataKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataoverflowserviceuuidskey",
                    "title": "CBAdvertisementDataOverflowServiceUUIDsKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataservicedatakey",
                    "title": "CBAdvertisementDataServiceDataKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataserviceuuidskey",
                    "title": "CBAdvertisementDataServiceUUIDsKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatasolicitedserviceuuidskey",
                    "title": "CBAdvertisementDataSolicitedServiceUUIDsKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatatxpowerlevelkey",
                    "title": "CBAdvertisementDataTxPowerLevelKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/advertising-data",
                "title": "Advertising Data",
                "type": "collection"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/stopadvertising()",
                "title": "- stopAdvertising",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/isadvertising",
                "title": "isAdvertising",
                "type": "property"
              },
              {
                "title": "Sending Updates of a Characteristic’s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/updatevalue(_:for:onsubscribedcentrals:)",
                "title": "- updateValue:forCharacteristic:onSubscribedCentrals:",
                "type": "method"
              },
              {
                "title": "Responding to Read and Write Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/respond(to:withresult:)",
                "title": "- respondToRequest:withResult:",
                "type": "method"
              },
              {
                "title": "Setting Connection Latency",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/setdesiredconnectionlatency(_:for:)",
                "title": "- setDesiredConnectionLatency:forCentral:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Latency Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency/low",
                    "title": "CBPeripheralManagerConnectionLatencyLow",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency/medium",
                    "title": "CBPeripheralManagerConnectionLatencyMedium",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency/high",
                    "title": "CBPeripheralManagerConnectionLatencyHigh",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency",
                "title": "CBPeripheralManagerConnectionLatency",
                "type": "enum"
              },
              {
                "title": "Using L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/publishl2capchannel(withencryption:)",
                "title": "- publishL2CAPChannelWithEncryption:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/unpublishl2capchannel(_:)",
                "title": "- unpublishL2CAPChannel:",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheralmanager",
            "title": "CBPeripheralManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Monitoring Changes to the Peripheral Manager’s State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanagerdidupdatestate(_:)",
                "title": "- peripheralManagerDidUpdateState:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:willrestorestate:)",
                "title": "- peripheralManager:willRestoreState:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "State Restoration Dictionary Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerrestoredstateserviceskey",
                    "title": "CBPeripheralManagerRestoredStateServicesKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerrestoredstateadvertisementdatakey",
                    "title": "CBPeripheralManagerRestoredStateAdvertisementDataKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-manager-state-restoration-options",
                "title": "Peripheral Manager State Restoration Options",
                "type": "collection"
              },
              {
                "title": "Adding Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didadd:error:)",
                "title": "- peripheralManager:didAddService:error:",
                "type": "method"
              },
              {
                "title": "Advertising Peripheral Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanagerdidstartadvertising(_:error:)",
                "title": "- peripheralManagerDidStartAdvertising:error:",
                "type": "method"
              },
              {
                "title": "Monitoring Subscriptions to Characteristic Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:central:didsubscribeto:)",
                "title": "- peripheralManager:central:didSubscribeToCharacteristic:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:central:didunsubscribefrom:)",
                "title": "- peripheralManager:central:didUnsubscribeFromCharacteristic:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanagerisready(toupdatesubscribers:)",
                "title": "- peripheralManagerIsReadyToUpdateSubscribers:",
                "type": "method"
              },
              {
                "title": "Receiving Read and Write Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didreceiveread:)",
                "title": "- peripheralManager:didReceiveReadRequest:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didreceivewrite:)",
                "title": "- peripheralManager:didReceiveWriteRequests:",
                "type": "method"
              },
              {
                "title": "Using L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didpublishl2capchannel:error:)",
                "title": "- peripheralManager:didPublishL2CAPChannel:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didunpublishl2capchannel:error:)",
                "title": "- peripheralManager:didUnpublishL2CAPChannel:error:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didopen:error:)",
                "title": "- peripheralManager:didOpenL2CAPChannel:error:",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate",
            "title": "CBPeripheralManagerDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Identifying an Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbattribute/uuid",
                "title": "UUID",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbattribute",
            "title": "CBAttribute",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/readable",
                "title": "CBAttributePermissionsReadable",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/writeable",
                "title": "CBAttributePermissionsWriteable",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/readencryptionrequired",
                "title": "CBAttributePermissionsReadEncryptionRequired",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/writeencryptionrequired",
                "title": "CBAttributePermissionsWriteEncryptionRequired",
                "type": "case"
              }
            ],
            "path": "/documentation/corebluetooth/cbattributepermissions",
            "title": "CBAttributePermissions",
            "type": "enum"
          },
          {
            "title": "Data Transfer",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/transferring-data-between-bluetooth-low-energy-devices",
            "title": "Transferring Data Between Bluetooth Low Energy Devices",
            "type": "sampleCode"
          },
          {
            "title": "Services",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying a Service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/peripheral",
                "title": "peripheral",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/isprimary",
                "title": "isPrimary",
                "type": "property"
              },
              {
                "title": "Accessing Service Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/characteristics",
                "title": "characteristics",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/includedservices",
                "title": "includedServices",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbservice",
            "title": "CBService",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Mutable Service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutableservice/init(type:primary:)",
                "title": "- initWithType:primary:",
                "type": "method"
              },
              {
                "title": "Managing a Mutable Service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutableservice/characteristics",
                "title": "characteristics",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutableservice/includedservices",
                "title": "includedServices",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbmutableservice",
            "title": "CBMutableService",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a Characteristic",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/service",
                "title": "service",
                "type": "property"
              },
              {
                "title": "Accessing Characteristic Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/value",
                "title": "value",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/descriptors",
                "title": "descriptors",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/properties",
                "title": "properties",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Characteristic Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/broadcast",
                    "title": "CBCharacteristicPropertyBroadcast",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/read",
                    "title": "CBCharacteristicPropertyRead",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/writewithoutresponse",
                    "title": "CBCharacteristicPropertyWriteWithoutResponse",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/write",
                    "title": "CBCharacteristicPropertyWrite",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/notify",
                    "title": "CBCharacteristicPropertyNotify",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/indicate",
                    "title": "CBCharacteristicPropertyIndicate",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/authenticatedsignedwrites",
                    "title": "CBCharacteristicPropertyAuthenticatedSignedWrites",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/extendedproperties",
                    "title": "CBCharacteristicPropertyExtendedProperties",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/notifyencryptionrequired",
                    "title": "CBCharacteristicPropertyNotifyEncryptionRequired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/indicateencryptionrequired",
                    "title": "CBCharacteristicPropertyIndicateEncryptionRequired",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcharacteristicproperties",
                "title": "CBCharacteristicProperties",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                        "title": "CBConnectPeripheralOptionNotifyOnNotificationKey",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/corebluetooth/cbperipheral/setnotifyvalue(_:for:)",
                    "title": "- setNotifyValue:forCharacteristic:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcharacteristic/isnotifying",
                "title": "isNotifying",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/isbroadcasted",
                "title": "isBroadcasted",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbcharacteristic",
            "title": "CBCharacteristic",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Mutable Characteristic",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/init(type:properties:value:permissions:)",
                "title": "- initWithType:properties:value:permissions:",
                "type": "method"
              },
              {
                "title": "Managing a Mutable Characteristic",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/value",
                "title": "value",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/descriptors",
                "title": "descriptors",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/properties",
                "title": "properties",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/permissions",
                "title": "permissions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Permissions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/readable",
                    "title": "CBAttributePermissionsReadable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/writeable",
                    "title": "CBAttributePermissionsWriteable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/readencryptionrequired",
                    "title": "CBAttributePermissionsReadEncryptionRequired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/writeencryptionrequired",
                    "title": "CBAttributePermissionsWriteEncryptionRequired",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbattributepermissions",
                "title": "CBAttributePermissions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanager/updatevalue(_:for:onsubscribedcentrals:)",
                    "title": "- updateValue:forCharacteristic:onSubscribedCentrals:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/subscribedcentrals",
                "title": "subscribedCentrals",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbmutablecharacteristic",
            "title": "CBMutableCharacteristic",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbdescriptor/characteristic",
                "title": "characteristic",
                "type": "property"
              },
              {
                "title": "Accessing Descriptor Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbdescriptor/value",
                "title": "value",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbdescriptor",
            "title": "CBDescriptor",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Mutable Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutabledescriptor/init(type:value:)",
                "title": "- initWithType:value:",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbmutabledescriptor",
            "title": "CBMutableDescriptor",
            "type": "class"
          },
          {
            "title": "Supporting Types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing the Manager’s Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmanager/state",
                "title": "state",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Manager States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/poweredoff",
                    "title": "CBManagerStatePoweredOff",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/poweredon",
                    "title": "CBManagerStatePoweredOn",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/resetting",
                    "title": "CBManagerStateResetting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/unauthorized",
                    "title": "CBManagerStateUnauthorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/unknown",
                    "title": "CBManagerStateUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/unsupported",
                    "title": "CBManagerStateUnsupported",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbmanagerstate",
                "title": "CBManagerState",
                "type": "enum"
              },
              {
                "title": "Determining Authorization State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmanager/authorization-swift.type.property",
                "title": "authorization",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Authorization States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/allowedalways",
                    "title": "CBManagerAuthorizationAllowedAlways",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/denied",
                    "title": "CBManagerAuthorizationDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/notdetermined",
                    "title": "CBManagerAuthorizationNotDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/restricted",
                    "title": "CBManagerAuthorizationRestricted",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corebluetooth/cbmanagerauthorization",
                "title": "CBManagerAuthorization",
                "type": "enum"
              },
              {
                "title": "Deprecated Properties",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbmanager/authorization-swift.property",
                "title": "authorization",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbmanager",
            "title": "CBManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Requesting to Read and Write Characteristic Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/central",
                "title": "central",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/characteristic",
                "title": "characteristic",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/value",
                "title": "value",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/offset",
                "title": "offset",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbattrequest",
            "title": "CBATTRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a Peer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbpeer/identifier",
                "title": "identifier",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbpeer",
            "title": "CBPeer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating New CBUUID Objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/init(string:)",
                "title": "+ UUIDWithString:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/init(data:)",
                "title": "+ UUIDWithData:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbuuid/init(cfuuid:)",
                "title": "+ UUIDWithCFUUID:",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/init(nsuuid:)",
                "title": "+ UUIDWithNSUUID:",
                "type": "method"
              },
              {
                "title": "Inspecting CBUUID Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/data",
                "title": "data",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/uuidstring",
                "title": "UUIDString",
                "type": "property"
              },
              {
                "title": "UUID Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Characteristic Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicextendedpropertiesstring",
                    "title": "CBUUIDCharacteristicExtendedPropertiesString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicuserdescriptionstring",
                    "title": "CBUUIDCharacteristicUserDescriptionString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidclientcharacteristicconfigurationstring",
                    "title": "CBUUIDClientCharacteristicConfigurationString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidservercharacteristicconfigurationstring",
                    "title": "CBUUIDServerCharacteristicConfigurationString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicformatstring",
                    "title": "CBUUIDCharacteristicFormatString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicaggregateformatstring",
                    "title": "CBUUIDCharacteristicAggregateFormatString",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidl2cappsmcharacteristicstring",
                    "title": "CBUUIDL2CAPPSMCharacteristicString",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/characteristic-descriptors",
                "title": "Characteristic Descriptors",
                "type": "collection"
              }
            ],
            "path": "/documentation/corebluetooth/cbuuid",
            "title": "CBUUID",
            "type": "class"
          },
          {
            "title": "Bluetooth Classic Support",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/using-core-bluetooth-classic",
            "title": "Using Core Bluetooth Classic",
            "type": "sampleCode"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/cberrordomain",
            "title": "CBErrorDomain",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/unknown",
                "title": "CBErrorUnknown",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/invalidparameters",
                "title": "CBErrorInvalidParameters",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/invalidhandle",
                "title": "CBErrorInvalidHandle",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/notconnected",
                "title": "CBErrorNotConnected",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/outofspace",
                "title": "CBErrorOutOfSpace",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/operationcancelled",
                "title": "CBErrorOperationCancelled",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectiontimeout",
                "title": "CBErrorConnectionTimeout",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/peripheraldisconnected",
                "title": "CBErrorPeripheralDisconnected",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/uuidnotallowed",
                "title": "CBErrorUUIDNotAllowed",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/alreadyadvertising",
                "title": "CBErrorAlreadyAdvertising",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectionfailed",
                "title": "CBErrorConnectionFailed",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectionlimitreached",
                "title": "CBErrorConnectionLimitReached",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/operationnotsupported",
                "title": "CBErrorOperationNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-c.enum/cberrorunknowndevice",
                "title": "CBErrorUnknownDevice",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/unkowndevice",
                "title": "CBErrorUnkownDevice",
                "type": "case"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/encryptiontimedout",
                "title": "CBErrorEncryptionTimedOut",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/legattexceededbackgroundnotificationlimit",
                "title": "CBErrorLeGattExceededBackgroundNotificationLimit",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/legattnearbackgroundnotificationlimit",
                "title": "CBErrorLeGattNearBackgroundNotificationLimit",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/peerremovedpairinginformation",
                "title": "CBErrorPeerRemovedPairingInformation",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/toomanylepaireddevices",
                "title": "CBErrorTooManyLEPairedDevices",
                "type": "case"
              }
            ],
            "path": "/documentation/corebluetooth/cberror-swift.struct/code",
            "title": "CBError",
            "type": "enum"
          },
          {
            "path": "/documentation/corebluetooth/cbatterrordomain",
            "title": "CBATTErrorDomain",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/success",
                "title": "CBATTErrorSuccess",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidhandle",
                "title": "CBATTErrorInvalidHandle",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/readnotpermitted",
                "title": "CBATTErrorReadNotPermitted",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/writenotpermitted",
                "title": "CBATTErrorWriteNotPermitted",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidpdu",
                "title": "CBATTErrorInvalidPdu",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthentication",
                "title": "CBATTErrorInsufficientAuthentication",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/requestnotsupported",
                "title": "CBATTErrorRequestNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidoffset",
                "title": "CBATTErrorInvalidOffset",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthorization",
                "title": "CBATTErrorInsufficientAuthorization",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/preparequeuefull",
                "title": "CBATTErrorPrepareQueueFull",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotfound",
                "title": "CBATTErrorAttributeNotFound",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotlong",
                "title": "CBATTErrorAttributeNotLong",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryptionkeysize",
                "title": "CBATTErrorInsufficientEncryptionKeySize",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidattributevaluelength",
                "title": "CBATTErrorInvalidAttributeValueLength",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unlikelyerror",
                "title": "CBATTErrorUnlikelyError",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryption",
                "title": "CBATTErrorInsufficientEncryption",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unsupportedgrouptype",
                "title": "CBATTErrorUnsupportedGroupType",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientresources",
                "title": "CBATTErrorInsufficientResources",
                "type": "case"
              }
            ],
            "path": "/documentation/corebluetooth/cbatterror-swift.struct/code",
            "title": "CBATTError",
            "type": "enum"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredoff",
                "title": "CBCentralManagerStatePoweredOff",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredon",
                "title": "CBCentralManagerStatePoweredOn",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/resetting",
                "title": "CBCentralManagerStateResetting",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/unauthorized",
                "title": "CBCentralManagerStateUnauthorized",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/unknown",
                "title": "CBCentralManagerStateUnknown",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/unsupported",
                "title": "CBCentralManagerStateUnsupported",
                "type": "case"
              }
            ],
            "deprecated": true,
            "path": "/documentation/corebluetooth/cbcentralmanagerstate",
            "title": "CBCentralManagerState",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unknown",
                "title": "CBPeripheralManagerStateUnknown",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/resetting",
                "title": "CBPeripheralManagerStateResetting",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unsupported",
                "title": "CBPeripheralManagerStateUnsupported",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unauthorized",
                "title": "CBPeripheralManagerStateUnauthorized",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredoff",
                "title": "CBPeripheralManagerStatePoweredOff",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredon",
                "title": "CBPeripheralManagerStatePoweredOn",
                "type": "case"
              }
            ],
            "deprecated": true,
            "path": "/documentation/corebluetooth/cbperipheralmanagerstate",
            "title": "CBPeripheralManagerState",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanageroptiondeviceaccessformedia",
                "title": "CBCentralManagerOptionDeviceAccessForMedia",
                "type": "var"
              },
              {
                "path": "/documentation/corebluetooth/cbuuidcharacteristicvalidrangestring",
                "title": "CBUUIDCharacteristicValidRangeString",
                "type": "var"
              }
            ],
            "path": "/documentation/corebluetooth/deprecated-constants",
            "title": "Deprecated Constants",
            "type": "collection"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/cbuuidcharacteristicobservationschedulestring",
            "title": "CBUUIDCharacteristicObservationScheduleString",
            "type": "var"
          }
        ],
        "path": "/documentation/corebluetooth",
        "title": "Core Bluetooth",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Centrals",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying a Remote Central",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanager/updatevalue(_:for:onsubscribedcentrals:)",
                    "title": "func updateValue(Data, for: CBMutableCharacteristic, onSubscribedCentrals: [CBCentral]?) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcentral/maximumupdatevaluelength",
                "title": "var maximumUpdateValueLength: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbcentral",
            "title": "CBCentral",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing a Central Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/init()",
                "title": "convenience init()",
                "type": "init"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/init(delegate:queue:)",
                "title": "convenience init(delegate: (any CBCentralManagerDelegate)?, queue: dispatch_queue_t?)",
                "type": "init"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/init(delegate:queue:options:)",
                "title": "init(delegate: (any CBCentralManagerDelegate)?, queue: dispatch_queue_t?, options: [String : Any]?)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanageroptionshowpoweralertkey",
                    "title": "let CBCentralManagerOptionShowPowerAlertKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanageroptionrestoreidentifierkey",
                    "title": "let CBCentralManagerOptionRestoreIdentifierKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/central-manager-initialization-options",
                "title": "Central Manager Initialization Options",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "State Restoration Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerrestoredstateperipheralskey",
                    "title": "let CBCentralManagerRestoredStatePeripheralsKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerrestoredstatescanserviceskey",
                    "title": "let CBCentralManagerRestoredStateScanServicesKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerrestoredstatescanoptionskey",
                    "title": "let CBCentralManagerRestoredStateScanOptionsKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/central-manager-state-restoration-options",
                "title": "Central Manager State Restoration Options",
                "type": "collection"
              },
              {
                "title": "Establishing or Canceling Connections with Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/connect(_:options:)",
                "title": "func connect(CBPeripheral, options: [String : Any]?)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenableautoreconnect",
                    "title": "let CBConnectPeripheralOptionEnableAutoReconnect: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenabletransportbridgingkey",
                    "title": "let CBConnectPeripheralOptionEnableTransportBridgingKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonconnectionkey",
                    "title": "let CBConnectPeripheralOptionNotifyOnConnectionKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyondisconnectionkey",
                    "title": "let CBConnectPeripheralOptionNotifyOnDisconnectionKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                    "title": "let CBConnectPeripheralOptionNotifyOnNotificationKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionrequiresancs",
                    "title": "let CBConnectPeripheralOptionRequiresANCS: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionstartdelaykey",
                    "title": "let CBConnectPeripheralOptionStartDelayKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-connection-options",
                "title": "Peripheral Connection Options",
                "type": "collection"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/cancelperipheralconnection(_:)",
                "title": "func cancelPeripheralConnection(CBPeripheral)",
                "type": "method"
              },
              {
                "title": "Retrieving Lists of Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/retrieveconnectedperipherals(withservices:)",
                "title": "func retrieveConnectedPeripherals(withServices: [CBUUID]) -> [CBPeripheral]",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/retrieveperipherals(withidentifiers:)",
                "title": "func retrievePeripherals(withIdentifiers: [UUID]) -> [CBPeripheral]",
                "type": "method"
              },
              {
                "title": "Scanning or Stopping Scans of Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/scanforperipherals(withservices:options:)",
                "title": "func scanForPeripherals(withServices: [CBUUID]?, options: [String : Any]?)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerscanoptionallowduplicateskey",
                    "title": "let CBCentralManagerScanOptionAllowDuplicatesKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanagerscanoptionsolicitedserviceuuidskey",
                    "title": "let CBCentralManagerScanOptionSolicitedServiceUUIDsKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-scanning-options",
                "title": "Peripheral Scanning Options",
                "type": "collection"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/stopscan()",
                "title": "func stopScan()",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/isscanning",
                "title": "var isScanning: Bool",
                "type": "property"
              },
              {
                "title": "Inspecting Feature Support",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/supports(_:)",
                "title": "class func supports(CBCentralManager.Feature) -> Bool",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a Central Manager Feature Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanager/feature/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Extended Scan Features",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcentralmanager/feature/extendedscanandconnect",
                    "title": "static var extendedScanAndConnect: CBCentralManager.Feature",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcentralmanager/feature",
                "title": "CBCentralManager.Feature",
                "type": "struct"
              },
              {
                "title": "Monitoring Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/delegate",
                "title": "var delegate: (any CBCentralManagerDelegate)?",
                "type": "property"
              },
              {
                "title": "Receiving Connection Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanager/registerforconnectionevents(options:)",
                "title": "func registerForConnectionEvents(options: [CBConnectionEventMatchingOption : Any]?)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenableautoreconnect",
                    "title": "let CBConnectPeripheralOptionEnableAutoReconnect: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionenabletransportbridgingkey",
                    "title": "let CBConnectPeripheralOptionEnableTransportBridgingKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonconnectionkey",
                    "title": "let CBConnectPeripheralOptionNotifyOnConnectionKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyondisconnectionkey",
                    "title": "let CBConnectPeripheralOptionNotifyOnDisconnectionKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                    "title": "let CBConnectPeripheralOptionNotifyOnNotificationKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionrequiresancs",
                    "title": "let CBConnectPeripheralOptionRequiresANCS: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionstartdelaykey",
                    "title": "let CBConnectPeripheralOptionStartDelayKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-connection-options",
                "title": "Peripheral Connection Options",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectionevent/peerconnected",
                    "title": "case peerConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectionevent/peerdisconnected",
                    "title": "case peerDisconnected",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectionevent/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbconnectionevent",
                "title": "CBConnectionEvent",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating a Matching Option Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectioneventmatchingoption/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Matching Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectioneventmatchingoption/peripheraluuids",
                    "title": "static let peripheralUUIDs: CBConnectionEventMatchingOption",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectioneventmatchingoption/serviceuuids",
                    "title": "static let serviceUUIDs: CBConnectionEventMatchingOption",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corebluetooth/cbconnectioneventmatchingoption",
                "title": "CBConnectionEventMatchingOption",
                "type": "struct"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredoff",
                    "title": "case poweredOff",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredon",
                    "title": "case poweredOn",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/resetting",
                    "title": "case resetting",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/unauthorized",
                    "title": "case unauthorized",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbcentralmanagerstate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate",
                "title": "CBCentralManagerState",
                "type": "enum"
              }
            ],
            "path": "/documentation/corebluetooth/cbcentralmanager",
            "title": "CBCentralManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Monitoring Connections with Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:didconnect:)",
                "title": "func centralManager(CBCentralManager, didConnect: CBPeripheral)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:diddisconnectperipheral:error:)",
                "title": "func centralManager(CBCentralManager, didDisconnectPeripheral: CBPeripheral, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:didfailtoconnect:error:)",
                "title": "func centralManager(CBCentralManager, didFailToConnect: CBPeripheral, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:connectioneventdidoccur:for:)",
                "title": "func centralManager(CBCentralManager, connectionEventDidOccur: CBConnectionEvent, for: CBPeripheral)",
                "type": "method"
              },
              {
                "title": "Discovering and Retrieving Peripherals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:diddiscover:advertisementdata:rssi:)",
                "title": "func centralManager(CBCentralManager, didDiscover: CBPeripheral, advertisementData: [String : Any], rssi: NSNumber)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Advertisement Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatalocalnamekey",
                    "title": "let CBAdvertisementDataLocalNameKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatamanufacturerdatakey",
                    "title": "let CBAdvertisementDataManufacturerDataKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataservicedatakey",
                    "title": "let CBAdvertisementDataServiceDataKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataserviceuuidskey",
                    "title": "let CBAdvertisementDataServiceUUIDsKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataoverflowserviceuuidskey",
                    "title": "let CBAdvertisementDataOverflowServiceUUIDsKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatatxpowerlevelkey",
                    "title": "let CBAdvertisementDataTxPowerLevelKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataisconnectable",
                    "title": "let CBAdvertisementDataIsConnectable: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatasolicitedserviceuuidskey",
                    "title": "let CBAdvertisementDataSolicitedServiceUUIDsKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/advertisement-data-retrieval-keys",
                "title": "Advertisement Data Retrieval Keys",
                "type": "collection"
              },
              {
                "title": "Monitoring the Central Manager’s State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanagerdidupdatestate(_:)",
                "title": "func centralManagerDidUpdateState(CBCentralManager)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:willrestorestate:)",
                "title": "func centralManager(CBCentralManager, willRestoreState: [String : Any])",
                "type": "method"
              },
              {
                "title": "Monitoring the Central Manager’s Authorization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:didupdateancsauthorizationfor:)",
                "title": "func centralManager(CBCentralManager, didUpdateANCSAuthorizationFor: CBPeripheral)",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanagerdelegate/centralmanager(_:diddisconnectperipheral:timestamp:isreconnecting:error:)",
                "title": "func centralManager(CBCentralManager, didDisconnectPeripheral: CBPeripheral, timestamp: CFAbsoluteTime, isReconnecting: Bool, error: (any Error)?)",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbcentralmanagerdelegate",
            "title": "CBCentralManagerDelegate",
            "type": "protocol"
          },
          {
            "title": "Peripherals",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying a Peripheral",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheraldidupdatename(_:)",
                    "title": "func peripheralDidUpdateName(CBPeripheral)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheral/name",
                "title": "var name: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/delegate",
                "title": "var delegate: (any CBPeripheralDelegate)?",
                "type": "property"
              },
              {
                "title": "Discovering Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discoverservices(_:)",
                "title": "func discoverServices([CBUUID]?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discoverincludedservices(_:for:)",
                "title": "func discoverIncludedServices([CBUUID]?, for: CBService)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/services",
                "title": "var services: [CBService]?",
                "type": "property"
              },
              {
                "title": "Discovering Characteristics and Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discovercharacteristics(_:for:)",
                "title": "func discoverCharacteristics([CBUUID]?, for: CBService)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/discoverdescriptors(for:)",
                "title": "func discoverDescriptors(for: CBCharacteristic)",
                "type": "method"
              },
              {
                "title": "Reading Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/readvalue(for:)-6u2kr",
                "title": "func readValue(for: CBCharacteristic)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/readvalue(for:)-91hhp",
                "title": "func readValue(for: CBDescriptor)",
                "type": "method"
              },
              {
                "title": "Writing Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/writevalue(_:for:type:)",
                "title": "func writeValue(Data, for: CBCharacteristic, type: CBCharacteristicWriteType)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/writevalue(_:for:)",
                "title": "func writeValue(Data, for: CBDescriptor)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/maximumwritevaluelength(for:)",
                "title": "func maximumWriteValueLength(for: CBCharacteristicWriteType) -> Int",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Write Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicwritetype/withresponse",
                    "title": "case withResponse",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicwritetype/withoutresponse",
                    "title": "case withoutResponse",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicwritetype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcharacteristicwritetype",
                "title": "CBCharacteristicWriteType",
                "type": "enum"
              },
              {
                "title": "Setting Notifications for a Characteristic’s Value",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                    "title": "let CBConnectPeripheralOptionNotifyOnNotificationKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheral/setnotifyvalue(_:for:)",
                "title": "func setNotifyValue(Bool, for: CBCharacteristic)",
                "type": "method"
              },
              {
                "title": "Monitoring a Peripheral’s Connection State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/state",
                "title": "var state: CBPeripheralState",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Peripheral States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/disconnected",
                    "title": "case disconnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/connecting",
                    "title": "case connecting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/connected",
                    "title": "case connected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/disconnecting",
                    "title": "case disconnecting",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralstate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheralstate",
                "title": "CBPeripheralState",
                "type": "enum"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/cansendwritewithoutresponse",
                "title": "var canSendWriteWithoutResponse: Bool",
                "type": "property"
              },
              {
                "title": "Accessing a Peripheral’s Signal Strength",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/readrssi()",
                "title": "func readRSSI()",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheral/rssi",
                "title": "var rssi: NSNumber?",
                "type": "property"
              },
              {
                "title": "Working with L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/openl2capchannel(_:)",
                "title": "func openL2CAPChannel(CBL2CAPPSM)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Accessing Streams",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/inputstream",
                    "title": "var inputStream: InputStream!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/outputstream",
                    "title": "var outputStream: OutputStream!",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Peer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/peer",
                    "title": "var peer: CBPeer!",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the Protocol/Service Multiplexer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbl2capchannel/psm",
                    "title": "var psm: CBL2CAPPSM",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corebluetooth/cbl2capchannel",
                "title": "CBL2CAPChannel",
                "type": "class"
              },
              {
                "path": "/documentation/corebluetooth/cbl2cappsm",
                "title": "CBL2CAPPSM",
                "type": "typealias"
              },
              {
                "title": "Working with Apple Notification Center Service (ANCS)",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheral/ancsauthorized",
                "title": "var ancsAuthorized: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheral",
            "title": "CBPeripheral",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Discovering Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscoverservices:)",
                "title": "func peripheral(CBPeripheral, didDiscoverServices: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscoverincludedservicesfor:error:)",
                "title": "func peripheral(CBPeripheral, didDiscoverIncludedServicesFor: CBService, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Discovering Characteristics and their Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscovercharacteristicsfor:error:)",
                "title": "func peripheral(CBPeripheral, didDiscoverCharacteristicsFor: CBService, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:diddiscoverdescriptorsfor:error:)",
                "title": "func peripheral(CBPeripheral, didDiscoverDescriptorsFor: CBCharacteristic, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Retrieving Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didupdatevaluefor:error:)-1xyna",
                "title": "func peripheral(CBPeripheral, didUpdateValueFor: CBCharacteristic, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didupdatevaluefor:error:)-1t3wm",
                "title": "func peripheral(CBPeripheral, didUpdateValueFor: CBDescriptor, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Writing Characteristic and Descriptor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didwritevaluefor:error:)-4f5ea",
                "title": "func peripheral(CBPeripheral, didWriteValueFor: CBCharacteristic, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didwritevaluefor:error:)-1ybl3",
                "title": "func peripheral(CBPeripheral, didWriteValueFor: CBDescriptor, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheralisready(tosendwritewithoutresponse:)",
                "title": "func peripheralIsReady(toSendWriteWithoutResponse: CBPeripheral)",
                "type": "method"
              },
              {
                "title": "Managing Notifications for a Characteristic’s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didupdatenotificationstatefor:error:)",
                "title": "func peripheral(CBPeripheral, didUpdateNotificationStateFor: CBCharacteristic, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Retrieving a Peripheral’s RSSI Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didreadrssi:error:)",
                "title": "func peripheral(CBPeripheral, didReadRSSI: NSNumber, error: (any Error)?)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheraldidupdaterssi(_:error:)",
                "title": "func peripheralDidUpdateRSSI(CBPeripheral, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Monitoring Changes to a Peripheral’s Name or Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheraldidupdatename(_:)",
                "title": "func peripheralDidUpdateName(CBPeripheral)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didmodifyservices:)",
                "title": "func peripheral(CBPeripheral, didModifyServices: [CBService])",
                "type": "method"
              },
              {
                "title": "Monitoring L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheraldelegate/peripheral(_:didopen:error:)",
                "title": "func peripheral(CBPeripheral, didOpen: CBL2CAPChannel?, error: (any Error)?)",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheraldelegate",
            "title": "CBPeripheralDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Initializing a Peripheral Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/init()",
                "title": "convenience init()",
                "type": "init"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/init(delegate:queue:)",
                "title": "convenience init(delegate: (any CBPeripheralManagerDelegate)?, queue: dispatch_queue_t?)",
                "type": "init"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/init(delegate:queue:options:)",
                "title": "init(delegate: (any CBPeripheralManagerDelegate)?, queue: dispatch_queue_t?, options: [String : Any]?)",
                "type": "init"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/delegate",
                "title": "var delegate: (any CBPeripheralManagerDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Initialization Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanageroptionshowpoweralertkey",
                    "title": "let CBPeripheralManagerOptionShowPowerAlertKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanageroptionrestoreidentifierkey",
                    "title": "let CBPeripheralManagerOptionRestoreIdentifierKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-manager-initialization-options",
                "title": "Peripheral Manager Initialization Options",
                "type": "collection"
              },
              {
                "title": "Monitoring the State of a Peripheral Manager",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanager/authorizationstatus()",
                "title": "class func authorizationStatus() -> CBPeripheralManagerAuthorizationStatus",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/notdetermined",
                    "title": "case notDetermined",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/restricted",
                    "title": "case restricted",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/authorized",
                    "title": "case authorized",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerauthorizationstatus",
                "title": "CBPeripheralManagerAuthorizationStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/resetting",
                    "title": "case resetting",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unauthorized",
                    "title": "case unauthorized",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredoff",
                    "title": "case poweredOff",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredon",
                    "title": "case poweredOn",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cbperipheralmanagerstate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate",
                "title": "CBPeripheralManagerState",
                "type": "enum"
              },
              {
                "title": "Adding and Removing Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/add(_:)",
                "title": "func add(CBMutableService)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/remove(_:)",
                "title": "func remove(CBMutableService)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/removeallservices()",
                "title": "func removeAllServices()",
                "type": "method"
              },
              {
                "title": "Managing Advertising",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataoverflowserviceuuidskey",
                    "title": "let CBAdvertisementDataOverflowServiceUUIDsKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheralmanager/startadvertising(_:)",
                "title": "func startAdvertising([String : Any]?)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Advertising Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataisconnectable",
                    "title": "let CBAdvertisementDataIsConnectable: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatalocalnamekey",
                    "title": "let CBAdvertisementDataLocalNameKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatamanufacturerdatakey",
                    "title": "let CBAdvertisementDataManufacturerDataKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataoverflowserviceuuidskey",
                    "title": "let CBAdvertisementDataOverflowServiceUUIDsKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataservicedatakey",
                    "title": "let CBAdvertisementDataServiceDataKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdataserviceuuidskey",
                    "title": "let CBAdvertisementDataServiceUUIDsKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatasolicitedserviceuuidskey",
                    "title": "let CBAdvertisementDataSolicitedServiceUUIDsKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbadvertisementdatatxpowerlevelkey",
                    "title": "let CBAdvertisementDataTxPowerLevelKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/advertising-data",
                "title": "Advertising Data",
                "type": "collection"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/stopadvertising()",
                "title": "func stopAdvertising()",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/isadvertising",
                "title": "var isAdvertising: Bool",
                "type": "property"
              },
              {
                "title": "Sending Updates of a Characteristic’s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/updatevalue(_:for:onsubscribedcentrals:)",
                "title": "func updateValue(Data, for: CBMutableCharacteristic, onSubscribedCentrals: [CBCentral]?) -> Bool",
                "type": "method"
              },
              {
                "title": "Responding to Read and Write Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/respond(to:withresult:)",
                "title": "func respond(to: CBATTRequest, withResult: CBATTError.Code)",
                "type": "method"
              },
              {
                "title": "Setting Connection Latency",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/setdesiredconnectionlatency(_:for:)",
                "title": "func setDesiredConnectionLatency(CBPeripheralManagerConnectionLatency, for: CBCentral)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Latency Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency/low",
                    "title": "case low",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency/medium",
                    "title": "case medium",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency/high",
                    "title": "case high",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbperipheralmanagerconnectionlatency",
                "title": "CBPeripheralManagerConnectionLatency",
                "type": "enum"
              },
              {
                "title": "Using L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/publishl2capchannel(withencryption:)",
                "title": "func publishL2CAPChannel(withEncryption: Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanager/unpublishl2capchannel(_:)",
                "title": "func unpublishL2CAPChannel(CBL2CAPPSM)",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheralmanager",
            "title": "CBPeripheralManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Monitoring Changes to the Peripheral Manager’s State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanagerdidupdatestate(_:)",
                "title": "func peripheralManagerDidUpdateState(CBPeripheralManager)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:willrestorestate:)",
                "title": "func peripheralManager(CBPeripheralManager, willRestoreState: [String : Any])",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "State Restoration Dictionary Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerrestoredstateserviceskey",
                    "title": "let CBPeripheralManagerRestoredStateServicesKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanagerrestoredstateadvertisementdatakey",
                    "title": "let CBPeripheralManagerRestoredStateAdvertisementDataKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/peripheral-manager-state-restoration-options",
                "title": "Peripheral Manager State Restoration Options",
                "type": "collection"
              },
              {
                "title": "Adding Services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didadd:error:)",
                "title": "func peripheralManager(CBPeripheralManager, didAdd: CBService, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Advertising Peripheral Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanagerdidstartadvertising(_:error:)",
                "title": "func peripheralManagerDidStartAdvertising(CBPeripheralManager, error: (any Error)?)",
                "type": "method"
              },
              {
                "title": "Monitoring Subscriptions to Characteristic Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:central:didsubscribeto:)",
                "title": "func peripheralManager(CBPeripheralManager, central: CBCentral, didSubscribeTo: CBCharacteristic)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:central:didunsubscribefrom:)",
                "title": "func peripheralManager(CBPeripheralManager, central: CBCentral, didUnsubscribeFrom: CBCharacteristic)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanagerisready(toupdatesubscribers:)",
                "title": "func peripheralManagerIsReady(toUpdateSubscribers: CBPeripheralManager)",
                "type": "method"
              },
              {
                "title": "Receiving Read and Write Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didreceiveread:)",
                "title": "func peripheralManager(CBPeripheralManager, didReceiveRead: CBATTRequest)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didreceivewrite:)",
                "title": "func peripheralManager(CBPeripheralManager, didReceiveWrite: [CBATTRequest])",
                "type": "method"
              },
              {
                "title": "Using L2CAP Channels",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didpublishl2capchannel:error:)",
                "title": "func peripheralManager(CBPeripheralManager, didPublishL2CAPChannel: CBL2CAPPSM, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didunpublishl2capchannel:error:)",
                "title": "func peripheralManager(CBPeripheralManager, didUnpublishL2CAPChannel: CBL2CAPPSM, error: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate/peripheralmanager(_:didopen:error:)",
                "title": "func peripheralManager(CBPeripheralManager, didOpen: CBL2CAPChannel?, error: (any Error)?)",
                "type": "method"
              }
            ],
            "path": "/documentation/corebluetooth/cbperipheralmanagerdelegate",
            "title": "CBPeripheralManagerDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Identifying an Attribute",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbattribute/uuid",
                "title": "var uuid: CBUUID",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbattribute",
            "title": "CBAttribute",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Permissions Instance",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/init(rawvalue:)",
                "title": "init(rawValue: UInt)",
                "type": "init"
              },
              {
                "title": "Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/readable",
                "title": "static var readable: CBAttributePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/writeable",
                "title": "static var writeable: CBAttributePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/readencryptionrequired",
                "title": "static var readEncryptionRequired: CBAttributePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattributepermissions/writeencryptionrequired",
                "title": "static var writeEncryptionRequired: CBAttributePermissions",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbattributepermissions",
            "title": "CBAttributePermissions",
            "type": "struct"
          },
          {
            "title": "Data Transfer",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/transferring-data-between-bluetooth-low-energy-devices",
            "title": "Transferring Data Between Bluetooth Low Energy Devices",
            "type": "sampleCode"
          },
          {
            "title": "Services",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying a Service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/peripheral",
                "title": "var peripheral: CBPeripheral?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/isprimary",
                "title": "var isPrimary: Bool",
                "type": "property"
              },
              {
                "title": "Accessing Service Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/characteristics",
                "title": "var characteristics: [CBCharacteristic]?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbservice/includedservices",
                "title": "var includedServices: [CBService]?",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbservice",
            "title": "CBService",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Mutable Service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutableservice/init(type:primary:)",
                "title": "init(type: CBUUID, primary: Bool)",
                "type": "init"
              },
              {
                "title": "Managing a Mutable Service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutableservice/characteristics",
                "title": "var characteristics: [CBCharacteristic]?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutableservice/includedservices",
                "title": "var includedServices: [CBService]?",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbmutableservice",
            "title": "CBMutableService",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a Characteristic",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/service",
                "title": "var service: CBService?",
                "type": "property"
              },
              {
                "title": "Accessing Characteristic Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/value",
                "title": "var value: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/descriptors",
                "title": "var descriptors: [CBDescriptor]?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/properties",
                "title": "var properties: CBCharacteristicProperties",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating a Characteristic Properties Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Characteristic Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/broadcast",
                    "title": "static var broadcast: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/read",
                    "title": "static var read: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/writewithoutresponse",
                    "title": "static var writeWithoutResponse: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/write",
                    "title": "static var write: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/notify",
                    "title": "static var notify: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/indicate",
                    "title": "static var indicate: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/authenticatedsignedwrites",
                    "title": "static var authenticatedSignedWrites: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/extendedproperties",
                    "title": "static var extendedProperties: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/notifyencryptionrequired",
                    "title": "static var notifyEncryptionRequired: CBCharacteristicProperties",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbcharacteristicproperties/indicateencryptionrequired",
                    "title": "static var indicateEncryptionRequired: CBCharacteristicProperties",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcharacteristicproperties",
                "title": "CBCharacteristicProperties",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/corebluetooth/cbconnectperipheraloptionnotifyonnotificationkey",
                        "title": "let CBConnectPeripheralOptionNotifyOnNotificationKey: String",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/corebluetooth/cbperipheral/setnotifyvalue(_:for:)",
                    "title": "func setNotifyValue(Bool, for: CBCharacteristic)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbcharacteristic/isnotifying",
                "title": "var isNotifying: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbcharacteristic/isbroadcasted",
                "title": "var isBroadcasted: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbcharacteristic",
            "title": "CBCharacteristic",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Mutable Characteristic",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/init(type:properties:value:permissions:)",
                "title": "init(type: CBUUID, properties: CBCharacteristicProperties, value: Data?, permissions: CBAttributePermissions)",
                "type": "init"
              },
              {
                "title": "Managing a Mutable Characteristic",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/value",
                "title": "var value: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/descriptors",
                "title": "var descriptors: [CBDescriptor]?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/properties",
                "title": "var properties: CBCharacteristicProperties",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/permissions",
                "title": "var permissions: CBAttributePermissions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating a Permissions Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Permissions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/readable",
                    "title": "static var readable: CBAttributePermissions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/writeable",
                    "title": "static var writeable: CBAttributePermissions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/readencryptionrequired",
                    "title": "static var readEncryptionRequired: CBAttributePermissions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbattributepermissions/writeencryptionrequired",
                    "title": "static var writeEncryptionRequired: CBAttributePermissions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corebluetooth/cbattributepermissions",
                "title": "CBAttributePermissions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbperipheralmanager/updatevalue(_:for:onsubscribedcentrals:)",
                    "title": "func updateValue(Data, for: CBMutableCharacteristic, onSubscribedCentrals: [CBCentral]?) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corebluetooth/cbmutablecharacteristic/subscribedcentrals",
                "title": "var subscribedCentrals: [CBCentral]?",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbmutablecharacteristic",
            "title": "CBMutableCharacteristic",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbdescriptor/characteristic",
                "title": "var characteristic: CBCharacteristic?",
                "type": "property"
              },
              {
                "title": "Accessing Descriptor Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbdescriptor/value",
                "title": "var value: Any?",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbdescriptor",
            "title": "CBDescriptor",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Mutable Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmutabledescriptor/init(type:value:)",
                "title": "init(type: CBUUID, value: Any?)",
                "type": "init"
              }
            ],
            "path": "/documentation/corebluetooth/cbmutabledescriptor",
            "title": "CBMutableDescriptor",
            "type": "class"
          },
          {
            "title": "Supporting Types",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing the Manager’s Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmanager/state",
                "title": "var state: CBManagerState",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Manager States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/poweredoff",
                    "title": "case poweredOff",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/poweredon",
                    "title": "case poweredOn",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/resetting",
                    "title": "case resetting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/unauthorized",
                    "title": "case unauthorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerstate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbmanagerstate",
                "title": "CBManagerState",
                "type": "enum"
              },
              {
                "title": "Determining Authorization State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbmanager/authorization-swift.type.property",
                "title": "class var authorization: CBManagerAuthorization",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Authorization States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/allowedalways",
                    "title": "case allowedAlways",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/notdetermined",
                    "title": "case notDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/restricted",
                    "title": "case restricted",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbmanagerauthorization/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbmanagerauthorization",
                "title": "CBManagerAuthorization",
                "type": "enum"
              },
              {
                "title": "Deprecated Properties",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbmanager/authorization-swift.property",
                "title": "var authorization: CBManagerAuthorization",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbmanager",
            "title": "CBManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Requesting to Read and Write Characteristic Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/central",
                "title": "var central: CBCentral",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/characteristic",
                "title": "var characteristic: CBCharacteristic",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/value",
                "title": "var value: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbattrequest/offset",
                "title": "var offset: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbattrequest",
            "title": "CBATTRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a Peer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbpeer/identifier",
                "title": "var identifier: UUID",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbpeer",
            "title": "CBPeer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating New CBUUID Objects",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/init(string:)",
                "title": "init(string: String)",
                "type": "init"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/init(data:)",
                "title": "init(data: Data)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbuuid/init(cfuuid:)",
                "title": "init(cfuuid: CFUUID)",
                "type": "init"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/init(nsuuid:)",
                "title": "init(nsuuid: UUID)",
                "type": "init"
              },
              {
                "title": "Inspecting CBUUID Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/data",
                "title": "var data: Data",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbuuid/uuidstring",
                "title": "var uuidString: String",
                "type": "property"
              },
              {
                "title": "UUID Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Characteristic Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicextendedpropertiesstring",
                    "title": "let CBUUIDCharacteristicExtendedPropertiesString: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicuserdescriptionstring",
                    "title": "let CBUUIDCharacteristicUserDescriptionString: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidclientcharacteristicconfigurationstring",
                    "title": "let CBUUIDClientCharacteristicConfigurationString: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidservercharacteristicconfigurationstring",
                    "title": "let CBUUIDServerCharacteristicConfigurationString: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicformatstring",
                    "title": "let CBUUIDCharacteristicFormatString: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidcharacteristicaggregateformatstring",
                    "title": "let CBUUIDCharacteristicAggregateFormatString: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbuuidl2cappsmcharacteristicstring",
                    "title": "let CBUUIDL2CAPPSMCharacteristicString: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corebluetooth/characteristic-descriptors",
                "title": "Characteristic Descriptors",
                "type": "collection"
              }
            ],
            "path": "/documentation/corebluetooth/cbuuid",
            "title": "CBUUID",
            "type": "class"
          },
          {
            "title": "Bluetooth Classic Support",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/using-core-bluetooth-classic",
            "title": "Using Core Bluetooth Classic",
            "type": "sampleCode"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/unknown",
                "title": "static var unknown: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/invalidparameters",
                "title": "static var invalidParameters: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/invalidhandle",
                "title": "static var invalidHandle: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/notconnected",
                "title": "static var notConnected: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/outofspace",
                "title": "static var outOfSpace: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/operationcancelled",
                "title": "static var operationCancelled: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/connectiontimeout",
                "title": "static var connectionTimeout: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/peripheraldisconnected",
                "title": "static var peripheralDisconnected: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/uuidnotallowed",
                "title": "static var uuidNotAllowed: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/alreadyadvertising",
                "title": "static var alreadyAdvertising: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/connectionfailed",
                "title": "static var connectionFailed: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/connectionlimitreached",
                "title": "static var connectionLimitReached: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/operationnotsupported",
                "title": "static var operationNotSupported: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/unknowndevice",
                "title": "static var unknownDevice: CBError.Code",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cberror-swift.struct/unkowndevice",
                "title": "static var unkownDevice: CBError.Code",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/encryptiontimedout",
                "title": "static var encryptionTimedOut: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/legattexceededbackgroundnotificationlimit",
                "title": "static var leGattExceededBackgroundNotificationLimit: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/legattnearbackgroundnotificationlimit",
                "title": "static var leGattNearBackgroundNotificationLimit: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/peerremovedpairinginformation",
                "title": "static var peerRemovedPairingInformation: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/toomanylepaireddevices",
                "title": "static var tooManyLEPairedDevices: CBError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/invalidparameters",
                    "title": "case invalidParameters",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/invalidhandle",
                    "title": "case invalidHandle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/notconnected",
                    "title": "case notConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/outofspace",
                    "title": "case outOfSpace",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/operationcancelled",
                    "title": "case operationCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectiontimeout",
                    "title": "case connectionTimeout",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/peripheraldisconnected",
                    "title": "case peripheralDisconnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/uuidnotallowed",
                    "title": "case uuidNotAllowed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/alreadyadvertising",
                    "title": "case alreadyAdvertising",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectionfailed",
                    "title": "case connectionFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectionlimitreached",
                    "title": "case connectionLimitReached",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/operationnotsupported",
                    "title": "case operationNotSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/unknowndevice",
                    "title": "static var unknownDevice: CBError.Code",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/unkowndevice",
                    "title": "case unkownDevice",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/encryptiontimedout",
                    "title": "case encryptionTimedOut",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/legattexceededbackgroundnotificationlimit",
                    "title": "case leGattExceededBackgroundNotificationLimit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/legattnearbackgroundnotificationlimit",
                    "title": "case leGattNearBackgroundNotificationLimit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/peerremovedpairinginformation",
                    "title": "case peerRemovedPairingInformation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/toomanylepaireddevices",
                    "title": "case tooManyLEPairedDevices",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cberror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cberror-swift.struct/code",
                "title": "CBError.Code",
                "type": "enum"
              }
            ],
            "path": "/documentation/corebluetooth/cberror-swift.struct",
            "title": "CBError",
            "type": "struct"
          },
          {
            "path": "/documentation/corebluetooth/cberrordomain",
            "title": "let CBErrorDomain: String",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/unknown",
                "title": "case unknown",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/invalidparameters",
                "title": "case invalidParameters",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/invalidhandle",
                "title": "case invalidHandle",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/notconnected",
                "title": "case notConnected",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/outofspace",
                "title": "case outOfSpace",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/operationcancelled",
                "title": "case operationCancelled",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectiontimeout",
                "title": "case connectionTimeout",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/peripheraldisconnected",
                "title": "case peripheralDisconnected",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/uuidnotallowed",
                "title": "case uuidNotAllowed",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/alreadyadvertising",
                "title": "case alreadyAdvertising",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectionfailed",
                "title": "case connectionFailed",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/connectionlimitreached",
                "title": "case connectionLimitReached",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/operationnotsupported",
                "title": "case operationNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/unknowndevice",
                "title": "static var unknownDevice: CBError.Code",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/unkowndevice",
                "title": "case unkownDevice",
                "type": "case"
              },
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/encryptiontimedout",
                "title": "case encryptionTimedOut",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/legattexceededbackgroundnotificationlimit",
                "title": "case leGattExceededBackgroundNotificationLimit",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/legattnearbackgroundnotificationlimit",
                "title": "case leGattNearBackgroundNotificationLimit",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/peerremovedpairinginformation",
                "title": "case peerRemovedPairingInformation",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/toomanylepaireddevices",
                "title": "case tooManyLEPairedDevices",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cberror-swift.struct/code/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/corebluetooth/cberror-swift.struct/code",
            "title": "CBError.Code",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/success",
                "title": "static var success: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidhandle",
                "title": "static var invalidHandle: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/readnotpermitted",
                "title": "static var readNotPermitted: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/writenotpermitted",
                "title": "static var writeNotPermitted: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidpdu",
                "title": "static var invalidPdu: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientauthentication",
                "title": "static var insufficientAuthentication: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/requestnotsupported",
                "title": "static var requestNotSupported: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidoffset",
                "title": "static var invalidOffset: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientauthorization",
                "title": "static var insufficientAuthorization: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/preparequeuefull",
                "title": "static var prepareQueueFull: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/attributenotfound",
                "title": "static var attributeNotFound: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/attributenotlong",
                "title": "static var attributeNotLong: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientencryptionkeysize",
                "title": "static var insufficientEncryptionKeySize: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidattributevaluelength",
                "title": "static var invalidAttributeValueLength: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/unlikelyerror",
                "title": "static var unlikelyError: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientencryption",
                "title": "static var insufficientEncryption: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/unsupportedgrouptype",
                "title": "static var unsupportedGroupType: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientresources",
                "title": "static var insufficientResources: CBATTError.Code",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/success",
                    "title": "case success",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidhandle",
                    "title": "case invalidHandle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/readnotpermitted",
                    "title": "case readNotPermitted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/writenotpermitted",
                    "title": "case writeNotPermitted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidpdu",
                    "title": "case invalidPdu",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthentication",
                    "title": "case insufficientAuthentication",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/requestnotsupported",
                    "title": "case requestNotSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidoffset",
                    "title": "case invalidOffset",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthorization",
                    "title": "case insufficientAuthorization",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/preparequeuefull",
                    "title": "case prepareQueueFull",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotfound",
                    "title": "case attributeNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotlong",
                    "title": "case attributeNotLong",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryptionkeysize",
                    "title": "case insufficientEncryptionKeySize",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidattributevaluelength",
                    "title": "case invalidAttributeValueLength",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unlikelyerror",
                    "title": "case unlikelyError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryption",
                    "title": "case insufficientEncryption",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unsupportedgrouptype",
                    "title": "case unsupportedGroupType",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientresources",
                    "title": "case insufficientResources",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code",
                "title": "CBATTError.Code",
                "type": "enum"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbatterror-swift.struct",
            "title": "CBATTError",
            "type": "struct"
          },
          {
            "path": "/documentation/corebluetooth/cbatterrordomain",
            "title": "let CBATTErrorDomain: String",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/success",
                "title": "case success",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidhandle",
                "title": "case invalidHandle",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/readnotpermitted",
                "title": "case readNotPermitted",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/writenotpermitted",
                "title": "case writeNotPermitted",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidpdu",
                "title": "case invalidPdu",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthentication",
                "title": "case insufficientAuthentication",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/requestnotsupported",
                "title": "case requestNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidoffset",
                "title": "case invalidOffset",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthorization",
                "title": "case insufficientAuthorization",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/preparequeuefull",
                "title": "case prepareQueueFull",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotfound",
                "title": "case attributeNotFound",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotlong",
                "title": "case attributeNotLong",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryptionkeysize",
                "title": "case insufficientEncryptionKeySize",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidattributevaluelength",
                "title": "case invalidAttributeValueLength",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unlikelyerror",
                "title": "case unlikelyError",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryption",
                "title": "case insufficientEncryption",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unsupportedgrouptype",
                "title": "case unsupportedGroupType",
                "type": "case"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientresources",
                "title": "case insufficientResources",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/corebluetooth/cbatterror-swift.struct/code",
            "title": "CBATTError.Code",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/success",
                "title": "static var success: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidhandle",
                "title": "static var invalidHandle: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/readnotpermitted",
                "title": "static var readNotPermitted: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/writenotpermitted",
                "title": "static var writeNotPermitted: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidpdu",
                "title": "static var invalidPdu: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientauthentication",
                "title": "static var insufficientAuthentication: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/requestnotsupported",
                "title": "static var requestNotSupported: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidoffset",
                "title": "static var invalidOffset: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientauthorization",
                "title": "static var insufficientAuthorization: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/preparequeuefull",
                "title": "static var prepareQueueFull: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/attributenotfound",
                "title": "static var attributeNotFound: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/attributenotlong",
                "title": "static var attributeNotLong: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientencryptionkeysize",
                "title": "static var insufficientEncryptionKeySize: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/invalidattributevaluelength",
                "title": "static var invalidAttributeValueLength: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/unlikelyerror",
                "title": "static var unlikelyError: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientencryption",
                "title": "static var insufficientEncryption: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/unsupportedgrouptype",
                "title": "static var unsupportedGroupType: CBATTError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/insufficientresources",
                "title": "static var insufficientResources: CBATTError.Code",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/success",
                    "title": "case success",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidhandle",
                    "title": "case invalidHandle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/readnotpermitted",
                    "title": "case readNotPermitted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/writenotpermitted",
                    "title": "case writeNotPermitted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidpdu",
                    "title": "case invalidPdu",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthentication",
                    "title": "case insufficientAuthentication",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/requestnotsupported",
                    "title": "case requestNotSupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidoffset",
                    "title": "case invalidOffset",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientauthorization",
                    "title": "case insufficientAuthorization",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/preparequeuefull",
                    "title": "case prepareQueueFull",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotfound",
                    "title": "case attributeNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/attributenotlong",
                    "title": "case attributeNotLong",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryptionkeysize",
                    "title": "case insufficientEncryptionKeySize",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/invalidattributevaluelength",
                    "title": "case invalidAttributeValueLength",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unlikelyerror",
                    "title": "case unlikelyError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientencryption",
                    "title": "case insufficientEncryption",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/unsupportedgrouptype",
                    "title": "case unsupportedGroupType",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/insufficientresources",
                    "title": "case insufficientResources",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corebluetooth/cbatterror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/code",
                "title": "CBATTError.Code",
                "type": "enum"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbatterror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/corebluetooth/cbatterror-swift.struct",
            "title": "CBATTError",
            "type": "struct"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredoff",
                "title": "case poweredOff",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/poweredon",
                "title": "case poweredOn",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/resetting",
                "title": "case resetting",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/unauthorized",
                "title": "case unauthorized",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/unknown",
                "title": "case unknown",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/unsupported",
                "title": "case unsupported",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbcentralmanagerstate/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "deprecated": true,
            "path": "/documentation/corebluetooth/cbcentralmanagerstate",
            "title": "CBCentralManagerState",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unknown",
                "title": "case unknown",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/resetting",
                "title": "case resetting",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unsupported",
                "title": "case unsupported",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/unauthorized",
                "title": "case unauthorized",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredoff",
                "title": "case poweredOff",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/poweredon",
                "title": "case poweredOn",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corebluetooth/cbperipheralmanagerstate/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "deprecated": true,
            "path": "/documentation/corebluetooth/cbperipheralmanagerstate",
            "title": "CBPeripheralManagerState",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corebluetooth/cbcentralmanageroptiondeviceaccessformedia",
                "title": "let CBCentralManagerOptionDeviceAccessForMedia: String",
                "type": "var"
              },
              {
                "path": "/documentation/corebluetooth/cbuuidcharacteristicvalidrangestring",
                "title": "let CBUUIDCharacteristicValidRangeString: String",
                "type": "var"
              }
            ],
            "path": "/documentation/corebluetooth/deprecated-constants",
            "title": "Deprecated Constants",
            "type": "collection"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corebluetooth/cbuuidcharacteristicobservationschedulestring",
            "title": "let CBUUIDCharacteristicObservationScheduleString: String",
            "type": "var"
          }
        ],
        "path": "/documentation/corebluetooth",
        "title": "Core Bluetooth",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
