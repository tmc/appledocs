{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Authorization requests",
            "type": "groupMarker"
          },
          {
            "title": "Sign In with Apple",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/implementing-user-authentication-with-sign-in-with-apple",
            "title": "Implementing User Authentication with Sign in with Apple",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/authenticationservices/simplifying-user-authentication-in-a-tvos-app",
            "title": "Simplifying User Authentication in a tvOS App",
            "type": "sampleCode"
          },
          {
            "title": "Passwords",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/security/password-autofill",
            "title": "Password AutoFill",
            "type": "collection"
          },
          {
            "title": "Passkeys",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Fundamentals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/connecting-to-a-service-with-passkeys",
                "title": "Connecting to a service with passkeys",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/authenticationservices/supporting-passkeys",
                "title": "Supporting passkeys",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/supporting-security-key-authentication-using-physical-keys",
                "title": "Supporting Security Key Authentication Using Physical Keys",
                "type": "article"
              },
              {
                "title": "Account registration",
                "type": "groupMarker"
              },
              {
                "title": "Account authentication",
                "type": "groupMarker"
              },
              {
                "title": "Credential providers",
                "type": "groupMarker"
              },
              {
                "title": "Request configuration",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/authenticationservices/public-private-key-authentication",
            "title": "Public-Private Key Authentication",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Website authorization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/authenticating-people-by-using-passkeys-in-browser-apps",
                "title": "Authenticating people by using passkeys in browser apps",
                "type": "article"
              },
              {
                "title": "Website authentication requests",
                "type": "groupMarker"
              },
              {
                "title": "Website credential providers",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/authenticationservices/passkey-use-in-web-browsers",
            "title": "Passkey use in web browsers",
            "type": "collection"
          },
          {
            "path": "/documentation/authenticationservices/connecting-to-a-service-with-passkeys",
            "title": "Connecting to a service with passkeys",
            "type": "sampleCode"
          },
          {
            "title": "Web authentication sessions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/authenticating-a-user-through-a-web-service",
            "title": "Authenticating a User Through a Web Service",
            "type": "article"
          },
          {
            "path": "/documentation/authenticationservices/securing-logins-with-icloud-keychain-verification-codes",
            "title": "Securing Logins with iCloud Keychain Verification Codes",
            "type": "article"
          },
          {
            "path": "/documentation/authenticationservices/supporting-single-sign-on-in-a-web-browser-app",
            "title": "Supporting Single Sign-On in a Web Browser App",
            "type": "article"
          },
          {
            "title": "AutoFill credentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/providing-one-time-passcodes-to-autofill",
            "title": "Providing one-time passcodes to AutoFill",
            "type": "article"
          },
          {
            "title": "Credential migration",
            "type": "groupMarker"
          },
          {
            "title": "Single sign-on (SSO)",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Performing enterprise single sign-on",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/authenticationservices/enterprise-single-sign-on-sso",
            "title": "Enterprise single sign-on (SSO)",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/creating-extensions-that-support-platform-sso",
                "title": "Creating extensions that support platform SSO",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/registering-devices-and-users",
                "title": "Registering devices and users",
                "type": "article"
              },
              {
                "title": "Configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/configuring-device-management",
                "title": "Configuring Device Management",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/configuring-authentication-with-the-identity-provider-idp",
                "title": "Configuring authentication with the identity provider (IdP)",
                "type": "article"
              },
              {
                "title": "Authentication",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Pre-login",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/obtaining-a-server-nonce",
                    "title": "Obtaining a server nonce",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-preauthentication-request",
                    "title": "Performing a preauthentication request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-ws-trust-metadata-exchange-data-mex-request",
                    "title": "Performing a WS-Trust metadata exchange data (MEX) request",
                    "type": "article"
                  },
                  {
                    "title": "Login request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-ws-trust-login-request",
                    "title": "Performing a WS-Trust login request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-an-embedded-assertion",
                    "title": "Creating an embedded assertion",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-an-encrypted-embedded-assertion",
                    "title": "Creating an encrypted embedded assertion",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-and-validating-a-login-request",
                    "title": "Creating and validating a login request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-a-refresh-request",
                    "title": "Creating a refresh request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/supporting-key-requests-and-key-exchange-requests",
                    "title": "Supporting key requests and key exchange requests",
                    "type": "article"
                  },
                  {
                    "title": "Login response",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-a-json-web-encryption-jwe-login-response",
                    "title": "Creating a JSON Web Encryption (JWE) login response",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/processing-the-json-web-encryption-jwe-login-response",
                    "title": "Processing the JSON Web Encryption (JWE) login response",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-encryption-verification",
                    "title": "Performing encryption verification",
                    "type": "article"
                  }
                ],
                "path": "/documentation/authenticationservices/authentication-process",
                "title": "Authentication process",
                "type": "collection"
              }
            ],
            "path": "/documentation/authenticationservices/platform-single-sign-on-sso",
            "title": "Platform single sign-on (SSO)",
            "type": "collection"
          },
          {
            "title": "Apple TV authentication",
            "type": "groupMarker"
          },
          {
            "title": "Automatic security upgrades",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/upgrading-account-security-with-an-account-authentication-modification-extension",
            "title": "Upgrading Account Security With an Account Authentication Modification Extension",
            "type": "article"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/authenticationservices/authenticationservices-enumerations",
            "title": "AuthenticationServices Enumerations",
            "type": "collection"
          },
          {
            "path": "/documentation/authenticationservices/authenticationservices-data-types",
            "title": "AuthenticationServices Data Types",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/authenticationservices",
        "title": "Authentication Services",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Authorization requests",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a controller",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/init(authorizationrequests:)",
                "title": "- initWithAuthorizationRequests:",
                "type": "method"
              },
              {
                "title": "Inspecting requests",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationrequest/provider",
                    "title": "provider",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationprovider",
                    "title": "ASAuthorizationProvider",
                    "type": "protocol"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationrequest",
                "title": "ASAuthorizationRequest",
                "type": "class"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/authorizationrequests",
                "title": "authorizationRequests",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/customauthorizationmethods",
                "title": "customAuthorizationMethods",
                "type": "property"
              },
              {
                "title": "Presenting requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/presentationcontextprovider",
                "title": "presentationContextProvider",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Anchor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerpresentationcontextproviding/presentationanchor(for:)",
                    "title": "- presentationAnchorForAuthorizationController:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspresentationanchor",
                    "title": "ASPresentationAnchor",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontrollerpresentationcontextproviding",
                "title": "ASAuthorizationControllerPresentationContextProviding",
                "type": "protocol"
              },
              {
                "title": "Executing requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/performrequests()",
                "title": "- performRequests",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/performrequests(options:)",
                "title": "- performRequestsWithOptions:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/performautofillassistedrequests()",
                "title": "- performAutoFillAssistedRequests",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/cancel()",
                "title": "- cancel",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions/preferimmediatelyavailablecredentials",
                    "title": "ASAuthorizationControllerRequestOptionPreferImmediatelyAvailableCredentials",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions",
                "title": "ASAuthorizationControllerRequestOptions",
                "type": "enum"
              },
              {
                "title": "Responding to request completion",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(_:didcompletewithcustommethod:)",
                "title": "- authorizationController:didCompleteWithCustomMethod:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Handling Successful Authorization",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(_:didcompletewithcustommethod:)",
                    "title": "- authorizationController:didCompleteWithCustomMethod:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(controller:didcompletewithauthorization:)",
                    "title": "- authorizationController:didCompleteWithAuthorization:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Provider",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/provider",
                        "title": "provider",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/credential",
                        "title": "credential",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationcredential",
                        "title": "ASAuthorizationCredential",
                        "type": "protocol"
                      },
                      {
                        "title": "Characterizing an Authorization",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Scopes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/email",
                            "title": "ASAuthorizationScopeEmail",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/fullname",
                            "title": "ASAuthorizationScopeFullName",
                            "type": "var"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/scope",
                        "title": "ASAuthorizationScope",
                        "type": "typealias"
                      },
                      {
                        "children": [
                          {
                            "title": "Operation Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogin",
                            "title": "ASAuthorizationOperationLogin",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationrefresh",
                            "title": "ASAuthorizationOperationRefresh",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogout",
                            "title": "ASAuthorizationOperationLogout",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationimplicit",
                            "title": "ASAuthorizationOperationImplicit",
                            "type": "var"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation",
                        "title": "ASAuthorizationOpenIDOperation",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorization",
                    "title": "ASAuthorization",
                    "type": "class"
                  },
                  {
                    "title": "Handling Authorization Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(controller:didcompletewitherror:)",
                    "title": "- authorizationController:didCompleteWithError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationerrordomain",
                    "title": "ASAuthorizationErrorDomain",
                    "type": "var"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate",
                "title": "ASAuthorizationControllerDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationcontroller",
            "title": "ASAuthorizationController",
            "type": "class"
          },
          {
            "title": "Sign In with Apple",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/implementing-user-authentication-with-sign-in-with-apple",
            "title": "Implementing User Authentication with Sign in with Apple",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/authenticationservices/simplifying-user-authentication-in-a-tvos-app",
            "title": "Simplifying User Authentication in a tvOS App",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.applesignin",
            "title": "Sign in with Apple Entitlement",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Offering Sign In with Apple",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/init(authorizationbuttontype:authorizationbuttonstyle:)",
                    "title": "- initWithAuthorizationButtonType:authorizationButtonStyle:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/init(type:style:)",
                    "title": "+ buttonWithType:style:",
                    "type": "method"
                  },
                  {
                    "title": "Styling the Button",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/cornerradius",
                    "title": "cornerRadius",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Choosing a Button Style",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style/black",
                        "title": "ASAuthorizationAppleIDButtonStyleBlack",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style/white",
                        "title": "ASAuthorizationAppleIDButtonStyleWhite",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style/whiteoutline",
                        "title": "ASAuthorizationAppleIDButtonStyleWhiteOutline",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style",
                    "title": "ASAuthorizationAppleIDButtonStyle",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Choosing a Button Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/continue",
                        "title": "ASAuthorizationAppleIDButtonTypeContinue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/default",
                        "title": "ASAuthorizationAppleIDButtonTypeDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/signup",
                        "title": "ASAuthorizationAppleIDButtonTypeSignUp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/signin",
                        "title": "ASAuthorizationAppleIDButtonTypeSignIn",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype",
                    "title": "ASAuthorizationAppleIDButtonType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationappleidbutton",
                "title": "ASAuthorizationAppleIDButton",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/watchkit/wkinterfaceauthorizationappleidbutton",
                "title": "WKInterfaceAuthorizationAppleIDButton",
                "type": "class"
              },
              {
                "title": "Creating Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/createrequest()",
                "title": "- createRequest",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Setting the User",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidrequest/user",
                    "title": "user",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationappleidrequest",
                "title": "ASAuthorizationAppleIDRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting the Operation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedoperation",
                    "title": "requestedOperation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Operation Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogin",
                        "title": "ASAuthorizationOperationLogin",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationrefresh",
                        "title": "ASAuthorizationOperationRefresh",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogout",
                        "title": "ASAuthorizationOperationLogout",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationimplicit",
                        "title": "ASAuthorizationOperationImplicit",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorization/openidoperation",
                    "title": "ASAuthorizationOpenIDOperation",
                    "type": "typealias"
                  },
                  {
                    "title": "Setting the Scope",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedscopes",
                    "title": "requestedScopes",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Scopes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/scope/email",
                        "title": "ASAuthorizationScopeEmail",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/scope/fullname",
                        "title": "ASAuthorizationScopeFullName",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorization/scope",
                    "title": "ASAuthorizationScope",
                    "type": "typealias"
                  },
                  {
                    "title": "Setting the State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/state",
                    "title": "state",
                    "type": "property"
                  },
                  {
                    "title": "Setting the Nonce",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/nonce",
                    "title": "nonce",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationopenidrequest",
                "title": "ASAuthorizationOpenIDRequest",
                "type": "class"
              },
              {
                "title": "Getting State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/getcredentialstate(foruserid:completion:)",
                "title": "- getCredentialStateForUserID:completion:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "User Credential States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/authorized",
                    "title": "ASAuthorizationAppleIDProviderCredentialAuthorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/notfound",
                    "title": "ASAuthorizationAppleIDProviderCredentialNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/revoked",
                    "title": "ASAuthorizationAppleIDProviderCredentialRevoked",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/transferred",
                    "title": "ASAuthorizationAppleIDProviderCredentialTransferred",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate",
                "title": "ASAuthorizationAppleIDProviderCredentialState",
                "type": "enum"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialrevokednotification",
                "title": "ASAuthorizationAppleIDProviderCredentialRevokedNotification",
                "type": "var"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationappleidprovider",
            "title": "ASAuthorizationAppleIDProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a User",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/identitytoken",
                "title": "identityToken",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/authorizationcode",
                "title": "authorizationCode",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/state",
                "title": "state",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/user",
                "title": "user",
                "type": "property"
              },
              {
                "title": "Getting Contact Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/authorizedscopes",
                "title": "authorizedScopes",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/fullname",
                "title": "fullName",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/email",
                "title": "email",
                "type": "property"
              },
              {
                "title": "Detecting User Characteristics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/realuserstatus",
                "title": "realUserStatus",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "User Status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuserdetectionstatus/likelyreal",
                    "title": "ASUserDetectionStatusLikelyReal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuserdetectionstatus/unknown",
                    "title": "ASUserDetectionStatusUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuserdetectionstatus/unsupported",
                    "title": "ASUserDetectionStatusUnsupported",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asuserdetectionstatus",
                "title": "ASUserDetectionStatus",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/useragerange",
                "title": "userAgeRange",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationappleidcredential",
            "title": "ASAuthorizationAppleIDCredential",
            "type": "class"
          },
          {
            "title": "Passwords",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/security/password-autofill",
            "title": "Password AutoFill",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creating Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpasswordprovider/createrequest()",
                "title": "- createRequest",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpasswordrequest",
                "title": "ASAuthorizationPasswordRequest",
                "type": "class"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpasswordprovider",
            "title": "ASAuthorizationPasswordProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a credential",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasswordcredential/credentialwithuser:password:",
                "title": "+ credentialWithUser:password:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/aspasswordcredential/init(user:password:)",
                "title": "- initWithUser:password:",
                "type": "method"
              },
              {
                "title": "Accessing the username and password",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasswordcredential/user",
                "title": "user",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspasswordcredential/password",
                "title": "password",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aspasswordcredential",
            "title": "ASPasswordCredential",
            "type": "class"
          },
          {
            "title": "Passkeys",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Fundamentals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/connecting-to-a-service-with-passkeys",
                "title": "Connecting to a service with passkeys",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/authenticationservices/supporting-passkeys",
                "title": "Supporting passkeys",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/supporting-security-key-authentication-using-physical-keys",
                "title": "Supporting Security Key Authentication Using Physical Keys",
                "type": "article"
              },
              {
                "title": "Account registration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting attestation information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistration/rawattestationobject",
                    "title": "rawAttestationObject",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistration",
                "title": "ASAuthorizationPublicKeyCredentialRegistration",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration/attachment",
                    "title": "attachment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration/largeblob-jhnw",
                    "title": "largeBlob",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration/prf-49gbm",
                    "title": "prf",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration",
                "title": "ASAuthorizationPlatformPublicKeyCredentialRegistration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistration/transports",
                    "title": "transports",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistration",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialRegistration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/attestationpreference",
                    "title": "attestationPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/challenge",
                    "title": "challenge",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/displayname",
                    "title": "displayName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/relyingpartyidentifier",
                    "title": "relyingPartyIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userid",
                    "title": "userID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userverificationpreference",
                    "title": "userVerificationPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationPublicKeyCredentialRegistrationRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/largeblob-28v2m",
                    "title": "largeBlob",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/prf-8fus5",
                    "title": "prf",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/requeststyle-swift.property",
                    "title": "requestStyle",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest/credentialparameters",
                    "title": "credentialParameters",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest/excludedcredentials",
                    "title": "excludedCredentials",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest/residentkeypreference",
                    "title": "residentKeyPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest",
                "type": "class"
              },
              {
                "title": "Account authentication",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion/signature",
                    "title": "signature",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion/userid",
                    "title": "userID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion/rawauthenticatordata",
                    "title": "rawAuthenticatorData",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion",
                "title": "ASAuthorizationPublicKeyCredentialAssertion",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating requests",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/allowedcredentials",
                        "title": "allowedCredentials",
                        "type": "property"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/largeblob-5mg1q",
                        "title": "largeBlob",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/prf-60tle",
                        "title": "prf",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest",
                    "title": "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating the descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor/init(credentialid:)",
                        "title": "- initWithCredentialID:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor",
                    "title": "ASAuthorizationPlatformPublicKeyCredentialDescriptor",
                    "type": "class"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion/attachment",
                    "title": "attachment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion/largeblob-97tbp",
                    "title": "largeBlob",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion/prf-8blir",
                    "title": "prf",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion",
                "title": "ASAuthorizationPlatformPublicKeyCredentialAssertion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertion/appid",
                    "title": "appID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertion",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialAssertion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/challenge",
                    "title": "challenge",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/relyingpartyidentifier",
                    "title": "relyingPartyIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/allowedcredentials",
                    "title": "allowedCredentials",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/userverificationpreference",
                    "title": "userVerificationPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest",
                "title": "ASAuthorizationPublicKeyCredentialAssertionRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/allowedcredentials",
                    "title": "allowedCredentials",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/largeblob-5mg1q",
                    "title": "largeBlob",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/prf-60tle",
                    "title": "prf",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest",
                "title": "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertionrequest/allowedcredentials",
                    "title": "allowedCredentials",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertionrequest/appid",
                    "title": "appID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertionrequest",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest",
                "type": "class"
              },
              {
                "title": "Credential providers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating the provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/init(relyingpartyidentifier:)",
                    "title": "- initWithRelyingPartyIdentifier:",
                    "type": "method"
                  },
                  {
                    "title": "Creating the request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/relyingpartyidentifier",
                    "title": "relyingPartyIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/createcredentialassertionrequest(challenge:)",
                    "title": "- createCredentialAssertionRequestWithChallenge:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/createcredentialregistrationrequest(challenge:name:userid:)",
                    "title": "- createCredentialRegistrationRequestWithChallenge:name:userID:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/createcredentialregistrationrequest(challenge:name:userid:requeststyle:)",
                    "title": "- createCredentialRegistrationRequestWithChallenge:name:userID:requestStyle:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider",
                "title": "ASAuthorizationPlatformPublicKeyCredentialProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/init(relyingpartyidentifier:)",
                    "title": "- initWithRelyingPartyIdentifier:",
                    "type": "method"
                  },
                  {
                    "title": "Creating the request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/relyingpartyidentifier",
                    "title": "relyingPartyIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/createcredentialassertionrequest(challenge:)",
                    "title": "- createCredentialAssertionRequestWithChallenge:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/createcredentialregistrationrequest(challenge:displayname:name:userid:)",
                    "title": "- createCredentialRegistrationRequestWithChallenge:displayName:name:userID:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialProvider",
                "type": "class"
              },
              {
                "title": "Request configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredential/credentialid",
                    "title": "credentialID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredential/rawclientdatajson",
                    "title": "rawClientDataJSON",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/aspublickeycredential",
                "title": "ASPublicKeyCredential",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Getting the parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialparameters/init(algorithm:)",
                    "title": "- initWithAlgorithm:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialparameters/algorithm",
                    "title": "algorithm",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialparameters",
                "title": "ASAuthorizationPublicKeyCredentialParameters",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascosealgorithmidentifier/es256",
                    "title": "ASCOSEAlgorithmIdentifierES256",
                    "type": "var"
                  }
                ],
                "path": "/documentation/authenticationservices/ascosealgorithmidentifier",
                "title": "ASCOSEAlgorithmIdentifier",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascoseellipticcurveidentifier/p256",
                    "title": "ASCOSEEllipticCurveIdentifierP256",
                    "type": "var"
                  }
                ],
                "path": "/documentation/authenticationservices/ascoseellipticcurveidentifier",
                "title": "ASCOSEEllipticCurveIdentifier",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Getting attestation types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/none",
                    "title": "ASAuthorizationPublicKeyCredentialAttestationKindNone",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/direct",
                    "title": "ASAuthorizationPublicKeyCredentialAttestationKindDirect",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/enterprise",
                    "title": "ASAuthorizationPublicKeyCredentialAttestationKindEnterprise",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/indirect",
                    "title": "ASAuthorizationPublicKeyCredentialAttestationKindIndirect",
                    "type": "var"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind",
                "title": "ASAuthorizationPublicKeyCredentialAttestationKind",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Getting preferences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/discouraged",
                    "title": "ASAuthorizationPublicKeyCredentialResidentKeyPreferenceDiscouraged",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/preferred",
                    "title": "ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/required",
                    "title": "ASAuthorizationPublicKeyCredentialResidentKeyPreferenceRequired",
                    "type": "var"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference",
                "title": "ASAuthorizationPublicKeyCredentialResidentKeyPreference",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Getting preferences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/discouraged",
                    "title": "ASAuthorizationPublicKeyCredentialUserVerificationPreferenceDiscouraged",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/preferred",
                    "title": "ASAuthorizationPublicKeyCredentialUserVerificationPreferencePreferred",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/required",
                    "title": "ASAuthorizationPublicKeyCredentialUserVerificationPreferenceRequired",
                    "type": "var"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference",
                "title": "ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Getting the credential",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialdescriptor/credentialid",
                    "title": "credentialID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialdescriptor",
                "title": "ASAuthorizationPublicKeyCredentialDescriptor",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating the descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor/init(credentialid:)",
                    "title": "- initWithCredentialID:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor",
                "title": "ASAuthorizationPlatformPublicKeyCredentialDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/init(credentialid:transports:)",
                    "title": "- initWithCredentialID:transports:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transports",
                    "title": "transports",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/allsupported",
                        "title": "ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/bluetooth",
                        "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportBluetooth",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/nfc",
                        "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportNFC",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/usb",
                        "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportUSB",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport",
                    "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/allsupported",
                    "title": "ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/bluetooth",
                    "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportBluetooth",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/nfc",
                    "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportNFC",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/usb",
                    "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportUSB",
                    "type": "var"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport",
                "type": "typealias"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/allsupported",
                "title": "ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports",
                "type": "func"
              }
            ],
            "path": "/documentation/authenticationservices/public-private-key-authentication",
            "title": "Public-Private Key Authentication",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Website authorization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/authenticating-people-by-using-passkeys-in-browser-apps",
                "title": "Authenticating people by using passkeys in browser apps",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating credential managers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "title": "Requesting access to passkeys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstateforplatformcredentials",
                    "title": "authorizationStateForPlatformCredentials",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/requestauthorizationforpublickeycredentials(_:)",
                    "title": "- requestAuthorizationForPublicKeyCredentials:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Passkey access states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate/authorized",
                        "title": "ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateAuthorized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate/denied",
                        "title": "ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate/notdetermined",
                        "title": "ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateNotDetermined",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate",
                    "title": "ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState",
                    "type": "enum"
                  },
                  {
                    "title": "Using passkeys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/platformcredentialsforrelyingparty:completionhandler:",
                    "title": "- platformCredentialsForRelyingParty:completionHandler:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-c.class/credentialid",
                        "title": "credentialID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-c.class/customtitle",
                        "title": "customTitle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-c.class/name",
                        "title": "name",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-c.class/providername",
                        "title": "providerName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-c.class/relyingparty",
                        "title": "relyingParty",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-c.class/userhandle",
                        "title": "userHandle",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-c.class",
                    "title": "ASAuthorizationWebBrowserPlatformPublicKeyCredential",
                    "type": "class"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager",
                "title": "ASAuthorizationWebBrowserPublicKeyCredentialManager",
                "type": "class"
              },
              {
                "title": "Website authentication requests",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Local authentication",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserexternallyauthenticatablerequest/authenticatedcontext",
                    "title": "authenticatedContext",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserexternallyauthenticatablerequest",
                "title": "ASAuthorizationWebBrowserExternallyAuthenticatableRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Information about the assertion",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialassertionrequest/clientdata-4b5aw",
                    "title": "clientData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialassertionrequest/shouldshowhybridtransport",
                    "title": "shouldShowHybridTransport",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialassertionrequest",
                "title": "ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Information about the assertion",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest/clientdata-7scep",
                    "title": "clientData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest/excludedcredentials",
                    "title": "excludedCredentials",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest/shouldshowhybridtransport",
                    "title": "shouldShowHybridTransport",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest",
                "type": "protocol"
              },
              {
                "title": "Website credential providers",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/authenticationservices/passkey-use-in-web-browsers",
            "title": "Passkey use in web browsers",
            "type": "collection"
          },
          {
            "path": "/documentation/authenticationservices/connecting-to-a-service-with-passkeys",
            "title": "Connecting to a service with passkeys",
            "type": "sampleCode"
          },
          {
            "title": "Web authentication sessions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/authenticating-a-user-through-a-web-service",
            "title": "Authenticating a User Through a Web Service",
            "type": "article"
          },
          {
            "path": "/documentation/authenticationservices/securing-logins-with-icloud-keychain-verification-codes",
            "title": "Securing Logins with iCloud Keychain Verification Codes",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a Session",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/authenticationservices/aswebauthenticationsession/init(url:callbackurlscheme:completionhandler:)",
                "title": "- initWithURL:callbackURLScheme:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/completionhandler",
                "title": "ASWebAuthenticationSessionCompletionHandler",
                "type": "typealias"
              },
              {
                "title": "Configuring a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/prefersephemeralwebbrowsersession",
                "title": "prefersEphemeralWebBrowserSession",
                "type": "property"
              },
              {
                "title": "Starting and Stopping a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/canstart",
                "title": "canStart",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/start()",
                "title": "- start",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/cancel()",
                "title": "- cancel",
                "type": "method"
              },
              {
                "title": "Presenting a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/presentationcontextprovider",
                "title": "presentationContextProvider",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Anchor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationpresentationcontextproviding/presentationanchor(for:)",
                    "title": "- presentationAnchorForWebAuthenticationSession:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspresentationanchor",
                    "title": "ASPresentationAnchor",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationpresentationcontextproviding",
                "title": "ASWebAuthenticationPresentationContextProviding",
                "type": "protocol"
              },
              {
                "title": "Recognizing Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionerrordomain",
                "title": "ASWebAuthenticationSessionErrorDomain",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/canceledlogin",
                    "title": "ASWebAuthenticationSessionErrorCodeCanceledLogin",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/presentationcontextnotprovided",
                    "title": "ASWebAuthenticationSessionErrorCodePresentationContextNotProvided",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/presentationcontextinvalid",
                    "title": "ASWebAuthenticationSessionErrorCodePresentationContextInvalid",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code",
                "title": "ASWebAuthenticationSessionErrorCode",
                "type": "enum"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/init(url:callback:completionhandler:)",
                "title": "- initWithURL:callback:completionHandler:",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/additionalheaderfields",
                "title": "additionalHeaderFields",
                "type": "property"
              },
              {
                "title": "Classes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsession/callback/matchesurl(_:)",
                    "title": "- matchesURL:",
                    "type": "method"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsession/callback/customscheme(_:)",
                    "title": "+ callbackWithCustomScheme:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsession/callback/https(host:path:)",
                    "title": "+ callbackWithHTTPSHost:path:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationsession/callback",
                "title": "ASWebAuthenticationSessionCallback",
                "type": "class"
              }
            ],
            "path": "/documentation/authenticationservices/aswebauthenticationsession",
            "title": "ASWebAuthenticationSession",
            "type": "class"
          },
          {
            "path": "/documentation/authenticationservices/supporting-single-sign-on-in-a-web-browser-app",
            "title": "Supporting Single Sign-On in a Web Browser App",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the Shared Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager/shared",
                "title": "sharedManager",
                "type": "property"
              },
              {
                "title": "Handling a Session Request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager/sessionhandler",
                "title": "sessionHandler",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Starting and Stopping a Session Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionhandling/begin(_:)",
                    "title": "- beginHandlingWebAuthenticationSessionRequest:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionhandling/cancel(_:)",
                    "title": "- cancelWebAuthenticationSessionRequest:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Interpreting a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/url",
                        "title": "URL",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/callbackurlscheme",
                        "title": "callbackURLScheme",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/shoulduseephemeralsession",
                        "title": "shouldUseEphemeralSession",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/uuid",
                        "title": "UUID",
                        "type": "property"
                      },
                      {
                        "title": "Finishing a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/complete(withcallbackurl:)",
                        "title": "- completeWithCallbackURL:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/cancelwitherror(_:)",
                        "title": "- cancelWithError:",
                        "type": "method"
                      },
                      {
                        "title": "Indicating Completion",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/delegate",
                        "title": "delegate",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Responding to Completion Events",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/aswebauthenticationsessionrequestdelegate/authenticationsessionrequest(_:didcompletewithcallbackurl:)",
                            "title": "- authenticationSessionRequest:didCompleteWithCallbackURL:",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/authenticationservices/aswebauthenticationsessionrequestdelegate/authenticationsessionrequest(_:didcancelwitherror:)",
                            "title": "- authenticationSessionRequest:didCancelWithError:",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequestdelegate",
                        "title": "ASWebAuthenticationSessionRequestDelegate",
                        "type": "protocol"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/additionalheaderfields",
                        "title": "additionalHeaderFields",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/callback",
                        "title": "callback",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest",
                    "title": "ASWebAuthenticationSessionRequest",
                    "type": "class"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionhandling",
                "title": "ASWebAuthenticationSessionWebBrowserSessionHandling",
                "type": "protocol"
              },
              {
                "title": "Querying the Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager/waslaunchedbyauthenticationservices",
                "title": "wasLaunchedByAuthenticationServices",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager",
            "title": "ASWebAuthenticationSessionWebBrowserSessionManager",
            "type": "class"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/aswebauthenticationsessionwebbrowsersupportcapabilities",
            "title": "ASWebAuthenticationSessionWebBrowserSupportCapabilities",
            "type": "dictionary"
          },
          {
            "title": "AutoFill credentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/providing-one-time-passcodes-to-autofill",
            "title": "Providing one-time passcodes to AutoFill",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.authentication-services.autofill-credential-provider",
            "title": "AutoFill Credential Provider Entitlement",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Getting the extension context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/extensioncontext",
                "title": "extensionContext",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Configuring the extension",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeextensionconfigurationrequest()",
                    "title": "- completeExtensionConfigurationRequest",
                    "type": "method"
                  },
                  {
                    "title": "Providing credentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completerequest(withselectedcredential:completionhandler:)",
                    "title": "- completeRequestWithSelectedCredential:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeassertionrequest(using:completionhandler:)",
                    "title": "- completeAssertionRequestWithSelectedPasskeyCredential:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeregistrationrequest(using:completionhandler:)",
                    "title": "- completeRegistrationRequestWithSelectedPasskeyCredential:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeonetimecoderequest(using:completionhandler:)",
                    "title": "- completeOneTimeCodeRequestWithSelectedCredential:completionHandler:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredential/credentialwithuser:password:",
                        "title": "+ credentialWithUser:password:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredential/init(user:password:)",
                        "title": "- initWithUser:password:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the username and password",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredential/user",
                        "title": "user",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredential/password",
                        "title": "password",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasswordcredential",
                    "title": "ASPasswordCredential",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a passkey assertion credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/credentialwithuserhandle:relyingparty:signature:clientdatahash:authenticatordata:credentialid:",
                        "title": "+ credentialWithUserHandle:relyingParty:signature:clientDataHash:authenticatorData:credentialID:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/init(userhandle:relyingparty:signature:clientdatahash:authenticatordata:credentialid:)",
                        "title": "- initWithUserHandle:relyingParty:signature:clientDataHash:authenticatorData:credentialID:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing credential information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/authenticatordata",
                        "title": "authenticatorData",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/clientdatahash",
                        "title": "clientDataHash",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/credentialid",
                        "title": "credentialID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/relyingparty",
                        "title": "relyingParty",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/signature",
                        "title": "signature",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/userhandle",
                        "title": "userHandle",
                        "type": "property"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/extensionoutput-46ib3",
                        "title": "extensionOutput",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/initwithuserhandle:relyingparty:signature:clientdatahash:authenticatordata:credentialid:extensionoutput:",
                        "title": "- initWithUserHandle:relyingParty:signature:clientDataHash:authenticatorData:credentialID:extensionOutput:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasskeyassertioncredential",
                    "title": "ASPasskeyAssertionCredential",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a passkey registration credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/credentialwithrelyingparty:clientdatahash:credentialid:attestationobject:",
                        "title": "+ credentialWithRelyingParty:clientDataHash:credentialID:attestationObject:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/init(relyingparty:clientdatahash:credentialid:attestationobject:)",
                        "title": "- initWithRelyingParty:clientDataHash:credentialID:attestationObject:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing credential information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/attestationobject",
                        "title": "attestationObject",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/clientdatahash",
                        "title": "clientDataHash",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/credentialid",
                        "title": "credentialID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/relyingparty",
                        "title": "relyingParty",
                        "type": "property"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/extensionoutput-95gvu",
                        "title": "extensionOutput",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/initwithrelyingparty:clientdatahash:credentialid:attestationobject:extensionoutput:",
                        "title": "- initWithRelyingParty:clientDataHash:credentialID:attestationObject:extensionOutput:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasskeyregistrationcredential",
                    "title": "ASPasskeyRegistrationCredential",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an OTP credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asonetimecodecredential/init(code:)",
                        "title": "- initWithCode:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the OTP",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asonetimecodecredential/code",
                        "title": "code",
                        "type": "property"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asonetimecodecredential/credentialwithcode:",
                        "title": "+ credentialWithCode:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asonetimecodecredential",
                    "title": "ASOneTimeCodeCredential",
                    "type": "class"
                  },
                  {
                    "title": "Providing text to AutoFill",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completerequest(withtexttoinsert:completionhandler:)",
                    "title": "- completeRequestWithTextToInsert:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Canceling",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/cancelrequest(witherror:)",
                    "title": "- cancelRequestWithError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext",
                "title": "ASCredentialProviderExtensionContext",
                "type": "class"
              },
              {
                "title": "Configuring the credential provider extension",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfaceforextensionconfiguration()",
                "title": "- prepareInterfaceForExtensionConfiguration",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting the shared store",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/shared",
                    "title": "sharedStore",
                    "type": "property"
                  },
                  {
                    "title": "Checking the state of the store",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/getstate(_:)",
                    "title": "- getCredentialIdentityStoreStateWithCompletion:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Checking the state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystorestate/isenabled",
                        "title": "enabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystorestate/supportsincrementalupdates",
                        "title": "supportsIncrementalUpdates",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentitystorestate",
                    "title": "ASCredentialIdentityStoreState",
                    "type": "class"
                  },
                  {
                    "title": "Adding and removing credential identities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/savecredentialidentities(_:completion:)-1bbx6",
                    "title": "- saveCredentialIdentityEntries:completion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/replacecredentialidentities(_:completion:)",
                    "title": "- replaceCredentialIdentityEntries:completion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/removeallcredentialidentities(_:)",
                    "title": "- removeAllCredentialIdentitiesWithCompletion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/removecredentialidentities(_:completion:)-67lcw",
                    "title": "- removeCredentialIdentityEntries:completion:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Ordering credential identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/rank",
                        "title": "rank",
                        "type": "property"
                      },
                      {
                        "title": "Associating a user",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/user",
                        "title": "user",
                        "type": "property"
                      },
                      {
                        "title": "Distinguishing identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/recordidentifier",
                        "title": "recordIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/serviceidentifier",
                        "title": "serviceIdentifier",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentity",
                    "title": "ASCredentialIdentity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a credential identity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/init(relyingpartyidentifier:username:credentialid:userhandle:recordidentifier:)-9iuhb",
                        "title": "+ identityWithRelyingPartyIdentifier:userName:credentialID:userHandle:recordIdentifier:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/initwithrelyingpartyidentifier:username:credentialid:userhandle:recordidentifier:",
                        "title": "- initWithRelyingPartyIdentifier:userName:credentialID:userHandle:recordIdentifier:",
                        "type": "method"
                      },
                      {
                        "title": "Ordering credential identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/rank",
                        "title": "rank",
                        "type": "property"
                      },
                      {
                        "title": "Associating a user",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/username",
                        "title": "userName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/userhandle",
                        "title": "userHandle",
                        "type": "property"
                      },
                      {
                        "title": "Associating a relying party",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/relyingpartyidentifier",
                        "title": "relyingPartyIdentifier",
                        "type": "property"
                      },
                      {
                        "title": "Distinguishing identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/credentialid",
                        "title": "credentialID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/recordidentifier",
                        "title": "recordIdentifier",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasskeycredentialidentity",
                    "title": "ASPasskeyCredentialIdentity",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a credential identity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/identitywithserviceidentifier:user:recordidentifier:",
                        "title": "+ identityWithServiceIdentifier:user:recordIdentifier:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/init(serviceidentifier:user:recordidentifier:)",
                        "title": "- initWithServiceIdentifier:user:recordIdentifier:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a credential service identifier",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/init(identifier:type:)",
                            "title": "- initWithIdentifier:type:",
                            "type": "method"
                          },
                          {
                            "title": "Identifying the credential service",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifier",
                            "title": "identifier",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/type",
                            "title": "type",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Identifier types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/url",
                                "title": "ASCredentialServiceIdentifierTypeURL",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/domain",
                                "title": "ASCredentialServiceIdentifierTypeDomain",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype",
                            "title": "ASCredentialServiceIdentifierType",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/authenticationservices/ascredentialserviceidentifier",
                        "title": "ASCredentialServiceIdentifier",
                        "type": "class"
                      },
                      {
                        "title": "Ordering credential identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/rank",
                        "title": "rank",
                        "type": "property"
                      },
                      {
                        "title": "Associating a user",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/user",
                        "title": "user",
                        "type": "property"
                      },
                      {
                        "title": "Distinguishing identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/recordidentifier",
                        "title": "recordIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/serviceidentifier",
                        "title": "serviceIdentifier",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasswordcredentialidentity",
                    "title": "ASPasswordCredentialIdentity",
                    "type": "class"
                  },
                  {
                    "title": "Recognizing errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystoreerrordomain",
                    "title": "ASCredentialIdentityStoreErrorDomain",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/internalerror",
                        "title": "ASCredentialIdentityStoreErrorCodeInternalError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/storebusy",
                        "title": "ASCredentialIdentityStoreErrorCodeStoreBusy",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/storedisabled",
                        "title": "ASCredentialIdentityStoreErrorCodeStoreDisabled",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code",
                    "title": "ASCredentialIdentityStoreErrorCode",
                    "type": "enum"
                  },
                  {
                    "title": "Deprecated methods",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/savecredentialidentities(_:completion:)-5vs4m",
                    "title": "- saveCredentialIdentities:completion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/replacecredentialidentities(with:completion:)",
                    "title": "- replaceCredentialIdentitiesWithIdentities:completion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/removecredentialidentities(_:completion:)-2ygnf",
                    "title": "- removeCredentialIdentities:completion:",
                    "type": "method"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/passkey",
                        "title": "ASCredentialIdentityTypesPasskey",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/password",
                        "title": "ASCredentialIdentityTypesPassword",
                        "type": "case"
                      },
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitytypes/ascredentialidentitytypesall",
                        "title": "ASCredentialIdentityTypesAll",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/onetimecode",
                        "title": "ASCredentialIdentityTypesOneTimeCode",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes",
                    "title": "ASCredentialIdentityTypes",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/getcredentialidentitiesforservice:credentialidentitytypes:completionhandler:",
                    "title": "- getCredentialIdentitiesForService:credentialIdentityTypes:completionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialidentitystore",
                "title": "ASCredentialIdentityStore",
                "type": "class"
              },
              {
                "title": "Selecting a credential",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/preparecredentiallist(for:)",
                "title": "- prepareCredentialListForServiceIdentifiers:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/preparecredentiallist(for:requestparameters:)",
                "title": "- prepareCredentialListForServiceIdentifiers:requestParameters:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareonetimecodecredentiallist(for:)",
                "title": "- prepareOneTimeCodeCredentialListForServiceIdentifiers:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterface(forpasskeyregistration:)",
                "title": "- prepareInterfaceForPasskeyRegistration:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfacetoprovidecredential(for:)-68qpo",
                "title": "- prepareInterfaceToProvideCredentialForRequest:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/providecredentialwithoutuserinteraction(for:)-3mo23",
                "title": "- provideCredentialWithoutUserInteractionForRequest:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/performwithoutuserinteractionifpossible(passkeyregistration:)",
                "title": "- performPasskeyRegistrationWithoutUserInteractionIfPossible:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a credential service identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/init(identifier:type:)",
                    "title": "- initWithIdentifier:type:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the credential service",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifier",
                    "title": "identifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifier types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/url",
                        "title": "ASCredentialServiceIdentifierTypeURL",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/domain",
                        "title": "ASCredentialServiceIdentifierTypeDomain",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype",
                    "title": "ASCredentialServiceIdentifierType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialserviceidentifier",
                "title": "ASCredentialServiceIdentifier",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the requested credential type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialrequest/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Credential types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/passkeyassertion",
                        "title": "ASCredentialRequestTypePasskeyAssertion",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/passkeyregistration",
                        "title": "ASCredentialRequestTypePasskeyRegistration",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/password",
                        "title": "ASCredentialRequestTypePassword",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/onetimecode",
                        "title": "ASCredentialRequestTypeOneTimeCode",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialrequesttype",
                    "title": "ASCredentialRequestType",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying credentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialrequest/credentialidentity",
                    "title": "credentialIdentity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialrequest",
                "title": "ASCredentialRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating password credential requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasswordcredentialrequest/init(credentialidentity:)",
                    "title": "- initWithCredentialIdentity:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasswordcredentialrequest/requestwithcredentialidentity:",
                    "title": "+ requestWithCredentialIdentity:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/aspasswordcredentialrequest",
                "title": "ASPasswordCredentialRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asonetimecodecredentialrequest/init(credentialidentity:)",
                    "title": "- initWithCredentialIdentity:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asonetimecodecredentialrequest",
                "title": "ASOneTimeCodeCredentialRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/attestationpreference",
                    "title": "attestationPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/challenge",
                    "title": "challenge",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/displayname",
                    "title": "displayName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/relyingpartyidentifier",
                    "title": "relyingPartyIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userid",
                    "title": "userID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userverificationpreference",
                    "title": "userVerificationPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationPublicKeyCredentialRegistrationRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating passkey credential requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/init(credentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:)-1jihy",
                    "title": "+ requestWithCredentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/initwithcredentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:",
                    "title": "- initWithCredentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:",
                    "type": "method"
                  },
                  {
                    "title": "Viewing passkey challenge information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/clientdatahash",
                    "title": "clientDataHash",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/userverificationpreference",
                    "title": "userVerificationPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/supportedalgorithms-27z68",
                    "title": "supportedAlgorithms",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/assertionextensioninput",
                    "title": "assertionExtensionInput",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/excludedcredentials",
                    "title": "excludedCredentials",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/registrationextensioninput",
                    "title": "registrationExtensionInput",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/initwithcredentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:assertionextensioninput:",
                    "title": "- initWithCredentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:assertionExtensionInput:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/initwithcredentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:registrationextensioninput:",
                    "title": "- initWithCredentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:registrationExtensionInput:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/aspasskeycredentialrequest",
                "title": "ASPasskeyCredentialRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Viewing credential request parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/allowedcredentials",
                    "title": "allowedCredentials",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/clientdatahash",
                    "title": "clientDataHash",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/relyingpartyidentifier",
                    "title": "relyingPartyIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/userverificationpreference",
                    "title": "userVerificationPreference",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/extensioninput-5ny4g",
                    "title": "extensionInput",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters",
                "title": "ASPasskeyCredentialRequestParameters",
                "type": "class"
              },
              {
                "title": "Providing text to AutoFill",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfaceforuserchoosingtexttoinsert()",
                "title": "- prepareInterfaceForUserChoosingTextToInsert",
                "type": "method"
              },
              {
                "title": "Recognizing errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asextensionerrordomain",
                "title": "ASExtensionErrorDomain",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/credentialidentitynotfound",
                    "title": "ASExtensionErrorCodeCredentialIdentityNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/failed",
                    "title": "ASExtensionErrorCodeFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/usercanceled",
                    "title": "ASExtensionErrorCodeUserCanceled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/userinteractionrequired",
                    "title": "ASExtensionErrorCodeUserInteractionRequired",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/matchedexcludedcredential",
                    "title": "ASExtensionErrorCodeMatchedExcludedCredential",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asextensionerror/code",
                "title": "ASExtensionErrorCode",
                "type": "enum"
              },
              {
                "title": "Accessing settings",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Opening the Settings app",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/assettingshelper/opencredentialproviderappsettings(completionhandler:)",
                    "title": "+ openCredentialProviderAppSettingsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/assettingshelper/openverificationcodeappsettings(completionhandler:)",
                    "title": "+ openVerificationCodeAppSettingsWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/assettingshelper/requesttoturnoncredentialproviderextension(completionhandler:)",
                    "title": "+ requestToTurnOnCredentialProviderExtensionWithCompletionHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/assettingshelper",
                "title": "ASSettingsHelper",
                "type": "class"
              },
              {
                "title": "Deprecated methods",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/providecredentialwithoutuserinteraction(for:)-7jlg0",
                "title": "- provideCredentialWithoutUserInteractionForIdentity:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfacetoprovidecredential(for:)-18ukb",
                "title": "- prepareInterfaceToProvideCredentialForIdentity:",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller",
            "title": "ASCredentialProviderViewController",
            "type": "class"
          },
          {
            "title": "Credential migration",
            "type": "groupMarker"
          },
          {
            "title": "Single sign-on (SSO)",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Performing enterprise single sign-on",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an Authorization Provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/init(identityprovider:)",
                    "title": "+ authorizationProviderWithIdentityProviderURL:",
                    "type": "method"
                  },
                  {
                    "title": "Creating Authorization Requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/canperformauthorization",
                    "title": "canPerformAuthorization",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/createrequest()",
                    "title": "- createRequest",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Setting Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsinglesignonrequest/isuserinterfaceenabled",
                        "title": "userInterfaceEnabled",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsinglesignonrequest/authorizationoptions",
                        "title": "authorizationOptions",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonrequest",
                    "title": "ASAuthorizationSingleSignOnRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Setting the Operation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedoperation",
                        "title": "requestedOperation",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Operation Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogin",
                            "title": "ASAuthorizationOperationLogin",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationrefresh",
                            "title": "ASAuthorizationOperationRefresh",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogout",
                            "title": "ASAuthorizationOperationLogout",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationimplicit",
                            "title": "ASAuthorizationOperationImplicit",
                            "type": "var"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation",
                        "title": "ASAuthorizationOpenIDOperation",
                        "type": "typealias"
                      },
                      {
                        "title": "Setting the Scope",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedscopes",
                        "title": "requestedScopes",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Scopes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/email",
                            "title": "ASAuthorizationScopeEmail",
                            "type": "var"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/fullname",
                            "title": "ASAuthorizationScopeFullName",
                            "type": "var"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/scope",
                        "title": "ASAuthorizationScope",
                        "type": "typealias"
                      },
                      {
                        "title": "Setting the State",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "title": "Setting the Nonce",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/nonce",
                        "title": "nonce",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest",
                    "title": "ASAuthorizationOpenIDRequest",
                    "type": "class"
                  },
                  {
                    "title": "Identifying the Identity Provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/url",
                    "title": "url",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider",
                "title": "ASAuthorizationSingleSignOnProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/privatekeys",
                    "title": "privateKeys",
                    "type": "property"
                  },
                  {
                    "title": "Identifying a User",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/identitytoken",
                    "title": "identityToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/accesstoken",
                    "title": "accessToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/state",
                    "title": "state",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/authorizedscopes",
                    "title": "authorizedScopes",
                    "type": "property"
                  },
                  {
                    "title": "Parsing the Response",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/authenticatedresponse",
                    "title": "authenticatedResponse",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential",
                "title": "ASAuthorizationSingleSignOnCredential",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Starting or Canceling a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequesthandler/beginauthorization(with:)",
                    "title": "- beginAuthorizationWithRequest:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequesthandler/cancelauthorization(with:)",
                    "title": "- cancelAuthorizationWithRequest:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing the Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/url",
                        "title": "url",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/httpheaders",
                        "title": "httpHeaders",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/httpbody",
                        "title": "httpBody",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/realm",
                        "title": "realm",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/requestedoperation",
                        "title": "requestedOperation",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Handling Configuration Removal",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation/configurationremoved",
                            "title": "ASAuthorizationProviderAuthorizationOperationConfigurationRemoved",
                            "type": "var"
                          },
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation/directrequest",
                            "title": "ASAuthorizationProviderAuthorizationOperationDirectRequest",
                            "type": "var"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation",
                        "title": "ASAuthorizationProviderAuthorizationOperation",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/authorizationoptions",
                        "title": "authorizationOptions",
                        "type": "property"
                      },
                      {
                        "title": "Getting Context",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/callerbundleidentifier",
                        "title": "callerBundleIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/callerteamidentifier",
                        "title": "callerTeamIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/localizedcallerdisplayname",
                        "title": "localizedCallerDisplayName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/iscallermanaged",
                        "title": "callerManaged",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/extensiondata",
                        "title": "extensionData",
                        "type": "property"
                      },
                      {
                        "title": "Interacting with the User",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/presentauthorizationviewcontroller(completion:)",
                        "title": "- presentAuthorizationViewControllerWithCompletion:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/isuserinterfaceenabled",
                        "title": "userInterfaceEnabled",
                        "type": "property"
                      },
                      {
                        "title": "Completing a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(authorizationresult:)",
                        "title": "- completeWithAuthorizationResult:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete()",
                        "title": "- complete",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(httpauthorizationheaders:)",
                        "title": "- completeWithHTTPAuthorizationHeaders:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(httpresponse:httpbody:)",
                        "title": "- completeWithHTTPResponse:httpBody:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(error:)",
                        "title": "- completeWithError:",
                        "type": "method"
                      },
                      {
                        "title": "Canceling a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/donothandle()",
                        "title": "- doNotHandle",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Supporting Platform Single Sign-On",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/loginmanager",
                        "title": "loginManager",
                        "type": "property"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/calleraudittoken",
                        "title": "callerAuditToken",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest",
                    "title": "ASAuthorizationProviderExtensionAuthorizationRequest",
                    "type": "class"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequesthandler",
                "title": "ASAuthorizationProviderExtensionAuthorizationRequestHandler",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/init(httpauthorizationheaders:)",
                    "title": "- initWithHTTPAuthorizationHeaders:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/init(httpresponse:httpbody:)",
                    "title": "- initWithHTTPResponse:httpBody:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/httpauthorizationheaders",
                    "title": "httpAuthorizationHeaders",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/httpresponse",
                    "title": "httpResponse",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/httpbody",
                    "title": "httpBody",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/privatekeys",
                    "title": "privateKeys",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult",
                "title": "ASAuthorizationProviderExtensionAuthorizationResult",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions/preferimmediatelyavailablecredentials",
                    "title": "ASAuthorizationControllerRequestOptionPreferImmediatelyAvailableCredentials",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions",
                "title": "ASAuthorizationControllerRequestOptions",
                "type": "enum"
              }
            ],
            "path": "/documentation/authenticationservices/enterprise-single-sign-on-sso",
            "title": "Enterprise single sign-on (SSO)",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/creating-extensions-that-support-platform-sso",
                "title": "Creating extensions that support platform SSO",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/registering-devices-and-users",
                "title": "Registering devices and users",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Registering users and devices",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/begindeviceregistration(loginmanager:options:completion:)",
                    "title": "- beginDeviceRegistrationUsingLoginManager:options:completion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/beginuserregistration(loginmanager:username:method:options:completion:)",
                    "title": "- beginUserRegistrationUsingLoginManager:userName:authenticationMethod:options:completion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/registrationdidcomplete()",
                    "title": "- registrationDidComplete",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/protocolversion()",
                    "title": "- protocolVersion",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/registrationdidcancel()",
                    "title": "- registrationDidCancel",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supportedgranttypes()",
                    "title": "- supportedGrantTypes",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/keywillrotate(for:newkey:loginmanager:completion:)",
                    "title": "- keyWillRotateForKeyType:newKey:loginManager:completion:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supporteddeviceencryptionalgorithms",
                    "title": "supportedDeviceEncryptionAlgorithms",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supporteddevicesigningalgorithms",
                    "title": "supportedDeviceSigningAlgorithms",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supportedusersecureenclavekeysigningalgorithms",
                    "title": "supportedUserSecureEnclaveKeySigningAlgorithms",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler",
                "title": "ASAuthorizationProviderExtensionRegistrationHandler",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod/password",
                    "title": "ASAuthorizationProviderExtensionAuthenticationMethodPassword",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod/usersecureenclavekey",
                    "title": "ASAuthorizationProviderExtensionAuthenticationMethodUserSecureEnclaveKey",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod/smartcard",
                    "title": "ASAuthorizationProviderExtensionAuthenticationMethodSmartCard",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod",
                "title": "ASAuthorizationProviderExtensionAuthenticationMethod",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Identifying the options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/asauthorizationproviderextensionrequestoptionsnone",
                    "title": "ASAuthorizationProviderExtensionRequestOptionsNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/registrationrepair",
                    "title": "ASAuthorizationProviderExtensionRequestOptionsRegistrationRepair",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/userinteractionenabled",
                    "title": "ASAuthorizationProviderExtensionRequestOptionsUserInteractionEnabled",
                    "type": "case"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/registrationdevicekeymigration",
                    "title": "ASAuthorizationProviderExtensionRequestOptionsRegistrationDeviceKeyMigration",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/registrationshareddevicekeys",
                    "title": "ASAuthorizationProviderExtensionRequestOptionsRegistrationSharedDeviceKeys",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/userkeyinvalid",
                    "title": "ASAuthorizationProviderExtensionRequestOptionsUserKeyInvalid",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/strongerkeyavailable",
                    "title": "ASAuthorizationProviderExtensionRequestOptionsStrongerKeyAvailable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions",
                "title": "ASAuthorizationProviderExtensionRequestOptions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Identifying the results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/failed",
                    "title": "ASAuthorizationProviderExtensionRegistrationResultFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/failednoretry",
                    "title": "ASAuthorizationProviderExtensionRegistrationResultFailedNoRetry",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/success",
                    "title": "ASAuthorizationProviderExtensionRegistrationResultSuccess",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/userinterfacerequired",
                    "title": "ASAuthorizationProviderExtensionRegistrationResultUserInterfaceRequired",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult",
                "title": "ASAuthorizationProviderExtensionRegistrationResult",
                "type": "enum"
              },
              {
                "title": "Configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/configuring-device-management",
                "title": "Configuring Device Management",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/configuring-authentication-with-the-identity-provider-idp",
                "title": "Configuring authentication with the identity provider (IdP)",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating the configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/init(clientid:issuer:tokenendpointurl:jwksendpointurl:audience:)",
                    "title": "- initWithClientID:issuer:tokenEndpointURL:jwksEndpointURL:audience:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/configuration(openidconfigurationurl:clientid:issuer:completion:)",
                    "title": "+ configurationWithOpenIDConfigurationURL:clientID:issuer:completion:",
                    "type": "method"
                  },
                  {
                    "title": "Obtaining the required configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/audience",
                    "title": "audience",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/clientid",
                    "title": "clientID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/jwksendpointurl",
                    "title": "jwksEndpointURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/tokenendpointurl",
                    "title": "tokenEndpointURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/issuer",
                    "title": "issuer",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining the recommended configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/accountdisplayname",
                    "title": "accountDisplayName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/invalidcredentialpredicate",
                    "title": "invalidCredentialPredicate",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the server nonce",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customnoncerequestvalues",
                    "title": "customNonceRequestValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/nonceendpointurl",
                    "title": "nonceEndpointURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/nonceresponsekeypath",
                    "title": "nonceResponseKeypath",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/servernonceclaimname",
                    "title": "serverNonceClaimName",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the previous refresh token",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/includepreviousrefreshtokeninloginrequest",
                    "title": "includePreviousRefreshTokenInLoginRequest",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/previousrefreshtokenclaimname",
                    "title": "previousRefreshTokenClaimName",
                    "type": "property"
                  },
                  {
                    "title": "Customizing the authentication request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomassertionrequestbodyclaims(_:)",
                    "title": "- setCustomAssertionRequestBodyClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomassertionrequestheaderclaims(_:)",
                    "title": "- setCustomAssertionRequestHeaderClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomloginrequestbodyclaims(_:)",
                    "title": "- setCustomLoginRequestBodyClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomloginrequestheaderclaims(_:)",
                    "title": "- setCustomLoginRequestHeaderClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/additionalscopes",
                    "title": "additionalScopes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customloginrequestvalues",
                    "title": "customLoginRequestValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/kerberosticketmappings",
                    "title": "kerberosTicketMappings",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/additionalauthorizationscopes",
                    "title": "additionalAuthorizationScopes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customfederationuserpreauthenticationrequestvalues",
                    "title": "customFederationUserPreauthenticationRequestValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customkeyexchangerequestvalues",
                    "title": "customKeyExchangeRequestValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customkeyrequestvalues",
                    "title": "customKeyRequestValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customrefreshrequestvalues",
                    "title": "customRefreshRequestValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customrequestjwtparametername",
                    "title": "customRequestJWTParameterName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/devicecontext",
                    "title": "deviceContext",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationmexurl",
                    "title": "federationMEXURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationmexurlkeypath",
                    "title": "federationMEXURLKeypath",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationpredicate",
                    "title": "federationPredicate",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationrequesturn",
                    "title": "federationRequestURN",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.property",
                    "title": "federationType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationuserpreauthenticationurl",
                    "title": "federationUserPreauthenticationURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/grouprequestclaimname",
                    "title": "groupRequestClaimName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/groupresponseclaimname",
                    "title": "groupResponseClaimName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/keyendpointurl",
                    "title": "keyEndpointURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequestencryptionapvprefix",
                    "title": "loginRequestEncryptionAPVPrefix",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequestencryptionpublickey",
                    "title": "loginRequestEncryptionPublicKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/refreshendpointurl",
                    "title": "refreshEndpointURL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/uniqueidentifierclaimname",
                    "title": "uniqueIdentifierClaimName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.property",
                    "title": "userSecureEnclaveKeyBiometricPolicy",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/jwkstrustedrootcertificates-605jm",
                    "title": "jwksTrustedRootCertificates",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/hpkeauthpublickey",
                    "title": "hpkeAuthPublicKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/hpkepresharedkey",
                    "title": "hpkePreSharedKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/hpkepresharedkeyid",
                    "title": "hpkePreSharedKeyID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequestencryptionalgorithm",
                    "title": "loginRequestEncryptionAlgorithm",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequesthpkepresharedkey",
                    "title": "loginRequestHPKEPreSharedKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequesthpkepresharedkeyid",
                    "title": "loginRequestHPKEPreSharedKeyID",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyexchangerequestbodyclaims(_:)",
                    "title": "- setCustomKeyExchangeRequestBodyClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyexchangerequestheaderclaims(_:)",
                    "title": "- setCustomKeyExchangeRequestHeaderClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyrequestbodyclaims(_:)",
                    "title": "- setCustomKeyRequestBodyClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyrequestheaderclaims(_:)",
                    "title": "- setCustomKeyRequestHeaderClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomrefreshrequestbodyclaims(_:)",
                    "title": "- setCustomRefreshRequestBodyClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomrefreshrequestheaderclaims(_:)",
                    "title": "- setCustomRefreshRequestHeaderClaims:returningError:",
                    "type": "method"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/passwordfallback",
                        "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyPasswordFallback",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/reuseduringunlock",
                        "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyReuseDuringUnlock",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchany",
                        "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyTouchIDOrWatchAny",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchcurrentset",
                        "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyTouchIDOrWatchCurrentSet",
                        "type": "case"
                      },
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionusersecureenclavekeybiometricpolicy/asauthorizationproviderextensionusersecureenclavekeybiometricpolicynone",
                        "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyNone",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct",
                    "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicy",
                    "type": "enum"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/dynamicwstrust",
                        "title": "ASAuthorizationProviderExtensionFederationTypeDynamicWSTrust",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/none",
                        "title": "ASAuthorizationProviderExtensionFederationTypeNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/wstrust",
                        "title": "ASAuthorizationProviderExtensionFederationTypeWSTrust",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum",
                    "title": "ASAuthorizationProviderExtensionFederationType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration",
                "title": "ASAuthorizationProviderExtensionLoginConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Performing registration",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/loginusername",
                    "title": "loginUserName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/registrationtoken",
                    "title": "registrationToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/presentregistrationviewcontroller(completion:)",
                    "title": "- presentRegistrationViewControllerWithCompletion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/savecertificate(_:keytype:)",
                    "title": "- saveCertificate:keyType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/saveloginconfiguration(_:)",
                    "title": "- saveLoginConfiguration:error:",
                    "type": "method"
                  },
                  {
                    "title": "Performing authentication",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifying the key types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/userdeviceencryption",
                        "title": "ASAuthorizationProviderExtensionKeyTypeUserDeviceEncryption",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/userdevicesigning",
                        "title": "ASAuthorizationProviderExtensionKeyTypeUserDeviceSigning",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/usersecureenclavekey",
                        "title": "ASAuthorizationProviderExtensionKeyTypeUserSecureEnclaveKey",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/currentdeviceencryption",
                        "title": "ASAuthorizationProviderExtensionKeyTypeCurrentDeviceEncryption",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/currentdevicesigning",
                        "title": "ASAuthorizationProviderExtensionKeyTypeCurrentDeviceSigning",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/shareddeviceencryption",
                        "title": "ASAuthorizationProviderExtensionKeyTypeSharedDeviceEncryption",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/shareddevicesigning",
                        "title": "ASAuthorizationProviderExtensionKeyTypeSharedDeviceSigning",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/usersmartcard",
                        "title": "ASAuthorizationProviderExtensionKeyTypeUserSmartCard",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype",
                    "title": "ASAuthorizationProviderExtensionKeyType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/isdeviceregistered",
                    "title": "deviceRegistered",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/isuserregistered",
                    "title": "userRegistered",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/loginconfiguration",
                    "title": "loginConfiguration",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/ssotokens",
                    "title": "ssoTokens",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/identity(for:)",
                    "title": "- copyIdentityForKeyType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/key(for:)",
                    "title": "- copyKeyForKeyType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/userneedsreauthentication(completion:)",
                    "title": "- userNeedsReauthenticationWithCompletion:",
                    "type": "method"
                  },
                  {
                    "title": "Repairing registrations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/userregistrationsneedsrepair()",
                    "title": "- userRegistrationsNeedsRepair",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/deviceregistrationsneedsrepair()",
                    "title": "- deviceRegistrationsNeedsRepair",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/resetkeys()",
                    "title": "- resetKeys",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/extensiondata",
                    "title": "extensionData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/userloginconfiguration",
                    "title": "userLoginConfiguration",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/decryptionkeysneedrepair()",
                    "title": "- decryptionKeysNeedRepair",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/resetdevicekeys()",
                    "title": "- resetDeviceKeys",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/resetusersecureenclavekey()",
                    "title": "- resetUserSecureEnclaveKey",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/saveuserloginconfiguration(_:)",
                    "title": "- saveUserLoginConfiguration:error:",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/attestkey:clientdatahash:completion:",
                    "title": "- attestKey:clientDataHash:completion:",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/attestpendingkey:clientdatahash:completion:",
                    "title": "- attestPendingKey:clientDataHash:completion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/beginkeyrotation(_:)",
                    "title": "- beginKeyRotationForKeyType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/completekeyrotation(_:)",
                    "title": "- completeKeyRotationForKeyType:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager",
                "title": "ASAuthorizationProviderExtensionLoginManager",
                "type": "class"
              },
              {
                "title": "Authentication",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Pre-login",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/obtaining-a-server-nonce",
                    "title": "Obtaining a server nonce",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-preauthentication-request",
                    "title": "Performing a preauthentication request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-ws-trust-metadata-exchange-data-mex-request",
                    "title": "Performing a WS-Trust metadata exchange data (MEX) request",
                    "type": "article"
                  },
                  {
                    "title": "Login request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-ws-trust-login-request",
                    "title": "Performing a WS-Trust login request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-an-embedded-assertion",
                    "title": "Creating an embedded assertion",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-an-encrypted-embedded-assertion",
                    "title": "Creating an encrypted embedded assertion",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-and-validating-a-login-request",
                    "title": "Creating and validating a login request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-a-refresh-request",
                    "title": "Creating a refresh request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/supporting-key-requests-and-key-exchange-requests",
                    "title": "Supporting key requests and key exchange requests",
                    "type": "article"
                  },
                  {
                    "title": "Login response",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-a-json-web-encryption-jwe-login-response",
                    "title": "Creating a JSON Web Encryption (JWE) login response",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/processing-the-json-web-encryption-jwe-login-response",
                    "title": "Processing the JSON Web Encryption (JWE) login response",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-encryption-verification",
                    "title": "Performing encryption verification",
                    "type": "article"
                  }
                ],
                "path": "/documentation/authenticationservices/authentication-process",
                "title": "Authentication process",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/clientnamekeyname",
                    "title": "clientNameKeyName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/encryptionkeytypekeyname",
                    "title": "encryptionKeyTypeKeyName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/messagebufferkeyname",
                    "title": "messageBufferKeyName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/realmkeyname",
                    "title": "realmKeyName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/servicenamekeyname",
                    "title": "serviceNameKeyName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/sessionkeykeyname",
                    "title": "sessionKeyKeyName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/ticketkeypath",
                    "title": "ticketKeyPath",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping",
                "title": "ASAuthorizationProviderExtensionKerberosMapping",
                "type": "class"
              }
            ],
            "path": "/documentation/authenticationservices/platform-single-sign-on-sso",
            "title": "Platform single sign-on (SSO)",
            "type": "collection"
          },
          {
            "title": "Apple TV authentication",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/asauthorizationcontroller/customauthorizationmethods",
            "title": "customAuthorizationMethods",
            "type": "property"
          },
          {
            "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(_:didcompletewithcustommethod:)",
            "title": "- authorizationController:didCompleteWithCustomMethod:",
            "type": "method"
          },
          {
            "children": [
              {
                "title": "Getting the Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcustommethod/videosubscriberaccount",
                "title": "ASAuthorizationCustomMethodVideoSubscriberAccount",
                "type": "var"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcustommethod/restorepurchase",
                "title": "ASAuthorizationCustomMethodRestorePurchase",
                "type": "var"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcustommethod/other",
                "title": "ASAuthorizationCustomMethodOther",
                "type": "var"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationcustommethod",
            "title": "ASAuthorizationCustomMethod",
            "type": "typealias"
          },
          {
            "title": "Automatic security upgrades",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/upgrading-account-security-with-an-account-authentication-modification-extension",
            "title": "Upgrading Account Security With an Account Authentication Modification Extension",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Initiating Security Upgrades from Your App",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller/perform(_:)",
                "title": "- performRequest:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating Upgrade Requests in Your App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/init(user:serviceidentifier:userinfo:)",
                    "title": "- initWithUser:serviceIdentifier:userInfo:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/user",
                    "title": "user",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/serviceidentifier",
                    "title": "serviceIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/userinfo",
                    "title": "userInfo",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest",
                "title": "ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating Upgrade Requests in Your App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/init(user:serviceidentifier:userinfo:)",
                    "title": "- initWithUser:serviceIdentifier:userInfo:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/user",
                    "title": "user",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/serviceidentifier",
                    "title": "serviceIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/userinfo",
                    "title": "userInfo",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest",
                "title": "ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest",
                "type": "class"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationrequest",
                "title": "ASAccountAuthenticationModificationRequest",
                "type": "class"
              },
              {
                "title": "Configuring Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller/presentationcontextprovider",
                "title": "presentationContextProvider",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller/delegate",
                "title": "delegate",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller",
            "title": "ASAccountAuthenticationModificationController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Upgrading to Sign in with Apple",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/convertaccounttosigninwithapplewithoutuserinteraction(for:existingcredential:userinfo:)",
                "title": "- convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/prepareinterfacetoconvertaccounttosigninwithapple(for:existingcredential:userinfo:)",
                "title": "- prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:",
                "type": "method"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsextension/asaccountauthenticationmodificationsupportsupgradetosigninwithapple",
                "title": "ASAccountAuthenticationModificationSupportsUpgradeToSignInWithApple",
                "type": "typealias"
              },
              {
                "title": "Upgrading to Strong Passwords",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/changepasswordwithoutuserinteraction(for:existingcredential:newpassword:userinfo:)",
                "title": "- changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/prepareinterfacetochangepassword(for:existingcredential:newpassword:userinfo:)",
                "title": "- prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:",
                "type": "method"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsextension/asaccountauthenticationmodificationsupportsstrongpasswordchange",
                "title": "ASAccountAuthenticationModificationSupportsStrongPasswordChange",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsextension/asaccountauthenticationmodificationpasswordgenerationrequirements",
                "title": "ASAccountAuthenticationModificationPasswordGenerationRequirements",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/asaccountauthenticationmodificationoptoutofsecuritypromptsonsignin",
                "title": "ASAccountAuthenticationModificationOptOutOfSecurityPromptsOnSignIn",
                "type": "typealias"
              },
              {
                "title": "Handling Modification Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/cancelrequest()",
                "title": "- cancelRequest",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Handling Requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerdelegate/accountauthenticationmodificationcontroller(_:didsuccessfullycomplete:userinfo:)",
                    "title": "- accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerdelegate/accountauthenticationmodificationcontroller(_:didfail:error:)",
                    "title": "- accountAuthenticationModificationController:didFailRequest:withError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerdelegate",
                "title": "ASAccountAuthenticationModificationControllerDelegate",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Presenting the Account Modification Interface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerpresentationcontextproviding/presentationanchor(for:)",
                    "title": "- presentationAnchorForAccountAuthenticationModificationController:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerpresentationcontextproviding",
                "title": "ASAccountAuthenticationModificationControllerPresentationContextProviding",
                "type": "protocol"
              },
              {
                "title": "Getting the Extension Context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/extensioncontext",
                "title": "extensionContext",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller",
            "title": "ASAccountAuthenticationModificationViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Handling Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/completeupgradetosigninwithapple(userinfo:)",
                "title": "- completeUpgradeToSignInWithAppleWithUserInfo:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/completechangepasswordrequest(updatedcredential:userinfo:)",
                "title": "- completeChangePasswordRequestWithUpdatedCredential:userInfo:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/getsigninwithappleupgradeauthorization(state:nonce:completionhandler:)",
                "title": "- getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/cancelrequest(witherror:)",
                "title": "- cancelRequestWithError:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asextensionlocalizedfailurereasonerrorkey",
                "title": "ASExtensionLocalizedFailureReasonErrorKey",
                "type": "var"
              }
            ],
            "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext",
            "title": "ASAccountAuthenticationModificationExtensionContext",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/dynamicwstrust",
                    "title": "ASAuthorizationProviderExtensionFederationTypeDynamicWSTrust",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/none",
                    "title": "ASAuthorizationProviderExtensionFederationTypeNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/wstrust",
                    "title": "ASAuthorizationProviderExtensionFederationTypeWSTrust",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum",
                "title": "ASAuthorizationProviderExtensionFederationType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/passwordfallback",
                    "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyPasswordFallback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/reuseduringunlock",
                    "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyReuseDuringUnlock",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchany",
                    "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyTouchIDOrWatchAny",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchcurrentset",
                    "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyTouchIDOrWatchCurrentSet",
                    "type": "case"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionusersecureenclavekeybiometricpolicy/asauthorizationproviderextensionusersecureenclavekeybiometricpolicynone",
                    "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicyNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct",
                "title": "ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicy",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionplatformssoprotocolversion/version1_0",
                    "title": "ASAuthorizationProviderExtensionPlatformSSOProtocolVersion1_0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionplatformssoprotocolversion/version2_0",
                    "title": "ASAuthorizationProviderExtensionPlatformSSOProtocolVersion2_0",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionplatformssoprotocolversion",
                "title": "ASAuthorizationProviderExtensionPlatformSSOProtocolVersion",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/jwtbearer",
                    "title": "ASAuthorizationProviderExtensionSupportedGrantTypesJWTBearer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/password",
                    "title": "ASAuthorizationProviderExtensionSupportedGrantTypesPassword",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/saml1_1",
                    "title": "ASAuthorizationProviderExtensionSupportedGrantTypesSAML1_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/saml2_0",
                    "title": "ASAuthorizationProviderExtensionSupportedGrantTypesSAML2_0",
                    "type": "case"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/asauthorizationproviderextensionsupportedgranttypesnone",
                    "title": "ASAuthorizationProviderExtensionSupportedGrantTypesNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes",
                "title": "ASAuthorizationProviderExtensionSupportedGrantTypes",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattachment/crossplatform",
                    "title": "ASAuthorizationPublicKeyCredentialAttachmentCrossPlatform",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattachment/platform",
                    "title": "ASAuthorizationPublicKeyCredentialAttachmentPlatform",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattachment",
                "title": "ASAuthorizationPublicKeyCredentialAttachment",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/passkey",
                    "title": "ASCredentialIdentityTypesPasskey",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/password",
                    "title": "ASCredentialIdentityTypesPassword",
                    "type": "case"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitytypes/ascredentialidentitytypesall",
                    "title": "ASCredentialIdentityTypesAll",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/onetimecode",
                    "title": "ASCredentialIdentityTypesOneTimeCode",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes",
                "title": "ASCredentialIdentityTypes",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue/crossorigin",
                    "title": "ASPublicKeyCredentialClientDataCrossOriginValueCrossOrigin",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue/notset",
                    "title": "ASPublicKeyCredentialClientDataCrossOriginValueNotSet",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue/sameoriginwithancestors",
                    "title": "ASPublicKeyCredentialClientDataCrossOriginValueSameOriginWithAncestors",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue",
                "title": "ASPublicKeyCredentialClientDataCrossOriginValue",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuseragerange/child",
                    "title": "ASUserAgeRangeChild",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuseragerange/notchild",
                    "title": "ASUserAgeRangeNotChild",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuseragerange/unknown",
                    "title": "ASUserAgeRangeUnknown",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asuseragerange",
                "title": "ASUserAgeRange",
                "type": "enum"
              }
            ],
            "path": "/documentation/authenticationservices/authenticationservices-enumerations",
            "title": "AuthenticationServices Enumerations",
            "type": "collection"
          },
          {
            "path": "/documentation/authenticationservices/authenticationservices-data-types",
            "title": "AuthenticationServices Data Types",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/init(loginusername:)",
                "title": "- initWithLoginUserName:",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/loginusername",
                "title": "loginUserName",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomassertionrequestbodyclaims(_:)",
                "title": "- setCustomAssertionRequestBodyClaims:returningError:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomassertionrequestheaderclaims(_:)",
                "title": "- setCustomAssertionRequestHeaderClaims:returningError:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomloginrequestbodyclaims(_:)",
                "title": "- setCustomLoginRequestBodyClaims:returningError:",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomloginrequestheaderclaims(_:)",
                "title": "- setCustomLoginRequestHeaderClaims:returningError:",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration",
            "title": "ASAuthorizationProviderExtensionUserLoginConfiguration",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asonetimecodecredentialidentity/label",
                "title": "label",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asonetimecodecredentialidentity/init(serviceidentifier:label:recordidentifier:)",
                "title": "- initWithServiceIdentifier:label:recordIdentifier:",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/asonetimecodecredentialidentity",
            "title": "ASOneTimeCodeCredentialIdentity",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialassertionrequest/clientdata-z5qa",
                "title": "clientData",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialassertionrequest",
            "title": "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialregistrationrequest/clientdata-t1ze",
                "title": "clientData",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialregistrationrequest",
            "title": "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm",
            "title": "ASAuthorizationProviderExtensionEncryptionAlgorithm",
            "type": "typealias"
          },
          {
            "path": "/documentation/authenticationservices/asauthorizationproviderextensionsigningalgorithm",
            "title": "ASAuthorizationProviderExtensionSigningAlgorithm",
            "type": "typealias"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/authenticationservices",
        "title": "Authentication Services",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Authorization requests",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a controller",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/init(authorizationrequests:)",
                "title": "init(authorizationRequests: [ASAuthorizationRequest])",
                "type": "init"
              },
              {
                "title": "Inspecting requests",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting the Provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationrequest/provider",
                    "title": "var provider: any ASAuthorizationProvider",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationprovider",
                    "title": "ASAuthorizationProvider",
                    "type": "protocol"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationrequest",
                "title": "ASAuthorizationRequest",
                "type": "class"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/authorizationrequests",
                "title": "var authorizationRequests: [ASAuthorizationRequest]",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/customauthorizationmethods",
                "title": "var customAuthorizationMethods: [ASAuthorizationCustomMethod]",
                "type": "property"
              },
              {
                "title": "Presenting requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/presentationcontextprovider",
                "title": "var presentationContextProvider: (any ASAuthorizationControllerPresentationContextProviding)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Anchor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerpresentationcontextproviding/presentationanchor(for:)",
                    "title": "func presentationAnchor(for: ASAuthorizationController) -> ASPresentationAnchor",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspresentationanchor",
                    "title": "ASPresentationAnchor",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontrollerpresentationcontextproviding",
                "title": "ASAuthorizationControllerPresentationContextProviding",
                "type": "protocol"
              },
              {
                "title": "Executing requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/performrequests()",
                "title": "func performRequests()",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/performrequests(options:)",
                "title": "func performRequests(options: ASAuthorizationController.RequestOptions)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/performautofillassistedrequests()",
                "title": "func performAutoFillAssistedRequests()",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions/preferimmediatelyavailablecredentials",
                    "title": "static var preferImmediatelyAvailableCredentials: ASAuthorizationController.RequestOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions",
                "title": "ASAuthorizationController.RequestOptions",
                "type": "struct"
              },
              {
                "title": "Responding to request completion",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontroller/delegate",
                "title": "var delegate: (any ASAuthorizationControllerDelegate)?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(_:didcompletewithcustommethod:)",
                "title": "func authorizationController(ASAuthorizationController, didCompleteWithCustomMethod: ASAuthorizationCustomMethod)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Handling Successful Authorization",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(_:didcompletewithcustommethod:)",
                    "title": "func authorizationController(ASAuthorizationController, didCompleteWithCustomMethod: ASAuthorizationCustomMethod)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(controller:didcompletewithauthorization:)",
                    "title": "func authorizationController(controller: ASAuthorizationController, didCompleteWithAuthorization: ASAuthorization)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Provider",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/provider",
                        "title": "var provider: any ASAuthorizationProvider",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/credential",
                        "title": "var credential: any ASAuthorizationCredential",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationcredential",
                        "title": "ASAuthorizationCredential",
                        "type": "protocol"
                      },
                      {
                        "title": "Characterizing an Authorization",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Scopes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/email",
                            "title": "static let email: ASAuthorization.Scope",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/fullname",
                            "title": "static let fullName: ASAuthorization.Scope",
                            "type": "property"
                          },
                          {
                            "title": "Creating a Scope",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/init(rawvalue:)",
                            "title": "init(rawValue: String)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/scope",
                        "title": "ASAuthorization.Scope",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Operation Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogin",
                            "title": "static let operationLogin: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationrefresh",
                            "title": "static let operationRefresh: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogout",
                            "title": "static let operationLogout: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationimplicit",
                            "title": "static let operationImplicit: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "title": "Creating an Operation",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/init(rawvalue:)",
                            "title": "init(rawValue: String)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation",
                        "title": "ASAuthorization.OpenIDOperation",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorization",
                    "title": "ASAuthorization",
                    "type": "class"
                  },
                  {
                    "title": "Handling Authorization Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(controller:didcompletewitherror:)",
                    "title": "func authorizationController(controller: ASAuthorizationController, didCompleteWithError: any Error)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationerrordomain",
                    "title": "let ASAuthorizationErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/notinteractive",
                        "title": "static var notInteractive: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "title": "Error Domain",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerrordomain",
                        "title": "let ASAuthorizationErrorDomain: String",
                        "type": "var"
                      },
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/canceled",
                        "title": "static var canceled: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/failed",
                        "title": "static var failed: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/invalidresponse",
                        "title": "static var invalidResponse: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/nothandled",
                        "title": "static var notHandled: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/unknown",
                        "title": "static var unknown: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/credentialexport",
                        "title": "static var credentialExport: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/credentialimport",
                        "title": "static var credentialImport: ASAuthorizationError.Code",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/canceled",
                            "title": "case canceled",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/failed",
                            "title": "case failed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/invalidresponse",
                            "title": "case invalidResponse",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/nothandled",
                            "title": "case notHandled",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/unknown",
                            "title": "case unknown",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/notinteractive",
                            "title": "case notInteractive",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/credentialexport",
                            "title": "case credentialExport",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/credentialimport",
                            "title": "case credentialImport",
                            "type": "case"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/matchedexcludedcredential",
                            "title": "case matchedExcludedCredential",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/code",
                        "title": "ASAuthorizationError.Code",
                        "type": "enum"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct/matchedexcludedcredential",
                        "title": "static var matchedExcludedCredential: ASAuthorizationError.Code",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationerror-swift.struct",
                    "title": "ASAuthorizationError",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate",
                "title": "ASAuthorizationControllerDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationcontroller",
            "title": "ASAuthorizationController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Performing requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performrequest(_:)",
                "title": "func performRequest(ASAuthorizationRequest) async throws -> ASAuthorizationResult",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performrequests(_:)",
                "title": "func performRequests([ASAuthorizationRequest]) async throws -> ASAuthorizationResult",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performrequest(_:options:)",
                "title": "func performRequest(ASAuthorizationRequest, options: ASAuthorizationController.RequestOptions) async throws -> ASAuthorizationResult",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performrequests(_:options:)",
                "title": "func performRequests([ASAuthorizationRequest], options: ASAuthorizationController.RequestOptions) async throws -> ASAuthorizationResult",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performrequest(_:custommethods:)",
                "title": "func performRequest(ASAuthorizationRequest, customMethods: [ASAuthorizationCustomMethod]) async throws -> ASAuthorizationResult",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performrequests(_:custommethods:)",
                "title": "func performRequests([ASAuthorizationRequest], customMethods: [ASAuthorizationCustomMethod]) async throws -> ASAuthorizationResult",
                "type": "method"
              },
              {
                "title": "Performing assisted requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performautofillassistedrequest(_:)",
                "title": "func performAutoFillAssistedRequest(ASAuthorizationRequest) async throws -> ASAuthorizationResult",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/authorizationcontroller/performautofillassistedrequests(_:)",
                "title": "func performAutoFillAssistedRequests([ASAuthorizationRequest]) async throws -> ASAuthorizationResult",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/authorizationcontroller",
            "title": "AuthorizationController",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Authorization results",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationresult/appleid(_:)",
                "title": "case appleID(ASAuthorizationAppleIDCredential)",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationresult/custommethod(_:)",
                "title": "case customMethod(ASAuthorizationCustomMethod)",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationresult/passkeyassertion(_:)",
                "title": "case passkeyAssertion(ASAuthorizationPlatformPublicKeyCredentialAssertion)",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationresult/passkeyregistration(_:)",
                "title": "case passkeyRegistration(ASAuthorizationPlatformPublicKeyCredentialRegistration)",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationresult/password(_:)",
                "title": "case password(ASPasswordCredential)",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationresult/securitykeyassertion(_:)",
                "title": "case securityKeyAssertion(ASAuthorizationSecurityKeyPublicKeyCredentialAssertion)",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationresult/securitykeyregistration(_:)",
                "title": "case securityKeyRegistration(ASAuthorizationSecurityKeyPublicKeyCredentialRegistration)",
                "type": "case"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationresult",
            "title": "ASAuthorizationResult",
            "type": "enum"
          },
          {
            "title": "Sign In with Apple",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/implementing-user-authentication-with-sign-in-with-apple",
            "title": "Implementing User Authentication with Sign in with Apple",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/authenticationservices/simplifying-user-authentication-in-a-tvos-app",
            "title": "Simplifying User Authentication in a tvOS App",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a button",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/signinwithapplebutton/init(_:onrequest:oncompletion:)",
                "title": "init(SignInWithAppleButton.Label, onRequest: (ASAuthorizationAppleIDRequest) -> Void, onCompletion: (Result<ASAuthorization, any Error>) -> Void)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/signinwithapplebutton/label/continue",
                    "title": "static let `continue`: SignInWithAppleButton.Label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/signinwithapplebutton/label/signin",
                    "title": "static let signIn: SignInWithAppleButton.Label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/signinwithapplebutton/label/signup",
                    "title": "static let signUp: SignInWithAppleButton.Label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/signinwithapplebutton/label",
                "title": "SignInWithAppleButton.Label",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Styles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/signinwithapplebutton/style/black",
                    "title": "static let black: SignInWithAppleButton.Style",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/signinwithapplebutton/style/white",
                    "title": "static let white: SignInWithAppleButton.Style",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/signinwithapplebutton/style/whiteoutline",
                    "title": "static let whiteOutline: SignInWithAppleButton.Style",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/signinwithapplebutton/style",
                "title": "SignInWithAppleButton.Style",
                "type": "struct"
              }
            ],
            "path": "/documentation/authenticationservices/signinwithapplebutton",
            "title": "SignInWithAppleButton",
            "type": "struct"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.applesignin",
            "title": "Sign in with Apple Entitlement",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Offering Sign In with Apple",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/init(authorizationbuttontype:authorizationbuttonstyle:)",
                    "title": "init(authorizationButtonType: ASAuthorizationAppleIDButton.ButtonType, authorizationButtonStyle: ASAuthorizationAppleIDButton.Style)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/init(type:style:)",
                    "title": "convenience init(type: ASAuthorizationAppleIDButton.ButtonType, style: ASAuthorizationAppleIDButton.Style)",
                    "type": "init"
                  },
                  {
                    "title": "Styling the Button",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/cornerradius",
                    "title": "var cornerRadius: CGFloat",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Choosing a Button Style",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style/black",
                        "title": "case black",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style/white",
                        "title": "case white",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style/whiteoutline",
                        "title": "case whiteOutline",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/style",
                    "title": "ASAuthorizationAppleIDButton.Style",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Choosing a Button Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/continue",
                        "title": "case `continue`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/default",
                        "title": "static var `default`: ASAuthorizationAppleIDButton.ButtonType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/signup",
                        "title": "case signUp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/signin",
                        "title": "case signIn",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationappleidbutton/buttontype",
                    "title": "ASAuthorizationAppleIDButton.ButtonType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationappleidbutton",
                "title": "ASAuthorizationAppleIDButton",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/watchkit/wkinterfaceauthorizationappleidbutton",
                "title": "WKInterfaceAuthorizationAppleIDButton",
                "type": "class"
              },
              {
                "title": "Creating Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/createrequest()",
                "title": "func createRequest() -> ASAuthorizationAppleIDRequest",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Setting the User",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidrequest/user",
                    "title": "var user: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationappleidrequest",
                "title": "ASAuthorizationAppleIDRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting the Operation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedoperation",
                    "title": "var requestedOperation: ASAuthorization.OpenIDOperation",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Operation Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogin",
                        "title": "static let operationLogin: ASAuthorization.OpenIDOperation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationrefresh",
                        "title": "static let operationRefresh: ASAuthorization.OpenIDOperation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogout",
                        "title": "static let operationLogout: ASAuthorization.OpenIDOperation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationimplicit",
                        "title": "static let operationImplicit: ASAuthorization.OpenIDOperation",
                        "type": "property"
                      },
                      {
                        "title": "Creating an Operation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/init(_:)",
                        "title": "init(String)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorization/openidoperation",
                    "title": "ASAuthorization.OpenIDOperation",
                    "type": "struct"
                  },
                  {
                    "title": "Setting the Scope",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedscopes",
                    "title": "var requestedScopes: [ASAuthorization.Scope]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Scopes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/scope/email",
                        "title": "static let email: ASAuthorization.Scope",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/scope/fullname",
                        "title": "static let fullName: ASAuthorization.Scope",
                        "type": "property"
                      },
                      {
                        "title": "Creating a Scope",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/scope/init(_:)",
                        "title": "init(String)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorization/scope/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorization/scope",
                    "title": "ASAuthorization.Scope",
                    "type": "struct"
                  },
                  {
                    "title": "Setting the State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/state",
                    "title": "var state: String?",
                    "type": "property"
                  },
                  {
                    "title": "Setting the Nonce",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest/nonce",
                    "title": "var nonce: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationopenidrequest",
                "title": "ASAuthorizationOpenIDRequest",
                "type": "class"
              },
              {
                "title": "Getting State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/getcredentialstate(foruserid:completion:)",
                "title": "func getCredentialState(forUserID: String, completion: (ASAuthorizationAppleIDProvider.CredentialState, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "User Credential States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/authorized",
                    "title": "case authorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/notfound",
                    "title": "case notFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/revoked",
                    "title": "case revoked",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/transferred",
                    "title": "case transferred",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialstate",
                "title": "ASAuthorizationAppleIDProvider.CredentialState",
                "type": "enum"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidprovider/credentialrevokednotification",
                "title": "class let credentialRevokedNotification: NSNotification.Name",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationappleidprovider",
            "title": "ASAuthorizationAppleIDProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying a User",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/identitytoken",
                "title": "var identityToken: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/authorizationcode",
                "title": "var authorizationCode: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/state",
                "title": "var state: String?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/user",
                "title": "var user: String",
                "type": "property"
              },
              {
                "title": "Getting Contact Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/authorizedscopes",
                "title": "var authorizedScopes: [ASAuthorization.Scope]",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/fullname",
                "title": "var fullName: PersonNameComponents?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/email",
                "title": "var email: String?",
                "type": "property"
              },
              {
                "title": "Detecting User Characteristics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/realuserstatus",
                "title": "var realUserStatus: ASUserDetectionStatus",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "User Status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuserdetectionstatus/likelyreal",
                    "title": "case likelyReal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuserdetectionstatus/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuserdetectionstatus/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuserdetectionstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asuserdetectionstatus",
                "title": "ASUserDetectionStatus",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationappleidcredential/useragerange",
                "title": "var userAgeRange: ASUserAgeRange",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationappleidcredential",
            "title": "ASAuthorizationAppleIDCredential",
            "type": "class"
          },
          {
            "title": "Passwords",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/security/password-autofill",
            "title": "Password AutoFill",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creating Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpasswordprovider/createrequest()",
                "title": "func createRequest() -> ASAuthorizationPasswordRequest",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpasswordrequest",
                "title": "ASAuthorizationPasswordRequest",
                "type": "class"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpasswordprovider",
            "title": "ASAuthorizationPasswordProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a credential",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasswordcredential/init(user:password:)",
                "title": "init(user: String, password: String)",
                "type": "init"
              },
              {
                "title": "Accessing the username and password",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasswordcredential/user",
                "title": "var user: String",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspasswordcredential/password",
                "title": "var password: String",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aspasswordcredential",
            "title": "ASPasswordCredential",
            "type": "class"
          },
          {
            "title": "Passkeys",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Fundamentals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/connecting-to-a-service-with-passkeys",
                "title": "Connecting to a service with passkeys",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/authenticationservices/supporting-passkeys",
                "title": "Supporting passkeys",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/supporting-security-key-authentication-using-physical-keys",
                "title": "Supporting Security Key Authentication Using Physical Keys",
                "type": "article"
              },
              {
                "title": "Account registration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting attestation information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistration/rawattestationobject",
                    "title": "var rawAttestationObject: Data?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistration",
                "title": "ASAuthorizationPublicKeyCredentialRegistration",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration/attachment",
                    "title": "var attachment: ASAuthorizationPublicKeyCredentialAttachment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration/largeblob-5nvj9",
                    "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration/prf-3xcqu",
                    "title": "var prf: ASAuthorizationPublicKeyCredentialPRFRegistrationOutput?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistration",
                "title": "ASAuthorizationPlatformPublicKeyCredentialRegistration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistration/transports",
                    "title": "var transports: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistration",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialRegistration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/attestationpreference",
                    "title": "var attestationPreference: ASAuthorizationPublicKeyCredentialAttestationKind",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/challenge",
                    "title": "var challenge: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/displayname",
                    "title": "var displayName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/relyingpartyidentifier",
                    "title": "var relyingPartyIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userid",
                    "title": "var userID: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userverificationpreference",
                    "title": "var userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationPublicKeyCredentialRegistrationRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/largeblob-5ismm",
                    "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/prf-3d9iw",
                    "title": "var prf: ASAuthorizationPublicKeyCredentialPRFRegistrationInput?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/requeststyle-swift.property",
                    "title": "var requestStyle: ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.RequestStyle",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/requeststyle-swift.enum/conditional",
                        "title": "case conditional",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/requeststyle-swift.enum/standard",
                        "title": "case standard",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/requeststyle-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest/requeststyle-swift.enum",
                    "title": "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.RequestStyle",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest/credentialparameters",
                    "title": "var credentialParameters: [ASAuthorizationPublicKeyCredentialParameters]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest/excludedcredentials",
                    "title": "var excludedCredentials: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest/residentkeypreference",
                    "title": "var residentKeyPreference: ASAuthorizationPublicKeyCredentialResidentKeyPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialregistrationrequest",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest",
                "type": "class"
              },
              {
                "title": "Account authentication",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion/signature",
                    "title": "var signature: Data!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion/userid",
                    "title": "var userID: Data!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion/rawauthenticatordata",
                    "title": "var rawAuthenticatorData: Data!",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertion",
                "title": "ASAuthorizationPublicKeyCredentialAssertion",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating requests",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/allowedcredentials",
                        "title": "var allowedCredentials: [ASAuthorizationPlatformPublicKeyCredentialDescriptor]",
                        "type": "property"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/largeblob-9kvvl",
                        "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/prf-47uoa",
                        "title": "var prf: ASAuthorizationPublicKeyCredentialPRFAssertionInput?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/prf-60tle",
                        "title": "var prf: __ASAuthorizationPublicKeyCredentialPRFAssertionInput?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest",
                    "title": "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating the descriptor",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor/init(credentialid:)",
                        "title": "init(credentialID: Data)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor",
                    "title": "ASAuthorizationPlatformPublicKeyCredentialDescriptor",
                    "type": "class"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion/attachment",
                    "title": "var attachment: ASAuthorizationPublicKeyCredentialAttachment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion/largeblob-29ggs",
                    "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion/prf-8o9sr",
                    "title": "var prf: ASAuthorizationPublicKeyCredentialPRFAssertionOutput?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertion",
                "title": "ASAuthorizationPlatformPublicKeyCredentialAssertion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertion/appid",
                    "title": "var appID: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertion",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialAssertion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/challenge",
                    "title": "var challenge: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/relyingpartyidentifier",
                    "title": "var relyingPartyIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/allowedcredentials",
                    "title": "var allowedCredentials: [any ASAuthorizationPublicKeyCredentialDescriptor]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest/userverificationpreference",
                    "title": "var userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialassertionrequest",
                "title": "ASAuthorizationPublicKeyCredentialAssertionRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/allowedcredentials",
                    "title": "var allowedCredentials: [ASAuthorizationPlatformPublicKeyCredentialDescriptor]",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/largeblob-9kvvl",
                    "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/prf-47uoa",
                    "title": "var prf: ASAuthorizationPublicKeyCredentialPRFAssertionInput?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest/prf-60tle",
                    "title": "var prf: __ASAuthorizationPublicKeyCredentialPRFAssertionInput?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialassertionrequest",
                "title": "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertionrequest/allowedcredentials",
                    "title": "var allowedCredentials: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor]",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertionrequest/appid",
                    "title": "var appID: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialassertionrequest",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest",
                "type": "class"
              },
              {
                "title": "Credential providers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating the provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/init(relyingpartyidentifier:)",
                    "title": "init(relyingPartyIdentifier: String)",
                    "type": "init"
                  },
                  {
                    "title": "Creating the request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/relyingpartyidentifier",
                    "title": "var relyingPartyIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/createcredentialassertionrequest(challenge:)",
                    "title": "func createCredentialAssertionRequest(challenge: Data) -> ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/createcredentialregistrationrequest(challenge:name:userid:)",
                    "title": "func createCredentialRegistrationRequest(challenge: Data, name: String, userID: Data) -> ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider/createcredentialregistrationrequest(challenge:name:userid:requeststyle:)",
                    "title": "func createCredentialRegistrationRequest(challenge: Data, name: String, userID: Data, requestStyle: ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.RequestStyle) -> ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialprovider",
                "title": "ASAuthorizationPlatformPublicKeyCredentialProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/init(relyingpartyidentifier:)",
                    "title": "init(relyingPartyIdentifier: String)",
                    "type": "init"
                  },
                  {
                    "title": "Creating the request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/relyingpartyidentifier",
                    "title": "var relyingPartyIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/createcredentialassertionrequest(challenge:)",
                    "title": "func createCredentialAssertionRequest(challenge: Data) -> ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider/createcredentialregistrationrequest(challenge:displayname:name:userid:)",
                    "title": "func createCredentialRegistrationRequest(challenge: Data, displayName: String, name: String, userID: Data) -> ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialprovider",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialProvider",
                "type": "class"
              },
              {
                "title": "Request configuration",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredential/credentialid",
                    "title": "var credentialID: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredential/rawclientdatajson",
                    "title": "var rawClientDataJSON: Data",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/aspublickeycredential",
                "title": "ASPublicKeyCredential",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Getting the parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialparameters/init(algorithm:)",
                    "title": "init(algorithm: ASCOSEAlgorithmIdentifier)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialparameters/algorithm",
                    "title": "var algorithm: ASCOSEAlgorithmIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialparameters",
                "title": "ASAuthorizationPublicKeyCredentialParameters",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascosealgorithmidentifier/init(_:)",
                    "title": "init(Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascosealgorithmidentifier/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascosealgorithmidentifier/es256",
                    "title": "static let ES256: ASCOSEAlgorithmIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/ascosealgorithmidentifier",
                "title": "ASCOSEAlgorithmIdentifier",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascoseellipticcurveidentifier/init(_:)",
                    "title": "init(Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascoseellipticcurveidentifier/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascoseellipticcurveidentifier/p256",
                    "title": "static let P256: ASCOSEEllipticCurveIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/ascoseellipticcurveidentifier",
                "title": "ASCOSEEllipticCurveIdentifier",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the attestation type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting attestation types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/none",
                    "title": "static let none: ASAuthorizationPublicKeyCredentialAttestationKind",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/direct",
                    "title": "static let direct: ASAuthorizationPublicKeyCredentialAttestationKind",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/enterprise",
                    "title": "static let enterprise: ASAuthorizationPublicKeyCredentialAttestationKind",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind/indirect",
                    "title": "static let indirect: ASAuthorizationPublicKeyCredentialAttestationKind",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattestationkind",
                "title": "ASAuthorizationPublicKeyCredentialAttestationKind",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the preference",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting preferences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/discouraged",
                    "title": "static let discouraged: ASAuthorizationPublicKeyCredentialResidentKeyPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/preferred",
                    "title": "static let preferred: ASAuthorizationPublicKeyCredentialResidentKeyPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference/required",
                    "title": "static let required: ASAuthorizationPublicKeyCredentialResidentKeyPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialresidentkeypreference",
                "title": "ASAuthorizationPublicKeyCredentialResidentKeyPreference",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the preference",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting preferences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/discouraged",
                    "title": "static let discouraged: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/preferred",
                    "title": "static let preferred: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference/required",
                    "title": "static let required: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialuserverificationpreference",
                "title": "ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the credential",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialdescriptor/credentialid",
                    "title": "var credentialID: Data",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialdescriptor",
                "title": "ASAuthorizationPublicKeyCredentialDescriptor",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating the descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor/init(credentialid:)",
                    "title": "init(credentialID: Data)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationplatformpublickeycredentialdescriptor",
                "title": "ASAuthorizationPlatformPublicKeyCredentialDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/init(credentialid:transports:)",
                    "title": "init(credentialID: Data, transports: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transports",
                    "title": "var transports: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating the transport type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/init(_:)",
                        "title": "init(String)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      },
                      {
                        "title": "Getting the properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/allsupported",
                        "title": "static var allSupported: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/bluetooth",
                        "title": "static let bluetooth: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/nfc",
                        "title": "static let nfc: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/usb",
                        "title": "static let usb: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport",
                    "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating the transport type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/allsupported",
                    "title": "static var allSupported: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/bluetooth",
                    "title": "static let bluetooth: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/nfc",
                    "title": "static let nfc: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/usb",
                    "title": "static let usb: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport",
                "title": "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport",
                "type": "struct"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationsecuritykeypublickeycredentialdescriptor/transport/allsupported",
                "title": "static var allSupported: [ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.Transport]",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/public-private-key-authentication",
            "title": "Public-Private Key Authentication",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Website authorization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/authenticating-people-by-using-passkeys-in-browser-apps",
                "title": "Authenticating people by using passkeys in browser apps",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating credential managers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Requesting access to passkeys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstateforplatformcredentials",
                    "title": "var authorizationStateForPlatformCredentials: ASAuthorizationWebBrowserPublicKeyCredentialManager.AuthorizationState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/requestauthorizationforpublickeycredentials(_:)",
                    "title": "func requestAuthorizationForPublicKeyCredentials((ASAuthorizationWebBrowserPublicKeyCredentialManager.AuthorizationState) -> Void)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Passkey access states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate/authorized",
                        "title": "case authorized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate/denied",
                        "title": "case denied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate/notdetermined",
                        "title": "case notDetermined",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/authorizationstate",
                    "title": "ASAuthorizationWebBrowserPublicKeyCredentialManager.AuthorizationState",
                    "type": "enum"
                  },
                  {
                    "title": "Using passkeys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager/platformcredentials(forrelyingparty:)",
                    "title": "func platformCredentials(forRelyingParty: String) async -> [ASAuthorizationWebBrowserPlatformPublicKeyCredential]",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing credentials",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-swift.struct/customtitle",
                        "title": "let customTitle: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-swift.struct/name",
                        "title": "let name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-swift.struct/providername",
                        "title": "let providerName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-swift.struct/relyingparty",
                        "title": "let relyingParty: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-swift.struct/userhandle",
                        "title": "let userHandle: Data",
                        "type": "property"
                      },
                      {
                        "title": "Identifying credentials",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-swift.struct/credentialid",
                        "title": "let credentialID: Data",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredential-swift.struct",
                    "title": "ASAuthorizationWebBrowserPlatformPublicKeyCredential",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager",
                "title": "ASAuthorizationWebBrowserPublicKeyCredentialManager",
                "type": "class"
              },
              {
                "title": "Website authentication requests",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Local authentication",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserexternallyauthenticatablerequest/authenticatedcontext",
                    "title": "var authenticatedContext: LAContext?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserexternallyauthenticatablerequest",
                "title": "ASAuthorizationWebBrowserExternallyAuthenticatableRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Information about the assertion",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialassertionrequest/clientdata-655pi",
                    "title": "var clientData: ASPublicKeyCredentialClientData?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialassertionrequest/shouldshowhybridtransport",
                    "title": "var shouldShowHybridTransport: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialassertionrequest",
                "title": "ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Information about the assertion",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest/clientdata-5dk66",
                    "title": "var clientData: ASPublicKeyCredentialClientData?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest/excludedcredentials",
                    "title": "var excludedCredentials: [ASAuthorizationPlatformPublicKeyCredentialDescriptor]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest/shouldshowhybridtransport",
                    "title": "var shouldShowHybridTransport: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest",
                "type": "protocol"
              },
              {
                "title": "Website credential providers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialprovider-19bq/createcredentialassertionrequest(clientdata:)",
                    "title": "func createCredentialAssertionRequest(clientData: ASPublicKeyCredentialClientData) -> ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialprovider-19bq/createcredentialregistrationrequest(clientdata:name:userid:)",
                    "title": "func createCredentialRegistrationRequest(clientData: ASPublicKeyCredentialClientData, name: String, userID: Data) -> ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialprovider-19bq/createcredentialregistrationrequest(clientdata:name:userid:requeststyle:)",
                    "title": "func createCredentialRegistrationRequest(clientData: ASPublicKeyCredentialClientData, name: String, userID: Data, requestStyle: ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.RequestStyle) -> ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationwebbrowserplatformpublickeycredentialprovider-19bq",
                "title": "ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider",
                "type": "protocol"
              }
            ],
            "path": "/documentation/authenticationservices/passkey-use-in-web-browsers",
            "title": "Passkey use in web browsers",
            "type": "collection"
          },
          {
            "path": "/documentation/authenticationservices/connecting-to-a-service-with-passkeys",
            "title": "Connecting to a service with passkeys",
            "type": "sampleCode"
          },
          {
            "title": "Web authentication sessions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/authenticating-a-user-through-a-web-service",
            "title": "Authenticating a User Through a Web Service",
            "type": "article"
          },
          {
            "path": "/documentation/authenticationservices/securing-logins-with-icloud-keychain-verification-codes",
            "title": "Securing Logins with iCloud Keychain Verification Codes",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a Session",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/authenticationservices/aswebauthenticationsession/init(url:callbackurlscheme:completionhandler:)",
                "title": "init(url: URL, callbackURLScheme: String?, completionHandler: ASWebAuthenticationSession.CompletionHandler)",
                "type": "init"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/completionhandler",
                "title": "ASWebAuthenticationSession.CompletionHandler",
                "type": "typealias"
              },
              {
                "title": "Configuring a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/prefersephemeralwebbrowsersession",
                "title": "var prefersEphemeralWebBrowserSession: Bool",
                "type": "property"
              },
              {
                "title": "Starting and Stopping a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/canstart",
                "title": "var canStart: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/start()",
                "title": "func start() -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/cancel()",
                "title": "func cancel()",
                "type": "method"
              },
              {
                "title": "Presenting a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/presentationcontextprovider",
                "title": "var presentationContextProvider: (any ASWebAuthenticationPresentationContextProviding)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Anchor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationpresentationcontextproviding/presentationanchor(for:)",
                    "title": "func presentationAnchor(for: ASWebAuthenticationSession) -> ASPresentationAnchor",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspresentationanchor",
                    "title": "ASPresentationAnchor",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationpresentationcontextproviding",
                "title": "ASWebAuthenticationPresentationContextProviding",
                "type": "protocol"
              },
              {
                "title": "Recognizing Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerrordomain",
                    "title": "let ASWebAuthenticationSessionErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/canceledlogin",
                    "title": "static var canceledLogin: ASWebAuthenticationSessionError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/presentationcontextnotprovided",
                    "title": "static var presentationContextNotProvided: ASWebAuthenticationSessionError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/presentationcontextinvalid",
                    "title": "static var presentationContextInvalid: ASWebAuthenticationSessionError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/canceledlogin",
                        "title": "case canceledLogin",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/presentationcontextnotprovided",
                        "title": "case presentationContextNotProvided",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/presentationcontextinvalid",
                        "title": "case presentationContextInvalid",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code",
                    "title": "ASWebAuthenticationSessionError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationsessionerror",
                "title": "ASWebAuthenticationSessionError",
                "type": "struct"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionerrordomain",
                "title": "let ASWebAuthenticationSessionErrorDomain: String",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/canceledlogin",
                    "title": "case canceledLogin",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/presentationcontextnotprovided",
                    "title": "case presentationContextNotProvided",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/presentationcontextinvalid",
                    "title": "case presentationContextInvalid",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationsessionerror/code",
                "title": "ASWebAuthenticationSessionError.Code",
                "type": "enum"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/init(url:callback:completionhandler:)",
                "title": "init(url: URL, callback: ASWebAuthenticationSession.Callback, completionHandler: ASWebAuthenticationSession.CompletionHandler)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsession/additionalheaderfields",
                "title": "var additionalHeaderFields: [String : String]?",
                "type": "property"
              },
              {
                "title": "Classes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsession/callback/matchesurl(_:)",
                    "title": "func matchesURL(URL) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsession/callback/customscheme(_:)",
                    "title": "class func customScheme(String) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsession/callback/https(host:path:)",
                    "title": "class func https(host: String, path: String) -> Self",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationsession/callback",
                "title": "ASWebAuthenticationSession.Callback",
                "type": "class"
              }
            ],
            "path": "/documentation/authenticationservices/aswebauthenticationsession",
            "title": "ASWebAuthenticationSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Authenticating a session",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/authenticationservices/webauthenticationsession/authenticate(using:callbackurlscheme:preferredbrowsersession:)",
                "title": "func authenticate(using: URL, callbackURLScheme: String, preferredBrowserSession: WebAuthenticationSession.BrowserSession?) async throws -> URL",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Behaviors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/webauthenticationsession/browsersession/ephemeral",
                    "title": "static var ephemeral: WebAuthenticationSession.BrowserSession",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/webauthenticationsession/browsersession/shared",
                    "title": "static var shared: WebAuthenticationSession.BrowserSession",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/webauthenticationsession/browsersession",
                "title": "WebAuthenticationSession.BrowserSession",
                "type": "struct"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/webauthenticationsession/authenticate(using:callback:preferredbrowsersession:additionalheaderfields:)",
                "title": "func authenticate(using: URL, callback: ASWebAuthenticationSession.Callback, preferredBrowserSession: WebAuthenticationSession.BrowserSession?, additionalHeaderFields: [String : String]) async throws -> URL",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/webauthenticationsession",
            "title": "WebAuthenticationSession",
            "type": "struct"
          },
          {
            "path": "/documentation/authenticationservices/supporting-single-sign-on-in-a-web-browser-app",
            "title": "Supporting Single Sign-On in a Web Browser App",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the Shared Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager/shared",
                "title": "class var shared: ASWebAuthenticationSessionWebBrowserSessionManager",
                "type": "property"
              },
              {
                "title": "Handling a Session Request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager/sessionhandler",
                "title": "var sessionHandler: any ASWebAuthenticationSessionWebBrowserSessionHandling",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Starting and Stopping a Session Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionhandling/begin(_:)",
                    "title": "func begin(ASWebAuthenticationSessionRequest!)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionhandling/cancel(_:)",
                    "title": "func cancel(ASWebAuthenticationSessionRequest!)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Interpreting a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/url",
                        "title": "var url: URL",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/callbackurlscheme",
                        "title": "var callbackURLScheme: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/shoulduseephemeralsession",
                        "title": "var shouldUseEphemeralSession: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/uuid",
                        "title": "var uuid: UUID",
                        "type": "property"
                      },
                      {
                        "title": "Finishing a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/complete(withcallbackurl:)",
                        "title": "func complete(withCallbackURL: URL)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/cancelwitherror(_:)",
                        "title": "func cancelWithError(any Error)",
                        "type": "method"
                      },
                      {
                        "title": "Indicating Completion",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/delegate",
                        "title": "var delegate: (any ASWebAuthenticationSessionRequestDelegate)?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Responding to Completion Events",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/aswebauthenticationsessionrequestdelegate/authenticationsessionrequest(_:didcompletewithcallbackurl:)",
                            "title": "func authenticationSessionRequest(ASWebAuthenticationSessionRequest, didCompleteWithCallbackURL: URL)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/authenticationservices/aswebauthenticationsessionrequestdelegate/authenticationsessionrequest(_:didcancelwitherror:)",
                            "title": "func authenticationSessionRequest(ASWebAuthenticationSessionRequest, didCancelWithError: any Error)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequestdelegate",
                        "title": "ASWebAuthenticationSessionRequestDelegate",
                        "type": "protocol"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/additionalheaderfields",
                        "title": "var additionalHeaderFields: [String : String]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest/callback",
                        "title": "var callback: ASWebAuthenticationSession.Callback?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aswebauthenticationsessionrequest",
                    "title": "ASWebAuthenticationSessionRequest",
                    "type": "class"
                  }
                ],
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionhandling",
                "title": "ASWebAuthenticationSessionWebBrowserSessionHandling",
                "type": "protocol"
              },
              {
                "title": "Querying the Manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager/waslaunchedbyauthenticationservices",
                "title": "var wasLaunchedByAuthenticationServices: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aswebauthenticationsessionwebbrowsersessionmanager",
            "title": "ASWebAuthenticationSessionWebBrowserSessionManager",
            "type": "class"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/aswebauthenticationsessionwebbrowsersupportcapabilities",
            "title": "ASWebAuthenticationSessionWebBrowserSupportCapabilities",
            "type": "dictionary"
          },
          {
            "title": "AutoFill credentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/providing-one-time-passcodes-to-autofill",
            "title": "Providing one-time passcodes to AutoFill",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.authentication-services.autofill-credential-provider",
            "title": "AutoFill Credential Provider Entitlement",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Getting the extension context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/extensioncontext",
                "title": "var extensionContext: ASCredentialProviderExtensionContext",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Configuring the extension",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeextensionconfigurationrequest()",
                    "title": "func completeExtensionConfigurationRequest()",
                    "type": "method"
                  },
                  {
                    "title": "Providing credentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completerequest(withselectedcredential:completionhandler:)",
                    "title": "func completeRequest(withSelectedCredential: ASPasswordCredential, completionHandler: ((Bool) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeassertionrequest(using:completionhandler:)",
                    "title": "func completeAssertionRequest(using: ASPasskeyAssertionCredential, completionHandler: ((Bool) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeregistrationrequest(using:completionhandler:)",
                    "title": "func completeRegistrationRequest(using: ASPasskeyRegistrationCredential, completionHandler: ((Bool) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completeonetimecoderequest(using:completionhandler:)",
                    "title": "func completeOneTimeCodeRequest(using: ASOneTimeCodeCredential, completionHandler: ((Bool) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredential/init(user:password:)",
                        "title": "init(user: String, password: String)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the username and password",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredential/user",
                        "title": "var user: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredential/password",
                        "title": "var password: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasswordcredential",
                    "title": "ASPasswordCredential",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a passkey assertion credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/init(userhandle:relyingparty:signature:clientdatahash:authenticatordata:credentialid:)",
                        "title": "init(userHandle: Data, relyingParty: String, signature: Data, clientDataHash: Data, authenticatorData: Data, credentialID: Data)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing credential information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/authenticatordata",
                        "title": "var authenticatorData: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/clientdatahash",
                        "title": "var clientDataHash: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/credentialid",
                        "title": "var credentialID: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/relyingparty",
                        "title": "var relyingParty: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/signature",
                        "title": "var signature: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/userhandle",
                        "title": "var userHandle: Data",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/init(userhandle:relyingparty:signature:clientdatahash:authenticatordata:credentialid:extensionoutput:)",
                        "title": "convenience init(userHandle: Data, relyingParty: String, signature: Data, clientDataHash: Data, authenticatorData: Data, credentialID: Data, extensionOutput: ASPasskeyAssertionCredentialExtensionOutput?)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyassertioncredential/extensionoutput-7t6rn",
                        "title": "var extensionOutput: ASPasskeyAssertionCredentialExtensionOutput?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasskeyassertioncredential",
                    "title": "ASPasskeyAssertionCredential",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a passkey registration credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/init(relyingparty:clientdatahash:credentialid:attestationobject:)",
                        "title": "init(relyingParty: String, clientDataHash: Data, credentialID: Data, attestationObject: Data)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing credential information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/attestationobject",
                        "title": "var attestationObject: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/clientdatahash",
                        "title": "var clientDataHash: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/credentialid",
                        "title": "var credentialID: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/relyingparty",
                        "title": "var relyingParty: String",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/init(relyingparty:clientdatahash:credentialid:attestationobject:extensionoutput:)",
                        "title": "convenience init(relyingParty: String, clientDataHash: Data, credentialID: Data, attestationObject: Data, extensionOutput: ASPasskeyRegistrationCredentialExtensionOutput?)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeyregistrationcredential/extensionoutput-2lf9m",
                        "title": "var extensionOutput: ASPasskeyRegistrationCredentialExtensionOutput?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasskeyregistrationcredential",
                    "title": "ASPasskeyRegistrationCredential",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an OTP credential",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asonetimecodecredential/init(code:)",
                        "title": "init(code: String)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing the OTP",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asonetimecodecredential/code",
                        "title": "var code: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asonetimecodecredential",
                    "title": "ASOneTimeCodeCredential",
                    "type": "class"
                  },
                  {
                    "title": "Providing text to AutoFill",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/completerequest(withtexttoinsert:completionhandler:)",
                    "title": "func completeRequest(withTextToInsert: String, completionHandler: ((Bool) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Canceling",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext/cancelrequest(witherror:)",
                    "title": "func cancelRequest(withError: any Error)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialproviderextensioncontext",
                "title": "ASCredentialProviderExtensionContext",
                "type": "class"
              },
              {
                "title": "Configuring the credential provider extension",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfaceforextensionconfiguration()",
                "title": "func prepareInterfaceForExtensionConfiguration()",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting the shared store",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/shared",
                    "title": "class var shared: ASCredentialIdentityStore",
                    "type": "property"
                  },
                  {
                    "title": "Checking the state of the store",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/getstate(_:)",
                    "title": "func getState((ASCredentialIdentityStoreState) -> Void)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Checking the state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystorestate/isenabled",
                        "title": "var isEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystorestate/supportsincrementalupdates",
                        "title": "var supportsIncrementalUpdates: Bool",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentitystorestate",
                    "title": "ASCredentialIdentityStoreState",
                    "type": "class"
                  },
                  {
                    "title": "Adding and removing credential identities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/savecredentialidentities(_:completion:)-1bbx6",
                    "title": "func saveCredentialIdentities([any ASCredentialIdentity], completion: ((Bool, (any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/replacecredentialidentities(_:completion:)",
                    "title": "func replaceCredentialIdentities([any ASCredentialIdentity], completion: ((Bool, (any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/removeallcredentialidentities(_:)",
                    "title": "func removeAllCredentialIdentities(((Bool, (any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/removecredentialidentities(_:completion:)-67lcw",
                    "title": "func removeCredentialIdentities([any ASCredentialIdentity], completion: ((Bool, (any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Ordering credential identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/rank",
                        "title": "var rank: Int",
                        "type": "property"
                      },
                      {
                        "title": "Associating a user",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/user",
                        "title": "var user: String",
                        "type": "property"
                      },
                      {
                        "title": "Distinguishing identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/recordidentifier",
                        "title": "var recordIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentity/serviceidentifier",
                        "title": "var serviceIdentifier: ASCredentialServiceIdentifier",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentity",
                    "title": "ASCredentialIdentity",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a credential identity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/init(relyingpartyidentifier:username:credentialid:userhandle:recordidentifier:)-7u7p1",
                        "title": "convenience init(relyingPartyIdentifier: String, userName: String, credentialID: Data, userHandle: Data, recordIdentifier: String?)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/init(relyingpartyidentifier:username:credentialid:userhandle:recordidentifier:)-9iuhb",
                        "title": "convenience init(relyingPartyIdentifier: String, userName: String, credentialID: Data, userHandle: Data, recordIdentifier: String?)",
                        "type": "init"
                      },
                      {
                        "title": "Ordering credential identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/rank",
                        "title": "var rank: Int",
                        "type": "property"
                      },
                      {
                        "title": "Associating a user",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/username",
                        "title": "var userName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/userhandle",
                        "title": "var userHandle: Data",
                        "type": "property"
                      },
                      {
                        "title": "Associating a relying party",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/relyingpartyidentifier",
                        "title": "var relyingPartyIdentifier: String",
                        "type": "property"
                      },
                      {
                        "title": "Distinguishing identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/credentialid",
                        "title": "var credentialID: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasskeycredentialidentity/recordidentifier",
                        "title": "var recordIdentifier: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasskeycredentialidentity",
                    "title": "ASPasskeyCredentialIdentity",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a credential identity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/init(serviceidentifier:user:recordidentifier:)",
                        "title": "init(serviceIdentifier: ASCredentialServiceIdentifier, user: String, recordIdentifier: String?)",
                        "type": "init"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a credential service identifier",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/init(identifier:type:)",
                            "title": "init(identifier: String, type: ASCredentialServiceIdentifier.IdentifierType)",
                            "type": "init"
                          },
                          {
                            "title": "Identifying the credential service",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifier",
                            "title": "var identifier: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/type",
                            "title": "var type: ASCredentialServiceIdentifier.IdentifierType",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Identifier types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/url",
                                "title": "case URL",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/domain",
                                "title": "case domain",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype",
                            "title": "ASCredentialServiceIdentifier.IdentifierType",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/authenticationservices/ascredentialserviceidentifier",
                        "title": "ASCredentialServiceIdentifier",
                        "type": "class"
                      },
                      {
                        "title": "Ordering credential identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/rank",
                        "title": "var rank: Int",
                        "type": "property"
                      },
                      {
                        "title": "Associating a user",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/user",
                        "title": "var user: String",
                        "type": "property"
                      },
                      {
                        "title": "Distinguishing identities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/recordidentifier",
                        "title": "var recordIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/aspasswordcredentialidentity/serviceidentifier",
                        "title": "var serviceIdentifier: ASCredentialServiceIdentifier",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/aspasswordcredentialidentity",
                    "title": "ASPasswordCredentialIdentity",
                    "type": "class"
                  },
                  {
                    "title": "Recognizing errors",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Error domain",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerrordomain",
                        "title": "let ASCredentialIdentityStoreErrorDomain: String",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/internalerror",
                        "title": "static var internalError: ASCredentialIdentityStoreError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/storebusy",
                        "title": "static var storeBusy: ASCredentialIdentityStoreError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/storedisabled",
                        "title": "static var storeDisabled: ASCredentialIdentityStoreError.Code",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/internalerror",
                            "title": "case internalError",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/storebusy",
                            "title": "case storeBusy",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/storedisabled",
                            "title": "case storeDisabled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code",
                        "title": "ASCredentialIdentityStoreError.Code",
                        "type": "enum"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentitystoreerror",
                    "title": "ASCredentialIdentityStoreError",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystoreerrordomain",
                    "title": "let ASCredentialIdentityStoreErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/internalerror",
                        "title": "case internalError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/storebusy",
                        "title": "case storeBusy",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/storedisabled",
                        "title": "case storeDisabled",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentitystoreerror/code",
                    "title": "ASCredentialIdentityStoreError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Deprecated methods",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/savecredentialidentities(_:completion:)-5vs4m",
                    "title": "func saveCredentialIdentities([ASPasswordCredentialIdentity], completion: ((Bool, (any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/replacecredentialidentities(with:completion:)",
                    "title": "func replaceCredentialIdentities(with: [ASPasswordCredentialIdentity], completion: ((Bool, (any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/removecredentialidentities(_:completion:)-2ygnf",
                    "title": "func removeCredentialIdentities([ASPasswordCredentialIdentity], completion: ((Bool, (any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/credentialidentities(forservice:credentialidentitytypes:)",
                    "title": "func credentialIdentities(forService: ASCredentialServiceIdentifier?, credentialIdentityTypes: ASCredentialIdentityStore.IdentityTypes) async -> [any ASCredentialIdentity]",
                    "type": "method"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/passkey",
                        "title": "static var passkey: ASCredentialIdentityStore.IdentityTypes",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/password",
                        "title": "static var password: ASCredentialIdentityStore.IdentityTypes",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/onetimecode",
                        "title": "static var oneTimeCode: ASCredentialIdentityStore.IdentityTypes",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes",
                    "title": "ASCredentialIdentityStore.IdentityTypes",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialidentitystore",
                "title": "ASCredentialIdentityStore",
                "type": "class"
              },
              {
                "title": "Selecting a credential",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/preparecredentiallist(for:)",
                "title": "func prepareCredentialList(for: [ASCredentialServiceIdentifier])",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/preparecredentiallist(for:requestparameters:)",
                "title": "func prepareCredentialList(for: [ASCredentialServiceIdentifier], requestParameters: ASPasskeyCredentialRequestParameters)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareonetimecodecredentiallist(for:)",
                "title": "func prepareOneTimeCodeCredentialList(for: [ASCredentialServiceIdentifier])",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterface(forpasskeyregistration:)",
                "title": "func prepareInterface(forPasskeyRegistration: any ASCredentialRequest)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfacetoprovidecredential(for:)-68qpo",
                "title": "func prepareInterfaceToProvideCredential(for: any ASCredentialRequest)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/providecredentialwithoutuserinteraction(for:)-3mo23",
                "title": "func provideCredentialWithoutUserInteraction(for: any ASCredentialRequest)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/performwithoutuserinteractionifpossible(passkeyregistration:)",
                "title": "func performWithoutUserInteractionIfPossible(passkeyRegistration: ASPasskeyCredentialRequest)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a credential service identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/init(identifier:type:)",
                    "title": "init(identifier: String, type: ASCredentialServiceIdentifier.IdentifierType)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying the credential service",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifier",
                    "title": "var identifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/type",
                    "title": "var type: ASCredentialServiceIdentifier.IdentifierType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifier types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/url",
                        "title": "case URL",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/domain",
                        "title": "case domain",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialserviceidentifier/identifiertype",
                    "title": "ASCredentialServiceIdentifier.IdentifierType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialserviceidentifier",
                "title": "ASCredentialServiceIdentifier",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the requested credential type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialrequest/type",
                    "title": "var type: ASCredentialRequestType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Credential types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/passkeyassertion",
                        "title": "case passkeyAssertion",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/passkeyregistration",
                        "title": "case passkeyRegistration",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/password",
                        "title": "case password",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/onetimecode",
                        "title": "case oneTimeCode",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/ascredentialrequesttype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/ascredentialrequesttype",
                    "title": "ASCredentialRequestType",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying credentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialrequest/credentialidentity",
                    "title": "var credentialIdentity: any ASCredentialIdentity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialrequest",
                "title": "ASCredentialRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating password credential requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasswordcredentialrequest/init(credentialidentity:)",
                    "title": "init(credentialIdentity: ASPasswordCredentialIdentity)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/aspasswordcredentialrequest",
                "title": "ASPasswordCredentialRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asonetimecodecredentialrequest/init(credentialidentity:)",
                    "title": "init(credentialIdentity: ASOneTimeCodeCredentialIdentity)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asonetimecodecredentialrequest",
                "title": "ASOneTimeCodeCredentialRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/attestationpreference",
                    "title": "var attestationPreference: ASAuthorizationPublicKeyCredentialAttestationKind",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/challenge",
                    "title": "var challenge: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/displayname",
                    "title": "var displayName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/relyingpartyidentifier",
                    "title": "var relyingPartyIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userid",
                    "title": "var userID: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest/userverificationpreference",
                    "title": "var userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialregistrationrequest",
                "title": "ASAuthorizationPublicKeyCredentialRegistrationRequest",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating passkey credential requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/init(credentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:)-1jihy",
                    "title": "convenience init(credentialIdentity: ASPasskeyCredentialIdentity, clientDataHash: Data, userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference, supportedAlgorithms: [NSNumber])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/init(credentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:)-52txr",
                    "title": "convenience init(credentialIdentity: ASPasskeyCredentialIdentity, clientDataHash: Data, userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference, supportedAlgorithms: [ASCOSEAlgorithmIdentifier])",
                    "type": "init"
                  },
                  {
                    "title": "Viewing passkey challenge information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/clientdatahash",
                    "title": "var clientDataHash: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/userverificationpreference",
                    "title": "var userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/supportedalgorithms-74mad",
                    "title": "var supportedAlgorithms: [ASCOSEAlgorithmIdentifier]",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/init(credentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:extensioninput:)-1258o",
                    "title": "convenience init(credentialIdentity: ASPasskeyCredentialIdentity, clientDataHash: Data, userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference, supportedAlgorithms: [ASCOSEAlgorithmIdentifier], extensionInput: ASPasskeyRegistrationCredentialExtensionInput?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/init(credentialidentity:clientdatahash:userverificationpreference:supportedalgorithms:extensioninput:)-9hsyv",
                    "title": "convenience init(credentialIdentity: ASPasskeyCredentialIdentity, clientDataHash: Data, userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference, supportedAlgorithms: [ASCOSEAlgorithmIdentifier], extensionInput: ASPasskeyAssertionCredentialExtensionInput?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/excludedcredentials",
                    "title": "var excludedCredentials: [ASAuthorizationPlatformPublicKeyCredentialDescriptor]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequest/extensioninput",
                    "title": "var extensionInput: ASPasskeyCredentialExtensionInput",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/aspasskeycredentialrequest",
                "title": "ASPasskeyCredentialRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Viewing credential request parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/allowedcredentials",
                    "title": "var allowedCredentials: [Data]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/clientdatahash",
                    "title": "var clientDataHash: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/relyingpartyidentifier",
                    "title": "var relyingPartyIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/userverificationpreference",
                    "title": "var userVerificationPreference: ASAuthorizationPublicKeyCredentialUserVerificationPreference",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters/extensioninput-2edlv",
                    "title": "var extensionInput: ASPasskeyAssertionCredentialExtensionInput?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/aspasskeycredentialrequestparameters",
                "title": "ASPasskeyCredentialRequestParameters",
                "type": "class"
              },
              {
                "title": "Providing text to AutoFill",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfaceforuserchoosingtexttoinsert()",
                "title": "func prepareInterfaceForUserChoosingTextToInsert()",
                "type": "method"
              },
              {
                "title": "Recognizing errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the error domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerrordomain",
                    "title": "let ASExtensionErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "title": "Error codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/credentialidentitynotfound",
                    "title": "static var credentialIdentityNotFound: ASExtensionError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/failed",
                    "title": "static var failed: ASExtensionError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/usercanceled",
                    "title": "static var userCanceled: ASExtensionError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/userinteractionrequired",
                    "title": "static var userInteractionRequired: ASExtensionError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asextensionerror/code/credentialidentitynotfound",
                        "title": "case credentialIdentityNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asextensionerror/code/failed",
                        "title": "case failed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asextensionerror/code/usercanceled",
                        "title": "case userCanceled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asextensionerror/code/userinteractionrequired",
                        "title": "case userInteractionRequired",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asextensionerror/code/matchedexcludedcredential",
                        "title": "case matchedExcludedCredential",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asextensionerror/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asextensionerror/code",
                    "title": "ASExtensionError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/matchedexcludedcredential",
                    "title": "static var matchedExcludedCredential: ASExtensionError.Code",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asextensionerror",
                "title": "ASExtensionError",
                "type": "struct"
              },
              {
                "path": "/documentation/authenticationservices/asextensionerrordomain",
                "title": "let ASExtensionErrorDomain: String",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/credentialidentitynotfound",
                    "title": "case credentialIdentityNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/failed",
                    "title": "case failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/usercanceled",
                    "title": "case userCanceled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/userinteractionrequired",
                    "title": "case userInteractionRequired",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/matchedexcludedcredential",
                    "title": "case matchedExcludedCredential",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asextensionerror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asextensionerror/code",
                "title": "ASExtensionError.Code",
                "type": "enum"
              },
              {
                "title": "Accessing settings",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Opening the Settings app",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/assettingshelper/opencredentialproviderappsettings(completionhandler:)",
                    "title": "class func openCredentialProviderAppSettings(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/assettingshelper/openverificationcodeappsettings(completionhandler:)",
                    "title": "class func openVerificationCodeAppSettings(completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/assettingshelper/requesttoturnoncredentialproviderextension(completionhandler:)",
                    "title": "class func requestToTurnOnCredentialProviderExtension(completionHandler: (Bool) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/assettingshelper",
                "title": "ASSettingsHelper",
                "type": "class"
              },
              {
                "title": "Deprecated methods",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/providecredentialwithoutuserinteraction(for:)-7jlg0",
                "title": "func provideCredentialWithoutUserInteraction(for: ASPasswordCredentialIdentity)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller/prepareinterfacetoprovidecredential(for:)-18ukb",
                "title": "func prepareInterfaceToProvideCredential(for: ASPasswordCredentialIdentity)",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/ascredentialproviderviewcontroller",
            "title": "ASCredentialProviderViewController",
            "type": "class"
          },
          {
            "title": "Credential migration",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating an export manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspresentationanchor",
                "title": "ASPresentationAnchor",
                "type": "typealias"
              },
              {
                "title": "Exporting credentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialexportmanager/exportcredentials(_:)",
                "title": "func exportCredentials(ASExportedCredentialData) async throws",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a credential data instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asexportedcredentialdata/init(accounts:)",
                    "title": "init(accounts: [ASImportableAccount])",
                    "type": "init"
                  },
                  {
                    "title": "Accessing accounts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asexportedcredentialdata/accounts",
                    "title": "var accounts: [ASImportableAccount]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an account",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/init(id:username:email:fullname:collections:items:)",
                        "title": "init(id: Data, userName: String, email: String, fullName: String?, collections: [ASImportableCollection], items: [ASImportableItem])",
                        "type": "init"
                      },
                      {
                        "title": "Accessing account properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/id",
                        "title": "var id: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/username",
                        "title": "var userName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/email",
                        "title": "var email: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/fullname",
                        "title": "var fullName: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/collections",
                        "title": "var collections: [ASImportableCollection]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a collection",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/init(id:title:subtitle:items:subcollections:)",
                            "title": "init(id: Data, title: String, subtitle: String?, items: [ASImportableLinkedItem], subcollections: [ASImportableCollection])",
                            "type": "init"
                          },
                          {
                            "title": "Accessing collection properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/id",
                            "title": "var id: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/title",
                            "title": "var title: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/subtitle",
                            "title": "var subtitle: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/items",
                            "title": "var items: [ASImportableLinkedItem]",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating a linked item",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablelinkeditem/init(item:account:)",
                                "title": "init(item: Data, account: Data?)",
                                "type": "init"
                              },
                              {
                                "title": "Accessing linked item properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablelinkeditem/item",
                                "title": "var item: Data",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablelinkeditem/account",
                                "title": "var account: Data?",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/authenticationservices/asimportablelinkeditem",
                            "title": "ASImportableLinkedItem",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/subcollections",
                            "title": "var subcollections: [ASImportableCollection]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asimportablecollection",
                        "title": "ASImportableCollection",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/items",
                        "title": "var items: [ASImportableItem]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an item",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/init(id:created:lastmodified:type:title:subtitle:credentials:tags:)",
                            "title": "init(id: Data, created: Date, lastModified: Date, type: ASImportableItem.ItemType, title: String, subtitle: String?, credentials: [ASImportableCredential], tags: [String])",
                            "type": "init"
                          },
                          {
                            "title": "Accessing item properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/id",
                            "title": "var id: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/created",
                            "title": "var created: Date",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/lastmodified",
                            "title": "var lastModified: Date",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/type",
                            "title": "var type: ASImportableItem.ItemType",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Item types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportableitem/itemtype/login",
                                "title": "case login",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportableitem/itemtype/document",
                                "title": "case document",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportableitem/itemtype/identity",
                                "title": "case identity",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/authenticationservices/asimportableitem/itemtype",
                            "title": "ASImportableItem.ItemType",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/subtitle",
                            "title": "var subtitle: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/credentials",
                            "title": "var credentials: [ASImportableCredential]",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Login credential types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication(_:)",
                                "title": "case basicAuthentication(ASImportableCredential.BasicAuthentication)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a basic authentication instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/init(urls:username:password:)",
                                    "title": "init(urls: [String], username: ASImportableEditableField?, password: ASImportableEditableField?)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing authentication properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/urls",
                                    "title": "var urls: [String]",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/username",
                                    "title": "var username: ASImportableEditableField?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/password",
                                    "title": "var password: ASImportableEditableField?",
                                    "type": "property"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Creating an editable field",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/init(id:fieldtype:value:label:)",
                                        "title": "init(id: Data, fieldType: ASImportableEditableField.FieldType, value: String, label: String?)",
                                        "type": "init"
                                      },
                                      {
                                        "title": "Accessing field properties",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/id",
                                        "title": "var id: Data",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.property",
                                        "title": "var fieldType: ASImportableEditableField.FieldType",
                                        "type": "property"
                                      },
                                      {
                                        "children": [
                                          {
                                            "title": "Determining field type",
                                            "type": "groupMarker"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/boolean",
                                            "title": "case boolean",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/concealedstring",
                                            "title": "case concealedString",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/date",
                                            "title": "case date",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/email",
                                            "title": "case email",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/number",
                                            "title": "case number",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/string",
                                            "title": "case string",
                                            "type": "case"
                                          }
                                        ],
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum",
                                        "title": "ASImportableEditableField.FieldType",
                                        "type": "enum"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/value",
                                        "title": "var value: String",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/label",
                                        "title": "var label: String?",
                                        "type": "property"
                                      }
                                    ],
                                    "path": "/documentation/authenticationservices/asimportableeditablefield",
                                    "title": "ASImportableEditableField",
                                    "type": "struct"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication",
                                "title": "ASImportableCredential.BasicAuthentication",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/passkey(_:)",
                                "title": "case passkey(ASImportableCredential.Passkey)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a passkey instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/init(credentialid:relyingpartyidentifier:username:userdisplayname:userhandle:key:)",
                                    "title": "init(credentialID: Data, relyingPartyIdentifier: String, userName: String, userDisplayName: String, userHandle: Data, key: Data)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing passkey properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/credentialid",
                                    "title": "var credentialID: Data",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/relyingpartyidentifier",
                                    "title": "var relyingPartyIdentifier: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/username",
                                    "title": "var userName: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/userdisplayname",
                                    "title": "var userDisplayName: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/userhandle",
                                    "title": "var userHandle: Data",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/key",
                                    "title": "var key: Data",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/passkey",
                                "title": "ASImportableCredential.Passkey",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/totp(_:)",
                                "title": "case totp(ASImportableCredential.TOTP)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a TOTP instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/init(secret:period:digits:username:algorithm:issuer:)",
                                    "title": "init(secret: Data, period: UInt16, digits: UInt16, username: String, algorithm: ASImportableCredential.TOTP.Algorithm, issuer: String?)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing TOTP properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/secret",
                                    "title": "var secret: Data",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/period",
                                    "title": "var period: UInt16",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/digits",
                                    "title": "var digits: UInt16",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/username",
                                    "title": "var username: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.property",
                                    "title": "var algorithm: ASImportableCredential.TOTP.Algorithm",
                                    "type": "property"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Algorithms",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum/sha1",
                                        "title": "case sha1",
                                        "type": "case"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum/sha256",
                                        "title": "case sha256",
                                        "type": "case"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum/sha512",
                                        "title": "case sha512",
                                        "type": "case"
                                      }
                                    ],
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum",
                                    "title": "ASImportableCredential.TOTP.Algorithm",
                                    "type": "enum"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/issuer",
                                    "title": "var issuer: String?",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/totp",
                                "title": "ASImportableCredential.TOTP",
                                "type": "struct"
                              },
                              {
                                "title": "Document credential types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/note(_:)",
                                "title": "case note(ASImportableCredential.Note)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a note",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/note/init(content:)",
                                    "title": "init(content: String)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing note properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/note/content",
                                    "title": "var content: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/note",
                                "title": "ASImportableCredential.Note",
                                "type": "struct"
                              },
                              {
                                "title": "Identity credential types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/creditcard(_:)",
                                "title": "case creditCard(ASImportableCredential.CreditCard)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a credit card instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/init(number:fullname:cardtype:verificationnumber:expirydate:validfrom:)",
                                    "title": "init(number: String, fullName: String, cardType: String?, verificationNumber: String?, expiryDate: String?, validFrom: String?)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing credit card properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/number",
                                    "title": "var number: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/fullname",
                                    "title": "var fullName: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/cardtype",
                                    "title": "var cardType: String?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/verificationnumber",
                                    "title": "var verificationNumber: String?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/expirydate",
                                    "title": "var expiryDate: String?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/validfrom",
                                    "title": "var validFrom: String?",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/creditcard",
                                "title": "ASImportableCredential.CreditCard",
                                "type": "struct"
                              }
                            ],
                            "path": "/documentation/authenticationservices/asimportablecredential",
                            "title": "ASImportableCredential",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/tags",
                            "title": "var tags: [String]",
                            "type": "property"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/title",
                            "title": "var title: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asimportableitem",
                        "title": "ASImportableItem",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asimportableaccount",
                    "title": "ASImportableAccount",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/authenticationservices/asexportedcredentialdata",
                "title": "ASExportedCredentialData",
                "type": "struct"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialexportmanager/init(presentationanchor:)-56ki6",
                "title": "convenience init(presentationAnchor: ASPresentationAnchor)",
                "type": "init"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialexportmanager/init(presentationanchor:)-904gt",
                "title": "convenience init(presentationAnchor: ASPresentationAnchor)",
                "type": "init"
              }
            ],
            "path": "/documentation/authenticationservices/ascredentialexportmanager",
            "title": "ASCredentialExportManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an import manager",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialimportmanager/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Importing credentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/ascredentialimportmanager/importcredentials(token:)",
                "title": "func importCredentials(token: UUID) async throws -> ASExportedCredentialData",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a credential data instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asexportedcredentialdata/init(accounts:)",
                    "title": "init(accounts: [ASImportableAccount])",
                    "type": "init"
                  },
                  {
                    "title": "Accessing accounts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asexportedcredentialdata/accounts",
                    "title": "var accounts: [ASImportableAccount]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an account",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/init(id:username:email:fullname:collections:items:)",
                        "title": "init(id: Data, userName: String, email: String, fullName: String?, collections: [ASImportableCollection], items: [ASImportableItem])",
                        "type": "init"
                      },
                      {
                        "title": "Accessing account properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/id",
                        "title": "var id: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/username",
                        "title": "var userName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/email",
                        "title": "var email: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/fullname",
                        "title": "var fullName: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/collections",
                        "title": "var collections: [ASImportableCollection]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a collection",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/init(id:title:subtitle:items:subcollections:)",
                            "title": "init(id: Data, title: String, subtitle: String?, items: [ASImportableLinkedItem], subcollections: [ASImportableCollection])",
                            "type": "init"
                          },
                          {
                            "title": "Accessing collection properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/id",
                            "title": "var id: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/title",
                            "title": "var title: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/subtitle",
                            "title": "var subtitle: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/items",
                            "title": "var items: [ASImportableLinkedItem]",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating a linked item",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablelinkeditem/init(item:account:)",
                                "title": "init(item: Data, account: Data?)",
                                "type": "init"
                              },
                              {
                                "title": "Accessing linked item properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablelinkeditem/item",
                                "title": "var item: Data",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablelinkeditem/account",
                                "title": "var account: Data?",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/authenticationservices/asimportablelinkeditem",
                            "title": "ASImportableLinkedItem",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportablecollection/subcollections",
                            "title": "var subcollections: [ASImportableCollection]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asimportablecollection",
                        "title": "ASImportableCollection",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/authenticationservices/asimportableaccount/items",
                        "title": "var items: [ASImportableItem]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an item",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/init(id:created:lastmodified:type:title:subtitle:credentials:tags:)",
                            "title": "init(id: Data, created: Date, lastModified: Date, type: ASImportableItem.ItemType, title: String, subtitle: String?, credentials: [ASImportableCredential], tags: [String])",
                            "type": "init"
                          },
                          {
                            "title": "Accessing item properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/id",
                            "title": "var id: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/created",
                            "title": "var created: Date",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/lastmodified",
                            "title": "var lastModified: Date",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/type",
                            "title": "var type: ASImportableItem.ItemType",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Item types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportableitem/itemtype/login",
                                "title": "case login",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportableitem/itemtype/document",
                                "title": "case document",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportableitem/itemtype/identity",
                                "title": "case identity",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/authenticationservices/asimportableitem/itemtype",
                            "title": "ASImportableItem.ItemType",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/subtitle",
                            "title": "var subtitle: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/credentials",
                            "title": "var credentials: [ASImportableCredential]",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Login credential types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication(_:)",
                                "title": "case basicAuthentication(ASImportableCredential.BasicAuthentication)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a basic authentication instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/init(urls:username:password:)",
                                    "title": "init(urls: [String], username: ASImportableEditableField?, password: ASImportableEditableField?)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing authentication properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/urls",
                                    "title": "var urls: [String]",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/username",
                                    "title": "var username: ASImportableEditableField?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication/password",
                                    "title": "var password: ASImportableEditableField?",
                                    "type": "property"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Creating an editable field",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/init(id:fieldtype:value:label:)",
                                        "title": "init(id: Data, fieldType: ASImportableEditableField.FieldType, value: String, label: String?)",
                                        "type": "init"
                                      },
                                      {
                                        "title": "Accessing field properties",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/id",
                                        "title": "var id: Data",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.property",
                                        "title": "var fieldType: ASImportableEditableField.FieldType",
                                        "type": "property"
                                      },
                                      {
                                        "children": [
                                          {
                                            "title": "Determining field type",
                                            "type": "groupMarker"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/boolean",
                                            "title": "case boolean",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/concealedstring",
                                            "title": "case concealedString",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/date",
                                            "title": "case date",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/email",
                                            "title": "case email",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/number",
                                            "title": "case number",
                                            "type": "case"
                                          },
                                          {
                                            "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/string",
                                            "title": "case string",
                                            "type": "case"
                                          }
                                        ],
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum",
                                        "title": "ASImportableEditableField.FieldType",
                                        "type": "enum"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/value",
                                        "title": "var value: String",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportableeditablefield/label",
                                        "title": "var label: String?",
                                        "type": "property"
                                      }
                                    ],
                                    "path": "/documentation/authenticationservices/asimportableeditablefield",
                                    "title": "ASImportableEditableField",
                                    "type": "struct"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/basicauthentication",
                                "title": "ASImportableCredential.BasicAuthentication",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/passkey(_:)",
                                "title": "case passkey(ASImportableCredential.Passkey)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a passkey instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/init(credentialid:relyingpartyidentifier:username:userdisplayname:userhandle:key:)",
                                    "title": "init(credentialID: Data, relyingPartyIdentifier: String, userName: String, userDisplayName: String, userHandle: Data, key: Data)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing passkey properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/credentialid",
                                    "title": "var credentialID: Data",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/relyingpartyidentifier",
                                    "title": "var relyingPartyIdentifier: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/username",
                                    "title": "var userName: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/userdisplayname",
                                    "title": "var userDisplayName: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/userhandle",
                                    "title": "var userHandle: Data",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/passkey/key",
                                    "title": "var key: Data",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/passkey",
                                "title": "ASImportableCredential.Passkey",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/totp(_:)",
                                "title": "case totp(ASImportableCredential.TOTP)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a TOTP instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/init(secret:period:digits:username:algorithm:issuer:)",
                                    "title": "init(secret: Data, period: UInt16, digits: UInt16, username: String, algorithm: ASImportableCredential.TOTP.Algorithm, issuer: String?)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing TOTP properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/secret",
                                    "title": "var secret: Data",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/period",
                                    "title": "var period: UInt16",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/digits",
                                    "title": "var digits: UInt16",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/username",
                                    "title": "var username: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.property",
                                    "title": "var algorithm: ASImportableCredential.TOTP.Algorithm",
                                    "type": "property"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Algorithms",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum/sha1",
                                        "title": "case sha1",
                                        "type": "case"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum/sha256",
                                        "title": "case sha256",
                                        "type": "case"
                                      },
                                      {
                                        "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum/sha512",
                                        "title": "case sha512",
                                        "type": "case"
                                      }
                                    ],
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/algorithm-swift.enum",
                                    "title": "ASImportableCredential.TOTP.Algorithm",
                                    "type": "enum"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/totp/issuer",
                                    "title": "var issuer: String?",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/totp",
                                "title": "ASImportableCredential.TOTP",
                                "type": "struct"
                              },
                              {
                                "title": "Document credential types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/note(_:)",
                                "title": "case note(ASImportableCredential.Note)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a note",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/note/init(content:)",
                                    "title": "init(content: String)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing note properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/note/content",
                                    "title": "var content: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/note",
                                "title": "ASImportableCredential.Note",
                                "type": "struct"
                              },
                              {
                                "title": "Identity credential types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/authenticationservices/asimportablecredential/creditcard(_:)",
                                "title": "case creditCard(ASImportableCredential.CreditCard)",
                                "type": "case"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Creating a credit card instance",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/init(number:fullname:cardtype:verificationnumber:expirydate:validfrom:)",
                                    "title": "init(number: String, fullName: String, cardType: String?, verificationNumber: String?, expiryDate: String?, validFrom: String?)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Accessing credit card properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/number",
                                    "title": "var number: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/fullname",
                                    "title": "var fullName: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/cardtype",
                                    "title": "var cardType: String?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/verificationnumber",
                                    "title": "var verificationNumber: String?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/expirydate",
                                    "title": "var expiryDate: String?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/authenticationservices/asimportablecredential/creditcard/validfrom",
                                    "title": "var validFrom: String?",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/authenticationservices/asimportablecredential/creditcard",
                                "title": "ASImportableCredential.CreditCard",
                                "type": "struct"
                              }
                            ],
                            "path": "/documentation/authenticationservices/asimportablecredential",
                            "title": "ASImportableCredential",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/tags",
                            "title": "var tags: [String]",
                            "type": "property"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asimportableitem/title",
                            "title": "var title: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asimportableitem",
                        "title": "ASImportableItem",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asimportableaccount",
                    "title": "ASImportableAccount",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/authenticationservices/asexportedcredentialdata",
                "title": "ASExportedCredentialData",
                "type": "struct"
              }
            ],
            "path": "/documentation/authenticationservices/ascredentialimportmanager",
            "title": "ASCredentialImportManager",
            "type": "class"
          },
          {
            "title": "Single sign-on (SSO)",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Performing enterprise single sign-on",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an Authorization Provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/init(identityprovider:)",
                    "title": "convenience init(identityProvider: URL)",
                    "type": "init"
                  },
                  {
                    "title": "Creating Authorization Requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/canperformauthorization",
                    "title": "var canPerformAuthorization: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/createrequest()",
                    "title": "func createRequest() -> ASAuthorizationSingleSignOnRequest",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Setting Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsinglesignonrequest/isuserinterfaceenabled",
                        "title": "var isUserInterfaceEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationsinglesignonrequest/authorizationoptions",
                        "title": "var authorizationOptions: [URLQueryItem]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonrequest",
                    "title": "ASAuthorizationSingleSignOnRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Setting the Operation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedoperation",
                        "title": "var requestedOperation: ASAuthorization.OpenIDOperation",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Operation Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogin",
                            "title": "static let operationLogin: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationrefresh",
                            "title": "static let operationRefresh: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationlogout",
                            "title": "static let operationLogout: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/operationimplicit",
                            "title": "static let operationImplicit: ASAuthorization.OpenIDOperation",
                            "type": "property"
                          },
                          {
                            "title": "Creating an Operation",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/openidoperation/init(rawvalue:)",
                            "title": "init(rawValue: String)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/openidoperation",
                        "title": "ASAuthorization.OpenIDOperation",
                        "type": "struct"
                      },
                      {
                        "title": "Setting the Scope",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/requestedscopes",
                        "title": "var requestedScopes: [ASAuthorization.Scope]?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Scopes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/email",
                            "title": "static let email: ASAuthorization.Scope",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/fullname",
                            "title": "static let fullName: ASAuthorization.Scope",
                            "type": "property"
                          },
                          {
                            "title": "Creating a Scope",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorization/scope/init(rawvalue:)",
                            "title": "init(rawValue: String)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorization/scope",
                        "title": "ASAuthorization.Scope",
                        "type": "struct"
                      },
                      {
                        "title": "Setting the State",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/state",
                        "title": "var state: String?",
                        "type": "property"
                      },
                      {
                        "title": "Setting the Nonce",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationopenidrequest/nonce",
                        "title": "var nonce: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationopenidrequest",
                    "title": "ASAuthorizationOpenIDRequest",
                    "type": "class"
                  },
                  {
                    "title": "Identifying the Identity Provider",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider/url",
                    "title": "var url: URL",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsinglesignonprovider",
                "title": "ASAuthorizationSingleSignOnProvider",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying a User",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/identitytoken",
                    "title": "var identityToken: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/accesstoken",
                    "title": "var accessToken: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/state",
                    "title": "var state: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/authorizedscopes",
                    "title": "var authorizedScopes: [ASAuthorization.Scope]",
                    "type": "property"
                  },
                  {
                    "title": "Parsing the Response",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential/authenticatedresponse",
                    "title": "var authenticatedResponse: HTTPURLResponse?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationsinglesignoncredential",
                "title": "ASAuthorizationSingleSignOnCredential",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Starting or Canceling a Request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequesthandler/beginauthorization(with:)",
                    "title": "func beginAuthorization(with: ASAuthorizationProviderExtensionAuthorizationRequest)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequesthandler/cancelauthorization(with:)",
                    "title": "func cancelAuthorization(with: ASAuthorizationProviderExtensionAuthorizationRequest)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Parsing the Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/url",
                        "title": "var url: URL",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/httpheaders",
                        "title": "var httpHeaders: [String : String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/httpbody",
                        "title": "var httpBody: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/realm",
                        "title": "var realm: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/requestedoperation",
                        "title": "var requestedOperation: ASAuthorizationProviderAuthorizationOperation",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Handling Configuration Removal",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation/configurationremoved",
                            "title": "static let configurationRemoved: ASAuthorizationProviderAuthorizationOperation",
                            "type": "property"
                          },
                          {
                            "title": "Creating Operations",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation/init(rawvalue:)",
                            "title": "init(rawValue: String)",
                            "type": "init"
                          },
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation/directrequest",
                            "title": "static let directRequest: ASAuthorizationProviderAuthorizationOperation",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/authenticationservices/asauthorizationproviderauthorizationoperation",
                        "title": "ASAuthorizationProviderAuthorizationOperation",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/authorizationoptions",
                        "title": "var authorizationOptions: [AnyHashable : Any]",
                        "type": "property"
                      },
                      {
                        "title": "Getting Context",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/callerbundleidentifier",
                        "title": "var callerBundleIdentifier: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/callerteamidentifier",
                        "title": "var callerTeamIdentifier: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/localizedcallerdisplayname",
                        "title": "var localizedCallerDisplayName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/iscallermanaged",
                        "title": "var isCallerManaged: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/extensiondata",
                        "title": "var extensionData: [AnyHashable : Any]",
                        "type": "property"
                      },
                      {
                        "title": "Interacting with the User",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/presentauthorizationviewcontroller(completion:)",
                        "title": "func presentAuthorizationViewController(completion: (Bool, (any Error)?) -> Void)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/isuserinterfaceenabled",
                        "title": "var isUserInterfaceEnabled: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Completing a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(authorizationresult:)",
                        "title": "func complete(authorizationResult: ASAuthorizationProviderExtensionAuthorizationResult)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete()",
                        "title": "func complete()",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(httpauthorizationheaders:)",
                        "title": "func complete(httpAuthorizationHeaders: [String : String])",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(httpresponse:httpbody:)",
                        "title": "func complete(httpResponse: HTTPURLResponse, httpBody: Data?)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/complete(error:)",
                        "title": "func complete(error: any Error)",
                        "type": "method"
                      },
                      {
                        "title": "Canceling a Request",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/donothandle()",
                        "title": "func doNotHandle()",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Supporting Platform Single Sign-On",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/loginmanager",
                        "title": "var loginManager: ASAuthorizationProviderExtensionLoginManager?",
                        "type": "property"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest/calleraudittoken",
                        "title": "var callerAuditToken: Data",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequest",
                    "title": "ASAuthorizationProviderExtensionAuthorizationRequest",
                    "type": "class"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationrequesthandler",
                "title": "ASAuthorizationProviderExtensionAuthorizationRequestHandler",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/init(httpauthorizationheaders:)",
                    "title": "init(httpAuthorizationHeaders: [String : String])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/init(httpresponse:httpbody:)",
                    "title": "init(httpResponse: HTTPURLResponse, httpBody: Data?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/httpauthorizationheaders",
                    "title": "var httpAuthorizationHeaders: [String : String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/httpresponse",
                    "title": "var httpResponse: HTTPURLResponse?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult/httpbody",
                    "title": "var httpBody: Data?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthorizationresult",
                "title": "ASAuthorizationProviderExtensionAuthorizationResult",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions/preferimmediatelyavailablecredentials",
                    "title": "static var preferImmediatelyAvailableCredentials: ASAuthorizationController.RequestOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationcontroller/requestoptions",
                "title": "ASAuthorizationController.RequestOptions",
                "type": "struct"
              }
            ],
            "path": "/documentation/authenticationservices/enterprise-single-sign-on-sso",
            "title": "Enterprise single sign-on (SSO)",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/creating-extensions-that-support-platform-sso",
                "title": "Creating extensions that support platform SSO",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/registering-devices-and-users",
                "title": "Registering devices and users",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Registering users and devices",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/begindeviceregistration(loginmanager:options:completion:)",
                    "title": "func beginDeviceRegistration(loginManager: ASAuthorizationProviderExtensionLoginManager, options: ASAuthorizationProviderExtensionRequestOptions, completion: (ASAuthorizationProviderExtensionRegistrationResult) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/beginuserregistration(loginmanager:username:method:options:completion:)",
                    "title": "func beginUserRegistration(loginManager: ASAuthorizationProviderExtensionLoginManager, userName: String?, method: ASAuthorizationProviderExtensionAuthenticationMethod, options: ASAuthorizationProviderExtensionRequestOptions, completion: (ASAuthorizationProviderExtensionRegistrationResult) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/registrationdidcomplete()",
                    "title": "func registrationDidComplete()",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/protocolversion()",
                    "title": "func protocolVersion() -> ASAuthorizationProviderExtensionPlatformSSOProtocolVersion",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/registrationdidcancel()",
                    "title": "func registrationDidCancel()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supportedgranttypes()",
                    "title": "func supportedGrantTypes() -> ASAuthorizationProviderExtensionSupportedGrantTypes",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/keywillrotate(for:newkey:loginmanager:completion:)",
                    "title": "func keyWillRotate(for: ASAuthorizationProviderExtensionKeyType, newKey: SecKey, loginManager: ASAuthorizationProviderExtensionLoginManager, completion: (Bool) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supporteddeviceencryptionalgorithms",
                    "title": "var supportedDeviceEncryptionAlgorithms: [ASAuthorizationProviderExtensionEncryptionAlgorithm]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supporteddevicesigningalgorithms",
                    "title": "var supportedDeviceSigningAlgorithms: [ASAuthorizationProviderExtensionSigningAlgorithm]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler/supportedusersecureenclavekeysigningalgorithms",
                    "title": "var supportedUserSecureEnclaveKeySigningAlgorithms: [ASAuthorizationProviderExtensionSigningAlgorithm]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationhandler",
                "title": "ASAuthorizationProviderExtensionRegistrationHandler",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod/password",
                    "title": "case password",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod/usersecureenclavekey",
                    "title": "case userSecureEnclaveKey",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod/smartcard",
                    "title": "case smartCard",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionauthenticationmethod",
                "title": "ASAuthorizationProviderExtensionAuthenticationMethod",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating the options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying the options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/registrationrepair",
                    "title": "static var registrationRepair: ASAuthorizationProviderExtensionRequestOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/userinteractionenabled",
                    "title": "static var userInteractionEnabled: ASAuthorizationProviderExtensionRequestOptions",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/registrationdevicekeymigration",
                    "title": "static var registrationDeviceKeyMigration: ASAuthorizationProviderExtensionRequestOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/registrationshareddevicekeys",
                    "title": "static var registrationSharedDeviceKeys: ASAuthorizationProviderExtensionRequestOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/userkeyinvalid",
                    "title": "static var userKeyInvalid: ASAuthorizationProviderExtensionRequestOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions/strongerkeyavailable",
                    "title": "static var strongerKeyAvailable: ASAuthorizationProviderExtensionRequestOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionrequestoptions",
                "title": "ASAuthorizationProviderExtensionRequestOptions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Identifying the results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/failed",
                    "title": "case failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/failednoretry",
                    "title": "case failedNoRetry",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/success",
                    "title": "case success",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/userinterfacerequired",
                    "title": "case userInterfaceRequired",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionregistrationresult",
                "title": "ASAuthorizationProviderExtensionRegistrationResult",
                "type": "enum"
              },
              {
                "title": "Configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/configuring-device-management",
                "title": "Configuring Device Management",
                "type": "article"
              },
              {
                "path": "/documentation/authenticationservices/configuring-authentication-with-the-identity-provider-idp",
                "title": "Configuring authentication with the identity provider (IdP)",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating the configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/init(clientid:issuer:tokenendpointurl:jwksendpointurl:audience:)",
                    "title": "init(clientID: String, issuer: String, tokenEndpointURL: URL, jwksEndpointURL: URL, audience: String?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/configuration(openidconfigurationurl:clientid:issuer:completion:)",
                    "title": "class func configuration(openIDConfigurationURL: URL, clientID: String, issuer: String?, completion: (ASAuthorizationProviderExtensionLoginConfiguration?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Obtaining the required configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/audience",
                    "title": "var audience: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/clientid",
                    "title": "var clientID: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/jwksendpointurl",
                    "title": "var jwksEndpointURL: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/tokenendpointurl",
                    "title": "var tokenEndpointURL: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/issuer",
                    "title": "var issuer: String",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining the recommended configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/accountdisplayname",
                    "title": "var accountDisplayName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/invalidcredentialpredicate",
                    "title": "var invalidCredentialPredicate: String?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the server nonce",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customnoncerequestvalues",
                    "title": "var customNonceRequestValues: [URLQueryItem]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/nonceendpointurl",
                    "title": "var nonceEndpointURL: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/nonceresponsekeypath",
                    "title": "var nonceResponseKeypath: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/servernonceclaimname",
                    "title": "var serverNonceClaimName: String",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the previous refresh token",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/includepreviousrefreshtokeninloginrequest",
                    "title": "var includePreviousRefreshTokenInLoginRequest: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/previousrefreshtokenclaimname",
                    "title": "var previousRefreshTokenClaimName: String",
                    "type": "property"
                  },
                  {
                    "title": "Customizing the authentication request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomassertionrequestbodyclaims(_:)",
                    "title": "func setCustomAssertionRequestBodyClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomassertionrequestheaderclaims(_:)",
                    "title": "func setCustomAssertionRequestHeaderClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomloginrequestbodyclaims(_:)",
                    "title": "func setCustomLoginRequestBodyClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomloginrequestheaderclaims(_:)",
                    "title": "func setCustomLoginRequestHeaderClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/additionalscopes",
                    "title": "var additionalScopes: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customloginrequestvalues",
                    "title": "var customLoginRequestValues: [URLQueryItem]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/kerberosticketmappings",
                    "title": "var kerberosTicketMappings: [ASAuthorizationProviderExtensionKerberosMapping]",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/additionalauthorizationscopes",
                    "title": "var additionalAuthorizationScopes: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customfederationuserpreauthenticationrequestvalues",
                    "title": "var customFederationUserPreauthenticationRequestValues: [URLQueryItem]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customkeyexchangerequestvalues",
                    "title": "var customKeyExchangeRequestValues: [URLQueryItem]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customkeyrequestvalues",
                    "title": "var customKeyRequestValues: [URLQueryItem]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customrefreshrequestvalues",
                    "title": "var customRefreshRequestValues: [URLQueryItem]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/customrequestjwtparametername",
                    "title": "var customRequestJWTParameterName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/devicecontext",
                    "title": "var deviceContext: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationmexurl",
                    "title": "var federationMEXURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationmexurlkeypath",
                    "title": "var federationMEXURLKeypath: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationpredicate",
                    "title": "var federationPredicate: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationrequesturn",
                    "title": "var federationRequestURN: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.property",
                    "title": "var federationType: ASAuthorizationProviderExtensionLoginConfiguration.FederationType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationuserpreauthenticationurl",
                    "title": "var federationUserPreauthenticationURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/grouprequestclaimname",
                    "title": "var groupRequestClaimName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/groupresponseclaimname",
                    "title": "var groupResponseClaimName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/jwkstrustedrootcertificates-5y2pc",
                    "title": "var jwksTrustedRootCertificates: [SecCertificate]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/keyendpointurl",
                    "title": "var keyEndpointURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequestencryptionapvprefix",
                    "title": "var loginRequestEncryptionAPVPrefix: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequestencryptionpublickey",
                    "title": "var loginRequestEncryptionPublicKey: SecKey?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/refreshendpointurl",
                    "title": "var refreshEndpointURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/uniqueidentifierclaimname",
                    "title": "var uniqueIdentifierClaimName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.property",
                    "title": "var userSecureEnclaveKeyBiometricPolicy: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/hpkeauthpublickey",
                    "title": "var hpkeAuthPublicKey: SecKey?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/hpkepresharedkey",
                    "title": "var hpkePreSharedKey: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/hpkepresharedkeyid",
                    "title": "var hpkePreSharedKeyID: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequestencryptionalgorithm",
                    "title": "var loginRequestEncryptionAlgorithm: ASAuthorizationProviderExtensionEncryptionAlgorithm",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequesthpkepresharedkey",
                    "title": "var loginRequestHPKEPreSharedKey: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/loginrequesthpkepresharedkeyid",
                    "title": "var loginRequestHPKEPreSharedKeyID: Data?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyexchangerequestbodyclaims(_:)",
                    "title": "func setCustomKeyExchangeRequestBodyClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyexchangerequestheaderclaims(_:)",
                    "title": "func setCustomKeyExchangeRequestHeaderClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyrequestbodyclaims(_:)",
                    "title": "func setCustomKeyRequestBodyClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomkeyrequestheaderclaims(_:)",
                    "title": "func setCustomKeyRequestHeaderClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomrefreshrequestbodyclaims(_:)",
                    "title": "func setCustomRefreshRequestBodyClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/setcustomrefreshrequestheaderclaims(_:)",
                    "title": "func setCustomRefreshRequestHeaderClaims([String : Any]) throws",
                    "type": "method"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/passwordfallback",
                        "title": "static var passwordFallback: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/reuseduringunlock",
                        "title": "static var reuseDuringUnlock: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchany",
                        "title": "static var touchIDOrWatchAny: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchcurrentset",
                        "title": "static var touchIDOrWatchCurrentSet: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct",
                    "title": "ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                    "type": "struct"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/dynamicwstrust",
                        "title": "case dynamicWSTrust",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/wstrust",
                        "title": "case wsTrust",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum",
                    "title": "ASAuthorizationProviderExtensionLoginConfiguration.FederationType",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration",
                "title": "ASAuthorizationProviderExtensionLoginConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Performing registration",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/loginusername",
                    "title": "var loginUserName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/registrationtoken",
                    "title": "var registrationToken: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/presentregistrationviewcontroller(completion:)",
                    "title": "func presentRegistrationViewController(completion: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/savecertificate(_:keytype:)",
                    "title": "func saveCertificate(SecCertificate, keyType: ASAuthorizationProviderExtensionKeyType)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/saveloginconfiguration(_:)",
                    "title": "func saveLoginConfiguration(ASAuthorizationProviderExtensionLoginConfiguration) throws",
                    "type": "method"
                  },
                  {
                    "title": "Performing authentication",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifying the key types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/userdeviceencryption",
                        "title": "case userDeviceEncryption",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/userdevicesigning",
                        "title": "case userDeviceSigning",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/usersecureenclavekey",
                        "title": "case userSecureEnclaveKey",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/currentdeviceencryption",
                        "title": "case currentDeviceEncryption",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/currentdevicesigning",
                        "title": "case currentDeviceSigning",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/shareddeviceencryption",
                        "title": "case sharedDeviceEncryption",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/shareddevicesigning",
                        "title": "case sharedDeviceSigning",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/usersmartcard",
                        "title": "case userSmartCard",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkeytype",
                    "title": "ASAuthorizationProviderExtensionKeyType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/isdeviceregistered",
                    "title": "var isDeviceRegistered: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/isuserregistered",
                    "title": "var isUserRegistered: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/loginconfiguration",
                    "title": "var loginConfiguration: ASAuthorizationProviderExtensionLoginConfiguration?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/ssotokens",
                    "title": "var ssoTokens: [AnyHashable : Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/identity(for:)",
                    "title": "func identity(for: ASAuthorizationProviderExtensionKeyType) -> SecIdentity?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/key(for:)",
                    "title": "func key(for: ASAuthorizationProviderExtensionKeyType) -> SecKey?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/userneedsreauthentication(completion:)",
                    "title": "func userNeedsReauthentication(completion: ((any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Repairing registrations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/userregistrationsneedsrepair()",
                    "title": "func userRegistrationsNeedsRepair()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/deviceregistrationsneedsrepair()",
                    "title": "func deviceRegistrationsNeedsRepair()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/resetkeys()",
                    "title": "func resetKeys()",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/extensiondata",
                    "title": "var extensionData: [AnyHashable : Any]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/userloginconfiguration",
                    "title": "var userLoginConfiguration: ASAuthorizationProviderExtensionUserLoginConfiguration?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/decryptionkeysneedrepair()",
                    "title": "func decryptionKeysNeedRepair()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/resetdevicekeys()",
                    "title": "func resetDeviceKeys()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/resetusersecureenclavekey()",
                    "title": "func resetUserSecureEnclaveKey()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/saveuserloginconfiguration(_:)",
                    "title": "func saveUserLoginConfiguration(ASAuthorizationProviderExtensionUserLoginConfiguration) throws",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/attestkey(oftype:clientdatahash:)",
                    "title": "func attestKey(ofType: ASAuthorizationProviderExtensionKeyType, clientDataHash: Data) async throws -> [SecCertificate]",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/attestpendingkey(oftype:clientdatahash:)",
                    "title": "func attestPendingKey(ofType: ASAuthorizationProviderExtensionKeyType, clientDataHash: Data) async throws -> [SecCertificate]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/beginkeyrotation(_:)",
                    "title": "func beginKeyRotation(ASAuthorizationProviderExtensionKeyType) -> SecKey?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager/completekeyrotation(_:)",
                    "title": "func completeKeyRotation(ASAuthorizationProviderExtensionKeyType)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginmanager",
                "title": "ASAuthorizationProviderExtensionLoginManager",
                "type": "class"
              },
              {
                "title": "Authentication",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Pre-login",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/obtaining-a-server-nonce",
                    "title": "Obtaining a server nonce",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-preauthentication-request",
                    "title": "Performing a preauthentication request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-ws-trust-metadata-exchange-data-mex-request",
                    "title": "Performing a WS-Trust metadata exchange data (MEX) request",
                    "type": "article"
                  },
                  {
                    "title": "Login request",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-a-ws-trust-login-request",
                    "title": "Performing a WS-Trust login request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-an-embedded-assertion",
                    "title": "Creating an embedded assertion",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-an-encrypted-embedded-assertion",
                    "title": "Creating an encrypted embedded assertion",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-and-validating-a-login-request",
                    "title": "Creating and validating a login request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-a-refresh-request",
                    "title": "Creating a refresh request",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/supporting-key-requests-and-key-exchange-requests",
                    "title": "Supporting key requests and key exchange requests",
                    "type": "article"
                  },
                  {
                    "title": "Login response",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/creating-a-json-web-encryption-jwe-login-response",
                    "title": "Creating a JSON Web Encryption (JWE) login response",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/processing-the-json-web-encryption-jwe-login-response",
                    "title": "Processing the JSON Web Encryption (JWE) login response",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/authenticationservices/performing-encryption-verification",
                    "title": "Performing encryption verification",
                    "type": "article"
                  }
                ],
                "path": "/documentation/authenticationservices/authentication-process",
                "title": "Authentication process",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/clientnamekeyname",
                    "title": "var clientNameKeyName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/encryptionkeytypekeyname",
                    "title": "var encryptionKeyTypeKeyName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/messagebufferkeyname",
                    "title": "var messageBufferKeyName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/realmkeyname",
                    "title": "var realmKeyName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/servicenamekeyname",
                    "title": "var serviceNameKeyName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/sessionkeykeyname",
                    "title": "var sessionKeyKeyName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping/ticketkeypath",
                    "title": "var ticketKeyPath: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionkerberosmapping",
                "title": "ASAuthorizationProviderExtensionKerberosMapping",
                "type": "class"
              }
            ],
            "path": "/documentation/authenticationservices/platform-single-sign-on-sso",
            "title": "Platform single sign-on (SSO)",
            "type": "collection"
          },
          {
            "title": "Apple TV authentication",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/asauthorizationcontroller/customauthorizationmethods",
            "title": "var customAuthorizationMethods: [ASAuthorizationCustomMethod]",
            "type": "property"
          },
          {
            "path": "/documentation/authenticationservices/asauthorizationcontrollerdelegate/authorizationcontroller(_:didcompletewithcustommethod:)",
            "title": "func authorizationController(ASAuthorizationController, didCompleteWithCustomMethod: ASAuthorizationCustomMethod)",
            "type": "method"
          },
          {
            "children": [
              {
                "title": "Creating the Structure",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcustommethod/init(rawvalue:)",
                "title": "init(rawValue: String)",
                "type": "init"
              },
              {
                "title": "Getting the Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcustommethod/videosubscriberaccount",
                "title": "static let videoSubscriberAccount: ASAuthorizationCustomMethod",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcustommethod/restorepurchase",
                "title": "static let restorePurchase: ASAuthorizationCustomMethod",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationcustommethod/other",
                "title": "static let other: ASAuthorizationCustomMethod",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationcustommethod",
            "title": "ASAuthorizationCustomMethod",
            "type": "struct"
          },
          {
            "title": "Automatic security upgrades",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/upgrading-account-security-with-an-account-authentication-modification-extension",
            "title": "Upgrading Account Security With an Account Authentication Modification Extension",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Initiating Security Upgrades from Your App",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller/perform(_:)",
                "title": "func perform(ASAccountAuthenticationModificationRequest)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating Upgrade Requests in Your App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/init(user:serviceidentifier:userinfo:)",
                    "title": "init(user: String, serviceIdentifier: ASCredentialServiceIdentifier, userInfo: [AnyHashable : Any]?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/user",
                    "title": "var user: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/serviceidentifier",
                    "title": "var serviceIdentifier: ASCredentialServiceIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest/userinfo",
                    "title": "var userInfo: [AnyHashable : Any]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationreplacepasswordwithsigninwithapplerequest",
                "title": "ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating Upgrade Requests in Your App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/init(user:serviceidentifier:userinfo:)",
                    "title": "init(user: String, serviceIdentifier: ASCredentialServiceIdentifier, userInfo: [AnyHashable : Any]?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/user",
                    "title": "var user: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/serviceidentifier",
                    "title": "var serviceIdentifier: ASCredentialServiceIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest/userinfo",
                    "title": "var userInfo: [AnyHashable : Any]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationupgradepasswordtostrongpasswordrequest",
                "title": "ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest",
                "type": "class"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationrequest",
                "title": "ASAccountAuthenticationModificationRequest",
                "type": "class"
              },
              {
                "title": "Configuring Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller/presentationcontextprovider",
                "title": "var presentationContextProvider: (any ASAccountAuthenticationModificationControllerPresentationContextProviding)?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller/delegate",
                "title": "var delegate: (any ASAccountAuthenticationModificationControllerDelegate)?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontroller",
            "title": "ASAccountAuthenticationModificationController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Upgrading to Sign in with Apple",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/convertaccounttosigninwithapplewithoutuserinteraction(for:existingcredential:userinfo:)",
                "title": "func convertAccountToSignInWithAppleWithoutUserInteraction(for: ASCredentialServiceIdentifier, existingCredential: ASPasswordCredential, userInfo: [AnyHashable : Any]?)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/prepareinterfacetoconvertaccounttosigninwithapple(for:existingcredential:userinfo:)",
                "title": "func prepareInterfaceToConvertAccountToSignInWithApple(for: ASCredentialServiceIdentifier, existingCredential: ASPasswordCredential, userInfo: [AnyHashable : Any]?)",
                "type": "method"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsextension/asaccountauthenticationmodificationsupportsupgradetosigninwithapple",
                "title": "ASAccountAuthenticationModificationSupportsUpgradeToSignInWithApple",
                "type": "typealias"
              },
              {
                "title": "Upgrading to Strong Passwords",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/changepasswordwithoutuserinteraction(for:existingcredential:newpassword:userinfo:)",
                "title": "func changePasswordWithoutUserInteraction(for: ASCredentialServiceIdentifier, existingCredential: ASPasswordCredential, newPassword: String, userInfo: [AnyHashable : Any]?)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/prepareinterfacetochangepassword(for:existingcredential:newpassword:userinfo:)",
                "title": "func prepareInterfaceToChangePassword(for: ASCredentialServiceIdentifier, existingCredential: ASPasswordCredential, newPassword: String, userInfo: [AnyHashable : Any]?)",
                "type": "method"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsextension/asaccountauthenticationmodificationsupportsstrongpasswordchange",
                "title": "ASAccountAuthenticationModificationSupportsStrongPasswordChange",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nsextension/asaccountauthenticationmodificationpasswordgenerationrequirements",
                "title": "ASAccountAuthenticationModificationPasswordGenerationRequirements",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/asaccountauthenticationmodificationoptoutofsecuritypromptsonsignin",
                "title": "ASAccountAuthenticationModificationOptOutOfSecurityPromptsOnSignIn",
                "type": "typealias"
              },
              {
                "title": "Handling Modification Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/cancelrequest()",
                "title": "func cancelRequest()",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Handling Requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerdelegate/accountauthenticationmodificationcontroller(_:didsuccessfullycomplete:userinfo:)",
                    "title": "func accountAuthenticationModificationController(ASAccountAuthenticationModificationController, didSuccessfullyComplete: ASAccountAuthenticationModificationRequest, userInfo: [AnyHashable : Any]?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerdelegate/accountauthenticationmodificationcontroller(_:didfail:error:)",
                    "title": "func accountAuthenticationModificationController(ASAccountAuthenticationModificationController, didFail: ASAccountAuthenticationModificationRequest, error: any Error)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerdelegate",
                "title": "ASAccountAuthenticationModificationControllerDelegate",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Presenting the Account Modification Interface",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerpresentationcontextproviding/presentationanchor(for:)",
                    "title": "func presentationAnchor(for: ASAccountAuthenticationModificationController) -> ASPresentationAnchor",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationcontrollerpresentationcontextproviding",
                "title": "ASAccountAuthenticationModificationControllerPresentationContextProviding",
                "type": "protocol"
              },
              {
                "title": "Getting the Extension Context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller/extensioncontext",
                "title": "var extensionContext: ASAccountAuthenticationModificationExtensionContext",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asaccountauthenticationmodificationviewcontroller",
            "title": "ASAccountAuthenticationModificationViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Handling Requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/completeupgradetosigninwithapple(userinfo:)",
                "title": "func completeUpgradeToSignInWithApple(userInfo: [AnyHashable : Any]?)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/completechangepasswordrequest(updatedcredential:userinfo:)",
                "title": "func completeChangePasswordRequest(updatedCredential: ASPasswordCredential, userInfo: [AnyHashable : Any]?)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/getsigninwithappleupgradeauthorization(state:nonce:completionhandler:)",
                "title": "func getSignInWithAppleUpgradeAuthorization(state: String?, nonce: String?, completionHandler: (ASAuthorizationAppleIDCredential?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext/cancelrequest(witherror:)",
                "title": "func cancelRequest(withError: any Error)",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asextensionlocalizedfailurereasonerrorkey",
                "title": "let ASExtensionLocalizedFailureReasonErrorKey: String",
                "type": "var"
              }
            ],
            "path": "/documentation/authenticationservices/asaccountauthenticationmodificationextensioncontext",
            "title": "ASAccountAuthenticationModificationExtensionContext",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/dynamicwstrust",
                    "title": "case dynamicWSTrust",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/wstrust",
                    "title": "case wsTrust",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/federationtype-swift.enum",
                "title": "ASAuthorizationProviderExtensionLoginConfiguration.FederationType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/passwordfallback",
                    "title": "static var passwordFallback: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/reuseduringunlock",
                    "title": "static var reuseDuringUnlock: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchany",
                    "title": "static var touchIDOrWatchAny: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct/touchidorwatchcurrentset",
                    "title": "static var touchIDOrWatchCurrentSet: ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionloginconfiguration/usersecureenclavekeybiometricpolicy-swift.struct",
                "title": "ASAuthorizationProviderExtensionLoginConfiguration.UserSecureEnclaveKeyBiometricPolicy",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionplatformssoprotocolversion/version1_0",
                    "title": "case version1_0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionplatformssoprotocolversion/version2_0",
                    "title": "case version2_0",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionplatformssoprotocolversion/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionplatformssoprotocolversion",
                "title": "ASAuthorizationProviderExtensionPlatformSSOProtocolVersion",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/jwtbearer",
                    "title": "static var jwtBearer: ASAuthorizationProviderExtensionSupportedGrantTypes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/password",
                    "title": "static var password: ASAuthorizationProviderExtensionSupportedGrantTypes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/saml1_1",
                    "title": "static var saml1_1: ASAuthorizationProviderExtensionSupportedGrantTypes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes/saml2_0",
                    "title": "static var saml2_0: ASAuthorizationProviderExtensionSupportedGrantTypes",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionsupportedgranttypes",
                "title": "ASAuthorizationProviderExtensionSupportedGrantTypes",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattachment/crossplatform",
                    "title": "case crossPlatform",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattachment/platform",
                    "title": "case platform",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattachment/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialattachment",
                "title": "ASAuthorizationPublicKeyCredentialAttachment",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/passkey",
                    "title": "static var passkey: ASCredentialIdentityStore.IdentityTypes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/password",
                    "title": "static var password: ASCredentialIdentityStore.IdentityTypes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes/onetimecode",
                    "title": "static var oneTimeCode: ASCredentialIdentityStore.IdentityTypes",
                    "type": "property"
                  }
                ],
                "path": "/documentation/authenticationservices/ascredentialidentitystore/identitytypes",
                "title": "ASCredentialIdentityStore.IdentityTypes",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue/crossorigin",
                    "title": "case crossOrigin",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue/notset",
                    "title": "case notSet",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue/sameoriginwithancestors",
                    "title": "case sameOriginWithAncestors",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdatacrossoriginvalue",
                "title": "ASPublicKeyCredentialClientDataCrossOriginValue",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuseragerange/child",
                    "title": "case child",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuseragerange/notchild",
                    "title": "case notChild",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuseragerange/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asuseragerange/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/authenticationservices/asuseragerange",
                "title": "ASUserAgeRange",
                "type": "enum"
              }
            ],
            "path": "/documentation/authenticationservices/authenticationservices-enumerations",
            "title": "AuthenticationServices Enumerations",
            "type": "collection"
          },
          {
            "path": "/documentation/authenticationservices/authenticationservices-data-types",
            "title": "AuthenticationServices Data Types",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/init(loginusername:)",
                "title": "init(loginUserName: String)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/loginusername",
                "title": "var loginUserName: String",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomassertionrequestbodyclaims(_:)",
                "title": "func setCustomAssertionRequestBodyClaims([String : Any]) throws",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomassertionrequestheaderclaims(_:)",
                "title": "func setCustomAssertionRequestHeaderClaims([String : Any]) throws",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomloginrequestbodyclaims(_:)",
                "title": "func setCustomLoginRequestBodyClaims([String : Any]) throws",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration/setcustomloginrequestheaderclaims(_:)",
                "title": "func setCustomLoginRequestHeaderClaims([String : Any]) throws",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationproviderextensionuserloginconfiguration",
            "title": "ASAuthorizationProviderExtensionUserLoginConfiguration",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asonetimecodecredentialidentity/init(serviceidentifier:label:recordidentifier:)",
                "title": "init(serviceIdentifier: ASCredentialServiceIdentifier, label: String, recordIdentifier: String?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asonetimecodecredentialidentity/label",
                "title": "var label: String",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asonetimecodecredentialidentity",
            "title": "ASOneTimeCodeCredentialIdentity",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialassertionrequest/clientdata-1ld1w",
                "title": "var clientData: ASPublicKeyCredentialClientData?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialassertionrequest",
            "title": "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating passkey assertion requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialprovider-8xc1s/createcredentialassertionrequest(clientdata:)",
                "title": "func createCredentialAssertionRequest(clientData: ASPublicKeyCredentialClientData) -> ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialprovider-8xc1s/createcredentialregistrationrequest(clientdata:displayname:name:userid:)",
                "title": "func createCredentialRegistrationRequest(clientData: ASPublicKeyCredentialClientData, displayName: String, name: String, userID: Data) -> ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialprovider-8xc1s",
            "title": "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialregistrationrequest/clientdata-3hz81",
                "title": "var clientData: ASPublicKeyCredentialClientData?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationwebbrowsersecuritykeypublickeycredentialregistrationrequest",
            "title": "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm/init(_:)",
                "title": "init(NSNumber)",
                "type": "init"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm/init(rawvalue:)",
                "title": "init(rawValue: NSNumber)",
                "type": "init"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm/ecdhe_a256gcm",
                "title": "static let ecdhe_A256GCM: ASAuthorizationProviderExtensionEncryptionAlgorithm",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm/hpke_curve25519_sha256_chachapoly",
                "title": "static let hpke_Curve25519_SHA256_ChachaPoly: ASAuthorizationProviderExtensionEncryptionAlgorithm",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm/hpke_p256_sha256_aes_gcm_256",
                "title": "static let hpke_P256_SHA256_AES_GCM_256: ASAuthorizationProviderExtensionEncryptionAlgorithm",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm/hpke_p384_sha384_aes_gcm_256",
                "title": "static let hpke_P384_SHA384_AES_GCM_256: ASAuthorizationProviderExtensionEncryptionAlgorithm",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationproviderextensionencryptionalgorithm",
            "title": "ASAuthorizationProviderExtensionEncryptionAlgorithm",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionsigningalgorithm/init(_:)",
                "title": "init(NSNumber)",
                "type": "init"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionsigningalgorithm/init(rawvalue:)",
                "title": "init(rawValue: NSNumber)",
                "type": "init"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionsigningalgorithm/ed25519",
                "title": "static let ed25519: ASAuthorizationProviderExtensionSigningAlgorithm",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionsigningalgorithm/es256",
                "title": "static let es256: ASAuthorizationProviderExtensionSigningAlgorithm",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationproviderextensionsigningalgorithm/es384",
                "title": "static let es384: ASAuthorizationProviderExtensionSigningAlgorithm",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationproviderextensionsigningalgorithm",
            "title": "ASAuthorizationProviderExtensionSigningAlgorithm",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertioninput-swift.struct/operation-swift.property",
                "title": "var operation: ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertioninput-swift.struct/read",
                "title": "static var read: ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertioninput-swift.struct/write(_:)",
                "title": "static func write(Data) -> ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput",
                "type": "method"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertioninput-swift.struct/operation-swift.enum/read",
                    "title": "case read",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertioninput-swift.struct/operation-swift.enum/write(_:)",
                    "title": "case write(Data)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertioninput-swift.struct/operation-swift.enum",
                "title": "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.Operation",
                "type": "enum"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertioninput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertionoutput-swift.struct/result",
                "title": "var result: ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.OperationResult",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertionoutput-swift.struct/operationresult/read(data:)",
                    "title": "case read(data: Data?)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertionoutput-swift.struct/operationresult/write(success:)",
                    "title": "case write(success: Bool)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertionoutput-swift.struct/operationresult",
                "title": "ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.OperationResult",
                "type": "enum"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertionoutput-swift.struct/read(data:)",
                "title": "static func read(data: Data?) -> ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertionoutput-swift.struct/write(success:)",
                "title": "static func write(success: Bool) -> ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobassertionoutput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationinput-swift.struct/supportrequirement-swift.property",
                "title": "var supportRequirement: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.SupportRequirement",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationinput-swift.struct/supportpreferred",
                "title": "static var supportPreferred: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationinput-swift.struct/supportrequired",
                "title": "static var supportRequired: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationinput-swift.struct/supportrequirement-swift.enum/preferred",
                    "title": "case preferred",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationinput-swift.struct/supportrequirement-swift.enum/required",
                    "title": "case required",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationinput-swift.struct/supportrequirement-swift.enum",
                "title": "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.SupportRequirement",
                "type": "enum"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationinput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationoutput-swift.struct/issupported",
                "title": "var isSupported: Bool",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationoutput-swift.struct/supported",
                "title": "static var supported: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationoutput-swift.struct/unsupported",
                "title": "static var unsupported: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentiallargeblobregistrationoutput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/inputvalues-swift.struct/init(saltinput1:saltinput2:)",
                    "title": "init(saltInput1: Data, saltInput2: Data?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/inputvalues-swift.struct/saltinput1",
                    "title": "var saltInput1: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/inputvalues-swift.struct/saltinput2",
                    "title": "var saltInput2: Data?",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/inputvalues-swift.struct/saltinput1(_:saltinput2:)",
                    "title": "static func saltInput1(Data, saltInput2: Data?) -> ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues",
                    "type": "method"
                  }
                ],
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/inputvalues-swift.struct",
                "title": "ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues",
                "type": "struct"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/inputvalues-swift.property",
                "title": "let inputValues: ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/percredentialinputvalues",
                "title": "let perCredentialInputValues: [Data : ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues]?",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/inputvalues(_:percredentialinputvalues:)",
                "title": "static func inputValues(ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues, perCredentialInputValues: [Data : ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues]?) -> ASAuthorizationPublicKeyCredentialPRFAssertionInput",
                "type": "method"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct/percredentialinputvalues(_:)",
                "title": "static func perCredentialInputValues([Data : ASAuthorizationPublicKeyCredentialPRFAssertionInput.InputValues]) -> ASAuthorizationPublicKeyCredentialPRFAssertionInput",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertioninput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialPRFAssertionInput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertionoutput-swift.struct/init(first:second:)",
                "title": "init(first: SymmetricKey, second: SymmetricKey?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertionoutput-swift.struct/first",
                "title": "let first: SymmetricKey",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertionoutput-swift.struct/second",
                "title": "let second: SymmetricKey?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfassertionoutput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialPRFAssertionOutput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationinput-swift.struct/inputvalues-swift.property",
                "title": "let inputValues: ASAuthorizationPublicKeyCredentialPRFRegistrationInput.InputValues?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationinput-swift.struct/shouldcheckforsupport",
                "title": "let shouldCheckForSupport: Bool",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationinput-swift.struct/inputvalues-swift.typealias",
                "title": "ASAuthorizationPublicKeyCredentialPRFRegistrationInput.InputValues",
                "type": "typealias"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationinput-swift.struct/checkforsupport",
                "title": "static var checkForSupport: ASAuthorizationPublicKeyCredentialPRFRegistrationInput",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationinput-swift.struct/inputvalues(_:)",
                "title": "static func inputValues(ASAuthorizationPublicKeyCredentialPRFRegistrationInput.InputValues) -> ASAuthorizationPublicKeyCredentialPRFRegistrationInput",
                "type": "method"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationinput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialPRFRegistrationInput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationoutput-swift.struct/init(first:second:)",
                "title": "init(first: SymmetricKey, second: SymmetricKey?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationoutput-swift.struct/first",
                "title": "let first: SymmetricKey?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationoutput-swift.struct/issupported",
                "title": "let isSupported: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationoutput-swift.struct/second",
                "title": "let second: SymmetricKey?",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationoutput-swift.struct/supported",
                "title": "static var supported: ASAuthorizationPublicKeyCredentialPRFRegistrationOutput",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationoutput-swift.struct/unsupported",
                "title": "static var unsupported: ASAuthorizationPublicKeyCredentialPRFRegistrationOutput",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asauthorizationpublickeycredentialprfregistrationoutput-swift.struct",
            "title": "ASAuthorizationPublicKeyCredentialPRFRegistrationOutput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating an editable field",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asimportableeditablefield/init(id:fieldtype:value:label:)",
                "title": "init(id: Data, fieldType: ASImportableEditableField.FieldType, value: String, label: String?)",
                "type": "init"
              },
              {
                "title": "Accessing field properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/asimportableeditablefield/id",
                "title": "var id: Data",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.property",
                "title": "var fieldType: ASImportableEditableField.FieldType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Determining field type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/boolean",
                    "title": "case boolean",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/concealedstring",
                    "title": "case concealedString",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/date",
                    "title": "case date",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/email",
                    "title": "case email",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/number",
                    "title": "case number",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum/string",
                    "title": "case string",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/asimportableeditablefield/fieldtype-swift.enum",
                "title": "ASImportableEditableField.FieldType",
                "type": "enum"
              },
              {
                "path": "/documentation/authenticationservices/asimportableeditablefield/value",
                "title": "var value: String",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/asimportableeditablefield/label",
                "title": "var label: String?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/asimportableeditablefield",
            "title": "ASImportableEditableField",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensioninput-swift.struct/init(largeblob:prf:)",
                "title": "init(largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput?, prf: ASAuthorizationPublicKeyCredentialPRFAssertionInput?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensioninput-swift.struct/largeblob",
                "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensioninput-swift.struct/prf",
                "title": "var prf: ASAuthorizationPublicKeyCredentialPRFAssertionInput?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensioninput-swift.struct",
            "title": "ASPasskeyAssertionCredentialExtensionInput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensionoutput-swift.struct/init(largeblob:prf:)",
                "title": "init(largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput?, prf: ASAuthorizationPublicKeyCredentialPRFAssertionOutput?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensionoutput-swift.struct/largeblob",
                "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensionoutput-swift.struct/prf",
                "title": "var prf: ASAuthorizationPublicKeyCredentialPRFAssertionOutput?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aspasskeyassertioncredentialextensionoutput-swift.struct",
            "title": "ASPasskeyAssertionCredentialExtensionOutput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyregistrationcredentialextensioninput-swift.struct/largeblob",
                "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyregistrationcredentialextensioninput-swift.struct/prf",
                "title": "var prf: ASAuthorizationPublicKeyCredentialPRFRegistrationInput?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aspasskeyregistrationcredentialextensioninput-swift.struct",
            "title": "ASPasskeyRegistrationCredentialExtensionInput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyregistrationcredentialextensionoutput-swift.struct/init(largeblob:prf:)",
                "title": "init(largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput?, prf: ASAuthorizationPublicKeyCredentialPRFRegistrationOutput?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyregistrationcredentialextensionoutput-swift.struct/largeblob",
                "title": "var largeBlob: ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeyregistrationcredentialextensionoutput-swift.struct/prf",
                "title": "var prf: ASAuthorizationPublicKeyCredentialPRFRegistrationOutput?",
                "type": "property"
              }
            ],
            "path": "/documentation/authenticationservices/aspasskeyregistrationcredentialextensionoutput-swift.struct",
            "title": "ASPasskeyRegistrationCredentialExtensionOutput",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/init(challenge:origin:toporigin:crossorigin:)",
                "title": "init(challenge: Data, origin: String, topOrigin: String?, crossOrigin: ASPublicKeyCredentialClientData.CrossOriginValue?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/challenge",
                "title": "var challenge: Data",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/crossorigin",
                "title": "var crossOrigin: ASPublicKeyCredentialClientData.CrossOriginValue?",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/origin",
                "title": "var origin: String",
                "type": "property"
              },
              {
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/toporigin",
                "title": "var topOrigin: String?",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/crossoriginvalue/crossorigin",
                    "title": "case crossOrigin",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/crossoriginvalue/sameoriginwithancestors",
                    "title": "case sameOriginWithAncestors",
                    "type": "case"
                  }
                ],
                "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct/crossoriginvalue",
                "title": "ASPublicKeyCredentialClientData.CrossOriginValue",
                "type": "enum"
              }
            ],
            "path": "/documentation/authenticationservices/aspublickeycredentialclientdata-swift.struct",
            "title": "ASPublicKeyCredentialClientData",
            "type": "struct"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/authenticationservices/ascredentialexchangeactivity",
            "title": "let ASCredentialExchangeActivity: String",
            "type": "var"
          },
          {
            "path": "/documentation/authenticationservices/ascredentialimporttoken",
            "title": "let ASCredentialImportToken: String",
            "type": "var"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeycredentialextensioninput/assertion(_:)",
                "title": "case assertion(ASPasskeyAssertionCredentialExtensionInput)",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeycredentialextensioninput/none",
                "title": "case none",
                "type": "case"
              },
              {
                "path": "/documentation/authenticationservices/aspasskeycredentialextensioninput/registration(_:)",
                "title": "case registration(ASPasskeyRegistrationCredentialExtensionInput)",
                "type": "case"
              }
            ],
            "path": "/documentation/authenticationservices/aspasskeycredentialextensioninput",
            "title": "ASPasskeyCredentialExtensionInput",
            "type": "enum"
          }
        ],
        "path": "/documentation/authenticationservices",
        "title": "Authentication Services",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
