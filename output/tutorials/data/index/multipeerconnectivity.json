{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/multipeerconnectivity/multipeerconnectivity_enumerations",
            "title": "MultipeerConnectivity Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/multipeerconnectivity/multipeerconnectivity_constants",
            "title": "MultipeerConnectivity Constants",
            "type": "collection"
          }
        ],
        "path": "/documentation/multipeerconnectivity",
        "title": "Multipeer Connectivity",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializing and Configuring",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/init(servicetype:discoveryinfo:session:)",
                "title": "- initWithServiceType:discoveryInfo:session:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/session",
                "title": "session",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/discoveryinfo",
                "title": "discoveryInfo",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/servicetype",
                "title": "serviceType",
                "type": "property"
              },
              {
                "title": "Starting and Stopping the Assistant",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/start()",
                "title": "- start",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/stop()",
                "title": "- stop",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcadvertiserassistant",
            "title": "MCAdvertiserAssistant",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing a Browser View Controller",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/init(servicetype:session:)",
                "title": "- initWithServiceType:session:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/init(browser:session:)",
                "title": "- initWithBrowser:session:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/browser",
                "title": "browser",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/session",
                "title": "session",
                "type": "property"
              },
              {
                "title": "Getting and Setting the Maximum and Minimum Number of Peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/maximumnumberofpeers",
                "title": "maximumNumberOfPeers",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/minimumnumberofpeers",
                "title": "minimumNumberOfPeers",
                "type": "property"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller",
            "title": "MCBrowserViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring and Initialization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/init(peer:discoveryinfo:servicetype:)",
                "title": "- initWithPeer:discoveryInfo:serviceType:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/discoveryinfo",
                "title": "discoveryInfo",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/mypeerid",
                "title": "myPeerID",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/servicetype",
                "title": "serviceType",
                "type": "property"
              },
              {
                "title": "Starting and Stopping Advertisement",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/startadvertisingpeer()",
                "title": "- startAdvertisingPeer",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/stopadvertisingpeer()",
                "title": "- stopAdvertisingPeer",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser",
            "title": "MCNearbyServiceAdvertiser",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing the Browser",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/init(peer:servicetype:)",
                "title": "- initWithPeer:serviceType:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/mypeerid",
                "title": "myPeerID",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/servicetype",
                "title": "serviceType",
                "type": "property"
              },
              {
                "title": "Browsing for Peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/startbrowsingforpeers()",
                "title": "- startBrowsingForPeers",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/stopbrowsingforpeers()",
                "title": "- stopBrowsingForPeers",
                "type": "method"
              },
              {
                "title": "Inviting Peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/invitepeer(_:to:withcontext:timeout:)",
                "title": "- invitePeer:toSession:withContext:timeout:",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser",
            "title": "MCNearbyServiceBrowser",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Peer Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcpeerid/init(displayname:)",
                "title": "- initWithDisplayName:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcpeerid/displayname",
                "title": "displayName",
                "type": "property"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcpeerid",
            "title": "MCPeerID",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/init(peer:)",
                "title": "- initWithPeer:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/init(peer:securityidentity:encryptionpreference:)",
                "title": "- initWithPeer:securityIdentity:encryptionPreference:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/encryptionpreference",
                "title": "encryptionPreference",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/mypeerid",
                "title": "myPeerID",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/securityidentity",
                "title": "securityIdentity",
                "type": "property"
              },
              {
                "title": "Managing Peers Manually",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/connectpeer(_:withnearbyconnectiondata:)",
                "title": "- connectPeer:withNearbyConnectionData:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/cancelconnectpeer(_:)",
                "title": "- cancelConnectPeer:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/connectedpeers",
                "title": "connectedPeers",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/nearbyconnectiondata(forpeer:withcompletionhandler:)",
                "title": "- nearbyConnectionDataForPeer:withCompletionHandler:",
                "type": "method"
              },
              {
                "title": "Sending Data and Resources",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/send(_:topeers:with:)",
                "title": "- sendData:toPeers:withMode:error:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/sendresource(at:withname:topeer:withcompletionhandler:)",
                "title": "- sendResourceAtURL:withName:toPeer:withCompletionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/startstream(withname:topeer:)",
                "title": "- startStreamWithName:toPeer:error:",
                "type": "method"
              },
              {
                "title": "Leaving a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/disconnect()",
                "title": "- disconnect",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/reliable",
                    "title": "MCSessionSendDataReliable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/unreliable",
                    "title": "MCSessionSendDataUnreliable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode",
                "title": "MCSessionSendDataMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/notconnected",
                    "title": "MCSessionStateNotConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connecting",
                    "title": "MCSessionStateConnecting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connected",
                    "title": "MCSessionStateConnected",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionstate",
                "title": "MCSessionState",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/optional",
                    "title": "MCEncryptionOptional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/required",
                    "title": "MCEncryptionRequired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/none",
                    "title": "MCEncryptionNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcencryptionpreference",
                "title": "MCEncryptionPreference",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unknown",
                    "title": "MCErrorUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/notconnected",
                    "title": "MCErrorNotConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/invalidparameter",
                    "title": "MCErrorInvalidParameter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unsupported",
                    "title": "MCErrorUnsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/timedout",
                    "title": "MCErrorTimedOut",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/cancelled",
                    "title": "MCErrorCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unavailable",
                    "title": "MCErrorUnavailable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcerror/code",
                "title": "MCErrorCode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerrordomain",
                    "title": "MCErrorDomain",
                    "type": "var"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/multipeer_connectivity_error_domain",
                "title": "Multipeer Connectivity Error Domain",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/kmcsessionmaximumnumberofpeers",
                    "title": "kMCSessionMaximumNumberOfPeers",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/kmcsessionminimumnumberofpeers",
                    "title": "kMCSessionMinimumNumberOfPeers",
                    "type": "var"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/minimum_and_maximum_supported_peers",
                "title": "Minimum and Maximum Supported Peers",
                "type": "collection"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcsession",
            "title": "MCSession",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Advertiser Assistant Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistantdelegate/advertiserassistantwillpresentinvitation(_:)",
                "title": "- advertiserAssistantWillPresentInvitation:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistantdelegate/advertiserassistantdiddismissinvitation(_:)",
                "title": "- advertiserAssistantDidDismissInvitation:",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcadvertiserassistantdelegate",
            "title": "MCAdvertiserAssistantDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Peer Notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate/browserviewcontroller(_:shouldpresentnearbypeer:withdiscoveryinfo:)",
                "title": "- browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:",
                "type": "method"
              },
              {
                "title": "User Action Notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate/browserviewcontrollerdidfinish(_:)",
                "title": "- browserViewControllerDidFinish:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate/browserviewcontrollerwascancelled(_:)",
                "title": "- browserViewControllerWasCancelled:",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate",
            "title": "MCBrowserViewControllerDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Error Handling Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiserdelegate/advertiser(_:didnotstartadvertisingpeer:)",
                "title": "- advertiser:didNotStartAdvertisingPeer:",
                "type": "method"
              },
              {
                "title": "Invitation Handling Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiserdelegate/advertiser(_:didreceiveinvitationfrompeer:withcontext:invitationhandler:)",
                "title": "- advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiserdelegate",
            "title": "MCNearbyServiceAdvertiserDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Error Handling Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate/browser(_:didnotstartbrowsingforpeers:)",
                "title": "- browser:didNotStartBrowsingForPeers:",
                "type": "method"
              },
              {
                "title": "Peer Discovery Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate/browser(_:foundpeer:withdiscoveryinfo:)",
                "title": "- browser:foundPeer:withDiscoveryInfo:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate/browser(_:lostpeer:)",
                "title": "- browser:lostPeer:",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate",
            "title": "MCNearbyServiceBrowserDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "MCSession Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didreceive:frompeer:)",
                "title": "- session:didReceiveData:fromPeer:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didstartreceivingresourcewithname:frompeer:with:)",
                "title": "- session:didStartReceivingResourceWithName:fromPeer:withProgress:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didfinishreceivingresourcewithname:frompeer:at:witherror:)",
                "title": "- session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didreceive:withname:frompeer:)",
                "title": "- session:didReceiveStream:withName:fromPeer:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:peer:didchange:)",
                "title": "- session:peer:didChangeState:",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didreceivecertificate:frompeer:certificatehandler:)",
                "title": "- session:didReceiveCertificate:fromPeer:certificateHandler:",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcsessiondelegate",
            "title": "MCSessionDelegate",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/optional",
                    "title": "MCEncryptionOptional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/required",
                    "title": "MCEncryptionRequired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/none",
                    "title": "MCEncryptionNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcencryptionpreference",
                "title": "MCEncryptionPreference",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unknown",
                    "title": "MCErrorUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/notconnected",
                    "title": "MCErrorNotConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/invalidparameter",
                    "title": "MCErrorInvalidParameter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unsupported",
                    "title": "MCErrorUnsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/timedout",
                    "title": "MCErrorTimedOut",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/cancelled",
                    "title": "MCErrorCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unavailable",
                    "title": "MCErrorUnavailable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcerror/code",
                "title": "MCErrorCode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/reliable",
                    "title": "MCSessionSendDataReliable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/unreliable",
                    "title": "MCSessionSendDataUnreliable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode",
                "title": "MCSessionSendDataMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/notconnected",
                    "title": "MCSessionStateNotConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connecting",
                    "title": "MCSessionStateConnecting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connected",
                    "title": "MCSessionStateConnected",
                    "type": "case"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionstate",
                "title": "MCSessionState",
                "type": "enum"
              }
            ],
            "path": "/documentation/multipeerconnectivity/multipeerconnectivity_enumerations",
            "title": "MultipeerConnectivity Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerrordomain",
                "title": "MCErrorDomain",
                "type": "var"
              },
              {
                "path": "/documentation/multipeerconnectivity/kmcsessionmaximumnumberofpeers",
                "title": "kMCSessionMaximumNumberOfPeers",
                "type": "var"
              },
              {
                "path": "/documentation/multipeerconnectivity/kmcsessionminimumnumberofpeers",
                "title": "kMCSessionMinimumNumberOfPeers",
                "type": "var"
              }
            ],
            "path": "/documentation/multipeerconnectivity/multipeerconnectivity_constants",
            "title": "MultipeerConnectivity Constants",
            "type": "collection"
          }
        ],
        "path": "/documentation/multipeerconnectivity",
        "title": "Multipeer Connectivity",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializing and Configuring",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/init(servicetype:discoveryinfo:session:)",
                "title": "init(serviceType: String, discoveryInfo: [String : String]?, session: MCSession)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/session",
                "title": "var session: MCSession",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/delegate",
                "title": "var delegate: (any MCAdvertiserAssistantDelegate)?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/discoveryinfo",
                "title": "var discoveryInfo: [String : String]?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/servicetype",
                "title": "var serviceType: String",
                "type": "property"
              },
              {
                "title": "Starting and Stopping the Assistant",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/start()",
                "title": "func start()",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistant/stop()",
                "title": "func stop()",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcadvertiserassistant",
            "title": "MCAdvertiserAssistant",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing a Browser View Controller",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/init(servicetype:session:)",
                "title": "convenience init(serviceType: String, session: MCSession)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/init(browser:session:)",
                "title": "init(browser: MCNearbyServiceBrowser, session: MCSession)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/delegate",
                "title": "var delegate: (any MCBrowserViewControllerDelegate)?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/browser",
                "title": "var browser: MCNearbyServiceBrowser?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/session",
                "title": "var session: MCSession",
                "type": "property"
              },
              {
                "title": "Getting and Setting the Maximum and Minimum Number of Peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/maximumnumberofpeers",
                "title": "var maximumNumberOfPeers: Int",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller/minimumnumberofpeers",
                "title": "var minimumNumberOfPeers: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcbrowserviewcontroller",
            "title": "MCBrowserViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring and Initialization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/init(peer:discoveryinfo:servicetype:)",
                "title": "init(peer: MCPeerID, discoveryInfo: [String : String]?, serviceType: String)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/delegate",
                "title": "var delegate: (any MCNearbyServiceAdvertiserDelegate)?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/discoveryinfo",
                "title": "var discoveryInfo: [String : String]?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/mypeerid",
                "title": "var myPeerID: MCPeerID",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/servicetype",
                "title": "var serviceType: String",
                "type": "property"
              },
              {
                "title": "Starting and Stopping Advertisement",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/startadvertisingpeer()",
                "title": "func startAdvertisingPeer()",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser/stopadvertisingpeer()",
                "title": "func stopAdvertisingPeer()",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiser",
            "title": "MCNearbyServiceAdvertiser",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing the Browser",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/init(peer:servicetype:)",
                "title": "init(peer: MCPeerID, serviceType: String)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/delegate",
                "title": "var delegate: (any MCNearbyServiceBrowserDelegate)?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/mypeerid",
                "title": "var myPeerID: MCPeerID",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/servicetype",
                "title": "var serviceType: String",
                "type": "property"
              },
              {
                "title": "Browsing for Peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/startbrowsingforpeers()",
                "title": "func startBrowsingForPeers()",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/stopbrowsingforpeers()",
                "title": "func stopBrowsingForPeers()",
                "type": "method"
              },
              {
                "title": "Inviting Peers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser/invitepeer(_:to:withcontext:timeout:)",
                "title": "func invitePeer(MCPeerID, to: MCSession, withContext: Data?, timeout: TimeInterval)",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowser",
            "title": "MCNearbyServiceBrowser",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Peer Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcpeerid/init(displayname:)",
                "title": "init(displayName: String)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcpeerid/displayname",
                "title": "var displayName: String",
                "type": "property"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcpeerid",
            "title": "MCPeerID",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/init(peer:)",
                "title": "convenience init(peer: MCPeerID)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/init(peer:securityidentity:encryptionpreference:)",
                "title": "init(peer: MCPeerID, securityIdentity: [Any]?, encryptionPreference: MCEncryptionPreference)",
                "type": "init"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/delegate",
                "title": "var delegate: (any MCSessionDelegate)?",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/encryptionpreference",
                "title": "var encryptionPreference: MCEncryptionPreference",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/mypeerid",
                "title": "var myPeerID: MCPeerID",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/securityidentity",
                "title": "var securityIdentity: [Any]?",
                "type": "property"
              },
              {
                "title": "Managing Peers Manually",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/connectpeer(_:withnearbyconnectiondata:)",
                "title": "func connectPeer(MCPeerID, withNearbyConnectionData: Data)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/cancelconnectpeer(_:)",
                "title": "func cancelConnectPeer(MCPeerID)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/connectedpeers",
                "title": "var connectedPeers: [MCPeerID]",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/nearbyconnectiondata(forpeer:withcompletionhandler:)",
                "title": "func nearbyConnectionData(forPeer: MCPeerID, withCompletionHandler: (Data?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "title": "Sending Data and Resources",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/send(_:topeers:with:)",
                "title": "func send(Data, toPeers: [MCPeerID], with: MCSessionSendDataMode) throws",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/sendresource(at:withname:topeer:withcompletionhandler:)",
                "title": "func sendResource(at: URL, withName: String, toPeer: MCPeerID, withCompletionHandler: (((any Error)?) -> Void)?) -> Progress?",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/startstream(withname:topeer:)",
                "title": "func startStream(withName: String, toPeer: MCPeerID) throws -> OutputStream",
                "type": "method"
              },
              {
                "title": "Leaving a Session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsession/disconnect()",
                "title": "func disconnect()",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/reliable",
                    "title": "case reliable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/unreliable",
                    "title": "case unreliable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode",
                "title": "MCSessionSendDataMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/notconnected",
                    "title": "case notConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connecting",
                    "title": "case connecting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connected",
                    "title": "case connected",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionstate",
                "title": "MCSessionState",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/optional",
                    "title": "case optional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/required",
                    "title": "case required",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcencryptionpreference",
                "title": "MCEncryptionPreference",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/notconnected",
                    "title": "case notConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/invalidparameter",
                    "title": "case invalidParameter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/timedout",
                    "title": "case timedOut",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unavailable",
                    "title": "case unavailable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcerror/code",
                "title": "MCError.Code",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerrordomain",
                    "title": "let MCErrorDomain: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/multipeer_connectivity_error_domain",
                "title": "Multipeer Connectivity Error Domain",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/kmcsessionmaximumnumberofpeers",
                    "title": "let kMCSessionMaximumNumberOfPeers: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/kmcsessionminimumnumberofpeers",
                    "title": "let kMCSessionMinimumNumberOfPeers: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/minimum_and_maximum_supported_peers",
                "title": "Minimum and Maximum Supported Peers",
                "type": "collection"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcsession",
            "title": "MCSession",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Advertiser Assistant Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistantdelegate/advertiserassistantwillpresentinvitation(_:)",
                "title": "func advertiserAssistantWillPresentInvitation(MCAdvertiserAssistant)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcadvertiserassistantdelegate/advertiserassistantdiddismissinvitation(_:)",
                "title": "func advertiserAssistantDidDismissInvitation(MCAdvertiserAssistant)",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcadvertiserassistantdelegate",
            "title": "MCAdvertiserAssistantDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Peer Notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate/browserviewcontroller(_:shouldpresentnearbypeer:withdiscoveryinfo:)",
                "title": "func browserViewController(MCBrowserViewController, shouldPresentNearbyPeer: MCPeerID, withDiscoveryInfo: [String : String]?) -> Bool",
                "type": "method"
              },
              {
                "title": "User Action Notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate/browserviewcontrollerdidfinish(_:)",
                "title": "func browserViewControllerDidFinish(MCBrowserViewController)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate/browserviewcontrollerwascancelled(_:)",
                "title": "func browserViewControllerWasCancelled(MCBrowserViewController)",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcbrowserviewcontrollerdelegate",
            "title": "MCBrowserViewControllerDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Error Handling Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiserdelegate/advertiser(_:didnotstartadvertisingpeer:)",
                "title": "func advertiser(MCNearbyServiceAdvertiser, didNotStartAdvertisingPeer: any Error)",
                "type": "method"
              },
              {
                "title": "Invitation Handling Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiserdelegate/advertiser(_:didreceiveinvitationfrompeer:withcontext:invitationhandler:)",
                "title": "func advertiser(MCNearbyServiceAdvertiser, didReceiveInvitationFromPeer: MCPeerID, withContext: Data?, invitationHandler: (Bool, MCSession?) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyserviceadvertiserdelegate",
            "title": "MCNearbyServiceAdvertiserDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Error Handling Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate/browser(_:didnotstartbrowsingforpeers:)",
                "title": "func browser(MCNearbyServiceBrowser, didNotStartBrowsingForPeers: any Error)",
                "type": "method"
              },
              {
                "title": "Peer Discovery Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate/browser(_:foundpeer:withdiscoveryinfo:)",
                "title": "func browser(MCNearbyServiceBrowser, foundPeer: MCPeerID, withDiscoveryInfo: [String : String]?)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate/browser(_:lostpeer:)",
                "title": "func browser(MCNearbyServiceBrowser, lostPeer: MCPeerID)",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcnearbyservicebrowserdelegate",
            "title": "MCNearbyServiceBrowserDelegate",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "MCSession Delegate Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didreceive:frompeer:)",
                "title": "func session(MCSession, didReceive: Data, fromPeer: MCPeerID)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didstartreceivingresourcewithname:frompeer:with:)",
                "title": "func session(MCSession, didStartReceivingResourceWithName: String, fromPeer: MCPeerID, with: Progress)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didfinishreceivingresourcewithname:frompeer:at:witherror:)",
                "title": "func session(MCSession, didFinishReceivingResourceWithName: String, fromPeer: MCPeerID, at: URL?, withError: (any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didreceive:withname:frompeer:)",
                "title": "func session(MCSession, didReceive: InputStream, withName: String, fromPeer: MCPeerID)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:peer:didchange:)",
                "title": "func session(MCSession, peer: MCPeerID, didChange: MCSessionState)",
                "type": "method"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcsessiondelegate/session(_:didreceivecertificate:frompeer:certificatehandler:)",
                "title": "func session(MCSession, didReceiveCertificate: [Any]?, fromPeer: MCPeerID, certificateHandler: (Bool) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcsessiondelegate",
            "title": "MCSessionDelegate",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/3726664-init",
                "title": "init(Code, userInfo: [String : Any])",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/3726661-code",
                "title": "var code: Code",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/2887194-errorcode",
                "title": "var errorCode: Int",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/2887196-erroruserinfo",
                "title": "var errorUserInfo: [String : Any]",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/3726663-hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/3726665-userinfo",
                "title": "var userInfo: [String : Any]",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/cancelled",
                "title": "static var cancelled: MCError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/invalidparameter",
                "title": "static var invalidParameter: MCError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/notconnected",
                "title": "static var notConnected: MCError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/timedout",
                "title": "static var timedOut: MCError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/unavailable",
                "title": "static var unavailable: MCError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/unknown",
                "title": "static var unknown: MCError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/unsupported",
                "title": "static var unsupported: MCError.Code",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/3726662-hash",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Operator Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerror/3726660",
                "title": "static func == (MCError, MCError) -> Bool",
                "type": "op"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/notconnected",
                    "title": "case notConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/invalidparameter",
                    "title": "case invalidParameter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/timedout",
                    "title": "case timedOut",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unavailable",
                    "title": "case unavailable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcerror/code",
                "title": "MCError.Code",
                "type": "enum"
              }
            ],
            "path": "/documentation/multipeerconnectivity/mcerror",
            "title": "MCError",
            "type": "struct"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/optional",
                    "title": "case optional",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/required",
                    "title": "case required",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcencryptionpreference/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcencryptionpreference",
                "title": "MCEncryptionPreference",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/notconnected",
                    "title": "case notConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/invalidparameter",
                    "title": "case invalidParameter",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/timedout",
                    "title": "case timedOut",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/unavailable",
                    "title": "case unavailable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcerror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcerror/code",
                "title": "MCError.Code",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/reliable",
                    "title": "case reliable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/unreliable",
                    "title": "case unreliable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionsenddatamode",
                "title": "MCSessionSendDataMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/notconnected",
                    "title": "case notConnected",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connecting",
                    "title": "case connecting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/connected",
                    "title": "case connected",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/multipeerconnectivity/mcsessionstate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/multipeerconnectivity/mcsessionstate",
                "title": "MCSessionState",
                "type": "enum"
              }
            ],
            "path": "/documentation/multipeerconnectivity/multipeerconnectivity_enumerations",
            "title": "MultipeerConnectivity Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/multipeerconnectivity/mcerrordomain",
                "title": "let MCErrorDomain: String",
                "type": "var"
              },
              {
                "path": "/documentation/multipeerconnectivity/kmcsessionmaximumnumberofpeers",
                "title": "let kMCSessionMaximumNumberOfPeers: Int",
                "type": "var"
              },
              {
                "path": "/documentation/multipeerconnectivity/kmcsessionminimumnumberofpeers",
                "title": "let kMCSessionMinimumNumberOfPeers: Int",
                "type": "var"
              }
            ],
            "path": "/documentation/multipeerconnectivity/multipeerconnectivity_constants",
            "title": "MultipeerConnectivity Constants",
            "type": "collection"
          }
        ],
        "path": "/documentation/multipeerconnectivity",
        "title": "Multipeer Connectivity",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
