{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/configuring-your-app-to-use-location-services",
            "title": "Configuring your app to use location services",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/supporting-live-updates-in-swiftui-and-mac-catalyst-apps",
            "title": "Supporting live updates in SwiftUI and Mac Catalyst apps",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/adopting-live-updates-in-core-location",
            "title": "Adopting live updates in Core Location",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/corelocation/monitoring-location-changes-with-core-location",
            "title": "Monitoring location changes with Core Location",
            "type": "sampleCode"
          },
          {
            "title": "Authorization",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/requesting-authorization-to-use-location-services",
            "title": "Requesting authorization to use location services",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/suspending-authorization-requests",
            "title": "Suspending authorization requests",
            "type": "article"
          },
          {
            "title": "Monitoring",
            "type": "groupMarker"
          },
          {
            "title": "Location updates",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/getting-the-current-location-of-a-device",
            "title": "Getting the current location of a device",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/handling-location-updates-in-the-background",
            "title": "Handling location updates in the background",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/creating-a-location-push-service-extension",
            "title": "Creating a location push service extension",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/monitoring-location-changes-with-core-location",
            "title": "Monitoring location changes with Core Location",
            "type": "sampleCode"
          },
          {
            "title": "Region monitoring",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/monitoring-the-user-s-proximity-to-geographic-regions",
            "title": "Monitoring the user’s proximity to geographic regions",
            "type": "article"
          },
          {
            "title": "iBeacon",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/ranging-for-beacons",
            "title": "Ranging for Beacons",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/corelocation/determining-the-proximity-to-an-ibeacon-device",
            "title": "Determining the proximity to an iBeacon device",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/turning-an-ios-device-into-an-ibeacon-device",
            "title": "Turning an iOS device into an iBeacon device",
            "type": "article"
          },
          {
            "title": "Compass headings",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/getting-heading-and-course-information",
            "title": "Getting heading and course information",
            "type": "article"
          },
          {
            "title": "Geocoding",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/converting-between-coordinates-and-user-friendly-place-names",
            "title": "Converting between coordinates and user-friendly place names",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/converting-a-user-s-location-to-a-descriptive-placemark",
            "title": "Converting a user’s location to a descriptive placemark",
            "type": "article"
          },
          {
            "title": "Location push service extension",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Classes",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/corelocation/deprecated",
            "title": "Deprecated",
            "type": "collection"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/corelocation/core-location-constants",
            "title": "Core Location Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/corelocation/core-location-functions",
            "title": "Core Location Functions",
            "type": "collection"
          }
        ],
        "path": "/documentation/corelocation",
        "title": "Core Location",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/configuring-your-app-to-use-location-services",
            "title": "Configuring your app to use location services",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/supporting-live-updates-in-swiftui-and-mac-catalyst-apps",
            "title": "Supporting live updates in SwiftUI and Mac Catalyst apps",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Determining the availability of services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/significantlocationchangemonitoringavailable()",
                "title": "+ significantLocationChangeMonitoringAvailable",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/headingavailable()",
                "title": "+ headingAvailable",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/isauthorizedforwidgetupdates",
                "title": "authorizedForWidgetUpdates",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/accuracyauthorization",
                "title": "accuracyAuthorization",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/ismonitoringavailable(for:)",
                "title": "+ isMonitoringAvailableForClass:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/israngingavailable()",
                "title": "+ isRangingAvailable",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfailwitherror:)",
                    "title": "- locationManager:didFailWithError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:monitoringdidfailfor:witherror:)",
                    "title": "- locationManager:monitoringDidFailForRegion:withError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/locationservicesenabled()",
                "title": "+ locationServicesEnabled",
                "type": "method"
              },
              {
                "title": "Receiving data from location services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Responding to authorization changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagerdidchangeauthorization(_:)",
                    "title": "- locationManagerDidChangeAuthorization:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didchangeauthorization:)",
                    "title": "- locationManager:didChangeAuthorizationStatus:",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfailwitherror:)",
                    "title": "- locationManager:didFailWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Receiving location updates",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "external": true,
                        "path": "/documentation/mapkit",
                        "title": "MapKit",
                        "type": "module"
                      },
                      {
                        "external": true,
                        "path": "/documentation/mapkitjs",
                        "title": "MapKit JS",
                        "type": "module"
                      }
                    ],
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didupdatelocations:)",
                    "title": "- locationManager:didUpdateLocations:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didupdateto:from:)",
                    "title": "- locationManager:didUpdateToLocation:fromLocation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfinishdeferredupdateswitherror:)",
                    "title": "- locationManager:didFinishDeferredUpdatesWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Pausing location updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagerdidpauselocationupdates(_:)",
                    "title": "- locationManagerDidPauseLocationUpdates:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagerdidresumelocationupdates(_:)",
                    "title": "- locationManagerDidResumeLocationUpdates:",
                    "type": "method"
                  },
                  {
                    "title": "Receiving visit updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didvisit:)",
                    "title": "- locationManager:didVisit:",
                    "type": "method"
                  },
                  {
                    "title": "Receiving heading updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didupdateheading:)",
                    "title": "- locationManager:didUpdateHeading:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagershoulddisplayheadingcalibration(_:)",
                    "title": "- locationManagerShouldDisplayHeadingCalibration:",
                    "type": "method"
                  },
                  {
                    "title": "Receiving region-related updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didenterregion:)",
                    "title": "- locationManager:didEnterRegion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didexitregion:)",
                    "title": "- locationManager:didExitRegion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:diddeterminestate:for:)",
                    "title": "- locationManager:didDetermineState:forRegion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:monitoringdidfailfor:witherror:)",
                    "title": "- locationManager:monitoringDidFailForRegion:withError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didstartmonitoringfor:)",
                    "title": "- locationManager:didStartMonitoringForRegion:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Region States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/corelocation/clregionstate/unknown",
                        "title": "CLRegionStateUnknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/corelocation/clregionstate/inside",
                        "title": "CLRegionStateInside",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/corelocation/clregionstate/outside",
                        "title": "CLRegionStateOutside",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/corelocation/clregionstate",
                    "title": "CLRegionState",
                    "type": "enum"
                  },
                  {
                    "title": "Receiving beacon-related updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didrange:satisfying:)",
                    "title": "- locationManager:didRangeBeacons:satisfyingConstraint:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfailrangingfor:error:)",
                    "title": "- locationManager:didFailRangingBeaconsForConstraint:error:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didrangebeacons:in:)",
                    "title": "- locationManager:didRangeBeacons:inRegion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:rangingbeaconsdidfailfor:witherror:)",
                    "title": "- locationManager:rangingBeaconsDidFailForRegion:withError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanagerdelegate",
                "title": "CLLocationManagerDelegate",
                "type": "protocol"
              },
              {
                "title": "Requesting authorization for location services",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/handling-location-updates-in-the-background",
                    "title": "Handling location updates in the background",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocationwheninuseusagedescription",
                    "title": "NSLocationWhenInUseUsageDescription",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/requestwheninuseauthorization()",
                "title": "- requestWhenInUseAuthorization",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocationalwaysusagedescription",
                    "title": "NSLocationAlwaysUsageDescription",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/requestalwaysauthorization()",
                "title": "- requestAlwaysAuthorization",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requesttemporaryfullaccuracyauthorization(withpurposekey:completion:)",
                "title": "- requestTemporaryFullAccuracyAuthorizationWithPurposeKey:completion:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requesttemporaryfullaccuracyauthorization(withpurposekey:)",
                "title": "- requestTemporaryFullAccuracyAuthorizationWithPurposeKey:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/authorizationstatus-swift.property",
                "title": "authorizationStatus",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the authorization status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/notdetermined",
                    "title": "kCLAuthorizationStatusNotDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/restricted",
                    "title": "kCLAuthorizationStatusRestricted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/denied",
                    "title": "kCLAuthorizationStatusDenied",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clauthorizationstatus/authorized",
                    "title": "kCLAuthorizationStatusAuthorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/authorizedalways",
                    "title": "kCLAuthorizationStatusAuthorizedAlways",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/authorizedwheninuse",
                    "title": "kCLAuthorizationStatusAuthorizedWhenInUse",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corelocation/clauthorizationstatus",
                "title": "CLAuthorizationStatus",
                "type": "enum"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nslocationdefaultaccuracyreduced",
                "title": "NSLocationDefaultAccuracyReduced",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nslocationalwaysandwheninuseusagedescription",
                "title": "NSLocationAlwaysAndWhenInUseUsageDescription",
                "type": "typealias"
              },
              {
                "title": "Specifying distance and accuracy",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/distancefilter",
                "title": "distanceFilter",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationdistancemax",
                "title": "CLLocationDistanceMax",
                "type": "var"
              },
              {
                "path": "/documentation/corelocation/kcldistancefilternone",
                "title": "kCLDistanceFilterNone",
                "type": "var"
              },
              {
                "path": "/documentation/corelocation/cllocationdistance",
                "title": "CLLocationDistance",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/desiredaccuracy",
                "title": "desiredAccuracy",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Desired Accuracy Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybestfornavigation",
                    "title": "kCLLocationAccuracyBestForNavigation",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybest",
                    "title": "kCLLocationAccuracyBest",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracynearesttenmeters",
                    "title": "kCLLocationAccuracyNearestTenMeters",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyhundredmeters",
                    "title": "kCLLocationAccuracyHundredMeters",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracykilometer",
                    "title": "kCLLocationAccuracyKilometer",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracythreekilometers",
                    "title": "kCLLocationAccuracyThreeKilometers",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyreduced",
                    "title": "kCLLocationAccuracyReduced",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corelocation/cllocationaccuracy",
                "title": "CLLocationAccuracy",
                "type": "typealias"
              },
              {
                "title": "Running the standard location service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startupdatinglocation()",
                "title": "- startUpdatingLocation",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopupdatinglocation()",
                "title": "- stopUpdatingLocation",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requestlocation()",
                "title": "- requestLocation",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/pauseslocationupdatesautomatically",
                "title": "pausesLocationUpdatesAutomatically",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/allowsbackgroundlocationupdates",
                "title": "allowsBackgroundLocationUpdates",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/showsbackgroundlocationindicator",
                "title": "showsBackgroundLocationIndicator",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/activitytype",
                "title": "activityType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Activity types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/other",
                    "title": "CLActivityTypeOther",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/automotivenavigation",
                    "title": "CLActivityTypeAutomotiveNavigation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/fitness",
                    "title": "CLActivityTypeFitness",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/othernavigation",
                    "title": "CLActivityTypeOtherNavigation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/airborne",
                    "title": "CLActivityTypeAirborne",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corelocation/clactivitytype",
                "title": "CLActivityType",
                "type": "enum"
              },
              {
                "title": "Running the significant change location service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startmonitoringsignificantlocationchanges()",
                "title": "- startMonitoringSignificantLocationChanges",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopmonitoringsignificantlocationchanges()",
                "title": "- stopMonitoringSignificantLocationChanges",
                "type": "method"
              },
              {
                "title": "Running the visits location service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startmonitoringvisits()",
                "title": "- startMonitoringVisits",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopmonitoringvisits()",
                "title": "- stopMonitoringVisits",
                "type": "method"
              },
              {
                "title": "Running the heading service",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/headingavailable-swift.property",
                    "title": "headingAvailable",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/startupdatingheading()",
                "title": "- startUpdatingHeading",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopupdatingheading()",
                "title": "- stopUpdatingHeading",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/dismissheadingcalibrationdisplay()",
                "title": "- dismissHeadingCalibrationDisplay",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/headingfilter",
                "title": "headingFilter",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/kclheadingfilternone",
                "title": "kCLHeadingFilterNone",
                "type": "var"
              },
              {
                "path": "/documentation/corelocation/cllocationdegrees",
                "title": "CLLocationDegrees",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/headingorientation",
                "title": "headingOrientation",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Device Orientations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/unknown",
                    "title": "CLDeviceOrientationUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/portrait",
                    "title": "CLDeviceOrientationPortrait",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/portraitupsidedown",
                    "title": "CLDeviceOrientationPortraitUpsideDown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/landscapeleft",
                    "title": "CLDeviceOrientationLandscapeLeft",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/landscaperight",
                    "title": "CLDeviceOrientationLandscapeRight",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/faceup",
                    "title": "CLDeviceOrientationFaceUp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/facedown",
                    "title": "CLDeviceOrientationFaceDown",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corelocation/cldeviceorientation",
                "title": "CLDeviceOrientation",
                "type": "enum"
              },
              {
                "title": "Running the region-monitoring service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/monitoredregions",
                "title": "monitoredRegions",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/maximumregionmonitoringdistance",
                "title": "maximumRegionMonitoringDistance",
                "type": "property"
              },
              {
                "title": "Performing beacon ranging",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startrangingbeacons(satisfying:)",
                "title": "- startRangingBeaconsSatisfyingConstraint:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stoprangingbeacons(satisfying:)",
                "title": "- stopRangingBeaconsSatisfyingConstraint:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/rangedbeaconconstraints",
                "title": "rangedBeaconConstraints",
                "type": "property"
              },
              {
                "title": "Monitoring location push notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startmonitoringlocationpushes(completion:)",
                "title": "- startMonitoringLocationPushesWithCompletion:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopmonitoringlocationpushes()",
                "title": "- stopMonitoringLocationPushes",
                "type": "method"
              },
              {
                "title": "Getting recent location and heading data",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanager/startupdatinglocation()",
                    "title": "- startUpdatingLocation",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/location",
                "title": "location",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/heading",
                "title": "heading",
                "type": "property"
              },
              {
                "title": "Deferring location updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cltimeintervalmax",
                "title": "CLTimeIntervalMax",
                "type": "var"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Properties",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/headingavailable-swift.property",
                    "title": "headingAvailable",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/locationservicesenabled-swift.property",
                    "title": "locationServicesEnabled",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/purpose",
                    "title": "purpose",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/corelocation/cllocationmanager/startrangingbeacons(in:)",
                        "title": "- startRangingBeaconsInRegion:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/rangedregions",
                    "title": "rangedRegions",
                    "type": "property"
                  },
                  {
                    "title": "Methods",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/startmonitoring(for:)",
                    "title": "- startMonitoringForRegion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/stopmonitoring(for:)",
                    "title": "- stopMonitoringForRegion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/regionmonitoringavailable()",
                    "title": "+ regionMonitoringAvailable",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/regionmonitoringenabled()",
                    "title": "+ regionMonitoringEnabled",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/authorizationstatus()",
                    "title": "+ authorizationStatus",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/startmonitoring(for:desiredaccuracy:)",
                    "title": "- startMonitoringForRegion:desiredAccuracy:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/requeststate(for:)",
                    "title": "- requestStateForRegion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/startrangingbeacons(in:)",
                    "title": "- startRangingBeaconsInRegion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/stoprangingbeacons(in:)",
                    "title": "- stopRangingBeaconsInRegion:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/deferredlocationupdatesavailable()",
                    "title": "+ deferredLocationUpdatesAvailable",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/allowdeferredlocationupdates(untiltraveled:timeout:)",
                    "title": "- allowDeferredLocationUpdatesUntilTraveled:timeout:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/disallowdeferredlocationupdates()",
                    "title": "- disallowDeferredLocationUpdates",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/deprecated-symbols",
                "title": "Deprecated symbols",
                "type": "collection"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requesthistoricallocations(purposekey:samplecount:completionhandler:)",
                "title": "- requestHistoricalLocationsWithPurposeKey:sampleCount:completionHandler:",
                "type": "method"
              }
            ],
            "path": "/documentation/corelocation/cllocationmanager",
            "title": "CLLocationManager",
            "type": "class"
          },
          {
            "path": "/documentation/corelocation/adopting-live-updates-in-core-location",
            "title": "Adopting live updates in Core Location",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/corelocation/monitoring-location-changes-with-core-location",
            "title": "Monitoring location changes with Core Location",
            "type": "sampleCode"
          },
          {
            "title": "Authorization",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/requesting-authorization-to-use-location-services",
            "title": "Requesting authorization to use location services",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/suspending-authorization-requests",
            "title": "Suspending authorization requests",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the authorization status",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/notdetermined",
                "title": "kCLAuthorizationStatusNotDetermined",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/restricted",
                "title": "kCLAuthorizationStatusRestricted",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/denied",
                "title": "kCLAuthorizationStatusDenied",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clauthorizationstatus/authorized",
                "title": "kCLAuthorizationStatusAuthorized",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/authorizedalways",
                "title": "kCLAuthorizationStatusAuthorizedAlways",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/authorizedwheninuse",
                "title": "kCLAuthorizationStatusAuthorizedWhenInUse",
                "type": "case"
              }
            ],
            "path": "/documentation/corelocation/clauthorizationstatus",
            "title": "CLAuthorizationStatus",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Getting the location accuracy",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanager/accuracyauthorization",
                    "title": "accuracyAuthorization",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/claccuracyauthorization/fullaccuracy",
                "title": "CLAccuracyAuthorizationFullAccuracy",
                "type": "case"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanager/accuracyauthorization",
                    "title": "accuracyAuthorization",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/claccuracyauthorization/reducedaccuracy",
                "title": "CLAccuracyAuthorizationReducedAccuracy",
                "type": "case"
              }
            ],
            "path": "/documentation/corelocation/claccuracyauthorization",
            "title": "CLAccuracyAuthorization",
            "type": "enum"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationalwaysandwheninuseusagedescription",
            "title": "NSLocationAlwaysAndWhenInUseUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationwheninuseusagedescription",
            "title": "NSLocationWhenInUseUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationusagedescription",
            "title": "NSLocationUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationdefaultaccuracyreduced",
            "title": "NSLocationDefaultAccuracyReduced",
            "type": "typealias"
          },
          {
            "deprecated": true,
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationalwaysusagedescription",
            "title": "NSLocationAlwaysUsageDescription",
            "type": "typealias"
          },
          {
            "title": "Monitoring",
            "type": "groupMarker"
          },
          {
            "title": "Location updates",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/getting-the-current-location-of-a-device",
            "title": "Getting the current location of a device",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/handling-location-updates-in-the-background",
            "title": "Handling location updates in the background",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/creating-a-location-push-service-extension",
            "title": "Creating a location push service extension",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a location object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(latitude:longitude:)",
                "title": "- initWithLatitude:longitude:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:timestamp:)",
                "title": "- initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:course:speed:timestamp:)",
                "title": "- initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:course:courseaccuracy:speed:speedaccuracy:timestamp:)",
                "title": "- initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:course:courseaccuracy:speed:speedaccuracy:timestamp:sourceinfo:)",
                "title": "- initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:sourceInfo:",
                "type": "method"
              },
              {
                "title": "Getting the location attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/coordinate",
                "title": "coordinate",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/altitude",
                "title": "altitude",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/ellipsoidalaltitude",
                "title": "ellipsoidalAltitude",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationdistance",
                "title": "CLLocationDistance",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocation/floor",
                "title": "floor",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/timestamp",
                "title": "timestamp",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/sourceinformation",
                "title": "sourceInformation",
                "type": "property"
              },
              {
                "title": "Getting the location accuracy",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/horizontalaccuracy",
                "title": "horizontalAccuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/verticalaccuracy",
                "title": "verticalAccuracy",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Desired Accuracy Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybestfornavigation",
                    "title": "kCLLocationAccuracyBestForNavigation",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybest",
                    "title": "kCLLocationAccuracyBest",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracynearesttenmeters",
                    "title": "kCLLocationAccuracyNearestTenMeters",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyhundredmeters",
                    "title": "kCLLocationAccuracyHundredMeters",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracykilometer",
                    "title": "kCLLocationAccuracyKilometer",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracythreekilometers",
                    "title": "kCLLocationAccuracyThreeKilometers",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyreduced",
                    "title": "kCLLocationAccuracyReduced",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corelocation/cllocationaccuracy",
                "title": "CLLocationAccuracy",
                "type": "typealias"
              },
              {
                "title": "Measuring the distance between coordinates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/distance(from:)",
                "title": "- distanceFromLocation:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/cllocation/getdistancefrom(_:)",
                "title": "- getDistanceFrom:",
                "type": "method"
              },
              {
                "title": "Getting speed and course information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/speed",
                "title": "speed",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/speedaccuracy",
                "title": "speedAccuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/course",
                "title": "course",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/courseaccuracy",
                "title": "courseAccuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationspeed",
                "title": "CLLocationSpeed",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationdirection",
                "title": "CLLocationDirection",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationspeedaccuracy",
                "title": "CLLocationSpeedAccuracy",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationdirectionaccuracy",
                "title": "CLLocationDirectionAccuracy",
                "type": "typealias"
              }
            ],
            "path": "/documentation/corelocation/cllocation",
            "title": "CLLocation",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a location coordinate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2dmake(_:_:)",
                "title": "CLLocationCoordinate2DMake",
                "type": "func"
              },
              {
                "title": "Getting the geographic coordinates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2d/latitude",
                "title": "latitude",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2d/longitude",
                "title": "longitude",
                "type": "property"
              },
              {
                "title": "Validating a coordinate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2disvalid(_:)",
                "title": "CLLocationCoordinate2DIsValid",
                "type": "func"
              },
              {
                "path": "/documentation/corelocation/kcllocationcoordinate2dinvalid",
                "title": "kCLLocationCoordinate2DInvalid",
                "type": "var"
              }
            ],
            "path": "/documentation/corelocation/cllocationcoordinate2d",
            "title": "CLLocationCoordinate2D",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the floor level",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clfloor/level",
                "title": "level",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clfloor",
            "title": "CLFloor",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting the location",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clvisit/coordinate",
                "title": "coordinate",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clvisit/horizontalaccuracy",
                "title": "horizontalAccuracy",
                "type": "property"
              },
              {
                "title": "Getting the visit duration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clvisit/arrivaldate",
                "title": "arrivalDate",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clvisit/departuredate",
                "title": "departureDate",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clvisit",
            "title": "CLVisit",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a location source information object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationsourceinformation/init(softwaresimulationstate:andexternalaccessorystate:)",
                "title": "- initWithSoftwareSimulationState:andExternalAccessoryState:",
                "type": "method"
              },
              {
                "title": "Identifying the source of location data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationsourceinformation/isproducedbyaccessory",
                "title": "isProducedByAccessory",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationsourceinformation/issimulatedbysoftware",
                "title": "isSimulatedBySoftware",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/cllocationsourceinformation",
            "title": "CLLocationSourceInformation",
            "type": "class"
          },
          {
            "path": "/documentation/corelocation/monitoring-location-changes-with-core-location",
            "title": "Monitoring location changes with Core Location",
            "type": "sampleCode"
          },
          {
            "title": "Region monitoring",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/monitoring-the-user-s-proximity-to-geographic-regions",
            "title": "Monitoring the user’s proximity to geographic regions",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the region identifier",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clregion/identifier",
                "title": "identifier",
                "type": "property"
              },
              {
                "title": "Specifying the notification conditions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clregion/notifyonentry",
                "title": "notifyOnEntry",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clregion/notifyonexit",
                "title": "notifyOnExit",
                "type": "property"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/init(circularregionwithcenter:radius:identifier:)",
                "title": "- initCircularRegionWithCenter:radius:identifier:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/contains(_:)",
                "title": "- containsCoordinate:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/center",
                "title": "center",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/radius",
                "title": "radius",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clregion",
            "title": "CLRegion",
            "type": "class"
          },
          {
            "title": "iBeacon",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/ranging-for-beacons",
            "title": "Ranging for Beacons",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/corelocation/determining-the-proximity-to-an-ibeacon-device",
            "title": "Determining the proximity to an iBeacon device",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/turning-an-ios-device-into-an-ibeacon-device",
            "title": "Turning an iOS device into an iBeacon device",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the beacon identity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbeacon/uuid",
                "title": "UUID",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clbeacon/major",
                "title": "major",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clbeacon/minor",
                "title": "minor",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clbeacon/proximityuuid",
                "title": "proximityUUID",
                "type": "property"
              },
              {
                "title": "Determining the distance to the beacon",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbeacon/proximity",
                "title": "proximity",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Proximity Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/unknown",
                    "title": "CLProximityUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/immediate",
                    "title": "CLProximityImmediate",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/near",
                    "title": "CLProximityNear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/far",
                    "title": "CLProximityFar",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corelocation/clproximity",
                "title": "CLProximity",
                "type": "enum"
              },
              {
                "path": "/documentation/corelocation/clbeacon/accuracy",
                "title": "accuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clbeacon/rssi",
                "title": "rssi",
                "type": "property"
              },
              {
                "title": "Getting the observation timestamp",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbeacon/timestamp",
                "title": "timestamp",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clbeacon",
            "title": "CLBeacon",
            "type": "class"
          },
          {
            "title": "Compass headings",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/getting-heading-and-course-information",
            "title": "Getting heading and course information",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the heading values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clheading/magneticheading",
                "title": "magneticHeading",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/trueheading",
                "title": "trueHeading",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/headingaccuracy",
                "title": "headingAccuracy",
                "type": "property"
              },
              {
                "title": "Getting the raw heading data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clheading/x",
                "title": "x",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/y",
                "title": "y",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/z",
                "title": "z",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheadingcomponentvalue",
                "title": "CLHeadingComponentValue",
                "type": "typealias"
              },
              {
                "title": "Getting the event timestamp",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clheading/timestamp",
                "title": "timestamp",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clheading",
            "title": "CLHeading",
            "type": "class"
          },
          {
            "title": "Geocoding",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/converting-between-coordinates-and-user-friendly-place-names",
            "title": "Converting between coordinates and user-friendly place names",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/converting-a-user-s-location-to-a-descriptive-placemark",
            "title": "Converting a user’s location to a descriptive placemark",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Reverse geocoding a location",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/reversegeocodelocation(_:preferredlocale:completionhandler:)",
                "title": "- reverseGeocodeLocation:preferredLocale:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/reversegeocodelocation(_:completionhandler:)",
                "title": "- reverseGeocodeLocation:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocodecompletionhandler",
                "title": "CLGeocodeCompletionHandler",
                "type": "typealias"
              },
              {
                "title": "Geocoding an address",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:in:preferredlocale:completionhandler:)",
                "title": "- geocodeAddressString:inRegion:preferredLocale:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:completionhandler:)",
                "title": "- geocodeAddressString:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:in:completionhandler:)",
                "title": "- geocodeAddressString:inRegion:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodepostaladdress(_:completionhandler:)",
                "title": "- geocodePostalAddress:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodepostaladdress(_:preferredlocale:completionhandler:)",
                "title": "- geocodePostalAddress:preferredLocale:completionHandler:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressdictionary(_:completionhandler:)",
                "title": "- geocodeAddressDictionary:completionHandler:",
                "type": "method"
              },
              {
                "title": "Managing geocoding requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/cancelgeocode()",
                "title": "- cancelGeocode",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/isgeocoding",
                "title": "geocoding",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:inregioncenteredat:inregionradius:preferredlocale:completionhandler:)",
                "title": "- geocodeAddressString:inRegionCenteredAt:inRegionRadius:preferredLocale:completionHandler:",
                "type": "method"
              }
            ],
            "path": "/documentation/corelocation/clgeocoder",
            "title": "CLGeocoder",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a placemark object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/init(placemark:)",
                "title": "- initWithPlacemark:",
                "type": "method"
              },
              {
                "title": "Getting the placemark’s location",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/location",
                "title": "location",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/region",
                "title": "region",
                "type": "property"
              },
              {
                "title": "Getting the placemark name",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/name",
                "title": "name",
                "type": "property"
              },
              {
                "title": "Getting the placemark details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/thoroughfare",
                "title": "thoroughfare",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/subthoroughfare",
                "title": "subThoroughfare",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/locality",
                "title": "locality",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/sublocality",
                "title": "subLocality",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/administrativearea",
                "title": "administrativeArea",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/subadministrativearea",
                "title": "subAdministrativeArea",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/postalcode",
                "title": "postalCode",
                "type": "property"
              },
              {
                "title": "Getting the placemark’s country",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/isocountrycode",
                "title": "ISOcountryCode",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/country",
                "title": "country",
                "type": "property"
              },
              {
                "title": "Getting the associated contact details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/postaladdress",
                "title": "postalAddress",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clplacemark/addressdictionary",
                "title": "addressDictionary",
                "type": "property"
              },
              {
                "title": "Getting landscape information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/inlandwater",
                "title": "inlandWater",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/ocean",
                "title": "ocean",
                "type": "property"
              },
              {
                "title": "Getting points of interest",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/areasofinterest",
                "title": "areasOfInterest",
                "type": "property"
              },
              {
                "title": "Getting the placemark’s time zone",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/timezone",
                "title": "timeZone",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/init",
                "title": "- init",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/init(location:name:postaladdress:)",
                "title": "+ placemarkWithLocation:name:postalAddress:",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clplacemark/new",
                "title": "+ new",
                "type": "method"
              }
            ],
            "path": "/documentation/corelocation/clplacemark",
            "title": "CLPlacemark",
            "type": "class"
          },
          {
            "title": "Location push service extension",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.location.push",
            "title": "com.apple.developer.location.push",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Getting the push notification payload",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceextension/didreceivelocationpushpayload(_:completion:)",
                "title": "- didReceiveLocationPushPayload:completion:",
                "type": "method"
              },
              {
                "title": "Handling the extension termination",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceextension/serviceextensionwillterminate()",
                "title": "- serviceExtensionWillTerminate",
                "type": "method"
              }
            ],
            "path": "/documentation/corelocation/cllocationpushserviceextension",
            "title": "CLLocationPushServiceExtension",
            "type": "protocol"
          },
          {
            "path": "/documentation/corelocation/cllocationpushserviceerrordomain",
            "title": "CLLocationPushServiceErrorDomain",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Getting the error code",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/unknown",
                "title": "CLLocationPushServiceErrorUnknown",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingpushextension",
                "title": "CLLocationPushServiceErrorMissingPushExtension",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingpushserverenvironment",
                "title": "CLLocationPushServiceErrorMissingPushServerEnvironment",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingentitlement",
                "title": "CLLocationPushServiceErrorMissingEntitlement",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/unsupportedplatform",
                "title": "CLLocationPushServiceErrorUnsupportedPlatform",
                "type": "case"
              }
            ],
            "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code",
            "title": "CLLocationPushServiceError",
            "type": "enum"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/kclerrordomain",
            "title": "kCLErrorDomain",
            "type": "var"
          },
          {
            "path": "/documentation/corelocation/kclerroruserinfoalternateregionkey",
            "title": "kCLErrorUserInfoAlternateRegionKey",
            "type": "var"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Classes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a beacon region",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(beaconidentityconstraint:identifier:)",
                    "title": "- initWithBeaconIdentityConstraint:identifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(uuid:identifier:)",
                    "title": "- initWithUUID:identifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(uuid:major:identifier:)",
                    "title": "- initWithUUID:major:identifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(uuid:major:minor:identifier:)",
                    "title": "- initWithUUID:major:minor:identifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconmajorvalue",
                    "title": "CLBeaconMajorValue",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconminorvalue",
                    "title": "CLBeaconMinorValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Getting the beacon identity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/uuid",
                    "title": "UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/major",
                    "title": "major",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/minor",
                    "title": "minor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/beaconidentityconstraint",
                    "title": "beaconIdentityConstraint",
                    "type": "property"
                  },
                  {
                    "title": "Specifying when to send notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/notifyentrystateondisplay",
                    "title": "notifyEntryStateOnDisplay",
                    "type": "property"
                  },
                  {
                    "title": "Getting the beacon’s advertisement data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/peripheraldata(withmeasuredpower:)",
                    "title": "- peripheralDataWithMeasuredPower:",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/init(proximityuuid:identifier:)",
                    "title": "- initWithProximityUUID:identifier:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/init(proximityuuid:major:identifier:)",
                    "title": "- initWithProximityUUID:major:identifier:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/init(proximityuuid:major:minor:identifier:)",
                    "title": "- initWithProximityUUID:major:minor:identifier:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/proximityuuid",
                    "title": "proximityUUID",
                    "type": "property"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corelocation/clbeaconregion",
                "title": "CLBeaconRegion",
                "type": "class"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clbeaconidentityconstraint",
                "title": "CLBeaconIdentityConstraint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a circular region",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/init(center:radius:identifier:)",
                    "title": "- initWithCenter:radius:identifier:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the circle’s center and radius",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/center",
                    "title": "center",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/radius",
                    "title": "radius",
                    "type": "property"
                  },
                  {
                    "title": "Performing hit testing in the region",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/contains(_:)",
                    "title": "- containsCoordinate:",
                    "type": "method"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corelocation/clcircularregion",
                "title": "CLCircularRegion",
                "type": "class"
              }
            ],
            "path": "/documentation/corelocation/deprecated",
            "title": "Deprecated",
            "type": "collection"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cl_target_supports_conditions",
                "title": "CL_TARGET_SUPPORTS_CONDITIONS",
                "type": "macro"
              }
            ],
            "path": "/documentation/corelocation/core-location-constants",
            "title": "Core Location Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2dmake(_:_:)",
                "title": "CLLocationCoordinate2DMake",
                "type": "func"
              }
            ],
            "path": "/documentation/corelocation/core-location-functions",
            "title": "Core Location Functions",
            "type": "collection"
          }
        ],
        "path": "/documentation/corelocation",
        "title": "Core Location",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/configuring-your-app-to-use-location-services",
            "title": "Configuring your app to use location services",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/supporting-live-updates-in-swiftui-and-mac-catalyst-apps",
            "title": "Supporting live updates in SwiftUI and Mac Catalyst apps",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Determining the availability of services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/significantlocationchangemonitoringavailable()",
                "title": "class func significantLocationChangeMonitoringAvailable() -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/headingavailable()",
                "title": "class func headingAvailable() -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/isauthorizedforwidgetupdates",
                "title": "var isAuthorizedForWidgetUpdates: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/accuracyauthorization",
                "title": "var accuracyAuthorization: CLAccuracyAuthorization",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/ismonitoringavailable(for:)",
                "title": "class func isMonitoringAvailable(for: AnyClass) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/israngingavailable()",
                "title": "class func isRangingAvailable() -> Bool",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfailwitherror:)",
                    "title": "func locationManager(CLLocationManager, didFailWithError: any Error)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:monitoringdidfailfor:witherror:)",
                    "title": "func locationManager(CLLocationManager, monitoringDidFailFor: CLRegion?, withError: any Error)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/locationservicesenabled()",
                "title": "class func locationServicesEnabled() -> Bool",
                "type": "method"
              },
              {
                "title": "Receiving data from location services",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/delegate",
                "title": "var delegate: (any CLLocationManagerDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Responding to authorization changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagerdidchangeauthorization(_:)",
                    "title": "func locationManagerDidChangeAuthorization(CLLocationManager)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didchangeauthorization:)",
                    "title": "func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)",
                    "type": "method"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfailwitherror:)",
                    "title": "func locationManager(CLLocationManager, didFailWithError: any Error)",
                    "type": "method"
                  },
                  {
                    "title": "Receiving location updates",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "external": true,
                        "path": "/documentation/mapkit",
                        "title": "MapKit",
                        "type": "module"
                      },
                      {
                        "external": true,
                        "path": "/documentation/mapkitjs",
                        "title": "MapKit JS",
                        "type": "module"
                      }
                    ],
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didupdatelocations:)",
                    "title": "func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didupdateto:from:)",
                    "title": "func locationManager(CLLocationManager, didUpdateTo: CLLocation, from: CLLocation)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfinishdeferredupdateswitherror:)",
                    "title": "func locationManager(CLLocationManager, didFinishDeferredUpdatesWithError: (any Error)?)",
                    "type": "method"
                  },
                  {
                    "title": "Pausing location updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagerdidpauselocationupdates(_:)",
                    "title": "func locationManagerDidPauseLocationUpdates(CLLocationManager)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagerdidresumelocationupdates(_:)",
                    "title": "func locationManagerDidResumeLocationUpdates(CLLocationManager)",
                    "type": "method"
                  },
                  {
                    "title": "Receiving visit updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didvisit:)",
                    "title": "func locationManager(CLLocationManager, didVisit: CLVisit)",
                    "type": "method"
                  },
                  {
                    "title": "Receiving heading updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didupdateheading:)",
                    "title": "func locationManager(CLLocationManager, didUpdateHeading: CLHeading)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanagershoulddisplayheadingcalibration(_:)",
                    "title": "func locationManagerShouldDisplayHeadingCalibration(CLLocationManager) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Receiving region-related updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didenterregion:)",
                    "title": "func locationManager(CLLocationManager, didEnterRegion: CLRegion)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didexitregion:)",
                    "title": "func locationManager(CLLocationManager, didExitRegion: CLRegion)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:diddeterminestate:for:)",
                    "title": "func locationManager(CLLocationManager, didDetermineState: CLRegionState, for: CLRegion)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:monitoringdidfailfor:witherror:)",
                    "title": "func locationManager(CLLocationManager, monitoringDidFailFor: CLRegion?, withError: any Error)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didstartmonitoringfor:)",
                    "title": "func locationManager(CLLocationManager, didStartMonitoringFor: CLRegion)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Region States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/corelocation/clregionstate/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/corelocation/clregionstate/inside",
                        "title": "case inside",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/corelocation/clregionstate/outside",
                        "title": "case outside",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/corelocation/clregionstate/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/corelocation/clregionstate",
                    "title": "CLRegionState",
                    "type": "enum"
                  },
                  {
                    "title": "Receiving beacon-related updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didrange:satisfying:)",
                    "title": "func locationManager(CLLocationManager, didRange: [CLBeacon], satisfying: CLBeaconIdentityConstraint)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didfailrangingfor:error:)",
                    "title": "func locationManager(CLLocationManager, didFailRangingFor: CLBeaconIdentityConstraint, error: any Error)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:didrangebeacons:in:)",
                    "title": "func locationManager(CLLocationManager, didRangeBeacons: [CLBeacon], in: CLBeaconRegion)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanagerdelegate/locationmanager(_:rangingbeaconsdidfailfor:witherror:)",
                    "title": "func locationManager(CLLocationManager, rangingBeaconsDidFailFor: CLBeaconRegion, withError: any Error)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanagerdelegate",
                "title": "CLLocationManagerDelegate",
                "type": "protocol"
              },
              {
                "title": "Requesting authorization for location services",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/handling-location-updates-in-the-background",
                    "title": "Handling location updates in the background",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocationwheninuseusagedescription",
                    "title": "NSLocationWhenInUseUsageDescription",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/requestwheninuseauthorization()",
                "title": "func requestWhenInUseAuthorization()",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nslocationalwaysusagedescription",
                    "title": "NSLocationAlwaysUsageDescription",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/requestalwaysauthorization()",
                "title": "func requestAlwaysAuthorization()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requesttemporaryfullaccuracyauthorization(withpurposekey:completion:)",
                "title": "func requestTemporaryFullAccuracyAuthorization(withPurposeKey: String, completion: (((any Error)?) -> Void)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requesttemporaryfullaccuracyauthorization(withpurposekey:)",
                "title": "func requestTemporaryFullAccuracyAuthorization(withPurposeKey: String)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/authorizationstatus-swift.property",
                "title": "var authorizationStatus: CLAuthorizationStatus",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the authorization status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/notdetermined",
                    "title": "case notDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/restricted",
                    "title": "case restricted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clauthorizationstatus/authorized",
                    "title": "static var authorized: CLAuthorizationStatus",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/authorizedalways",
                    "title": "case authorizedAlways",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/authorizedwheninuse",
                    "title": "case authorizedWhenInUse",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clauthorizationstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int32)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corelocation/clauthorizationstatus",
                "title": "CLAuthorizationStatus",
                "type": "enum"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nslocationdefaultaccuracyreduced",
                "title": "NSLocationDefaultAccuracyReduced",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/nslocationalwaysandwheninuseusagedescription",
                "title": "NSLocationAlwaysAndWhenInUseUsageDescription",
                "type": "typealias"
              },
              {
                "title": "Specifying distance and accuracy",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/distancefilter",
                "title": "var distanceFilter: CLLocationDistance",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationdistancemax",
                "title": "let CLLocationDistanceMax: CLLocationDistance",
                "type": "var"
              },
              {
                "path": "/documentation/corelocation/kcldistancefilternone",
                "title": "let kCLDistanceFilterNone: CLLocationDistance",
                "type": "var"
              },
              {
                "path": "/documentation/corelocation/cllocationdistance",
                "title": "CLLocationDistance",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/desiredaccuracy",
                "title": "var desiredAccuracy: CLLocationAccuracy",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Desired Accuracy Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybestfornavigation",
                    "title": "let kCLLocationAccuracyBestForNavigation: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybest",
                    "title": "let kCLLocationAccuracyBest: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracynearesttenmeters",
                    "title": "let kCLLocationAccuracyNearestTenMeters: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyhundredmeters",
                    "title": "let kCLLocationAccuracyHundredMeters: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracykilometer",
                    "title": "let kCLLocationAccuracyKilometer: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracythreekilometers",
                    "title": "let kCLLocationAccuracyThreeKilometers: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyreduced",
                    "title": "let kCLLocationAccuracyReduced: CLLocationAccuracy",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corelocation/cllocationaccuracy",
                "title": "CLLocationAccuracy",
                "type": "typealias"
              },
              {
                "title": "Running the standard location service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startupdatinglocation()",
                "title": "func startUpdatingLocation()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopupdatinglocation()",
                "title": "func stopUpdatingLocation()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requestlocation()",
                "title": "func requestLocation()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/pauseslocationupdatesautomatically",
                "title": "var pausesLocationUpdatesAutomatically: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/allowsbackgroundlocationupdates",
                "title": "var allowsBackgroundLocationUpdates: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/showsbackgroundlocationindicator",
                "title": "var showsBackgroundLocationIndicator: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/activitytype",
                "title": "var activityType: CLActivityType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Activity types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/other",
                    "title": "case other",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/automotivenavigation",
                    "title": "case automotiveNavigation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/fitness",
                    "title": "case fitness",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/othernavigation",
                    "title": "case otherNavigation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/airborne",
                    "title": "case airborne",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clactivitytype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corelocation/clactivitytype",
                "title": "CLActivityType",
                "type": "enum"
              },
              {
                "title": "Running the significant change location service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startmonitoringsignificantlocationchanges()",
                "title": "func startMonitoringSignificantLocationChanges()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopmonitoringsignificantlocationchanges()",
                "title": "func stopMonitoringSignificantLocationChanges()",
                "type": "method"
              },
              {
                "title": "Running the visits location service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startmonitoringvisits()",
                "title": "func startMonitoringVisits()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopmonitoringvisits()",
                "title": "func stopMonitoringVisits()",
                "type": "method"
              },
              {
                "title": "Running the heading service",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/headingavailable-swift.property",
                    "title": "var headingAvailable: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/startupdatingheading()",
                "title": "func startUpdatingHeading()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopupdatingheading()",
                "title": "func stopUpdatingHeading()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/dismissheadingcalibrationdisplay()",
                "title": "func dismissHeadingCalibrationDisplay()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/headingfilter",
                "title": "var headingFilter: CLLocationDegrees",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/kclheadingfilternone",
                "title": "let kCLHeadingFilterNone: CLLocationDegrees",
                "type": "var"
              },
              {
                "path": "/documentation/corelocation/cllocationdegrees",
                "title": "CLLocationDegrees",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/headingorientation",
                "title": "var headingOrientation: CLDeviceOrientation",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Device Orientations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/portrait",
                    "title": "case portrait",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/portraitupsidedown",
                    "title": "case portraitUpsideDown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/landscapeleft",
                    "title": "case landscapeLeft",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/landscaperight",
                    "title": "case landscapeRight",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/faceup",
                    "title": "case faceUp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/facedown",
                    "title": "case faceDown",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cldeviceorientation/init(rawvalue:)",
                    "title": "init?(rawValue: Int32)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corelocation/cldeviceorientation",
                "title": "CLDeviceOrientation",
                "type": "enum"
              },
              {
                "title": "Running the region-monitoring service",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/monitoredregions",
                "title": "var monitoredRegions: Set<CLRegion>",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/maximumregionmonitoringdistance",
                "title": "var maximumRegionMonitoringDistance: CLLocationDistance",
                "type": "property"
              },
              {
                "title": "Performing beacon ranging",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startrangingbeacons(satisfying:)",
                "title": "func startRangingBeacons(satisfying: CLBeaconIdentityConstraint)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stoprangingbeacons(satisfying:)",
                "title": "func stopRangingBeacons(satisfying: CLBeaconIdentityConstraint)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/rangedbeaconconstraints",
                "title": "var rangedBeaconConstraints: Set<CLBeaconIdentityConstraint>",
                "type": "property"
              },
              {
                "title": "Monitoring location push notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/startmonitoringlocationpushes(completion:)",
                "title": "func startMonitoringLocationPushes(completion: ((Data?, (any Error)?) -> Void)?)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/stopmonitoringlocationpushes()",
                "title": "func stopMonitoringLocationPushes()",
                "type": "method"
              },
              {
                "title": "Getting recent location and heading data",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanager/startupdatinglocation()",
                    "title": "func startUpdatingLocation()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/cllocationmanager/location",
                "title": "var location: CLLocation?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/heading",
                "title": "var heading: CLHeading?",
                "type": "property"
              },
              {
                "title": "Deferring location updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cltimeintervalmax",
                "title": "let CLTimeIntervalMax: TimeInterval",
                "type": "var"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Properties",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/headingavailable-swift.property",
                    "title": "var headingAvailable: Bool",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/locationservicesenabled-swift.property",
                    "title": "var locationServicesEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/purpose",
                    "title": "var purpose: String?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/corelocation/cllocationmanager/startrangingbeacons(in:)",
                        "title": "func startRangingBeacons(in: CLBeaconRegion)",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/rangedregions",
                    "title": "var rangedRegions: Set<CLRegion>",
                    "type": "property"
                  },
                  {
                    "title": "Methods",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/startmonitoring(for:)",
                    "title": "func startMonitoring(for: CLRegion)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/stopmonitoring(for:)",
                    "title": "func stopMonitoring(for: CLRegion)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/regionmonitoringavailable()",
                    "title": "class func regionMonitoringAvailable() -> Bool",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/regionmonitoringenabled()",
                    "title": "class func regionMonitoringEnabled() -> Bool",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/authorizationstatus()",
                    "title": "class func authorizationStatus() -> CLAuthorizationStatus",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/startmonitoring(for:desiredaccuracy:)",
                    "title": "func startMonitoring(for: CLRegion, desiredAccuracy: CLLocationAccuracy)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/requeststate(for:)",
                    "title": "func requestState(for: CLRegion)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/startrangingbeacons(in:)",
                    "title": "func startRangingBeacons(in: CLBeaconRegion)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/stoprangingbeacons(in:)",
                    "title": "func stopRangingBeacons(in: CLBeaconRegion)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/deferredlocationupdatesavailable()",
                    "title": "class func deferredLocationUpdatesAvailable() -> Bool",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/allowdeferredlocationupdates(untiltraveled:timeout:)",
                    "title": "func allowDeferredLocationUpdates(untilTraveled: CLLocationDistance, timeout: TimeInterval)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/cllocationmanager/disallowdeferredlocationupdates()",
                    "title": "func disallowDeferredLocationUpdates()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/deprecated-symbols",
                "title": "Deprecated symbols",
                "type": "collection"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationmanager/requesthistoricallocations(purposekey:samplecount:completionhandler:)",
                "title": "func requestHistoricalLocations(purposeKey: String, sampleCount: Int, completionHandler: ([CLLocation], (any Error)?) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/corelocation/cllocationmanager",
            "title": "CLLocationManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a background activity session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Ending the session",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/invalidate()",
                "title": "func invalidate()",
                "type": "method"
              },
              {
                "title": "Classes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostics-swift.class/iterator",
                    "title": "CLBackgroundActivitySession.Diagnostics.Iterator",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostics-swift.class",
                "title": "CLBackgroundActivitySession.Diagnostics",
                "type": "class"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostic/authorizationdenied",
                    "title": "var authorizationDenied: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostic/authorizationdeniedglobally",
                    "title": "var authorizationDeniedGlobally: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostic/authorizationrequestinprogress",
                    "title": "var authorizationRequestInProgress: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostic/authorizationrestricted",
                    "title": "var authorizationRestricted: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostic/insufficientlyinuse",
                    "title": "var insufficientlyInUse: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostic/servicesessionrequired",
                    "title": "var serviceSessionRequired: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostic",
                "title": "CLBackgroundActivitySession.Diagnostic",
                "type": "struct"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3/diagnostics-swift.property",
                "title": "var diagnostics: CLBackgroundActivitySession.Diagnostics",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clbackgroundactivitysession-3mzv3",
            "title": "CLBackgroundActivitySession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Determining movement and location",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/isstationary",
                "title": "var isStationary: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/location",
                "title": "var location: CLLocation?",
                "type": "property"
              },
              {
                "title": "Receiving location updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/liveupdates(_:)",
                "title": "static func liveUpdates(CLLocationUpdate.LiveConfiguration) -> CLLocationUpdate.Updates",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Location types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationupdate/liveconfiguration/default",
                    "title": "case `default`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationupdate/liveconfiguration/airborne",
                    "title": "case airborne",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationupdate/liveconfiguration/automotivenavigation",
                    "title": "case automotiveNavigation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationupdate/liveconfiguration/fitness",
                    "title": "case fitness",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationupdate/liveconfiguration/othernavigation",
                    "title": "case otherNavigation",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corelocation/cllocationupdate/liveconfiguration",
                "title": "CLLocationUpdate.LiveConfiguration",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationupdate/updates/iterator",
                    "title": "CLLocationUpdate.Updates.Iterator",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/corelocation/cllocationupdate/updates",
                "title": "CLLocationUpdate.Updates",
                "type": "struct"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/accuracylimited",
                "title": "var accuracyLimited: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/authorizationdenied",
                "title": "var authorizationDenied: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/authorizationdeniedglobally",
                "title": "var authorizationDeniedGlobally: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/authorizationrequestinprogress",
                "title": "var authorizationRequestInProgress: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/authorizationrestricted",
                "title": "var authorizationRestricted: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/insufficientlyinuse",
                "title": "var insufficientlyInUse: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/locationunavailable",
                "title": "var locationUnavailable: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/servicesessionrequired",
                "title": "var serviceSessionRequired: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationupdate/stationary",
                "title": "var stationary: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/cllocationupdate",
            "title": "CLLocationUpdate",
            "type": "struct"
          },
          {
            "path": "/documentation/corelocation/adopting-live-updates-in-core-location",
            "title": "Adopting live updates in Core Location",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/corelocation/monitoring-location-changes-with-core-location",
            "title": "Monitoring location changes with Core Location",
            "type": "sampleCode"
          },
          {
            "title": "Authorization",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/requesting-authorization-to-use-location-services",
            "title": "Requesting authorization to use location services",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/suspending-authorization-requests",
            "title": "Suspending authorization requests",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the authorization status",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/notdetermined",
                "title": "case notDetermined",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/restricted",
                "title": "case restricted",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/denied",
                "title": "case denied",
                "type": "case"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clauthorizationstatus/authorized",
                "title": "static var authorized: CLAuthorizationStatus",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/authorizedalways",
                "title": "case authorizedAlways",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/authorizedwheninuse",
                "title": "case authorizedWhenInUse",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clauthorizationstatus/init(rawvalue:)",
                "title": "init?(rawValue: Int32)",
                "type": "init"
              }
            ],
            "path": "/documentation/corelocation/clauthorizationstatus",
            "title": "CLAuthorizationStatus",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Getting the location accuracy",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanager/accuracyauthorization",
                    "title": "var accuracyAuthorization: CLAccuracyAuthorization",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/claccuracyauthorization/fullaccuracy",
                "title": "case fullAccuracy",
                "type": "case"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationmanager/accuracyauthorization",
                    "title": "var accuracyAuthorization: CLAccuracyAuthorization",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/claccuracyauthorization/reducedaccuracy",
                "title": "case reducedAccuracy",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/claccuracyauthorization/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/corelocation/claccuracyauthorization",
            "title": "CLAccuracyAuthorization",
            "type": "enum"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationalwaysandwheninuseusagedescription",
            "title": "NSLocationAlwaysAndWhenInUseUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationwheninuseusagedescription",
            "title": "NSLocationWhenInUseUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationusagedescription",
            "title": "NSLocationUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationdefaultaccuracyreduced",
            "title": "NSLocationDefaultAccuracyReduced",
            "type": "typealias"
          },
          {
            "deprecated": true,
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nslocationalwaysusagedescription",
            "title": "NSLocationAlwaysUsageDescription",
            "type": "typealias"
          },
          {
            "title": "Monitoring",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a monitor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clmonitor-2r51v/init(_:)",
                "title": "init(String) async",
                "type": "init"
              },
              {
                "title": "Adding and removing conditions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clmonitor-2r51v/add(_:identifier:)",
                "title": "func add(any CLCondition, identifier: String)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clmonitor-2r51v/add(_:identifier:assuming:)",
                "title": "func add(any CLCondition, identifier: String, assuming: CLMonitor.Event.State)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clmonitor-2r51v/record(for:)",
                "title": "func record(for: String) -> CLMonitor.Record?",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clmonitor-2r51v/remove(_:)",
                "title": "func remove(String)",
                "type": "method"
              },
              {
                "title": "Accessing the location monitor’s identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clmonitor-2r51v/identifiers",
                "title": "var identifiers: [String]",
                "type": "property"
              },
              {
                "title": "Accessing the monitor’s events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clmonitor-2r51v/events-swift.property",
                "title": "let events: CLMonitor.Events",
                "type": "property"
              },
              {
                "title": "Monitor conditions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a beacon identity condition",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/beaconidentitycondition/init(uuid:)",
                    "title": "init(uuid: UUID)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/beaconidentitycondition/init(uuid:major:)",
                    "title": "init(uuid: UUID, major: UInt16)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/beaconidentitycondition/init(uuid:major:minor:)",
                    "title": "init(uuid: UUID, major: UInt16, minor: UInt16)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/beaconidentitycondition/major",
                    "title": "let major: UInt16?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/beaconidentitycondition/minor",
                    "title": "let minor: UInt16?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/beaconidentitycondition/uuid",
                    "title": "let uuid: UUID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/clmonitor-2r51v/beaconidentitycondition",
                "title": "CLMonitor.BeaconIdentityCondition",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a circular geographic condition",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/circulargeographiccondition/init(center:radius:)",
                    "title": "init(center: CLLocationCoordinate2D, radius: CLLocationDistance)",
                    "type": "init"
                  },
                  {
                    "title": "Condition characteristics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/circulargeographiccondition/center",
                    "title": "let center: CLLocationCoordinate2D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/circulargeographiccondition/radius",
                    "title": "let radius: CLLocationDistance",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/clmonitor-2r51v/circulargeographiccondition",
                "title": "CLMonitor.CircularGeographicCondition",
                "type": "struct"
              },
              {
                "title": "Monitor events",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Event states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/accuracylimited",
                    "title": "var accuracyLimited: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/authorizationdenied",
                    "title": "var authorizationDenied: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/authorizationdeniedglobally",
                    "title": "var authorizationDeniedGlobally: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/authorizationrequestinprogress",
                    "title": "var authorizationRequestInProgress: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/authorizationrestricted",
                    "title": "var authorizationRestricted: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/conditionlimitexceeded",
                    "title": "var conditionLimitExceeded: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/conditionunsupported",
                    "title": "var conditionUnsupported: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/insufficientlyinuse",
                    "title": "var insufficientlyInUse: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/persistenceunavailable",
                    "title": "var persistenceUnavailable: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/servicesessionrequired",
                    "title": "var serviceSessionRequired: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Event characteristics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/date",
                    "title": "var date: Date",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/identifier",
                    "title": "var identifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/refinement",
                    "title": "let refinement: (any CLCondition)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/state-swift.property",
                    "title": "var state: CLMonitor.Event.State",
                    "type": "property"
                  },
                  {
                    "title": "Type aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/event/state-swift.typealias",
                    "title": "CLMonitor.Event.State",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/corelocation/clmonitor-2r51v/event",
                "title": "CLMonitor.Event",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Record characteristics",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/record/condition",
                    "title": "let condition: any CLCondition",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/record/lastevent",
                    "title": "let lastEvent: CLMonitor.Event",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/clmonitor-2r51v/record",
                "title": "CLMonitor.Record",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Utility methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clmonitor-2r51v/events-swift.struct/iterator",
                    "title": "CLMonitor.Events.Iterator",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/corelocation/clmonitor-2r51v/events-swift.struct",
                "title": "CLMonitor.Events",
                "type": "struct"
              }
            ],
            "path": "/documentation/corelocation/clmonitor-2r51v",
            "title": "CLMonitor",
            "type": "class"
          },
          {
            "title": "Location updates",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/getting-the-current-location-of-a-device",
            "title": "Getting the current location of a device",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/handling-location-updates-in-the-background",
            "title": "Handling location updates in the background",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/creating-a-location-push-service-extension",
            "title": "Creating a location push service extension",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a location object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(latitude:longitude:)",
                "title": "init(latitude: CLLocationDegrees, longitude: CLLocationDegrees)",
                "type": "init"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:timestamp:)",
                "title": "init(coordinate: CLLocationCoordinate2D, altitude: CLLocationDistance, horizontalAccuracy: CLLocationAccuracy, verticalAccuracy: CLLocationAccuracy, timestamp: Date)",
                "type": "init"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:course:speed:timestamp:)",
                "title": "init(coordinate: CLLocationCoordinate2D, altitude: CLLocationDistance, horizontalAccuracy: CLLocationAccuracy, verticalAccuracy: CLLocationAccuracy, course: CLLocationDirection, speed: CLLocationSpeed, timestamp: Date)",
                "type": "init"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:course:courseaccuracy:speed:speedaccuracy:timestamp:)",
                "title": "init(coordinate: CLLocationCoordinate2D, altitude: CLLocationDistance, horizontalAccuracy: CLLocationAccuracy, verticalAccuracy: CLLocationAccuracy, course: CLLocationDirection, courseAccuracy: CLLocationDirectionAccuracy, speed: CLLocationSpeed, speedAccuracy: CLLocationSpeedAccuracy, timestamp: Date)",
                "type": "init"
              },
              {
                "path": "/documentation/corelocation/cllocation/init(coordinate:altitude:horizontalaccuracy:verticalaccuracy:course:courseaccuracy:speed:speedaccuracy:timestamp:sourceinfo:)",
                "title": "init(coordinate: CLLocationCoordinate2D, altitude: CLLocationDistance, horizontalAccuracy: CLLocationAccuracy, verticalAccuracy: CLLocationAccuracy, course: CLLocationDirection, courseAccuracy: CLLocationDirectionAccuracy, speed: CLLocationSpeed, speedAccuracy: CLLocationSpeedAccuracy, timestamp: Date, sourceInfo: CLLocationSourceInformation)",
                "type": "init"
              },
              {
                "title": "Getting the location attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/coordinate",
                "title": "var coordinate: CLLocationCoordinate2D",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/altitude",
                "title": "var altitude: CLLocationDistance",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/ellipsoidalaltitude",
                "title": "var ellipsoidalAltitude: CLLocationDistance",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationdistance",
                "title": "CLLocationDistance",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocation/floor",
                "title": "var floor: CLFloor?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/timestamp",
                "title": "var timestamp: Date",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/sourceinformation",
                "title": "var sourceInformation: CLLocationSourceInformation?",
                "type": "property"
              },
              {
                "title": "Getting the location accuracy",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/horizontalaccuracy",
                "title": "var horizontalAccuracy: CLLocationAccuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/verticalaccuracy",
                "title": "var verticalAccuracy: CLLocationAccuracy",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Desired Accuracy Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybestfornavigation",
                    "title": "let kCLLocationAccuracyBestForNavigation: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracybest",
                    "title": "let kCLLocationAccuracyBest: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracynearesttenmeters",
                    "title": "let kCLLocationAccuracyNearestTenMeters: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyhundredmeters",
                    "title": "let kCLLocationAccuracyHundredMeters: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracykilometer",
                    "title": "let kCLLocationAccuracyKilometer: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracythreekilometers",
                    "title": "let kCLLocationAccuracyThreeKilometers: CLLocationAccuracy",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/corelocation/kcllocationaccuracyreduced",
                    "title": "let kCLLocationAccuracyReduced: CLLocationAccuracy",
                    "type": "var"
                  }
                ],
                "path": "/documentation/corelocation/cllocationaccuracy",
                "title": "CLLocationAccuracy",
                "type": "typealias"
              },
              {
                "title": "Measuring the distance between coordinates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/distance(from:)",
                "title": "func distance(from: CLLocation) -> CLLocationDistance",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/cllocation/getdistancefrom(_:)",
                "title": "func getDistanceFrom(CLLocation) -> CLLocationDistance",
                "type": "method"
              },
              {
                "title": "Getting speed and course information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocation/speed",
                "title": "var speed: CLLocationSpeed",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/speedaccuracy",
                "title": "var speedAccuracy: CLLocationSpeedAccuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/course",
                "title": "var course: CLLocationDirection",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocation/courseaccuracy",
                "title": "var courseAccuracy: CLLocationDirectionAccuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationspeed",
                "title": "CLLocationSpeed",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationdirection",
                "title": "CLLocationDirection",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationspeedaccuracy",
                "title": "CLLocationSpeedAccuracy",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/cllocationdirectionaccuracy",
                "title": "CLLocationDirectionAccuracy",
                "type": "typealias"
              }
            ],
            "path": "/documentation/corelocation/cllocation",
            "title": "CLLocation",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a location coordinate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2d/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2d/init(latitude:longitude:)",
                "title": "init(latitude: CLLocationDegrees, longitude: CLLocationDegrees)",
                "type": "init"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2dmake(_:_:)",
                "title": "func CLLocationCoordinate2DMake(CLLocationDegrees, CLLocationDegrees) -> CLLocationCoordinate2D",
                "type": "func"
              },
              {
                "title": "Getting the geographic coordinates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2d/latitude",
                "title": "var latitude: CLLocationDegrees",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2d/longitude",
                "title": "var longitude: CLLocationDegrees",
                "type": "property"
              },
              {
                "title": "Validating a coordinate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2disvalid(_:)",
                "title": "func CLLocationCoordinate2DIsValid(CLLocationCoordinate2D) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/corelocation/kcllocationcoordinate2dinvalid",
                "title": "let kCLLocationCoordinate2DInvalid: CLLocationCoordinate2D",
                "type": "var"
              }
            ],
            "path": "/documentation/corelocation/cllocationcoordinate2d",
            "title": "CLLocationCoordinate2D",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the floor level",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clfloor/level",
                "title": "var level: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clfloor",
            "title": "CLFloor",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting the location",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clvisit/coordinate",
                "title": "var coordinate: CLLocationCoordinate2D",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clvisit/horizontalaccuracy",
                "title": "var horizontalAccuracy: CLLocationAccuracy",
                "type": "property"
              },
              {
                "title": "Getting the visit duration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clvisit/arrivaldate",
                "title": "var arrivalDate: Date",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clvisit/departuredate",
                "title": "var departureDate: Date",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clvisit",
            "title": "CLVisit",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a location source information object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationsourceinformation/init(softwaresimulationstate:andexternalaccessorystate:)",
                "title": "init(softwareSimulationState: Bool, andExternalAccessoryState: Bool)",
                "type": "init"
              },
              {
                "title": "Identifying the source of location data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationsourceinformation/isproducedbyaccessory",
                "title": "var isProducedByAccessory: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationsourceinformation/issimulatedbysoftware",
                "title": "var isSimulatedBySoftware: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/cllocationsourceinformation",
            "title": "CLLocationSourceInformation",
            "type": "class"
          },
          {
            "path": "/documentation/corelocation/monitoring-location-changes-with-core-location",
            "title": "Monitoring location changes with Core Location",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Classes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostics-swift.class/iterator",
                    "title": "CLServiceSession.Diagnostics.Iterator",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/corelocation/clservicesession-pt7n/diagnostics-swift.class",
                "title": "CLServiceSession.Diagnostics",
                "type": "class"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/alwaysauthorizationdenied",
                    "title": "var alwaysAuthorizationDenied: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/authorizationdenied",
                    "title": "var authorizationDenied: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/authorizationdeniedglobally",
                    "title": "var authorizationDeniedGlobally: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/authorizationrequestinprogress",
                    "title": "var authorizationRequestInProgress: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/authorizationrestricted",
                    "title": "var authorizationRestricted: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/fullaccuracydenied",
                    "title": "var fullAccuracyDenied: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/insufficientlyinuse",
                    "title": "var insufficientlyInUse: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic/servicesessionrequired",
                    "title": "var serviceSessionRequired: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/clservicesession-pt7n/diagnostic",
                "title": "CLServiceSession.Diagnostic",
                "type": "struct"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clservicesession-pt7n/init(authorization:)",
                "title": "init(authorization: CLServiceSession.AuthorizationRequirement)",
                "type": "init"
              },
              {
                "path": "/documentation/corelocation/clservicesession-pt7n/init(authorization:fullaccuracypurposekey:)",
                "title": "init(authorization: CLServiceSession.AuthorizationRequirement, fullAccuracyPurposeKey: String)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clservicesession-pt7n/diagnostics-swift.property",
                "title": "var diagnostics: CLServiceSession.Diagnostics",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clservicesession-pt7n/invalidate()",
                "title": "func invalidate()",
                "type": "method"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/authorizationrequirement/always",
                    "title": "case always",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/authorizationrequirement/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clservicesession-pt7n/authorizationrequirement/wheninuse",
                    "title": "case whenInUse",
                    "type": "case"
                  }
                ],
                "path": "/documentation/corelocation/clservicesession-pt7n/authorizationrequirement",
                "title": "CLServiceSession.AuthorizationRequirement",
                "type": "enum"
              }
            ],
            "path": "/documentation/corelocation/clservicesession-pt7n",
            "title": "CLServiceSession",
            "type": "class"
          },
          {
            "title": "Region monitoring",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/monitoring-the-user-s-proximity-to-geographic-regions",
            "title": "Monitoring the user’s proximity to geographic regions",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the region identifier",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clregion/identifier",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "title": "Specifying the notification conditions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clregion/notifyonentry",
                "title": "var notifyOnEntry: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clregion/notifyonexit",
                "title": "var notifyOnExit: Bool",
                "type": "property"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/init(circularregionwithcenter:radius:identifier:)",
                "title": "init(circularRegionWithCenter: CLLocationCoordinate2D, radius: CLLocationDistance, identifier: String)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/contains(_:)",
                "title": "func contains(CLLocationCoordinate2D) -> Bool",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/center",
                "title": "var center: CLLocationCoordinate2D",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clregion/radius",
                "title": "var radius: CLLocationDistance",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clregion",
            "title": "CLRegion",
            "type": "class"
          },
          {
            "title": "iBeacon",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/ranging-for-beacons",
            "title": "Ranging for Beacons",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/corelocation/determining-the-proximity-to-an-ibeacon-device",
            "title": "Determining the proximity to an iBeacon device",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/turning-an-ios-device-into-an-ibeacon-device",
            "title": "Turning an iOS device into an iBeacon device",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the beacon identity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbeacon/uuid",
                "title": "var uuid: UUID",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clbeacon/major",
                "title": "var major: NSNumber",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clbeacon/minor",
                "title": "var minor: NSNumber",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clbeacon/proximityuuid",
                "title": "var proximityUUID: UUID",
                "type": "property"
              },
              {
                "title": "Determining the distance to the beacon",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbeacon/proximity",
                "title": "var proximity: CLProximity",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Proximity Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/immediate",
                    "title": "case immediate",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/near",
                    "title": "case near",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/far",
                    "title": "case far",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clproximity/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corelocation/clproximity",
                "title": "CLProximity",
                "type": "enum"
              },
              {
                "path": "/documentation/corelocation/clbeacon/accuracy",
                "title": "var accuracy: CLLocationAccuracy",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clbeacon/rssi",
                "title": "var rssi: Int",
                "type": "property"
              },
              {
                "title": "Getting the observation timestamp",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clbeacon/timestamp",
                "title": "var timestamp: Date",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clbeacon",
            "title": "CLBeacon",
            "type": "class"
          },
          {
            "path": "/documentation/corelocation/clcondition-swift.protocol",
            "title": "CLCondition",
            "type": "protocol"
          },
          {
            "title": "Compass headings",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/getting-heading-and-course-information",
            "title": "Getting heading and course information",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the heading values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clheading/magneticheading",
                "title": "var magneticHeading: CLLocationDirection",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/trueheading",
                "title": "var trueHeading: CLLocationDirection",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/headingaccuracy",
                "title": "var headingAccuracy: CLLocationDirection",
                "type": "property"
              },
              {
                "title": "Getting the raw heading data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clheading/x",
                "title": "var x: CLHeadingComponentValue",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/y",
                "title": "var y: CLHeadingComponentValue",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheading/z",
                "title": "var z: CLHeadingComponentValue",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clheadingcomponentvalue",
                "title": "CLHeadingComponentValue",
                "type": "typealias"
              },
              {
                "title": "Getting the event timestamp",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clheading/timestamp",
                "title": "var timestamp: Date",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clheading",
            "title": "CLHeading",
            "type": "class"
          },
          {
            "title": "Geocoding",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/corelocation/converting-between-coordinates-and-user-friendly-place-names",
            "title": "Converting between coordinates and user-friendly place names",
            "type": "article"
          },
          {
            "path": "/documentation/corelocation/converting-a-user-s-location-to-a-descriptive-placemark",
            "title": "Converting a user’s location to a descriptive placemark",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Reverse geocoding a location",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/reversegeocodelocation(_:preferredlocale:completionhandler:)",
                "title": "func reverseGeocodeLocation(CLLocation, preferredLocale: Locale?, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/reversegeocodelocation(_:completionhandler:)",
                "title": "func reverseGeocodeLocation(CLLocation, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocodecompletionhandler",
                "title": "CLGeocodeCompletionHandler",
                "type": "typealias"
              },
              {
                "title": "Geocoding an address",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:in:preferredlocale:completionhandler:)",
                "title": "func geocodeAddressString(String, in: CLRegion?, preferredLocale: Locale?, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:completionhandler:)",
                "title": "func geocodeAddressString(String, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:in:completionhandler:)",
                "title": "func geocodeAddressString(String, in: CLRegion?, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodepostaladdress(_:completionhandler:)",
                "title": "func geocodePostalAddress(CNPostalAddress, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodepostaladdress(_:preferredlocale:completionhandler:)",
                "title": "func geocodePostalAddress(CNPostalAddress, preferredLocale: Locale?, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressdictionary(_:completionhandler:)",
                "title": "func geocodeAddressDictionary([AnyHashable : Any], completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              },
              {
                "title": "Managing geocoding requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/cancelgeocode()",
                "title": "func cancelGeocode()",
                "type": "method"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/isgeocoding",
                "title": "var isGeocoding: Bool",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clgeocoder/geocodeaddressstring(_:inregioncenteredat:inregionradius:preferredlocale:completionhandler:)",
                "title": "func geocodeAddressString(String, inRegionCenteredAt: CLLocationCoordinate2D, inRegionRadius: CLLocationDistance, preferredLocale: Locale?, completionHandler: CLGeocodeCompletionHandler)",
                "type": "method"
              }
            ],
            "path": "/documentation/corelocation/clgeocoder",
            "title": "CLGeocoder",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a placemark object",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/init(placemark:)",
                "title": "init(placemark: CLPlacemark)",
                "type": "init"
              },
              {
                "title": "Getting the placemark’s location",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/location",
                "title": "var location: CLLocation?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/region",
                "title": "var region: CLRegion?",
                "type": "property"
              },
              {
                "title": "Getting the placemark name",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/name",
                "title": "var name: String?",
                "type": "property"
              },
              {
                "title": "Getting the placemark details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/thoroughfare",
                "title": "var thoroughfare: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/subthoroughfare",
                "title": "var subThoroughfare: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/locality",
                "title": "var locality: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/sublocality",
                "title": "var subLocality: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/administrativearea",
                "title": "var administrativeArea: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/subadministrativearea",
                "title": "var subAdministrativeArea: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/postalcode",
                "title": "var postalCode: String?",
                "type": "property"
              },
              {
                "title": "Getting the placemark’s country",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/isocountrycode",
                "title": "var isoCountryCode: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/country",
                "title": "var country: String?",
                "type": "property"
              },
              {
                "title": "Getting the associated contact details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/postaladdress",
                "title": "var postalAddress: CNPostalAddress?",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/corelocation/clplacemark/addressdictionary",
                "title": "var addressDictionary: [AnyHashable : Any]?",
                "type": "property"
              },
              {
                "title": "Getting landscape information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/inlandwater",
                "title": "var inlandWater: String?",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/ocean",
                "title": "var ocean: String?",
                "type": "property"
              },
              {
                "title": "Getting points of interest",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/areasofinterest",
                "title": "var areasOfInterest: [String]?",
                "type": "property"
              },
              {
                "title": "Getting the placemark’s time zone",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/timezone",
                "title": "var timeZone: TimeZone?",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/specification",
                "title": "CLPlacemark.Specification",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/clplacemark/unwrappedtype",
                "title": "CLPlacemark.UnwrappedType",
                "type": "typealias"
              },
              {
                "path": "/documentation/corelocation/clplacemark/valuetype",
                "title": "CLPlacemark.ValueType",
                "type": "typealias"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/displayrepresentation",
                "title": "var displayRepresentation: DisplayRepresentation",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/defaultresolverspecification",
                "title": "static var defaultResolverSpecification: EmptyResolverSpecification<CLPlacemark>",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clplacemark/typedisplayrepresentation",
                "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clplacemark/init(location:name:postaladdress:)",
                "title": "convenience init(location: CLLocation, name: String?, postalAddress: CNPostalAddress?)",
                "type": "init"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clplacemark/displayrepresentation",
                    "title": "var displayRepresentation: DisplayRepresentation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clplacemark/localizedstringresource",
                    "title": "var localizedStringResource: LocalizedStringResource",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/corelocation/clplacemark/displayrepresentation(with:)",
                    "title": "func displayRepresentation(with: DisplayRepresentation.Components) async -> DisplayRepresentation",
                    "type": "method"
                  }
                ],
                "path": "/documentation/corelocation/clplacemark/instancedisplayrepresentable-implementations",
                "title": "InstanceDisplayRepresentable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clplacemark/typedisplayrepresentation",
                    "title": "static var typeDisplayRepresentation: TypeDisplayRepresentation",
                    "type": "property"
                  }
                ],
                "path": "/documentation/corelocation/clplacemark/typedisplayrepresentable-implementations",
                "title": "TypeDisplayRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/corelocation/clplacemark",
            "title": "CLPlacemark",
            "type": "class"
          },
          {
            "title": "Location push service extension",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.location.push",
            "title": "com.apple.developer.location.push",
            "type": "typealias"
          },
          {
            "children": [
              {
                "title": "Getting the push notification payload",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceextension/didreceivelocationpushpayload(_:completion:)",
                "title": "func didReceiveLocationPushPayload([String : Any], completion: () -> Void)",
                "type": "method"
              },
              {
                "title": "Handling the extension termination",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceextension/serviceextensionwillterminate()",
                "title": "func serviceExtensionWillTerminate()",
                "type": "method"
              }
            ],
            "path": "/documentation/corelocation/cllocationpushserviceextension",
            "title": "CLLocationPushServiceExtension",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Getting the error code",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/unknown",
                "title": "static var unknown: CLLocationPushServiceError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/missingpushextension",
                "title": "static var missingPushExtension: CLLocationPushServiceError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/missingpushserverenvironment",
                "title": "static var missingPushServerEnvironment: CLLocationPushServiceError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/missingentitlement",
                "title": "static var missingEntitlement: CLLocationPushServiceError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/unsupportedplatform",
                "title": "static var unsupportedPlatform: CLLocationPushServiceError.Code",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the error code",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingpushextension",
                    "title": "case missingPushExtension",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingpushserverenvironment",
                    "title": "case missingPushServerEnvironment",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingentitlement",
                    "title": "case missingEntitlement",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/unsupportedplatform",
                    "title": "case unsupportedPlatform",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code",
                "title": "CLLocationPushServiceError.Code",
                "type": "enum"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct",
            "title": "CLLocationPushServiceError",
            "type": "struct"
          },
          {
            "path": "/documentation/corelocation/cllocationpushserviceerrordomain",
            "title": "let CLLocationPushServiceErrorDomain: String",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Getting the error code",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/unknown",
                "title": "case unknown",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingpushextension",
                "title": "case missingPushExtension",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingpushserverenvironment",
                "title": "case missingPushServerEnvironment",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/missingentitlement",
                "title": "case missingEntitlement",
                "type": "case"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/unsupportedplatform",
                "title": "case unsupportedPlatform",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/corelocation/cllocationpushserviceerror-swift.struct/code",
            "title": "CLLocationPushServiceError.Code",
            "type": "enum"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting general errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/locationunknown",
                "title": "static var locationUnknown: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/denied",
                "title": "static var denied: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/promptdeclined",
                "title": "static var promptDeclined: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/network",
                "title": "static var network: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/headingfailure",
                "title": "static var headingFailure: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/rangingunavailable",
                "title": "static var rangingUnavailable: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/rangingfailure",
                "title": "static var rangingFailure: CLError.Code",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting general errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/locationunknown",
                    "title": "case locationUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/promptdeclined",
                    "title": "case promptDeclined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/network",
                    "title": "case network",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/headingfailure",
                    "title": "case headingFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/rangingunavailable",
                    "title": "case rangingUnavailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/rangingfailure",
                    "title": "case rangingFailure",
                    "type": "case"
                  },
                  {
                    "title": "Getting region monitoring errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/regionmonitoringdenied",
                    "title": "case regionMonitoringDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/regionmonitoringfailure",
                    "title": "case regionMonitoringFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/regionmonitoringsetupdelayed",
                    "title": "case regionMonitoringSetupDelayed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/regionmonitoringresponsedelayed",
                    "title": "case regionMonitoringResponseDelayed",
                    "type": "case"
                  },
                  {
                    "title": "Getting geocoding errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/geocodecanceled",
                    "title": "case geocodeCanceled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/geocodefoundnoresult",
                    "title": "case geocodeFoundNoResult",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/geocodefoundpartialresult",
                    "title": "case geocodeFoundPartialResult",
                    "type": "case"
                  },
                  {
                    "title": "Getting deferred location update errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/deferredfailed",
                    "title": "case deferredFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/deferredcanceled",
                    "title": "case deferredCanceled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/deferredaccuracytoolow",
                    "title": "case deferredAccuracyTooLow",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/deferreddistancefiltered",
                    "title": "case deferredDistanceFiltered",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/deferrednotupdatinglocation",
                    "title": "case deferredNotUpdatingLocation",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/historicallocationerror",
                    "title": "case historicalLocationError",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clerror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/corelocation/clerror-swift.struct/code",
                "title": "CLError.Code",
                "type": "enum"
              },
              {
                "title": "Getting region monitoring errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/regionmonitoringdenied",
                "title": "static var regionMonitoringDenied: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/regionmonitoringfailure",
                "title": "static var regionMonitoringFailure: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/regionmonitoringsetupdelayed",
                "title": "static var regionMonitoringSetupDelayed: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/regionmonitoringresponsedelayed",
                "title": "static var regionMonitoringResponseDelayed: CLError.Code",
                "type": "property"
              },
              {
                "title": "Getting geocoding errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/geocodecanceled",
                "title": "static var geocodeCanceled: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/geocodefoundnoresult",
                "title": "static var geocodeFoundNoResult: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/geocodefoundpartialresult",
                "title": "static var geocodeFoundPartialResult: CLError.Code",
                "type": "property"
              },
              {
                "title": "Getting deferred location update errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/deferredfailed",
                "title": "static var deferredFailed: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/deferredcanceled",
                "title": "static var deferredCanceled: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/deferredaccuracytoolow",
                "title": "static var deferredAccuracyTooLow: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/deferreddistancefiltered",
                "title": "static var deferredDistanceFiltered: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/deferrednotupdatinglocation",
                "title": "static var deferredNotUpdatingLocation: CLError.Code",
                "type": "property"
              },
              {
                "title": "Getting the error details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/alternateregion",
                "title": "var alternateRegion: CLRegion?",
                "type": "property"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/historicallocationerror",
                "title": "static var historicalLocationError: CLError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/corelocation/clerror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/corelocation/clerror-swift.struct",
            "title": "CLError",
            "type": "struct"
          },
          {
            "path": "/documentation/corelocation/kclerrordomain",
            "title": "let kCLErrorDomain: String",
            "type": "var"
          },
          {
            "path": "/documentation/corelocation/kclerroruserinfoalternateregionkey",
            "title": "let kCLErrorUserInfoAlternateRegionKey: String",
            "type": "var"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Classes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a beacon region",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(beaconidentityconstraint:identifier:)",
                    "title": "init(beaconIdentityConstraint: CLBeaconIdentityConstraint, identifier: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(uuid:identifier:)",
                    "title": "init(uuid: UUID, identifier: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(uuid:major:identifier:)",
                    "title": "init(uuid: UUID, major: CLBeaconMajorValue, identifier: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/init(uuid:major:minor:identifier:)",
                    "title": "init(uuid: UUID, major: CLBeaconMajorValue, minor: CLBeaconMinorValue, identifier: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconmajorvalue",
                    "title": "CLBeaconMajorValue",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconminorvalue",
                    "title": "CLBeaconMinorValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Getting the beacon identity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/uuid",
                    "title": "var uuid: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/major",
                    "title": "var major: NSNumber?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/minor",
                    "title": "var minor: NSNumber?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/beaconidentityconstraint",
                    "title": "var beaconIdentityConstraint: CLBeaconIdentityConstraint",
                    "type": "property"
                  },
                  {
                    "title": "Specifying when to send notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/notifyentrystateondisplay",
                    "title": "var notifyEntryStateOnDisplay: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Getting the beacon’s advertisement data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconregion/peripheraldata(withmeasuredpower:)",
                    "title": "func peripheralData(withMeasuredPower: NSNumber?) -> NSMutableDictionary",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/init(proximityuuid:identifier:)",
                    "title": "init(proximityUUID: UUID, identifier: String)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/init(proximityuuid:major:identifier:)",
                    "title": "init(proximityUUID: UUID, major: CLBeaconMajorValue, identifier: String)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/init(proximityuuid:major:minor:identifier:)",
                    "title": "init(proximityUUID: UUID, major: CLBeaconMajorValue, minor: CLBeaconMinorValue, identifier: String)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/corelocation/clbeaconregion/proximityuuid",
                    "title": "var proximityUUID: UUID",
                    "type": "property"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corelocation/clbeaconregion",
                "title": "CLBeaconRegion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the beacon identity",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconidentityconstraint/major",
                    "title": "var major: UInt16?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clbeaconidentityconstraint/minor",
                    "title": "var minor: UInt16?",
                    "type": "property"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corelocation/clbeaconidentityconstraint",
                "title": "CLBeaconIdentityConstraint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a circular region",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/init(center:radius:identifier:)",
                    "title": "init(center: CLLocationCoordinate2D, radius: CLLocationDistance, identifier: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the circle’s center and radius",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/center",
                    "title": "var center: CLLocationCoordinate2D",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/radius",
                    "title": "var radius: CLLocationDistance",
                    "type": "property"
                  },
                  {
                    "title": "Performing hit testing in the region",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/corelocation/clcircularregion/contains(_:)",
                    "title": "func contains(CLLocationCoordinate2D) -> Bool",
                    "type": "method"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/corelocation/clcircularregion",
                "title": "CLCircularRegion",
                "type": "class"
              }
            ],
            "path": "/documentation/corelocation/deprecated",
            "title": "Deprecated",
            "type": "collection"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cl_target_supports_conditions",
                "title": "var CL_TARGET_SUPPORTS_CONDITIONS: Int32",
                "type": "var"
              }
            ],
            "path": "/documentation/corelocation/core-location-constants",
            "title": "Core Location Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/corelocation/cllocationcoordinate2dmake(_:_:)",
                "title": "func CLLocationCoordinate2DMake(CLLocationDegrees, CLLocationDegrees) -> CLLocationCoordinate2D",
                "type": "func"
              }
            ],
            "path": "/documentation/corelocation/core-location-functions",
            "title": "Core Location Functions",
            "type": "collection"
          }
        ],
        "path": "/documentation/corelocation",
        "title": "Core Location",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
