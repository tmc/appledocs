{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/developing-a-browser-app-that-uses-an-alternative-browser-engine",
            "title": "Developing a browser app that uses an alternative browser engine",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/browserenginekit/designing-your-browser-architecture",
            "title": "Designing your browser architecture",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/preparing-your-app-to-be-the-default-browser",
            "title": "Preparing your app to be the default web browser",
            "type": "article"
          },
          {
            "title": "Browser extensions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/creating-browser-extensions-in-xcode",
            "title": "Creating browser extensions in Xcode",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/managing-the-browser-extension-lifecycle",
                "title": "Managing the browser extension life cycle",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/using-xpc-to-communicate-with-browser-extensions",
                "title": "Using XPC to communicate with browser extensions",
                "type": "article"
              },
              {
                "title": "Browser extensions",
                "type": "groupMarker"
              },
              {
                "title": "Host app representations",
                "type": "groupMarker"
              },
              {
                "title": "Extension capabilities",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/browserenginekit/extension-lifecycle",
            "title": "Extension lifecycle",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Access control",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/limiting-resource-access-in-content-extensions",
                "title": "Limiting resource access in web content extensions",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/accessing-files-in-browser-extensions",
                "title": "Accessing files in browser extensions",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/attributing-memory-to-a-content-extension",
                "title": "Attributing memory to a content extension",
                "type": "article"
              }
            ],
            "path": "/documentation/browserenginekit/extension-resources",
            "title": "Extension resources",
            "type": "collection"
          },
          {
            "title": "Web content",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Layer hosting",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/hosting-browser-view-layers-in-the-rendering-extension",
                "title": "Hosting browser view layers in the rendering extension",
                "type": "article"
              },
              {
                "title": "Visibility propagation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/propagating-view-visibility-information-to-browser-extensions",
                "title": "Propagating view visibility information to extension processes",
                "type": "article"
              }
            ],
            "path": "/documentation/browserenginekit/view-coordination",
            "title": "View coordination",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Custom text views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/integrating-custom-browser-text-views-with-uikit",
                "title": "Integrating custom browser text views with UIKit",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/support-extended-text-interactions",
                "title": "Supporting extended text interactions",
                "type": "article"
              },
              {
                "title": "Interaction responses",
                "type": "groupMarker"
              },
              {
                "title": "Text selection",
                "type": "groupMarker"
              },
              {
                "title": "Keyboard input",
                "type": "groupMarker"
              },
              {
                "title": "Replacements and AutoFill",
                "type": "groupMarker"
              },
              {
                "title": "Information about text",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/browserenginekit/text-interaction",
            "title": "Text interaction",
            "type": "collection"
          },
          {
            "title": "Scroll view interaction",
            "type": "groupMarker"
          },
          {
            "title": "Drag interaction",
            "type": "groupMarker"
          },
          {
            "title": "Context menus",
            "type": "groupMarker"
          },
          {
            "title": "Accessibility",
            "type": "groupMarker"
          },
          {
            "title": "Just-in-time code compilation",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/protecting-code-compiled-just-in-time",
            "title": "Protecting code compiled just in time",
            "type": "article"
          },
          {
            "path": "/documentation/browserenginekit/improving-control-flow-integrity-with-pointer-authentication",
            "title": "Improving control flow integrity with pointer authentication",
            "type": "article"
          },
          {
            "title": "Downloads",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/downloading-files-in-a-web-browser",
            "title": "Downloading files in a web browser with an alternative browser engine",
            "type": "article"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/browserenginekit",
        "title": "BrowserEngineKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/developing-a-browser-app-that-uses-an-alternative-browser-engine",
            "title": "Developing a browser app that uses an alternative browser engine",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/browserenginekit/designing-your-browser-architecture",
            "title": "Designing your browser architecture",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/preparing-your-app-to-be-the-default-browser",
            "title": "Preparing your app to be the default web browser",
            "type": "article"
          },
          {
            "title": "Browser extensions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/creating-browser-extensions-in-xcode",
            "title": "Creating browser extensions in Xcode",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/managing-the-browser-extension-lifecycle",
                "title": "Managing the browser extension life cycle",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/using-xpc-to-communicate-with-browser-extensions",
                "title": "Using XPC to communicate with browser extensions",
                "type": "article"
              },
              {
                "title": "Browser extensions",
                "type": "groupMarker"
              },
              {
                "title": "Host app representations",
                "type": "groupMarker"
              },
              {
                "title": "Extension capabilities",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/browserenginekit/extension-lifecycle",
            "title": "Extension lifecycle",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Access control",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/limiting-resource-access-in-content-extensions",
                "title": "Limiting resource access in web content extensions",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/accessing-files-in-browser-extensions",
                "title": "Accessing files in browser extensions",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/attributing-memory-to-a-content-extension",
                "title": "Attributing memory to a content extension",
                "type": "article"
              }
            ],
            "path": "/documentation/browserenginekit/extension-resources",
            "title": "Extension resources",
            "type": "collection"
          },
          {
            "title": "Web content",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Layer hosting",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/hosting-browser-view-layers-in-the-rendering-extension",
                "title": "Hosting browser view layers in the rendering extension",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating and invalidating a layer hierarchy",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/init()",
                    "title": "+ layerHierarchyWithError:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/invalidate()",
                    "title": "- invalidate",
                    "type": "method"
                  },
                  {
                    "title": "Setting the layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/layer",
                    "title": "layer",
                    "type": "property"
                  },
                  {
                    "title": "Getting a handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/handle",
                    "title": "handle",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchy",
                "title": "BELayerHierarchy",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying remote layer hierarchy",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingview/handle",
                    "title": "handle",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchyhostingview",
                "title": "BELayerHierarchyHostingView",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a transaction coordinator",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/init()",
                    "title": "+ coordinatorWithError:",
                    "type": "method"
                  },
                  {
                    "title": "Interprocess communication",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/init(xpcrepresentation:)",
                    "title": "+ coordinatorWithXPCRepresentation:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/createxpcrepresentation()",
                    "title": "- createXPCRepresentation",
                    "type": "method"
                  },
                  {
                    "title": "Synchronize transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/add(_:)-7day0",
                    "title": "- addLayerHierarchyHostingView:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/add(_:)-i66q",
                    "title": "- addLayerHierarchy:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/commit()",
                    "title": "- commit",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator",
                "title": "BELayerHierarchyHostingTransactionCoordinator",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Interprocess communication",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhandle/init(xpcrepresentation:)",
                    "title": "+ handleWithXPCRepresentation:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhandle/createxpcrepresentation()",
                    "title": "- createXPCRepresentation",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchyhandle",
                "title": "BELayerHierarchyHandle",
                "type": "class"
              },
              {
                "title": "Visibility propagation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/propagating-view-visibility-information-to-browser-extensions",
                "title": "Propagating view visibility information to extension processes",
                "type": "article"
              }
            ],
            "path": "/documentation/browserenginekit/view-coordination",
            "title": "View coordination",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Custom text views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/integrating-custom-browser-text-views-with-uikit",
                "title": "Integrating custom browser text views with UIKit",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/support-extended-text-interactions",
                "title": "Supporting extended text interactions",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Updating the text system",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/asyncinputdelegate",
                    "title": "asyncInputDelegate",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/canperformaction(_:withsender:)",
                    "title": "- canPerformAction:withSender:",
                    "type": "method"
                  },
                  {
                    "title": "Handling text input",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/iseditable",
                    "title": "editable",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/handlekeyentry(_:completionhandler:)",
                    "title": "- handleKeyEntry:withCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/shiftkeystatechanged(fromstate:tostate:)",
                    "title": "- shiftKeyStateChangedFromState:toState:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/text(in:)",
                    "title": "- textInRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/offset(from:to:)",
                    "title": "- offsetFromPosition:toPosition:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setbasewritingdirection(_:for:)",
                    "title": "- setBaseWritingDirection:forRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/delete(in:to:)",
                    "title": "- deleteInDirection:toGranularity:",
                    "type": "method"
                  },
                  {
                    "title": "Editing and correcting text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/transposecharactersaroundselection()",
                    "title": "- transposeCharactersAroundSelection",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/replacetext(_:withtext:options:completionhandler:)",
                    "title": "- replaceText:withText:options:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requesttextcontextforautocorrection(completionhandler:)",
                    "title": "- requestTextContextForAutocorrectionWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requesttextrects(for:withcompletionhandler:)",
                    "title": "- requestTextRectsForString:withCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/automaticallypresenteditmenu",
                    "title": "automaticallyPresentEditMenu",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requestpreferredarrowdirectionforeditmenu(completionhandler:)",
                    "title": "- requestPreferredArrowDirectionForEditMenuWithCompletionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/systemwillpresenteditmenu(withanimator:)",
                    "title": "- systemWillPresentEditMenuWithAnimator:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/systemwilldismisseditmenu(withanimator:)",
                    "title": "- systemWillDismissEditMenuWithAnimator:",
                    "type": "method"
                  },
                  {
                    "title": "Input traits",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/extendedtextinputtraits",
                    "title": "extendedTextInputTraits",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textstyling(at:in:)",
                    "title": "- textStylingAtPosition:inDirection:",
                    "type": "method"
                  },
                  {
                    "title": "Replacing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/isreplaceallowed",
                    "title": "replaceAllowed",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/replaceselectedtext(_:withtext:)",
                    "title": "- replaceSelectedText:withText:",
                    "type": "method"
                  },
                  {
                    "title": "Handling text gestures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/updatecurrentselection(to:from:in:)",
                    "title": "- updateCurrentSelectionTo:fromGesture:inState:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setselection(from:to:gesture:state:)",
                    "title": "- setSelectionFromPoint:toPoint:gesture:state:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/adjustselectionboundary(to:touchphase:baseisstart:flags:)",
                    "title": "- adjustSelectionBoundaryToPoint:touchPhase:baseIsStart:flags:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textinteractiongesture(_:shouldbeginat:)",
                    "title": "- textInteractionGesture:shouldBeginAtPoint:",
                    "type": "method"
                  },
                  {
                    "title": "Selecting text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectedtext",
                    "title": "selectedText",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectedtextrange",
                    "title": "selectedTextRange",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/isselectionatdocumentstart",
                    "title": "selectionAtDocumentStart",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/caretrect(for:)",
                    "title": "- caretRectForPosition:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectionrects(for:)",
                    "title": "- selectionRectsForRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectwordforreplacement()",
                    "title": "- selectWordForReplacement",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/updateselection(extent:boundary:completionhandler:)",
                    "title": "- updateSelectionWithExtentPoint:boundary:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selecttext(in:at:completionhandler:)",
                    "title": "- selectTextInGranularity:atPoint:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectposition(at:completionhandler:)",
                    "title": "- selectPositionAtPoint:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectposition(at:for:completionhandler:)",
                    "title": "- selectPositionAtPoint:withContextRequest:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/adjustselection(by:completionhandler:)",
                    "title": "- adjustSelectionByRange:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/move(byoffset:)",
                    "title": "- moveByOffset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/moveselection(atboundary:in:completionhandler:)",
                    "title": "- moveSelectionAtBoundary:inStorageDirection:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selecttextforeditmenuwithlocation(inview:completionhandler:)",
                    "title": "- selectTextForEditMenuWithLocationInView:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Marking text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/markedtext",
                    "title": "markedText",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/attributedmarkedtext",
                    "title": "attributedMarkedText",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/markedtextrange",
                    "title": "markedTextRange",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/hasmarkedtext",
                    "title": "hasMarkedText",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setmarkedtext(_:selectedrange:)",
                    "title": "- setMarkedText:selectedRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setattributedmarkedtext(_:selectedrange:)",
                    "title": "- setAttributedMarkedText:selectedRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/unmarktext()",
                    "title": "- unmarkText",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/ispointnearmarkedtext(_:)",
                    "title": "- isPointNearMarkedText:",
                    "type": "method"
                  },
                  {
                    "title": "Document context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requestdocumentcontext(_:completionhandler:)",
                    "title": "- requestDocumentContext:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Dictation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/willinsertfinaldictationresult()",
                    "title": "- willInsertFinalDictationResult",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/replacedictatedtext(_:withtext:)",
                    "title": "- replaceDictatedText:withText:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/didinsertfinaldictationresult()",
                    "title": "- didInsertFinalDictationResult",
                    "type": "method"
                  },
                  {
                    "title": "Text alternatives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/alternativesforselectedtext()",
                    "title": "- alternativesForSelectedText",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/add(_:)",
                    "title": "- addTextAlternatives:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/insert(_:)-6x7hd",
                    "title": "- insertTextAlternatives:",
                    "type": "method"
                  },
                  {
                    "title": "Text placeholders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/inserttextplaceholder(size:completionhandler:)",
                    "title": "- insertTextPlaceholderWithSize:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/remove(_:willinserttext:completionhandler:)",
                    "title": "- removeTextPlaceholder:willInsertText:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Text suggestions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/insert(_:)-5iryn",
                    "title": "- insertTextSuggestion:",
                    "type": "method"
                  },
                  {
                    "title": "Geometry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textinputview",
                    "title": "textInputView",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textfirstrect",
                    "title": "textFirstRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textlastrect",
                    "title": "textLastRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/unobscuredcontentrect",
                    "title": "unobscuredContentRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/unscaledview",
                    "title": "unscaledView",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectioncliprect",
                    "title": "selectionClipRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/autoscroll(to:)",
                    "title": "- autoscrollToPoint:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/cancelautoscroll()",
                    "title": "- cancelAutoscroll",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/keyboardwilldismiss()",
                    "title": "- keyboardWillDismiss",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/removetextalternatives()",
                    "title": "- removeTextAlternatives",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinput",
                "title": "BETextInput",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Text selection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/selectionwillchange(for:)",
                    "title": "- selectionWillChangeForTextInput:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/selectiondidchange(for:)",
                    "title": "- selectionDidChangeForTextInput:",
                    "type": "method"
                  },
                  {
                    "title": "Deferring actions to the text system",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/shoulddefereventhandlingtosystem(for:context:)",
                    "title": "- shouldDeferEventHandlingToSystemForTextInput:context:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/textinput(_:deferreplacetextactiontosystem:)",
                    "title": "- textInput:deferReplaceTextActionToSystem:",
                    "type": "method"
                  },
                  {
                    "title": "Providing completion suggestions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/textinput(_:setcandidatesuggestions:)",
                    "title": "- textInput:setCandidateSuggestions:",
                    "type": "method"
                  },
                  {
                    "title": "Removing stored context information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/invalidatetextentrycontext(for:)",
                    "title": "- invalidateTextEntryContextForTextInput:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinputdelegate",
                "title": "BETextInputDelegate",
                "type": "protocol"
              },
              {
                "title": "Interaction responses",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Text selection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/delegate",
                    "title": "delegate",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Text selection changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextinteractiondelegate/systemwillchangeselection(for:)",
                        "title": "- systemWillChangeSelectionForInteraction:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextinteractiondelegate/systemdidchangeselection(for:)",
                        "title": "- systemDidChangeSelectionForInteraction:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextinteractiondelegate",
                    "title": "BETextInteractionDelegate",
                    "type": "protocol"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/textselectiondisplayinteraction",
                    "title": "textSelectionDisplayInteraction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/selectionboundaryadjusted(to:touchphase:flags:)",
                    "title": "- selectionBoundaryAdjustedToPoint:touchPhase:flags:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/selectionchangedwithgesture(at:gesture:state:flags:)",
                    "title": "- selectionChangedWithGestureAtPoint:gesture:state:flags:",
                    "type": "method"
                  },
                  {
                    "title": "Menus",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/presenteditmenuforselection()",
                    "title": "- presentEditMenuForSelection",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/dismisseditmenuforselection()",
                    "title": "- dismissEditMenuForSelection",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/contextmenuinteraction",
                    "title": "contextMenuInteraction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/contextmenuinteractiondelegate",
                    "title": "contextMenuInteractionDelegate",
                    "type": "property"
                  },
                  {
                    "title": "Text replacements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/addshortcut(fortext:from:)",
                    "title": "- addShortcutForText:fromRect:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/showreplacements(fortext:)",
                    "title": "- showReplacementsForText:",
                    "type": "method"
                  },
                  {
                    "title": "Sharing and defining text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/share(text:from:)",
                    "title": "- shareText:fromRect:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/showdictionary(fortextincontext:definingtextinrange:from:)",
                    "title": "- showDictionaryForTextInContext:definingTextInRange:fromRect:",
                    "type": "method"
                  },
                  {
                    "title": "Translation and transliteration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/translate(text:from:)",
                    "title": "- translateText:fromRect:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/transliteratechinese(fortext:)",
                    "title": "- transliterateChineseForText:",
                    "type": "method"
                  },
                  {
                    "title": "UI updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/editabilitychanged()",
                    "title": "- editabilityChanged",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/refreshkeyboardui()",
                    "title": "- refreshKeyboardUI",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinteraction",
                "title": "BETextInteraction",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Text selection changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteractiondelegate/systemwillchangeselection(for:)",
                    "title": "- systemWillChangeSelectionForInteraction:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteractiondelegate/systemdidchangeselection(for:)",
                    "title": "- systemDidChangeSelectionForInteraction:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinteractiondelegate",
                "title": "BETextInteractionDelegate",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Finding and replacing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/findselected(_:)",
                    "title": "- findSelected:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/promptforreplace(_:)",
                    "title": "- promptForReplace:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/replace(_:)",
                    "title": "- replace:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/addshortcut(_:)",
                    "title": "- addShortcut:",
                    "type": "method"
                  },
                  {
                    "title": "Defining and sharing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/lookup(_:)",
                    "title": "- lookup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/share(_:)",
                    "title": "- share:",
                    "type": "method"
                  },
                  {
                    "title": "Translating and transliterating text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/translate(_:)",
                    "title": "- translate:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/transliteratechinese(_:)",
                    "title": "- transliterateChinese:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/berespondereditactions",
                "title": "BEResponderEditActions",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/doubletap",
                    "title": "BEGestureTypeDoubleTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/doubletapandhold",
                    "title": "BEGestureTypeDoubleTapAndHold",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/forcetouch",
                    "title": "BEGestureTypeForceTouch",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/imphraseboundarydrag",
                    "title": "BEGestureTypeIMPhraseBoundaryDrag",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/loupe",
                    "title": "BEGestureTypeLoupe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/onefingerdoubletap",
                    "title": "BEGestureTypeOneFingerDoubleTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/onefingertap",
                    "title": "BEGestureTypeOneFingerTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/onefingertripletap",
                    "title": "BEGestureTypeOneFingerTripleTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/twofingerrangedselectgesture",
                    "title": "BEGestureTypeTwoFingerRangedSelectGesture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/twofingersingletap",
                    "title": "BEGestureTypeTwoFingerSingleTap",
                    "type": "case"
                  }
                ],
                "path": "/documentation/browserenginekit/begesturetype",
                "title": "BEGestureType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Finding and replacing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/findselected(_:)",
                    "title": "- findSelected:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/promptforreplace(_:)",
                    "title": "- promptForReplace:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/replace(_:)",
                    "title": "- replace:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/addshortcut(_:)",
                    "title": "- addShortcut:",
                    "type": "method"
                  },
                  {
                    "title": "Defining and sharing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/lookup(_:)",
                    "title": "- lookup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/share(_:)",
                    "title": "- share:",
                    "type": "method"
                  },
                  {
                    "title": "Translating and transliterating text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/translate(_:)",
                    "title": "- translate:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/transliteratechinese(_:)",
                    "title": "- transliterateChinese:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/berespondereditactions",
                "title": "BEResponderEditActions",
                "type": "protocol"
              },
              {
                "title": "Text selection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/extend(in:)",
                    "title": "- extendInLayoutDirection:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/extend(in:by:)",
                    "title": "- extendInStorageDirection:byGranularity:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/move(in:)",
                    "title": "- moveInLayoutDirection:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/move(in:by:)",
                    "title": "- moveInStorageDirection:byGranularity:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextselectiondirectionnavigation",
                "title": "BETextSelectionDirectionNavigation",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/beselectionflagsnone",
                    "title": "BESelectionFlagsNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/phraseboundarychanged",
                    "title": "BEPhraseBoundaryChanged",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/selectionflipped",
                    "title": "BESelectionFlipped",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/wordisneartap",
                    "title": "BEWordIsNearTap",
                    "type": "case"
                  }
                ],
                "path": "/documentation/browserenginekit/beselectionflags",
                "title": "BESelectionFlags",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/ended",
                    "title": "BESelectionTouchPhaseEnded",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/endedmovingbackward",
                    "title": "BESelectionTouchPhaseEndedMovingBackward",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/endedmovingforward",
                    "title": "BESelectionTouchPhaseEndedMovingForward",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/endednotmoving",
                    "title": "BESelectionTouchPhaseEndedNotMoving",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/moved",
                    "title": "BESelectionTouchPhaseMoved",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/started",
                    "title": "BESelectionTouchPhaseStarted",
                    "type": "case"
                  }
                ],
                "path": "/documentation/browserenginekit/beselectiontouchphase",
                "title": "BESelectionTouchPhase",
                "type": "enum"
              },
              {
                "title": "Keyboard input",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the key",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/key",
                    "title": "key",
                    "type": "property"
                  },
                  {
                    "title": "Getting information about the keypress",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/state",
                    "title": "state",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Key states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeyentry/keypressstate/down",
                        "title": "BEKeyPressStateDown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeyentry/keypressstate/up",
                        "title": "BEKeyPressStateUp",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/browserenginekit/bekeyentry/keypressstate",
                    "title": "BEKeyPressState",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/iskeyrepeating",
                    "title": "keyRepeating",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/timestamp",
                    "title": "timestamp",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/bekeyentry",
                "title": "BEKeyEntry",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a key entry context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/init(keyentry:)",
                    "title": "- initWithKeyEntry:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the information about the key event",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/keyentry",
                    "title": "keyEntry",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/shouldinsertcharacter",
                    "title": "shouldInsertCharacter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/shouldevaluateforinputsystemhandling",
                    "title": "shouldEvaluateForInputSystemHandling",
                    "type": "property"
                  },
                  {
                    "title": "Getting information about the text document",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/isdocumenteditable",
                    "title": "documentEditable",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/bekeyentrycontext",
                "title": "BEKeyEntryContext",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting caps-shift information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeymodifierflags/capslock",
                    "title": "BEKeyModifierFlagCapsLock",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeymodifierflags/shift",
                    "title": "BEKeyModifierFlagShift",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeymodifierflags/none",
                    "title": "BEKeyModifierFlagNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/browserenginekit/bekeymodifierflags",
                "title": "BEKeyModifierFlags",
                "type": "enum"
              },
              {
                "title": "Replacements and AutoFill",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beautofilltextsuggestion/contents",
                    "title": "contents",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/beautofilltextsuggestion",
                "title": "BEAutoFillTextSuggestion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextalternatives/alternativestrings",
                    "title": "alternativeStrings",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextalternatives/primarystring",
                    "title": "primaryString",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/betextalternatives",
                "title": "BETextAlternatives",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a text document context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/init(attributedselectedtext:contextbefore:contextafter:markedtext:selectedrangeinmarkedtext:)",
                    "title": "- initWithAttributedSelectedText:contextBefore:contextAfter:markedText:selectedRangeInMarkedText:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/init(selectedtext:contextbefore:contextafter:markedtext:selectedrangeinmarkedtext:)",
                    "title": "- initWithSelectedText:contextBefore:contextAfter:markedText:selectedRangeInMarkedText:",
                    "type": "method"
                  },
                  {
                    "title": "Getting information about the selected range",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/autocorrectedranges",
                    "title": "autocorrectedRanges",
                    "type": "property"
                  },
                  {
                    "title": "Adding text rectangles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/addtextrect(_:forcharacterrange:)",
                    "title": "- addTextRect:forCharacterRange:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextdocumentcontext",
                "title": "BETextDocumentContext",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/granularitycount",
                    "title": "granularityCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.property",
                    "title": "options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/surroundinggranularity",
                    "title": "surroundingGranularity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/betextdocumentrequest",
                "title": "BETextDocumentRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/attributedtext",
                    "title": "BETextDocumentOptionAttributedText",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/autocorrectedranges",
                    "title": "BETextDocumentOptionAutocorrectedRanges",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/markedtextrects",
                    "title": "BETextDocumentOptionMarkedTextRects",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/text",
                    "title": "BETextDocumentOptionText",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/textrects",
                    "title": "BETextDocumentOptionTextRects",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequestoptions/betextdocumentoptionnone",
                    "title": "BETextDocumentOptionNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct",
                "title": "BETextDocumentRequestOptions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating a text suggestion",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextsuggestion/init(inputtext:)",
                    "title": "- initWithInputText:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the suggested text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextsuggestion/inputtext",
                    "title": "inputText",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/betextsuggestion",
                "title": "BETextSuggestion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextreplacementoptions/betextreplacementoptionsnone",
                    "title": "BETextReplacementOptionsNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextreplacementoptions/addunderline",
                    "title": "BETextReplacementOptionsAddUnderline",
                    "type": "case"
                  }
                ],
                "path": "/documentation/browserenginekit/betextreplacementoptions",
                "title": "BETextReplacementOptions",
                "type": "enum"
              },
              {
                "title": "Information about text",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/insertionpointcolor",
                    "title": "insertionPointColor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/issinglelinedocument",
                    "title": "singleLineDocument",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/istypingadaptationenabled",
                    "title": "typingAdaptationEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/selectionhandlecolor",
                    "title": "selectionHandleColor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/selectionhighlightcolor",
                    "title": "selectionHighlightColor",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/beextendedtextinputtraits",
                "title": "BEExtendedTextInputTraits",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedirectionaltextrange/length",
                    "title": "length",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedirectionaltextrange/offset",
                    "title": "offset",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/bedirectionaltextrange",
                "title": "BEDirectionalTextRange",
                "type": "struct"
              }
            ],
            "path": "/documentation/browserenginekit/text-interaction",
            "title": "Text interaction",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creating a web app manifest",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bewebappmanifest/init(jsondata:manifesturl:)",
                "title": "- initWithJSONData:manifestURL:",
                "type": "method"
              },
              {
                "title": "Getting manifest information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bewebappmanifest/jsondata",
                "title": "jsonData",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/bewebappmanifest/manifesturl",
                "title": "manifestURL",
                "type": "property"
              }
            ],
            "path": "/documentation/browserenginekit/bewebappmanifest",
            "title": "BEWebAppManifest",
            "type": "class"
          },
          {
            "title": "Scroll view interaction",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Responding to scroll updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollview/delegate",
                "title": "delegate",
                "type": "property"
              }
            ],
            "path": "/documentation/browserenginekit/bescrollview",
            "title": "BEScrollView",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Retrieving scroll state information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/timestamp",
                "title": "timestamp",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.property",
                "title": "phase",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/began",
                    "title": "BEScrollViewScrollUpdatePhaseBegan",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/cancelled",
                    "title": "BEScrollViewScrollUpdatePhaseCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/changed",
                    "title": "BEScrollViewScrollUpdatePhaseChanged",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/ended",
                    "title": "BEScrollViewScrollUpdatePhaseEnded",
                    "type": "case"
                  }
                ],
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum",
                "title": "BEScrollViewScrollUpdatePhase",
                "type": "enum"
              },
              {
                "title": "Transforming coordinates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/location(in:)",
                "title": "- locationInView:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/translation(in:)",
                "title": "- translationInView:",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/bescrollviewscrollupdate",
            "title": "BEScrollViewScrollUpdate",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Nesting sibling scroll views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewdelegate/parentscrollview(for:)",
                "title": "- parentScrollViewForScrollView:",
                "type": "method"
              },
              {
                "title": "Handling scroll events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewdelegate/scrollview(_:handle:completion:)",
                "title": "- scrollView:handleScrollUpdate:completion:",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/bescrollviewdelegate",
            "title": "BEScrollViewDelegate",
            "type": "protocol"
          },
          {
            "title": "Drag interaction",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a drag interaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteraction/init(delegate:)",
                "title": "- initWithDelegate:",
                "type": "method"
              },
              {
                "title": "Handling drag gestures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteraction/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Participating in drag gestures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:prepare:completion:)",
                    "title": "- dragInteraction:prepareDragSession:completion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:itemsforaddingto:fortouchat:completion:)",
                    "title": "- dragInteraction:itemsForAddingToSession:forTouchAtPoint:completion:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/bedraginteractiondelegate",
                "title": "BEDragInteractionDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/browserenginekit/bedraginteraction",
            "title": "BEDragInteraction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Participating in drag gestures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:prepare:completion:)",
                "title": "- dragInteraction:prepareDragSession:completion:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:itemsforaddingto:fortouchat:completion:)",
                "title": "- dragInteraction:itemsForAddingToSession:forTouchAtPoint:completion:",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/bedraginteractiondelegate",
            "title": "BEDragInteractionDelegate",
            "type": "protocol"
          },
          {
            "title": "Context menus",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a context menu configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/becontextmenuconfiguration/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "title": "Fulfilling the configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/becontextmenuconfiguration/fulfill(using:)",
                "title": "- fulfillUsingConfiguration:",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/becontextmenuconfiguration",
            "title": "BEContextMenuConfiguration",
            "type": "class"
          },
          {
            "title": "Accessibility",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Text positions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitynexttextmarker(_:)",
                "title": "- accessibilityNextTextMarker:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilityprevioustextmarker(_:)",
                "title": "- accessibilityPreviousTextMarker:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitylinestartmarker(for:)",
                "title": "- accessibilityLineStartMarkerForMarker:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitylineendmarker(for:)",
                "title": "- accessibilityLineEndMarkerForMarker:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitymarker(for:)",
                "title": "- accessibilityMarkerForPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarker(forposition:)",
                "title": "- accessibilityTextMarkerForPosition:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarker",
                "title": "BEAccessibilityTextMarker",
                "type": "class"
              },
              {
                "title": "Text ranges",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitybounds(for:)",
                "title": "- accessibilityBoundsForTextMarkerRange:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarkerrange()",
                "title": "- accessibilityTextMarkerRange",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarkerrangeforcurrentselection()",
                "title": "- accessibilityTextMarkerRangeForCurrentSelection",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarkerrange(for:)",
                "title": "- accessibilityTextMarkerRangeForRange:",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilityrange(for:)",
                "title": "- accessibilityRangeForTextMarkerRange:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Range boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitytextmarker/range/startmarker",
                    "title": "startMarker",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitytextmarker/range/endmarker",
                    "title": "endMarker",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/beaccessibilitytextmarker/range",
                "title": "BEAccessibilityTextMarkerRange",
                "type": "class"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitycontent(for:)",
                "title": "- accessibilityContentForTextMarkerRange:",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport",
            "title": "BEAccessibilityTextMarkerSupport",
            "type": "protocol"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/valuechangednotification",
            "title": "BEAccessibilityValueChangedNotification",
            "type": "var"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/selectionchangednotification",
            "title": "BEAccessibilitySelectionChangedNotification",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Container types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/beaccessibilitycontainertypenone",
                "title": "BEAccessibilityContainerTypeNone",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/landmark",
                "title": "BEAccessibilityContainerTypeLandmark",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/table",
                "title": "BEAccessibilityContainerTypeTable",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/list",
                "title": "BEAccessibilityContainerTypeList",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/fieldset",
                "title": "BEAccessibilityContainerTypeFieldset",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/dialog",
                "title": "BEAccessibilityContainerTypeDialog",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/tree",
                "title": "BEAccessibilityContainerTypeTree",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/frame",
                "title": "BEAccessibilityContainerTypeFrame",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/article",
                "title": "BEAccessibilityContainerTypeArticle",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/semanticgroup",
                "title": "BEAccessibilityContainerTypeSemanticGroup",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/scrollarea",
                "title": "BEAccessibilityContainerTypeScrollArea",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/alert",
                "title": "BEAccessibilityContainerTypeAlert",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/descriptionlist",
                "title": "BEAccessibilityContainerTypeDescriptionList",
                "type": "case"
              }
            ],
            "path": "/documentation/browserenginekit/beaccessibilitycontainertype",
            "title": "BEAccessibilityContainerType",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Element states",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/false",
                "title": "BEAccessibilityPressedStateFalse",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/true",
                "title": "BEAccessibilityPressedStateTrue",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/mixed",
                "title": "BEAccessibilityPressedStateMixed",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/undefined",
                "title": "BEAccessibilityPressedStateUndefined",
                "type": "case"
              }
            ],
            "path": "/documentation/browserenginekit/beaccessibilitypressedstate",
            "title": "BEAccessibilityPressedState",
            "type": "enum"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/menuitem",
            "title": "BEAccessibilityTraitMenuItem",
            "type": "var"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/popupbutton",
            "title": "BEAccessibilityTraitPopUpButton",
            "type": "var"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/radiobutton",
            "title": "BEAccessibilityTraitRadioButton",
            "type": "var"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/readonly",
            "title": "BEAccessibilityTraitReadOnly",
            "type": "var"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/visited",
            "title": "BEAccessibilityTraitVisited",
            "type": "var"
          },
          {
            "title": "Just-in-time code compilation",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/protecting-code-compiled-just-in-time",
            "title": "Protecting code compiled just in time",
            "type": "article"
          },
          {
            "path": "/documentation/browserenginekit/improving-control-flow-integrity-with-pointer-authentication",
            "title": "Improving control flow integrity with pointer authentication",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/browserenginecore/be_jit_write_protect_tag",
            "title": "BE_JIT_WRITE_PROTECT_TAG",
            "type": "macro"
          },
          {
            "title": "Downloads",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/downloading-files-in-a-web-browser",
            "title": "Downloading files in a web browser with an alternative browser engine",
            "type": "article"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/browserenginekit",
        "title": "BrowserEngineKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/developing-a-browser-app-that-uses-an-alternative-browser-engine",
            "title": "Developing a browser app that uses an alternative browser engine",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/browserenginekit/designing-your-browser-architecture",
            "title": "Designing your browser architecture",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/preparing-your-app-to-be-the-default-browser",
            "title": "Preparing your app to be the default web browser",
            "type": "article"
          },
          {
            "title": "Browser extensions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/creating-browser-extensions-in-xcode",
            "title": "Creating browser extensions in Xcode",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/managing-the-browser-extension-lifecycle",
                "title": "Managing the browser extension life cycle",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/using-xpc-to-communicate-with-browser-extensions",
                "title": "Using XPC to communicate with browser extensions",
                "type": "article"
              },
              {
                "title": "Browser extensions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Handling incoming XPC connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentextension/handle(xpcconnection:)",
                    "title": "func handle(xpcConnection: xpc_connection_t)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/webcontentextension",
                "title": "WebContentExtension",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentextensionconfiguration/accept(connection:)",
                    "title": "func accept(connection: NSXPCConnection) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/webcontentextensionconfiguration",
                "title": "WebContentExtensionConfiguration",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Handling incoming XPC connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/networkingextension/handle(xpcconnection:)",
                    "title": "func handle(xpcConnection: xpc_connection_t)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/networkingextension",
                "title": "NetworkingExtension",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/networkingextensionconfiguration/accept(connection:)",
                    "title": "func accept(connection: NSXPCConnection) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/networkingextensionconfiguration",
                "title": "NetworkingExtensionConfiguration",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Handling incoming XPC connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingextension/handle(xpcconnection:)",
                    "title": "func handle(xpcConnection: xpc_connection_t)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/renderingextension",
                "title": "RenderingExtension",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingextensionconfiguration/accept(connection:)",
                    "title": "func accept(connection: NSXPCConnection) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/renderingextensionconfiguration",
                "title": "RenderingExtensionConfiguration",
                "type": "struct"
              },
              {
                "title": "Host app representations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating and invalidating extension processes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentprocess/init(bundleidentifier:oninterruption:)",
                    "title": "init(bundleIdentifier: String?, onInterruption: () -> Void) async throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentprocess/invalidate()",
                    "title": "func invalidate()",
                    "type": "method"
                  },
                  {
                    "title": "Creating XPC connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentprocess/makelibxpcconnection()",
                    "title": "func makeLibXPCConnection() throws -> xpc_connection_t",
                    "type": "method"
                  },
                  {
                    "title": "Coordinating processes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentprocess/grantcapability(_:)",
                    "title": "func grantCapability(ProcessCapability) throws -> ProcessCapability.Grant",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentprocess/grantcapability(_:invalidationhandler:)",
                    "title": "func grantCapability(ProcessCapability, invalidationHandler: () -> Void) throws -> ProcessCapability.Grant",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/webcontentprocess/createvisibilitypropagationinteraction()",
                    "title": "func createVisibilityPropagationInteraction() -> any UIInteraction",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/webcontentprocess",
                "title": "WebContentProcess",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating and invalidating extension processes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/networkingprocess/init(bundleidentifier:oninterruption:)",
                    "title": "init(bundleIdentifier: String?, onInterruption: () -> Void) async throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/networkingprocess/invalidate()",
                    "title": "func invalidate()",
                    "type": "method"
                  },
                  {
                    "title": "Creating XPC connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/networkingprocess/makelibxpcconnection()",
                    "title": "func makeLibXPCConnection() throws -> xpc_connection_t",
                    "type": "method"
                  },
                  {
                    "title": "Coordinating processes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/networkingprocess/grantcapability(_:)",
                    "title": "func grantCapability(ProcessCapability) throws -> ProcessCapability.Grant",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/networkingprocess/grantcapability(_:invalidationhandler:)",
                    "title": "func grantCapability(ProcessCapability, invalidationHandler: () -> Void) throws -> ProcessCapability.Grant",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/networkingprocess",
                "title": "NetworkingProcess",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating and invalidating extension processes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingprocess/init(bundleidentifier:oninterruption:)",
                    "title": "init(bundleIdentifier: String?, onInterruption: () -> Void) async throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingprocess/invalidate()",
                    "title": "func invalidate()",
                    "type": "method"
                  },
                  {
                    "title": "Creating XPC connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingprocess/makelibxpcconnection()",
                    "title": "func makeLibXPCConnection() throws -> xpc_connection_t",
                    "type": "method"
                  },
                  {
                    "title": "Coordinating processes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingprocess/grantcapability(_:)",
                    "title": "func grantCapability(ProcessCapability) throws -> ProcessCapability.Grant",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingprocess/grantcapability(_:invalidationhandler:)",
                    "title": "func grantCapability(ProcessCapability, invalidationHandler: () -> Void) throws -> ProcessCapability.Grant",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/renderingprocess/createvisibilitypropagationinteraction()",
                    "title": "func createVisibilityPropagationInteraction() -> any UIInteraction",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/renderingprocess",
                "title": "RenderingProcess",
                "type": "struct"
              },
              {
                "title": "Extension capabilities",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Granting capabilities to browser extension processes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/processcapability/background",
                    "title": "case background",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/processcapability/foreground",
                    "title": "case foreground",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/processcapability/suspended",
                    "title": "case suspended",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/processcapability/mediaplaybackandcapture(environment:)",
                    "title": "case mediaPlaybackAndCapture(environment: MediaEnvironment)",
                    "type": "case"
                  },
                  {
                    "children": [
                      {
                        "title": "Testing and changing validity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/processcapability/grant/isvalid",
                        "title": "var isValid: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/browserenginekit/processcapability/grant/invalidate()",
                        "title": "func invalidate()",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/processcapability/grant",
                    "title": "ProcessCapability.Grant",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/browserenginekit/processcapability",
                "title": "ProcessCapability",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating a media environment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/mediaenvironment/init(webpage:)",
                    "title": "init(webPage: URL)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/mediaenvironment/init(xpcrepresentation:)",
                    "title": "init(xpcRepresentation: xpc_object_t) throws",
                    "type": "init"
                  },
                  {
                    "title": "Sending media environments over XPC connections",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/mediaenvironment/createxpcrepresentation()",
                    "title": "func createXPCRepresentation() -> xpc_object_t",
                    "type": "method"
                  },
                  {
                    "title": "Capturing media streams",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/mediaenvironment/activate()",
                    "title": "func activate() throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/mediaenvironment/makecapturesession()",
                    "title": "func makeCaptureSession() throws -> AVCaptureSession",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/mediaenvironment/suspend()",
                    "title": "func suspend() throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/mediaenvironment",
                "title": "MediaEnvironment",
                "type": "struct"
              }
            ],
            "path": "/documentation/browserenginekit/extension-lifecycle",
            "title": "Extension lifecycle",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Access control",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/limiting-resource-access-in-content-extensions",
                "title": "Limiting resource access in web content extensions",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/accessing-files-in-browser-extensions",
                "title": "Accessing files in browser extensions",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/attributing-memory-to-a-content-extension",
                "title": "Attributing memory to a content extension",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Applying sandbox restrictions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxappliable/applyrestrictedsandbox(revision:)",
                    "title": "func applyRestrictedSandbox(revision: RestrictedSandboxRevision)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Sandbox restriction revisions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/revision1",
                        "title": "case revision1",
                        "type": "case"
                      },
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/==(_:_:)",
                        "title": "static func == (RestrictedSandboxRevision, RestrictedSandboxRevision) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/_(_:_:)",
                        "title": "static func < (RestrictedSandboxRevision, RestrictedSandboxRevision) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/allcases-swift.typealias",
                        "title": "RestrictedSandboxRevision.AllCases",
                        "type": "typealias"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/allcases-swift.type.property",
                        "title": "static var allCases: [RestrictedSandboxRevision]",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/'...(_:)-1uguo",
                            "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/'...(_:)-6obr2",
                            "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/'...(_:_:)",
                            "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/'.._(_:)",
                            "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/'.._(_:_:)",
                            "title": "static func ..< (Self, Self) -> Range<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/_(_:_:)-7ie6x",
                            "title": "static func > (Self, Self) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/_=(_:_:)-32afg",
                            "title": "static func >= (Self, Self) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/_=(_:_:)-9eeql",
                            "title": "static func <= (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/comparable-implementations",
                        "title": "Comparable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/browserenginekit/restrictedsandboxrevision/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision",
                    "title": "RestrictedSandboxRevision",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/browserenginekit/restrictedsandboxappliable",
                "title": "RestrictedSandboxAppliable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Sandbox restriction revisions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/revision1",
                    "title": "case revision1",
                    "type": "case"
                  },
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/==(_:_:)",
                    "title": "static func == (RestrictedSandboxRevision, RestrictedSandboxRevision) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/_(_:_:)",
                    "title": "static func < (RestrictedSandboxRevision, RestrictedSandboxRevision) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/allcases-swift.typealias",
                    "title": "RestrictedSandboxRevision.AllCases",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/allcases-swift.type.property",
                    "title": "static var allCases: [RestrictedSandboxRevision]",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/'...(_:)-1uguo",
                        "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/'...(_:)-6obr2",
                        "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/'...(_:_:)",
                        "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/'.._(_:)",
                        "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/'.._(_:_:)",
                        "title": "static func ..< (Self, Self) -> Range<Self>",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/_(_:_:)-7ie6x",
                        "title": "static func > (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/_=(_:_:)-32afg",
                        "title": "static func >= (Self, Self) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/_=(_:_:)-9eeql",
                        "title": "static func <= (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/comparable-implementations",
                    "title": "Comparable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/restrictedsandboxrevision/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/restrictedsandboxrevision/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/restrictedsandboxrevision",
                "title": "RestrictedSandboxRevision",
                "type": "enum"
              }
            ],
            "path": "/documentation/browserenginekit/extension-resources",
            "title": "Extension resources",
            "type": "collection"
          },
          {
            "title": "Web content",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Layer hosting",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/hosting-browser-view-layers-in-the-rendering-extension",
                "title": "Hosting browser view layers in the rendering extension",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating and invalidating a layer hierarchy",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/init()",
                    "title": "init() throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/invalidate()",
                    "title": "func invalidate()",
                    "type": "method"
                  },
                  {
                    "title": "Setting the layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/layer",
                    "title": "var layer: CALayer?",
                    "type": "property"
                  },
                  {
                    "title": "Getting a handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchy/handle",
                    "title": "var handle: LayerHierarchyHandle",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchy",
                "title": "LayerHierarchy",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying remote layer hierarchy",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingview/handle",
                    "title": "var handle: LayerHierarchyHandle?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchyhostingview",
                "title": "LayerHierarchyHostingView",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a transaction coordinator",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/init()",
                    "title": "init() throws",
                    "type": "init"
                  },
                  {
                    "title": "Interprocess communication",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/init(coder:)",
                    "title": "init?(coder: NSCoder)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/init(xpcrepresentation:)",
                    "title": "init(xpcRepresentation: xpc_object_t?) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/createxpcrepresentation()",
                    "title": "func createXPCRepresentation() -> xpc_object_t",
                    "type": "method"
                  },
                  {
                    "title": "Synchronize transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/add(_:)-7day0",
                    "title": "func add(LayerHierarchyHostingView)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/add(_:)-i66q",
                    "title": "func add(LayerHierarchy)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator/commit()",
                    "title": "func commit()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchyhostingtransactioncoordinator",
                "title": "LayerHierarchyHostingTransactionCoordinator",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Interprocess communication",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhandle/init(coder:)",
                    "title": "init?(coder: NSCoder)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhandle/init(xpcrepresentation:)",
                    "title": "init(xpcRepresentation: xpc_object_t?) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/layerhierarchyhandle/createxpcrepresentation()",
                    "title": "func createXPCRepresentation() -> xpc_object_t",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/layerhierarchyhandle",
                "title": "LayerHierarchyHandle",
                "type": "class"
              },
              {
                "title": "Visibility propagation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/propagating-view-visibility-information-to-browser-extensions",
                "title": "Propagating view visibility information to extension processes",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/renderingprocess/createvisibilitypropagationinteraction()",
                "title": "func createVisibilityPropagationInteraction() -> any UIInteraction",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/webcontentprocess/createvisibilitypropagationinteraction()",
                "title": "func createVisibilityPropagationInteraction() -> any UIInteraction",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/view-coordination",
            "title": "View coordination",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Custom text views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/integrating-custom-browser-text-views-with-uikit",
                "title": "Integrating custom browser text views with UIKit",
                "type": "article"
              },
              {
                "path": "/documentation/browserenginekit/support-extended-text-interactions",
                "title": "Supporting extended text interactions",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Updating the text system",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/asyncinputdelegate",
                    "title": "var asyncInputDelegate: (any BETextInputDelegate)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/canperformaction(_:withsender:)",
                    "title": "func canPerformAction(Selector, withSender: Any?) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Handling text input",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/iseditable",
                    "title": "var isEditable: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/handlekeyentry(_:completionhandler:)",
                    "title": "func handleKeyEntry(BEKeyEntry, completionHandler: (BEKeyEntry, Bool) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/shiftkeystatechanged(fromstate:tostate:)",
                    "title": "func shiftKeyStateChanged(fromState: BEKeyModifierFlags, toState: BEKeyModifierFlags)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/text(in:)",
                    "title": "func text(in: UITextRange) -> String?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/offset(from:to:)",
                    "title": "func offset(from: UITextPosition, to: UITextPosition) -> Int",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setbasewritingdirection(_:for:)",
                    "title": "func setBaseWritingDirection(NSWritingDirection, for: UITextRange)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/delete(in:to:)",
                    "title": "func delete(in: UITextStorageDirection, to: UITextGranularity)",
                    "type": "method"
                  },
                  {
                    "title": "Editing and correcting text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/transposecharactersaroundselection()",
                    "title": "func transposeCharactersAroundSelection()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/replacetext(_:withtext:options:completionhandler:)",
                    "title": "func replaceText(String, withText: String, options: BETextReplacementOptions, completionHandler: ([UITextSelectionRect]) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requesttextcontextforautocorrection(completionhandler:)",
                    "title": "func requestTextContextForAutocorrection(completionHandler: (BETextDocumentContext) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requesttextrects(for:withcompletionhandler:)",
                    "title": "func requestTextRects(for: String, withCompletionHandler: ([UITextSelectionRect]) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/automaticallypresenteditmenu",
                    "title": "var automaticallyPresentEditMenu: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requestpreferredarrowdirectionforeditmenu(completionhandler:)",
                    "title": "func requestPreferredArrowDirectionForEditMenu(completionHandler: (UIEditMenuArrowDirection) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/systemwillpresenteditmenu(withanimator:)",
                    "title": "func systemWillPresentEditMenu(withAnimator: any UIEditMenuInteractionAnimating)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/systemwilldismisseditmenu(withanimator:)",
                    "title": "func systemWillDismissEditMenu(withAnimator: any UIEditMenuInteractionAnimating)",
                    "type": "method"
                  },
                  {
                    "title": "Input traits",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/extendedtextinputtraits",
                    "title": "var extendedTextInputTraits: (any BEExtendedTextInputTraits)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textstyling(at:in:)",
                    "title": "func textStyling(at: UITextPosition, in: UITextStorageDirection) -> [NSAttributedString.Key : Any]?",
                    "type": "method"
                  },
                  {
                    "title": "Replacing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/isreplaceallowed",
                    "title": "var isReplaceAllowed: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/replaceselectedtext(_:withtext:)",
                    "title": "func replaceSelectedText(String, withText: String)",
                    "type": "method"
                  },
                  {
                    "title": "Handling text gestures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/updatecurrentselection(to:from:in:)",
                    "title": "func updateCurrentSelection(to: CGPoint, from: BEGestureType, in: UIGestureRecognizer.State)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setselection(from:to:gesture:state:)",
                    "title": "func setSelection(from: CGPoint, to: CGPoint, gesture: BEGestureType, state: UIGestureRecognizer.State)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/adjustselectionboundary(to:touchphase:baseisstart:flags:)",
                    "title": "func adjustSelectionBoundary(to: CGPoint, touchPhase: BESelectionTouchPhase, baseIsStart: Bool, flags: BESelectionFlags)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textinteractiongesture(_:shouldbeginat:)",
                    "title": "func textInteractionGesture(BEGestureType, shouldBeginAt: CGPoint) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Selecting text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectedtext",
                    "title": "var selectedText: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectedtextrange",
                    "title": "var selectedTextRange: UITextRange?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/isselectionatdocumentstart",
                    "title": "var isSelectionAtDocumentStart: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/caretrect(for:)",
                    "title": "func caretRect(for: UITextPosition) -> CGRect",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectionrects(for:)",
                    "title": "func selectionRects(for: UITextRange) -> [UITextSelectionRect]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectwordforreplacement()",
                    "title": "func selectWordForReplacement()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/updateselection(extent:boundary:completionhandler:)",
                    "title": "func updateSelection(extent: CGPoint, boundary: UITextGranularity, completionHandler: (Bool) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selecttext(in:at:completionhandler:)",
                    "title": "func selectText(in: UITextGranularity, at: CGPoint, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectposition(at:completionhandler:)",
                    "title": "func selectPosition(at: CGPoint, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectposition(at:for:completionhandler:)",
                    "title": "func selectPosition(at: CGPoint, for: BETextDocumentRequest, completionHandler: (BETextDocumentContext) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/adjustselection(by:completionhandler:)",
                    "title": "func adjustSelection(by: BEDirectionalTextRange, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/move(byoffset:)",
                    "title": "func move(byOffset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/moveselection(atboundary:in:completionhandler:)",
                    "title": "func moveSelection(atBoundary: UITextGranularity, in: UITextStorageDirection, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selecttextforeditmenuwithlocation(inview:completionhandler:)",
                    "title": "func selectTextForEditMenuWithLocation(inView: CGPoint, completionHandler: (Bool, String?, NSRange) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Marking text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/markedtext",
                    "title": "var markedText: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/attributedmarkedtext",
                    "title": "var attributedMarkedText: NSAttributedString?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/markedtextrange",
                    "title": "var markedTextRange: UITextRange?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/hasmarkedtext",
                    "title": "var hasMarkedText: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setmarkedtext(_:selectedrange:)",
                    "title": "func setMarkedText(String?, selectedRange: NSRange)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/setattributedmarkedtext(_:selectedrange:)",
                    "title": "func setAttributedMarkedText(NSAttributedString?, selectedRange: NSRange)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/unmarktext()",
                    "title": "func unmarkText()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/ispointnearmarkedtext(_:)",
                    "title": "func isPointNearMarkedText(CGPoint) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Document context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/requestdocumentcontext(_:completionhandler:)",
                    "title": "func requestDocumentContext(BETextDocumentRequest, completionHandler: (BETextDocumentContext) -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Dictation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/willinsertfinaldictationresult()",
                    "title": "func willInsertFinalDictationResult()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/replacedictatedtext(_:withtext:)",
                    "title": "func replaceDictatedText(String, withText: String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/didinsertfinaldictationresult()",
                    "title": "func didInsertFinalDictationResult()",
                    "type": "method"
                  },
                  {
                    "title": "Text alternatives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/alternativesforselectedtext()",
                    "title": "func alternativesForSelectedText() -> [BETextAlternatives]?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/add(_:)",
                    "title": "func add(BETextAlternatives)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/insert(_:)-6x7hd",
                    "title": "func insert(BETextAlternatives)",
                    "type": "method"
                  },
                  {
                    "title": "Text placeholders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/inserttextplaceholder(size:completionhandler:)",
                    "title": "func insertTextPlaceholder(size: CGSize, completionHandler: (UITextPlaceholder) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/remove(_:willinserttext:completionhandler:)",
                    "title": "func remove(UITextPlaceholder, willInsertText: Bool, completionHandler: () -> Void)",
                    "type": "method"
                  },
                  {
                    "title": "Text suggestions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/insert(_:)-5iryn",
                    "title": "func insert(BETextSuggestion)",
                    "type": "method"
                  },
                  {
                    "title": "Geometry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textinputview",
                    "title": "var textInputView: UIView",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textfirstrect",
                    "title": "var textFirstRect: CGRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/textlastrect",
                    "title": "var textLastRect: CGRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/unobscuredcontentrect",
                    "title": "var unobscuredContentRect: CGRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/unscaledview",
                    "title": "var unscaledView: UIView",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/selectioncliprect",
                    "title": "var selectionClipRect: CGRect",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/autoscroll(to:)",
                    "title": "func autoscroll(to: CGPoint)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/cancelautoscroll()",
                    "title": "func cancelAutoscroll()",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/keyboardwilldismiss()",
                    "title": "func keyboardWillDismiss()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinput/removetextalternatives()",
                    "title": "func removeTextAlternatives()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinput",
                "title": "BETextInput",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Text selection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/selectionwillchange(for:)",
                    "title": "func selectionWillChange(for: any BETextInput)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/selectiondidchange(for:)",
                    "title": "func selectionDidChange(for: any BETextInput)",
                    "type": "method"
                  },
                  {
                    "title": "Deferring actions to the text system",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/shoulddefereventhandlingtosystem(for:context:)",
                    "title": "func shouldDeferEventHandlingToSystem(for: any BETextInput, context: BEKeyEntryContext) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/textinput(_:deferreplacetextactiontosystem:)",
                    "title": "func textInput(any BETextInput, deferReplaceTextActionToSystem: Any)",
                    "type": "method"
                  },
                  {
                    "title": "Providing completion suggestions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/textinput(_:setcandidatesuggestions:)",
                    "title": "func textInput(any BETextInput, setCandidateSuggestions: [BETextSuggestion]?)",
                    "type": "method"
                  },
                  {
                    "title": "Removing stored context information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinputdelegate/invalidatetextentrycontext(for:)",
                    "title": "func invalidateTextEntryContext(for: any BETextInput)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinputdelegate",
                "title": "BETextInputDelegate",
                "type": "protocol"
              },
              {
                "title": "Interaction responses",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Text selection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/delegate",
                    "title": "var delegate: (any BETextInteractionDelegate)?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Text selection changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextinteractiondelegate/systemwillchangeselection(for:)",
                        "title": "func systemWillChangeSelection(for: BETextInteraction)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextinteractiondelegate/systemdidchangeselection(for:)",
                        "title": "func systemDidChangeSelection(for: BETextInteraction)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextinteractiondelegate",
                    "title": "BETextInteractionDelegate",
                    "type": "protocol"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/textselectiondisplayinteraction",
                    "title": "var textSelectionDisplayInteraction: UITextSelectionDisplayInteraction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/selectionboundaryadjusted(to:touchphase:flags:)",
                    "title": "func selectionBoundaryAdjusted(to: CGPoint, touchPhase: BESelectionTouchPhase, flags: BESelectionFlags)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/selectionchangedwithgesture(at:gesture:state:flags:)",
                    "title": "func selectionChangedWithGesture(at: CGPoint, gesture: BEGestureType, state: UIGestureRecognizer.State, flags: BESelectionFlags)",
                    "type": "method"
                  },
                  {
                    "title": "Menus",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/presenteditmenuforselection()",
                    "title": "func presentEditMenuForSelection()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/dismisseditmenuforselection()",
                    "title": "func dismissEditMenuForSelection()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/contextmenuinteraction",
                    "title": "var contextMenuInteraction: UIContextMenuInteraction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/contextmenuinteractiondelegate",
                    "title": "var contextMenuInteractionDelegate: (any UIContextMenuInteractionDelegate)?",
                    "type": "property"
                  },
                  {
                    "title": "Text replacements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/addshortcut(fortext:from:)",
                    "title": "func addShortcut(forText: String, from: CGRect)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/showreplacements(fortext:)",
                    "title": "func showReplacements(forText: String)",
                    "type": "method"
                  },
                  {
                    "title": "Sharing and defining text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/share(text:from:)",
                    "title": "func share(text: String, from: CGRect)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/showdictionary(fortextincontext:definingtextinrange:from:)",
                    "title": "func showDictionary(forTextInContext: String, definingTextInRange: NSRange, from: CGRect)",
                    "type": "method"
                  },
                  {
                    "title": "Translation and transliteration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/translate(text:from:)",
                    "title": "func translate(text: String, from: CGRect)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/transliteratechinese(fortext:)",
                    "title": "func transliterateChinese(forText: String)",
                    "type": "method"
                  },
                  {
                    "title": "UI updates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/editabilitychanged()",
                    "title": "func editabilityChanged()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteraction/refreshkeyboardui()",
                    "title": "func refreshKeyboardUI()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinteraction",
                "title": "BETextInteraction",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Text selection changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteractiondelegate/systemwillchangeselection(for:)",
                    "title": "func systemWillChangeSelection(for: BETextInteraction)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextinteractiondelegate/systemdidchangeselection(for:)",
                    "title": "func systemDidChangeSelection(for: BETextInteraction)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextinteractiondelegate",
                "title": "BETextInteractionDelegate",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Finding and replacing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/findselected(_:)",
                    "title": "func findSelected(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/promptforreplace(_:)",
                    "title": "func promptForReplace(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/replace(_:)",
                    "title": "func replace(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/addshortcut(_:)",
                    "title": "func addShortcut(Any?)",
                    "type": "method"
                  },
                  {
                    "title": "Defining and sharing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/lookup(_:)",
                    "title": "func lookup(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/share(_:)",
                    "title": "func share(Any?)",
                    "type": "method"
                  },
                  {
                    "title": "Translating and transliterating text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/translate(_:)",
                    "title": "func translate(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/transliteratechinese(_:)",
                    "title": "func transliterateChinese(Any?)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/berespondereditactions",
                "title": "BEResponderEditActions",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/doubletap",
                    "title": "case doubleTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/doubletapandhold",
                    "title": "case doubleTapAndHold",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/forcetouch",
                    "title": "case forceTouch",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/imphraseboundarydrag",
                    "title": "case imPhraseBoundaryDrag",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/loupe",
                    "title": "case loupe",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/onefingerdoubletap",
                    "title": "case oneFingerDoubleTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/onefingertap",
                    "title": "case oneFingerTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/onefingertripletap",
                    "title": "case oneFingerTripleTap",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/twofingerrangedselectgesture",
                    "title": "case twoFingerRangedSelectGesture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/twofingersingletap",
                    "title": "case twoFingerSingleTap",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/begesturetype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/begesturetype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/begesturetype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/begesturetype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/begesturetype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/begesturetype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/begesturetype",
                "title": "BEGestureType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Finding and replacing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/findselected(_:)",
                    "title": "func findSelected(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/promptforreplace(_:)",
                    "title": "func promptForReplace(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/replace(_:)",
                    "title": "func replace(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/addshortcut(_:)",
                    "title": "func addShortcut(Any?)",
                    "type": "method"
                  },
                  {
                    "title": "Defining and sharing text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/lookup(_:)",
                    "title": "func lookup(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/share(_:)",
                    "title": "func share(Any?)",
                    "type": "method"
                  },
                  {
                    "title": "Translating and transliterating text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/translate(_:)",
                    "title": "func translate(Any?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/berespondereditactions/transliteratechinese(_:)",
                    "title": "func transliterateChinese(Any?)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/berespondereditactions",
                "title": "BEResponderEditActions",
                "type": "protocol"
              },
              {
                "title": "Text selection",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/extend(in:)",
                    "title": "func extend(in: UITextLayoutDirection)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/extend(in:by:)",
                    "title": "func extend(in: UITextStorageDirection, by: UITextGranularity)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/move(in:)",
                    "title": "func move(in: UITextLayoutDirection)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextselectiondirectionnavigation/move(in:by:)",
                    "title": "func move(in: UITextStorageDirection, by: UITextGranularity)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextselectiondirectionnavigation",
                "title": "BETextSelectionDirectionNavigation",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/phraseboundarychanged",
                    "title": "static var phraseBoundaryChanged: BESelectionFlags",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/selectionflipped",
                    "title": "static var selectionFlipped: BESelectionFlags",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectionflags/wordisneartap",
                    "title": "static var wordIsNearTap: BESelectionFlags",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/beselectionflags/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/beselectionflags/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectionflags/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/beselectionflags/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/beselectionflags",
                "title": "BESelectionFlags",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/ended",
                    "title": "case ended",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/endedmovingbackward",
                    "title": "case endedMovingBackward",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/endedmovingforward",
                    "title": "case endedMovingForward",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/endednotmoving",
                    "title": "case endedNotMoving",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/moved",
                    "title": "case moved",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/started",
                    "title": "case started",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beselectiontouchphase/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectiontouchphase/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/beselectiontouchphase/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectiontouchphase/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/beselectiontouchphase/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/beselectiontouchphase/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/beselectiontouchphase",
                "title": "BESelectionTouchPhase",
                "type": "enum"
              },
              {
                "title": "Keyboard input",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the key",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/key",
                    "title": "var key: UIKey",
                    "type": "property"
                  },
                  {
                    "title": "Getting information about the keypress",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/state",
                    "title": "var state: BEKeyEntry.KeyPressState",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Key states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeyentry/keypressstate/down",
                        "title": "case down",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeyentry/keypressstate/up",
                        "title": "case up",
                        "type": "case"
                      },
                      {
                        "title": "Creating a key-press state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeyentry/keypressstate/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/browserenginekit/bekeyentry/keypressstate/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/browserenginekit/bekeyentry/keypressstate/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/browserenginekit/bekeyentry/keypressstate/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/browserenginekit/bekeyentry/keypressstate/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/browserenginekit/bekeyentry/keypressstate/rawrepresentable-implementations",
                        "title": "RawRepresentable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/browserenginekit/bekeyentry/keypressstate",
                    "title": "BEKeyEntry.KeyPressState",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/iskeyrepeating",
                    "title": "var isKeyRepeating: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentry/timestamp",
                    "title": "var timestamp: TimeInterval",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/bekeyentry",
                "title": "BEKeyEntry",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a key entry context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/init(keyentry:)",
                    "title": "init(keyEntry: BEKeyEntry)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the information about the key event",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/keyentry",
                    "title": "var keyEntry: BEKeyEntry",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/shouldinsertcharacter",
                    "title": "var shouldInsertCharacter: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/shouldevaluateforinputsystemhandling",
                    "title": "var shouldEvaluateForInputSystemHandling: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Getting information about the text document",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeyentrycontext/isdocumenteditable",
                    "title": "var isDocumentEditable: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/bekeyentrycontext",
                "title": "BEKeyEntryContext",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting caps-shift information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeymodifierflags/capslock",
                    "title": "case capsLock",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeymodifierflags/shift",
                    "title": "case shift",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeymodifierflags/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "title": "Initializing the flags",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bekeymodifierflags/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeymodifierflags/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/bekeymodifierflags/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeymodifierflags/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bekeymodifierflags/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/bekeymodifierflags/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/bekeymodifierflags",
                "title": "BEKeyModifierFlags",
                "type": "enum"
              },
              {
                "title": "Replacements and AutoFill",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beautofilltextsuggestion/contents",
                    "title": "var contents: [UITextContentType : String]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/beautofilltextsuggestion",
                "title": "BEAutoFillTextSuggestion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextalternatives/alternativestrings",
                    "title": "var alternativeStrings: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextalternatives/primarystring",
                    "title": "var primaryString: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/betextalternatives",
                "title": "BETextAlternatives",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a text document context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/init(attributedselectedtext:contextbefore:contextafter:markedtext:selectedrangeinmarkedtext:)",
                    "title": "init(attributedSelectedText: NSAttributedString?, contextBefore: NSAttributedString?, contextAfter: NSAttributedString?, markedText: NSAttributedString?, selectedRangeInMarkedText: NSRange)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/init(selectedtext:contextbefore:contextafter:markedtext:selectedrangeinmarkedtext:)",
                    "title": "init(selectedText: String?, contextBefore: String?, contextAfter: String?, markedText: String?, selectedRangeInMarkedText: NSRange)",
                    "type": "init"
                  },
                  {
                    "title": "Getting information about the selected range",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/autocorrectedranges",
                    "title": "var autocorrectedRanges: [NSValue]",
                    "type": "property"
                  },
                  {
                    "title": "Adding text rectangles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentcontext/addtextrect(_:forcharacterrange:)",
                    "title": "func addTextRect(CGRect, forCharacterRange: NSRange)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/betextdocumentcontext",
                "title": "BETextDocumentContext",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/granularitycount",
                    "title": "var granularityCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.property",
                    "title": "var options: BETextDocumentRequest.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/surroundinggranularity",
                    "title": "var surroundingGranularity: UITextGranularity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/betextdocumentrequest",
                "title": "BETextDocumentRequest",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/attributedtext",
                    "title": "static var attributedText: BETextDocumentRequest.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/autocorrectedranges",
                    "title": "static var autocorrectedRanges: BETextDocumentRequest.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/markedtextrects",
                    "title": "static var markedTextRects: BETextDocumentRequest.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/text",
                    "title": "static var text: BETextDocumentRequest.Options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/textrects",
                    "title": "static var textRects: BETextDocumentRequest.Options",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/betextdocumentrequest/options-swift.struct",
                "title": "BETextDocumentRequest.Options",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a text suggestion",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextsuggestion/init(inputtext:)",
                    "title": "init(inputText: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the suggested text",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextsuggestion/inputtext",
                    "title": "var inputText: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/betextsuggestion",
                "title": "BETextSuggestion",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextreplacementoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/betextreplacementoptions/addunderline",
                    "title": "static var addUnderline: BETextReplacementOptions",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextreplacementoptions/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextreplacementoptions/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/browserenginekit/betextreplacementoptions/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/betextreplacementoptions/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/betextreplacementoptions",
                "title": "BETextReplacementOptions",
                "type": "struct"
              },
              {
                "title": "Information about text",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/insertionpointcolor",
                    "title": "var insertionPointColor: UIColor?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/issinglelinedocument",
                    "title": "var isSingleLineDocument: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/istypingadaptationenabled",
                    "title": "var isTypingAdaptationEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/selectionhandlecolor",
                    "title": "var selectionHandleColor: UIColor?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beextendedtextinputtraits/selectionhighlightcolor",
                    "title": "var selectionHighlightColor: UIColor?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/beextendedtextinputtraits",
                "title": "BEExtendedTextInputTraits",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedirectionaltextrange/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedirectionaltextrange/init(offset:length:)",
                    "title": "init(offset: Int, length: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedirectionaltextrange/length",
                    "title": "var length: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedirectionaltextrange/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/bedirectionaltextrange",
                "title": "BEDirectionalTextRange",
                "type": "struct"
              }
            ],
            "path": "/documentation/browserenginekit/text-interaction",
            "title": "Text interaction",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creating a web app manifest",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bewebappmanifest/init(jsondata:manifesturl:)-4zjpz",
                "title": "init?(JSONData: Data, manifestURL: URL)",
                "type": "init"
              },
              {
                "path": "/documentation/browserenginekit/bewebappmanifest/init(jsondata:manifesturl:)",
                "title": "init?(jsonData: Data, manifestURL: URL)",
                "type": "init"
              },
              {
                "title": "Getting manifest information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bewebappmanifest/jsondata",
                "title": "var jsonData: Data",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/bewebappmanifest/manifesturl",
                "title": "var manifestURL: URL",
                "type": "property"
              }
            ],
            "path": "/documentation/browserenginekit/bewebappmanifest",
            "title": "BEWebAppManifest",
            "type": "class"
          },
          {
            "title": "Scroll view interaction",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Responding to scroll updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollview/delegate",
                "title": "var delegate: (any BEScrollViewDelegate)?",
                "type": "property"
              }
            ],
            "path": "/documentation/browserenginekit/bescrollview",
            "title": "BEScrollView",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Retrieving scroll state information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/timestamp",
                "title": "var timestamp: TimeInterval",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.property",
                "title": "var phase: BEScrollViewScrollUpdate.Phase",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/began",
                    "title": "case began",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/changed",
                    "title": "case changed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/ended",
                    "title": "case ended",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/phase-swift.enum",
                "title": "BEScrollViewScrollUpdate.Phase",
                "type": "enum"
              },
              {
                "title": "Transforming coordinates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/location(in:)",
                "title": "func location(in: UIView?) -> CGPoint",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewscrollupdate/translation(in:)",
                "title": "func translation(in: UIView?) -> CGPoint",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/bescrollviewscrollupdate",
            "title": "BEScrollViewScrollUpdate",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Nesting sibling scroll views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewdelegate/parentscrollview(for:)",
                "title": "func parentScrollView(for: BEScrollView) -> BEScrollView?",
                "type": "method"
              },
              {
                "title": "Handling scroll events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bescrollviewdelegate/scrollview(_:handle:completion:)",
                "title": "func scrollView(BEScrollView, handle: BEScrollViewScrollUpdate, completion: (Bool) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/bescrollviewdelegate",
            "title": "BEScrollViewDelegate",
            "type": "protocol"
          },
          {
            "title": "Drag interaction",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a drag interaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteraction/init(delegate:)",
                "title": "init(delegate: any BEDragInteractionDelegate)",
                "type": "init"
              },
              {
                "title": "Handling drag gestures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteraction/delegate",
                "title": "var delegate: (any BEDragInteractionDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Participating in drag gestures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:prepare:completion:)",
                    "title": "func dragInteraction(BEDragInteraction, prepare: any UIDragSession, completion: () -> Bool)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:itemsforaddingto:fortouchat:completion:)",
                    "title": "func dragInteraction(BEDragInteraction, itemsForAddingTo: any UIDragSession, forTouchAt: CGPoint, completion: ([UIDragItem]) -> Bool)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/bedraginteractiondelegate",
                "title": "BEDragInteractionDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/browserenginekit/bedraginteraction",
            "title": "BEDragInteraction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Participating in drag gestures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:prepare:completion:)",
                "title": "func dragInteraction(BEDragInteraction, prepare: any UIDragSession, completion: () -> Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/bedraginteractiondelegate/draginteraction(_:itemsforaddingto:fortouchat:completion:)",
                "title": "func dragInteraction(BEDragInteraction, itemsForAddingTo: any UIDragSession, forTouchAt: CGPoint, completion: ([UIDragItem]) -> Bool)",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/bedraginteractiondelegate",
            "title": "BEDragInteractionDelegate",
            "type": "protocol"
          },
          {
            "title": "Context menus",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a context menu configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/becontextmenuconfiguration/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Fulfilling the configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/becontextmenuconfiguration/fulfill(using:)",
                "title": "func fulfill(using: UIContextMenuConfiguration?) -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/becontextmenuconfiguration",
            "title": "BEContextMenuConfiguration",
            "type": "class"
          },
          {
            "title": "Accessibility",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Text positions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitynexttextmarker(_:)",
                "title": "func accessibilityNextTextMarker(BEAccessibilityTextMarker) -> BEAccessibilityTextMarker?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilityprevioustextmarker(_:)",
                "title": "func accessibilityPreviousTextMarker(BEAccessibilityTextMarker) -> BEAccessibilityTextMarker?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitylinestartmarker(for:)",
                "title": "func accessibilityLineStartMarker(for: BEAccessibilityTextMarker) -> BEAccessibilityTextMarker?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitylineendmarker(for:)",
                "title": "func accessibilityLineEndMarker(for: BEAccessibilityTextMarker) -> BEAccessibilityTextMarker?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitymarker(for:)",
                "title": "func accessibilityMarker(for: CGPoint) -> BEAccessibilityTextMarker?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarker(forposition:)",
                "title": "func accessibilityTextMarker(forPosition: Int) -> BEAccessibilityTextMarker?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarker",
                "title": "BEAccessibilityTextMarker",
                "type": "class"
              },
              {
                "title": "Text ranges",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitybounds(for:)",
                "title": "func accessibilityBounds(for: BEAccessibilityTextMarker.Range) -> CGRect",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarkerrange()",
                "title": "func accessibilityTextMarkerRange() -> BEAccessibilityTextMarker.Range",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarkerrangeforcurrentselection()",
                "title": "func accessibilityTextMarkerRangeForCurrentSelection() -> BEAccessibilityTextMarker.Range?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitytextmarkerrange(for:)",
                "title": "func accessibilityTextMarkerRange(for: NSRange) -> BEAccessibilityTextMarker.Range?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilityrange(for:)",
                "title": "func accessibilityRange(for: BEAccessibilityTextMarker.Range) -> NSRange",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Range boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitytextmarker/range/startmarker",
                    "title": "var startMarker: BEAccessibilityTextMarker",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitytextmarker/range/endmarker",
                    "title": "var endMarker: BEAccessibilityTextMarker",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/beaccessibilitytextmarker/range",
                "title": "BEAccessibilityTextMarker.Range",
                "type": "class"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport/accessibilitycontent(for:)",
                "title": "func accessibilityContent(for: BEAccessibilityTextMarker.Range) -> String?",
                "type": "method"
              }
            ],
            "path": "/documentation/browserenginekit/beaccessibilitytextmarkersupport",
            "title": "BEAccessibilityTextMarkerSupport",
            "type": "protocol"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/valuechangednotification",
            "title": "static var valueChangedNotification: UIAccessibility.Notification",
            "type": "property"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/selectionchangednotification",
            "title": "static var selectionChangedNotification: UIAccessibility.Notification",
            "type": "property"
          },
          {
            "children": [
              {
                "title": "Container types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/landmark",
                "title": "static var landmark: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/table",
                "title": "static var table: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/list",
                "title": "static var list: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/fieldset",
                "title": "static var fieldset: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/dialog",
                "title": "static var dialog: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/tree",
                "title": "static var tree: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/frame",
                "title": "static var frame: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/article",
                "title": "static var article: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/semanticgroup",
                "title": "static var semanticGroup: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/scrollarea",
                "title": "static var scrollArea: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/alert",
                "title": "static var alert: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/descriptionlist",
                "title": "static var descriptionList: BEAccessibilityContainerType",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/init(rawvalue:)",
                "title": "init(rawValue: UInt)",
                "type": "init"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/contains(_:)",
                    "title": "func contains(Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/formintersection(_:)",
                    "title": "func formIntersection(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/formsymmetricdifference(_:)",
                    "title": "func formSymmetricDifference(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/formunion(_:)",
                    "title": "func formUnion(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/insert(_:)",
                    "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/intersection(_:)",
                    "title": "func intersection(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/remove(_:)",
                    "title": "func remove(Self.Element) -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/symmetricdifference(_:)",
                    "title": "func symmetricDifference(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/union(_:)",
                    "title": "func union(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/update(with:)",
                    "title": "func update(with: Self.Element) -> Self.Element?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/optionset-implementations",
                "title": "OptionSet Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/init(_:)",
                    "title": "init<S>(S)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/init(arrayliteral:)",
                    "title": "init(arrayLiteral: Self.Element...)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/isempty",
                    "title": "var isEmpty: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/isdisjoint(with:)",
                    "title": "func isDisjoint(with: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/isstrictsubset(of:)",
                    "title": "func isStrictSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/isstrictsuperset(of:)",
                    "title": "func isStrictSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/issubset(of:)",
                    "title": "func isSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/issuperset(of:)",
                    "title": "func isSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/subtract(_:)",
                    "title": "func subtract(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitycontainertype/subtracting(_:)",
                    "title": "func subtracting(Self) -> Self",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/beaccessibilitycontainertype/setalgebra-implementations",
                "title": "SetAlgebra Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/browserenginekit/beaccessibilitycontainertype",
            "title": "BEAccessibilityContainerType",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Element states",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/false",
                "title": "case `false`",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/true",
                "title": "case `true`",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/mixed",
                "title": "case mixed",
                "type": "case"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/undefined",
                "title": "case undefined",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitypressedstate/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitypressedstate/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/beaccessibilitypressedstate/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/browserenginekit/beaccessibilitypressedstate/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/browserenginekit/beaccessibilitypressedstate",
            "title": "BEAccessibilityPressedState",
            "type": "enum"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/menuitem",
            "title": "static var menuItem: UIAccessibilityTraits",
            "type": "property"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/popupbutton",
            "title": "static var popUpButton: UIAccessibilityTraits",
            "type": "property"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/radiobutton",
            "title": "static var radioButton: UIAccessibilityTraits",
            "type": "property"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/readonly",
            "title": "static var readOnly: UIAccessibilityTraits",
            "type": "property"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility/visited",
            "title": "static var visited: UIAccessibilityTraits",
            "type": "property"
          },
          {
            "title": "Just-in-time code compilation",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/protecting-code-compiled-just-in-time",
            "title": "Protecting code compiled just in time",
            "type": "article"
          },
          {
            "path": "/documentation/browserenginekit/improving-control-flow-integrity-with-pointer-authentication",
            "title": "Improving control flow integrity with pointer authentication",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/browserenginecore/be_jit_write_protect_tag",
            "title": "var BE_JIT_WRITE_PROTECT_TAG: Int",
            "type": "var"
          },
          {
            "title": "Downloads",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/downloading-files-in-a-web-browser",
            "title": "Downloading files in a web browser with an alternative browser engine",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating a download monitor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/init(sourceurl:destinationurl:observedprogress:liveactivityaccesstoken:)",
                "title": "init(sourceURL: URL, destinationURL: URL, observedProgress: Progress, liveActivityAccessToken: Data)",
                "type": "init"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/createaccesstoken()",
                "title": "static func createAccessToken() -> Data?",
                "type": "method"
              },
              {
                "title": "Creating a download placeholder",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/usedownloadsfolder(placeholdertype:finalfilecreatedhandler:)",
                "title": "func useDownloadsFolder(placeholderType: UTType?, finalFileCreatedHandler: (BEDownloadMonitor.Location?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting information about a location",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/location/url",
                    "title": "let url: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/location/bookmarkdata",
                    "title": "let bookmarkData: Data",
                    "type": "property"
                  }
                ],
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/location",
                "title": "BEDownloadMonitor.Location",
                "type": "class"
              },
              {
                "title": "Reporting progress to the system",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/beginmonitoring()",
                "title": "func beginMonitoring() async throws -> BEDownloadMonitor.Location?",
                "type": "method"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/resumemonitoring(placeholderurl:)",
                "title": "func resumeMonitoring(placeholderURL: URL) async throws",
                "type": "method"
              },
              {
                "title": "Getting information about a download",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/sourceurl",
                "title": "let sourceURL: URL",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/destinationurl",
                "title": "let destinationURL: URL",
                "type": "property"
              },
              {
                "title": "Identifying a download",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/id-swift.property",
                "title": "let id: UUID",
                "type": "property"
              },
              {
                "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls/id-swift.typealias",
                "title": "BEDownloadMonitor.ID",
                "type": "typealias"
              }
            ],
            "path": "/documentation/browserenginekit/bedownloadmonitor-9bwls",
            "title": "BEDownloadMonitor",
            "type": "class"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/bemediaenvironment-15xci",
            "title": "BEMediaEnvironment",
            "type": "class"
          },
          {
            "path": "/documentation/browserenginekit/beprocesscapability-76ijx",
            "title": "BEProcessCapability",
            "type": "class"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/browserenginekit/beaccessibility",
            "title": "BEAccessibility",
            "type": "struct"
          }
        ],
        "path": "/documentation/browserenginekit",
        "title": "BrowserEngineKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
