{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Adopting System",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/system/adopting-file-operations",
            "title": "Adopting Swift File Operations",
            "type": "article"
          },
          {
            "path": "/documentation/system/adopting-file-options",
            "title": "Adopting Swift File Options",
            "type": "article"
          },
          {
            "path": "/documentation/system/adopting-errno",
            "title": "Adopting Swift Error Constants",
            "type": "article"
          },
          {
            "title": "Files",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/system",
        "title": "System",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Adopting System",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/system/adopting-file-operations",
            "title": "Adopting Swift File Operations",
            "type": "article"
          },
          {
            "path": "/documentation/system/adopting-file-options",
            "title": "Adopting Swift File Options",
            "type": "article"
          },
          {
            "path": "/documentation/system/adopting-errno",
            "title": "Adopting Swift Error Constants",
            "type": "article"
          },
          {
            "title": "Files",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/system",
        "title": "System",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Adopting System",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/system/adopting-file-operations",
            "title": "Adopting Swift File Operations",
            "type": "article"
          },
          {
            "path": "/documentation/system/adopting-file-options",
            "title": "Adopting Swift File Options",
            "type": "article"
          },
          {
            "path": "/documentation/system/adopting-errno",
            "title": "Adopting Swift Error Constants",
            "type": "article"
          },
          {
            "title": "Files",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a File Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/init(rawvalue:)",
                "title": "init(rawValue: CInt)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filedescriptor/rawvalue-swift.property",
                "title": "let rawValue: CInt",
                "type": "property"
              },
              {
                "path": "/documentation/system/filedescriptor/rawvalue-swift.typealias",
                "title": "FileDescriptor.RawValue",
                "type": "typealias"
              },
              {
                "title": "Opening a File",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/open(_:_:options:permissions:retryoninterrupt:)-4ql4b",
                "title": "static func open(FilePath, FileDescriptor.AccessMode, options: FileDescriptor.OpenOptions, permissions: FilePermissions?, retryOnInterrupt: Bool) throws -> FileDescriptor",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/open(_:_:options:permissions:retryoninterrupt:)-5t3xn",
                "title": "static func open(UnsafePointer<CChar>, FileDescriptor.AccessMode, options: FileDescriptor.OpenOptions, permissions: FilePermissions?, retryOnInterrupt: Bool) throws -> FileDescriptor",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an Access Mode",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/readonly",
                    "title": "static var readOnly: FileDescriptor.AccessMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/readwrite",
                    "title": "static var readWrite: FileDescriptor.AccessMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/writeonly",
                    "title": "static var writeOnly: FileDescriptor.AccessMode",
                    "type": "property"
                  },
                  {
                    "title": "Debugging",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/description",
                    "title": "var description: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  },
                  {
                    "title": "Working with C APIs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/init(rawvalue:)",
                    "title": "init(rawValue: CInt)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/rawvalue-swift.property",
                    "title": "var rawValue: CInt",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/rawvalue-swift.typealias",
                    "title": "FileDescriptor.AccessMode.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Comparing Access Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Encoding Access Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/accessmode/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/accessmode/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/accessmode/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/accessmode/description",
                        "title": "var description: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/accessmode/customstringconvertible-implementations",
                    "title": "CustomStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/accessmode/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/accessmode/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/accessmode/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/accessmode/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/accessmode/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/accessmode/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/accessmode/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/system/filedescriptor/accessmode",
                "title": "FileDescriptor.AccessMode",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/append",
                    "title": "static var append: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/closeonexec",
                    "title": "static var closeOnExec: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/create",
                    "title": "static var create: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/eventonly",
                    "title": "static var eventOnly: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/exclusivecreate",
                    "title": "static var exclusiveCreate: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/exclusivelock",
                    "title": "static var exclusiveLock: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/nofollow",
                    "title": "static var noFollow: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/nonblocking",
                    "title": "static var nonBlocking: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/sharedlock",
                    "title": "static var sharedLock: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/symlink",
                    "title": "static var symlink: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/truncate",
                    "title": "static var truncate: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "title": "Interacting with C APIs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/init(rawvalue:)",
                    "title": "init(rawValue: CInt)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/rawvalue-swift.property",
                    "title": "var rawValue: CInt",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/rawvalue-swift.typealias",
                    "title": "FileDescriptor.OpenOptions.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Debugging",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/description",
                    "title": "var description: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  },
                  {
                    "title": "Comparing Open Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Encoding Open Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Performing Set Operations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/init(_:)",
                    "title": "init<S>(S)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/init(arrayliteral:)",
                    "title": "init(arrayLiteral: Self.Element...)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/contains(_:)",
                    "title": "func contains(Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/formintersection(_:)",
                    "title": "func formIntersection(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/formintersection(_:)",
                    "title": "func formIntersection(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/formsymmetricdifference(_:)",
                    "title": "func formSymmetricDifference(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/formunion(_:)",
                    "title": "func formUnion(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/insert(_:)",
                    "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/intersection(_:)",
                    "title": "func intersection(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/isdisjoint(with:)",
                    "title": "func isDisjoint(with: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/isempty",
                    "title": "var isEmpty: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/isstrictsubset(of:)",
                    "title": "func isStrictSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/isstrictsuperset(of:)",
                    "title": "func isStrictSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/issubset(of:)",
                    "title": "func isSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/issuperset(of:)",
                    "title": "func isSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/remove(_:)",
                    "title": "func remove(Self.Element) -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/subtract(_:)",
                    "title": "func subtract(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/subtracting(_:)",
                    "title": "func subtracting(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/symmetricdifference(_:)",
                    "title": "func symmetricDifference(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/union(_:)",
                    "title": "func union(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/update(with:)",
                    "title": "func update(with: Self.Element) -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/arrayliteralelement",
                    "title": "FileDescriptor.OpenOptions.ArrayLiteralElement",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/element",
                    "title": "FileDescriptor.OpenOptions.Element",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/openoptions/directory",
                    "title": "static var directory: FileDescriptor.OpenOptions",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/openoptions/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/description",
                        "title": "var description: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/openoptions/customstringconvertible-implementations",
                    "title": "CustomStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/openoptions/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/openoptions/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/openoptions/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/openoptions/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/openoptions/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/system/filedescriptor/openoptions",
                "title": "FileDescriptor.OpenOptions",
                "type": "struct"
              },
              {
                "title": "Reading From a File",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/read(into:retryoninterrupt:)",
                "title": "func read(into: UnsafeMutableRawBufferPointer, retryOnInterrupt: Bool) throws -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/read(fromabsoluteoffset:into:retryoninterrupt:)",
                "title": "func read(fromAbsoluteOffset: Int64, into: UnsafeMutableRawBufferPointer, retryOnInterrupt: Bool) throws -> Int",
                "type": "method"
              },
              {
                "title": "Changing a File’s Offset",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/seek(offset:from:)",
                "title": "func seek(offset: Int64, from: FileDescriptor.SeekOrigin) throws -> Int64",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a Seek Origin",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/current",
                    "title": "static var current: FileDescriptor.SeekOrigin",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/end",
                    "title": "static var end: FileDescriptor.SeekOrigin",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/nexthole",
                    "title": "static var nextHole: FileDescriptor.SeekOrigin",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/nextdata",
                    "title": "static var nextData: FileDescriptor.SeekOrigin",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/start",
                    "title": "static var start: FileDescriptor.SeekOrigin",
                    "type": "property"
                  },
                  {
                    "title": "Debugging",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/description",
                    "title": "var description: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  },
                  {
                    "title": "Working with C APIs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/init(rawvalue:)",
                    "title": "init(rawValue: CInt)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/rawvalue-swift.property",
                    "title": "var rawValue: CInt",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/rawvalue-swift.typealias",
                    "title": "FileDescriptor.SeekOrigin.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Comparing Seek Origins",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Encoding Seek Origins",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/seekorigin/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/seekorigin/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/seekorigin/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/seekorigin/description",
                        "title": "var description: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/seekorigin/customstringconvertible-implementations",
                    "title": "CustomStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/seekorigin/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/seekorigin/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/seekorigin/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/seekorigin/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/seekorigin/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filedescriptor/seekorigin/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filedescriptor/seekorigin/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/system/filedescriptor/seekorigin",
                "title": "FileDescriptor.SeekOrigin",
                "type": "struct"
              },
              {
                "title": "Writing To A File",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/write(_:retryoninterrupt:)",
                "title": "func write(UnsafeRawBufferPointer, retryOnInterrupt: Bool) throws -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/write(toabsoluteoffset:_:retryoninterrupt:)",
                "title": "func write(toAbsoluteOffset: Int64, UnsafeRawBufferPointer, retryOnInterrupt: Bool) throws -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/writeall(_:)",
                "title": "func writeAll<S>(S) throws -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/writeall(toabsoluteoffset:_:)",
                "title": "func writeAll<S>(toAbsoluteOffset: Int64, S) throws -> Int",
                "type": "method"
              },
              {
                "title": "Closing a File",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/close()",
                "title": "func close() throws",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/closeafter(_:)",
                "title": "func closeAfter<R>(() throws -> R) throws -> R",
                "type": "method"
              },
              {
                "title": "Encoding File Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "path": "/documentation/system/filedescriptor/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "title": "Comparing File Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/!=(_:_:)",
                "title": "static func != (Self, Self) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/system/filedescriptor/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/duplicate(as:retryoninterrupt:)",
                "title": "func duplicate(as: FileDescriptor?, retryOnInterrupt: Bool) throws -> FileDescriptor",
                "type": "method"
              },
              {
                "path": "/documentation/system/filedescriptor/resize(to:retryoninterrupt:)",
                "title": "func resize(to: Int64, retryOnInterrupt: Bool) throws",
                "type": "method"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/standarderror",
                "title": "static var standardError: FileDescriptor",
                "type": "property"
              },
              {
                "path": "/documentation/system/filedescriptor/standardinput",
                "title": "static var standardInput: FileDescriptor",
                "type": "property"
              },
              {
                "path": "/documentation/system/filedescriptor/standardoutput",
                "title": "static var standardOutput: FileDescriptor",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filedescriptor/pipe()",
                "title": "static func pipe() throws -> (readEnd: FileDescriptor, writeEnd: FileDescriptor)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/system/filedescriptor/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filedescriptor/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/filedescriptor/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/system/filedescriptor",
            "title": "FileDescriptor",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a File Path",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(stringliteral:)",
                "title": "init(stringLiteral: String)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(extendedgraphemeclusterliteral:)",
                "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(unicodescalarliteral:)",
                "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                "type": "init"
              },
              {
                "title": "Working with File Paths",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/length",
                "title": "var length: Int",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/description",
                "title": "var description: String",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/debugdescription",
                "title": "var debugDescription: String",
                "type": "property"
              },
              {
                "title": "Interacting with C APIs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/withcstring(_:)",
                "title": "func withCString<Result>((UnsafePointer<CChar>) throws -> Result) rethrows -> Result",
                "type": "method"
              },
              {
                "title": "Comparing File Paths",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/==(_:_:)",
                "title": "static func == (FilePath, FilePath) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/system/filepath/!=(_:_:)",
                "title": "static func != (Self, Self) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/system/filepath/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Encoding File Paths",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/component/init(_:)",
                    "title": "init?(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filepath/component/init(platformstring:)-2tz4",
                    "title": "init?(platformString: [CInterop.PlatformChar])",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/system/filepath/component/init(platformstring:)-3mzo3",
                    "title": "init?(platformString: inout CInterop.PlatformChar)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/system/filepath/component/init(platformstring:)-8kixy",
                    "title": "init?(platformString: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filepath/component/init(platformstring:)-9a3qq",
                    "title": "init?(platformString: UnsafePointer<CInterop.PlatformChar>)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/component/extension",
                    "title": "var `extension`: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filepath/component/kind-swift.property",
                    "title": "var kind: FilePath.Component.Kind",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filepath/component/stem",
                    "title": "var stem: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/system/filepath/component/string",
                    "title": "var string: String",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/component/withplatformstring(_:)",
                    "title": "func withPlatformString<Result>((UnsafePointer<CInterop.PlatformChar>) throws -> Result) rethrows -> Result",
                    "type": "method"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/kind-swift.enum/==(_:_:)",
                        "title": "static func == (FilePath.Component.Kind, FilePath.Component.Kind) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/kind-swift.enum/currentdirectory",
                        "title": "case currentDirectory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/system/filepath/component/kind-swift.enum/parentdirectory",
                        "title": "case parentDirectory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/system/filepath/component/kind-swift.enum/regular",
                        "title": "case regular",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/kind-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/kind-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/system/filepath/component/kind-swift.enum/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/system/filepath/component/kind-swift.enum/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/kind-swift.enum",
                    "title": "FilePath.Component.Kind",
                    "type": "enum"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/description",
                        "title": "var description: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/customstringconvertible-implementations",
                    "title": "CustomStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/extendedgraphemeclusterliteraltype",
                        "title": "FilePath.Component.ExtendedGraphemeClusterLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/system/filepath/component/init(stringliteral:)",
                        "title": "init(stringLiteral: String)",
                        "type": "init"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/stringliteraltype",
                        "title": "FilePath.Component.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/unicodescalarliteraltype",
                        "title": "FilePath.Component.UnicodeScalarLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/expressiblebyunicodescalarliteral-implementations",
                    "title": "ExpressibleByUnicodeScalarLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/component/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filepath/component/hashable-implementations",
                    "title": "Hashable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/system/filepath/component",
                "title": "FilePath.Component",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/last",
                        "title": "var last: Self.Element?",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/difference(from:)",
                        "title": "func difference<C>(from: C) -> CollectionDifference<Self.Element>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/difference(from:by:)",
                        "title": "func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/distance(from:to:)",
                        "title": "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/droplast(_:)",
                        "title": "func dropLast(Int) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/formindex(before:)",
                        "title": "func formIndex(before: inout Self.Index)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/index(_:offsetby:)",
                        "title": "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/index(_:offsetby:limitedby:)",
                        "title": "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/index(after:)",
                        "title": "func index(after: FilePath.ComponentView.Index) -> FilePath.ComponentView.Index",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/index(before:)",
                        "title": "func index(before: FilePath.ComponentView.Index) -> FilePath.ComponentView.Index",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/last(where:)",
                        "title": "func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/lastindex(of:)",
                        "title": "func lastIndex(of: Self.Element) -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/lastindex(where:)",
                        "title": "func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/reversed()",
                        "title": "func reversed() -> ReversedCollection<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/suffix(_:)",
                        "title": "func suffix(Int) -> Self.SubSequence",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/bidirectionalcollection-implementations",
                    "title": "BidirectionalCollection Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/system/filepath/componentview/index/==(_:_:)",
                            "title": "static func == (FilePath.ComponentView.Index, FilePath.ComponentView.Index) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/system/filepath/componentview/index/_(_:_:)",
                            "title": "static func < (FilePath.ComponentView.Index, FilePath.ComponentView.Index) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/system/filepath/componentview/index/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/system/filepath/componentview/index/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/'...(_:)-1nq69",
                                "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/'...(_:)-vd6w",
                                "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/'...(_:_:)",
                                "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/'.._(_:)",
                                "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/'.._(_:_:)",
                                "title": "static func ..< (Self, Self) -> Range<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/_(_:_:)-1wo1k",
                                "title": "static func > (Self, Self) -> Bool",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/_=(_:_:)-2aelj",
                                "title": "static func >= (Self, Self) -> Bool",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/_=(_:_:)-3imej",
                                "title": "static func <= (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/system/filepath/componentview/index/comparable-implementations",
                            "title": "Comparable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/system/filepath/componentview/index/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/system/filepath/componentview/index/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/system/filepath/componentview/index",
                        "title": "FilePath.ComponentView.Index",
                        "type": "struct"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/count",
                        "title": "var count: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/endindex",
                        "title": "var endIndex: FilePath.ComponentView.Index",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/first",
                        "title": "var first: Self.Element?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/indices-swift.property",
                        "title": "var indices: DefaultIndices<Self>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/startindex",
                        "title": "var startIndex: FilePath.ComponentView.Index",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/underestimatedcount",
                        "title": "var underestimatedCount: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/drop(while:)",
                        "title": "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/firstindex(of:)",
                        "title": "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/firstindex(where:)",
                        "title": "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/firstrange(of:)",
                        "title": "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/formindex(_:offsetby:)",
                        "title": "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/formindex(_:offsetby:limitedby:)",
                        "title": "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/formindex(after:)",
                        "title": "func formIndex(after: inout Self.Index)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/index(of:)",
                        "title": "func index(of: Self.Element) -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/indices(of:)",
                        "title": "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/indices(where:)",
                        "title": "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/makeiterator()",
                        "title": "func makeIterator() -> IndexingIterator<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/map(_:)-1c1y6",
                        "title": "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/prefix(_:)",
                        "title": "func prefix(Int) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/prefix(through:)",
                        "title": "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/prefix(upto:)",
                        "title": "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/randomelement()",
                        "title": "func randomElement() -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/randomelement(using:)",
                        "title": "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/ranges(of:)",
                        "title": "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removingsubranges(_:)",
                        "title": "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title": "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title": "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/suffix(from:)",
                        "title": "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/trimmingprefix(_:)",
                        "title": "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/trimmingprefix(while:)",
                        "title": "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "title": "Subscripts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/subscript(_:)",
                        "title": "subscript(FilePath.ComponentView.Index) -> FilePath.Component",
                        "type": "subscript"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/indices",
                        "title": "FilePath.ComponentView.Indices",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/iterator",
                        "title": "FilePath.ComponentView.Iterator",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/subsequence",
                        "title": "FilePath.ComponentView.SubSequence",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/collection-implementations",
                    "title": "Collection Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/hashable-implementations",
                    "title": "Hashable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/+(_:_:)-4pqh7",
                        "title": "static func + <Other>(Self, Other) -> Self",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/+(_:_:)-6noxc",
                        "title": "static func + <Other>(Self, Other) -> Self",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/+(_:_:)-8qw31",
                        "title": "static func + <Other>(Other, Self) -> Self",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/+=(_:_:)",
                        "title": "static func += <Other>(inout Self, Other)",
                        "type": "op"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/init(repeating:count:)",
                        "title": "init(repeating: Self.Element, count: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/append(_:)",
                        "title": "func append(Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/append(contentsof:)",
                        "title": "func append<S>(contentsOf: S)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/applying(_:)",
                        "title": "func applying(CollectionDifference<Self.Element>) -> Self?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/filter(_:)",
                        "title": "func filter((Self.Element) throws -> Bool) rethrows -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/insert(_:at:)",
                        "title": "func insert(Self.Element, at: Self.Index)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/insert(contentsof:at:)",
                        "title": "func insert<C>(contentsOf: C, at: Self.Index)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/poplast()",
                        "title": "func popLast() -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/remove(at:)",
                        "title": "func remove(at: Self.Index) -> Self.Element",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removeall(keepingcapacity:)",
                        "title": "func removeAll(keepingCapacity: Bool)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removeall(where:)",
                        "title": "func removeAll(where: (Self.Element) throws -> Bool) rethrows",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removefirst()",
                        "title": "func removeFirst() -> Self.Element",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removefirst(_:)",
                        "title": "func removeFirst(Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removelast()",
                        "title": "func removeLast() -> Self.Element",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removelast(_:)",
                        "title": "func removeLast(Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removesubrange(_:)-4c2tk",
                        "title": "func removeSubrange(Range<Self.Index>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removesubrange(_:)-6mqn1",
                        "title": "func removeSubrange<R>(R)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/removesubranges(_:)",
                        "title": "func removeSubranges(RangeSet<Self.Index>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/replace(_:with:maxreplacements:)",
                        "title": "func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/replacesubrange(_:with:)",
                        "title": "func replaceSubrange<C>(Range<FilePath.ComponentView.Index>, with: C)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/replacesubrange(_:with:)-6ztd8",
                        "title": "func replaceSubrange<C, R>(R, with: C)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/replacesubrange(_:with:)-9mv34",
                        "title": "func replaceSubrange<C>(Range<Self.Index>, with: C)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/replacing(_:with:maxreplacements:)",
                        "title": "func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/replacing(_:with:subrange:maxreplacements:)",
                        "title": "func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/reservecapacity(_:)",
                        "title": "func reserveCapacity(Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/trimprefix(_:)",
                        "title": "func trimPrefix<Prefix>(Prefix)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/trimprefix(while:)",
                        "title": "func trimPrefix(while: (Self.Element) throws -> Bool) rethrows",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/rangereplaceablecollection-implementations",
                    "title": "RangeReplaceableCollection Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/lazy",
                        "title": "var lazy: LazySequence<Self>",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/compactmap(_:)",
                        "title": "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/contains(_:)",
                        "title": "func contains(Self.Element) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/contains(where:)",
                        "title": "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/count(where:)",
                        "title": "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/elementsequal(_:)",
                        "title": "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/elementsequal(_:by:)",
                        "title": "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/enumerated()",
                        "title": "func enumerated() -> EnumeratedSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/first(where:)",
                        "title": "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/flatmap(_:)-17ybo",
                        "title": "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/flatmap(_:)-7ksa7",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/foreach(_:)",
                        "title": "func forEach((Self.Element) throws -> Void) rethrows",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/lexicographicallyprecedes(_:by:)",
                        "title": "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/map(_:)-9u2x",
                        "title": "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/shuffled()",
                        "title": "func shuffled() -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/shuffled(using:)",
                        "title": "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/sorted(by:)",
                        "title": "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/starts(with:)",
                        "title": "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/starts(with:by:)",
                        "title": "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/withcontiguousstorageifavailable(_:)",
                        "title": "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/componentview/element",
                        "title": "FilePath.ComponentView.Element",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/componentview/sequence-implementations",
                    "title": "Sequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/system/filepath/componentview",
                "title": "FilePath.ComponentView",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/root-swift.struct/init(_:)",
                    "title": "init?(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filepath/root-swift.struct/init(platformstring:)-3s0ol",
                    "title": "init?(platformString: [CInterop.PlatformChar])",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/system/filepath/root-swift.struct/init(platformstring:)-4twb4",
                    "title": "init?(platformString: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filepath/root-swift.struct/init(platformstring:)-5j1fu",
                    "title": "init?(platformString: UnsafePointer<CInterop.PlatformChar>)",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/system/filepath/root-swift.struct/init(platformstring:)-8hwtb",
                    "title": "init?(platformString: inout CInterop.PlatformChar)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/root-swift.struct/string",
                    "title": "var string: String",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/root-swift.struct/withplatformstring(_:)",
                    "title": "func withPlatformString<Result>((UnsafePointer<CInterop.PlatformChar>) throws -> Result) rethrows -> Result",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/description",
                        "title": "var description: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/customstringconvertible-implementations",
                    "title": "CustomStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/init(unicodescalarliteral:)",
                        "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                        "type": "init"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/extendedgraphemeclusterliteraltype",
                        "title": "FilePath.Root.ExtendedGraphemeClusterLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/expressiblebyextendedgraphemeclusterliteral-implementations",
                    "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/init(extendedgraphemeclusterliteral:)",
                        "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/init(stringliteral:)",
                        "title": "init(stringLiteral: String)",
                        "type": "init"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/stringliteraltype",
                        "title": "FilePath.Root.StringLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/expressiblebystringliteral-implementations",
                    "title": "ExpressibleByStringLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/unicodescalarliteraltype",
                        "title": "FilePath.Root.UnicodeScalarLiteralType",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/expressiblebyunicodescalarliteral-implementations",
                    "title": "ExpressibleByUnicodeScalarLiteral Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/filepath/root-swift.struct/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/system/filepath/root-swift.struct/hashable-implementations",
                    "title": "Hashable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/system/filepath/root-swift.struct",
                "title": "FilePath.Root",
                "type": "struct"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/init(_:)-2gkpw",
                "title": "init?(URL)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(_:)-61dsw",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(cstring:)-2hetg",
                "title": "init(cString: [CChar])",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(cstring:)-3xw0n",
                "title": "init(cString: String)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(cstring:)-5igtz",
                "title": "init(cString: UnsafePointer<CChar>)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(cstring:)-8d3vx",
                "title": "init(cString: inout CChar)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/system/filepath/init(platformstring:)-4b3o6",
                "title": "init(platformString: inout CInterop.PlatformChar)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(platformstring:)-5o7oh",
                "title": "init(platformString: UnsafePointer<CInterop.PlatformChar>)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/system/filepath/init(platformstring:)-6i5cc",
                "title": "init(platformString: String)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(platformstring:)-8amn5",
                "title": "init(platformString: [CInterop.PlatformChar])",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(root:_:)-19uu0",
                "title": "init<C>(root: FilePath.Root?, C)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(root:_:)-19xzy",
                "title": "init(root: FilePath.Root?, FilePath.ComponentView.SubSequence)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepath/init(root:components:)",
                "title": "init(root: FilePath.Root?, components: FilePath.Component...)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/components",
                "title": "var components: FilePath.ComponentView",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/extension",
                "title": "var `extension`: String?",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/isabsolute",
                "title": "var isAbsolute: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/isempty",
                "title": "var isEmpty: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/islexicallynormal",
                "title": "var isLexicallyNormal: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/isrelative",
                "title": "var isRelative: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/lastcomponent",
                "title": "var lastComponent: FilePath.Component?",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/root-swift.property",
                "title": "var root: FilePath.Root?",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/stem",
                "title": "var stem: String?",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepath/string",
                "title": "var string: String",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepath/append(_:)-66nkr",
                "title": "func append<C>(C)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/append(_:)-7ttzp",
                "title": "func append(String)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/append(_:)-8f41n",
                "title": "func append(FilePath.Component)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/appending(_:)-1dtn3",
                "title": "func appending(String) -> FilePath",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/appending(_:)-24s87",
                "title": "func appending(FilePath.Component) -> FilePath",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/appending(_:)-60fwk",
                "title": "func appending<C>(C) -> FilePath",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/ends(with:)",
                "title": "func ends(with: FilePath) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/lexicallynormalize()",
                "title": "func lexicallyNormalize()",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/lexicallynormalized()",
                "title": "func lexicallyNormalized() -> FilePath",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/lexicallyresolving(_:)",
                "title": "func lexicallyResolving(FilePath) -> FilePath?",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/push(_:)",
                "title": "func push(FilePath)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/pushing(_:)",
                "title": "func pushing(FilePath) -> FilePath",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/removeall(keepingcapacity:)",
                "title": "func removeAll(keepingCapacity: Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/removelastcomponent()",
                "title": "func removeLastComponent() -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/removeprefix(_:)",
                "title": "func removePrefix(FilePath) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/removinglastcomponent()",
                "title": "func removingLastComponent() -> FilePath",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/removingroot()",
                "title": "func removingRoot() -> FilePath",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/reservecapacity(_:)",
                "title": "func reserveCapacity(Int)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/starts(with:)",
                "title": "func starts(with: FilePath) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepath/withplatformstring(_:)",
                "title": "func withPlatformString<Result>((UnsafePointer<CInterop.PlatformChar>) throws -> Result) rethrows -> Result",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/system/filepath/customdebugstringconvertible-implementations",
                "title": "CustomDebugStringConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/description",
                    "title": "var description: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/system/filepath/customstringconvertible-implementations",
                "title": "CustomStringConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  }
                ],
                "path": "/documentation/system/filepath/decodable-implementations",
                "title": "Decodable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/filepath/encodable-implementations",
                "title": "Encodable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/system/filepath/==(_:_:)",
                    "title": "static func == (FilePath, FilePath) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/system/filepath/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/init(unicodescalarliteral:)",
                    "title": "init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/extendedgraphemeclusterliteraltype",
                    "title": "FilePath.ExtendedGraphemeClusterLiteralType",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/system/filepath/expressiblebyextendedgraphemeclusterliteral-implementations",
                "title": "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/init(extendedgraphemeclusterliteral:)",
                    "title": "init(extendedGraphemeClusterLiteral: Self.StringLiteralType)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filepath/init(stringliteral:)",
                    "title": "init(stringLiteral: String)",
                    "type": "init"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/stringliteraltype",
                    "title": "FilePath.StringLiteralType",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/system/filepath/expressiblebystringliteral-implementations",
                "title": "ExpressibleByStringLiteral Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/unicodescalarliteraltype",
                    "title": "FilePath.UnicodeScalarLiteralType",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/system/filepath/expressiblebyunicodescalarliteral-implementations",
                "title": "ExpressibleByUnicodeScalarLiteral Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepath/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/filepath/hashable-implementations",
                "title": "Hashable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/system/filepath",
            "title": "FilePath",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Owner Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/ownerread",
                "title": "static var ownerRead: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/ownerwrite",
                "title": "static var ownerWrite: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/ownerexecute",
                "title": "static var ownerExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/ownerreadwrite",
                "title": "static var ownerReadWrite: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/ownerreadexecute",
                "title": "static var ownerReadExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/ownerwriteexecute",
                "title": "static var ownerWriteExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/ownerreadwriteexecute",
                "title": "static var ownerReadWriteExecute: FilePermissions",
                "type": "property"
              },
              {
                "title": "Group Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/groupread",
                "title": "static var groupRead: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/groupwrite",
                "title": "static var groupWrite: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/groupexecute",
                "title": "static var groupExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/groupreadwrite",
                "title": "static var groupReadWrite: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/groupreadexecute",
                "title": "static var groupReadExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/groupwriteexecute",
                "title": "static var groupWriteExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/groupreadwriteexecute",
                "title": "static var groupReadWriteExecute: FilePermissions",
                "type": "property"
              },
              {
                "title": "Other Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/otherread",
                "title": "static var otherRead: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/otherwrite",
                "title": "static var otherWrite: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/otherexecute",
                "title": "static var otherExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/otherreadwrite",
                "title": "static var otherReadWrite: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/otherreadexecute",
                "title": "static var otherReadExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/otherwriteexecute",
                "title": "static var otherWriteExecute: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/otherreadwriteexecute",
                "title": "static var otherReadWriteExecute: FilePermissions",
                "type": "property"
              },
              {
                "title": "Special Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/setuserid",
                "title": "static var setUserID: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/setgroupid",
                "title": "static var setGroupID: FilePermissions",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/savetext",
                "title": "static var saveText: FilePermissions",
                "type": "property"
              },
              {
                "title": "Interacting with C APIs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/init(rawvalue:)",
                "title": "init(rawValue: CModeT)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepermissions/rawvalue-swift.property",
                "title": "let rawValue: CModeT",
                "type": "property"
              },
              {
                "path": "/documentation/system/cmodet",
                "title": "CModeT",
                "type": "typealias"
              },
              {
                "path": "/documentation/system/filepermissions/rawvalue-swift.typealias",
                "title": "FilePermissions.RawValue",
                "type": "typealias"
              },
              {
                "title": "Debugging",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/description",
                "title": "var description: String",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/debugdescription",
                "title": "var debugDescription: String",
                "type": "property"
              },
              {
                "title": "Comparing File Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/!=(_:_:)",
                "title": "static func != (Self, Self) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/system/filepermissions/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Encoding File Permissions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepermissions/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "title": "Performing Set Operations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepermissions/init(_:)",
                "title": "init<S>(S)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepermissions/init(arrayliteral:)",
                "title": "init(arrayLiteral: Self.Element...)",
                "type": "init"
              },
              {
                "path": "/documentation/system/filepermissions/contains(_:)",
                "title": "func contains(Self) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/formintersection(_:)",
                "title": "func formIntersection(Self)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/formintersection(_:)",
                "title": "func formIntersection(Self)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/formsymmetricdifference(_:)",
                "title": "func formSymmetricDifference(Self)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/formunion(_:)",
                "title": "func formUnion(Self)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/insert(_:)",
                "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/intersection(_:)",
                "title": "func intersection(Self) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/isdisjoint(with:)",
                "title": "func isDisjoint(with: Self) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/isempty",
                "title": "var isEmpty: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/system/filepermissions/isstrictsubset(of:)",
                "title": "func isStrictSubset(of: Self) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/isstrictsuperset(of:)",
                "title": "func isStrictSuperset(of: Self) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/issubset(of:)",
                "title": "func isSubset(of: Self) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/issuperset(of:)",
                "title": "func isSuperset(of: Self) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/remove(_:)",
                "title": "func remove(Self.Element) -> Self.Element?",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/subtract(_:)",
                "title": "func subtract(Self)",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/subtracting(_:)",
                "title": "func subtracting(Self) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/symmetricdifference(_:)",
                "title": "func symmetricDifference(Self) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/union(_:)",
                "title": "func union(Self) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/system/filepermissions/update(with:)",
                "title": "func update(with: Self.Element) -> Self.Element?",
                "type": "method"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/filepermissions/arrayliteralelement",
                "title": "FilePermissions.ArrayLiteralElement",
                "type": "typealias"
              },
              {
                "path": "/documentation/system/filepermissions/element",
                "title": "FilePermissions.Element",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/system/filepermissions/customdebugstringconvertible-implementations",
                "title": "CustomDebugStringConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/description",
                    "title": "var description: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/system/filepermissions/customstringconvertible-implementations",
                "title": "CustomStringConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/system/filepermissions/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/contains(_:)",
                    "title": "func contains(Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/formintersection(_:)",
                    "title": "func formIntersection(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/formsymmetricdifference(_:)",
                    "title": "func formSymmetricDifference(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/formunion(_:)",
                    "title": "func formUnion(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/insert(_:)",
                    "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/intersection(_:)",
                    "title": "func intersection(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/remove(_:)",
                    "title": "func remove(Self.Element) -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/symmetricdifference(_:)",
                    "title": "func symmetricDifference(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/union(_:)",
                    "title": "func union(Self) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/update(with:)",
                    "title": "func update(with: Self.Element) -> Self.Element?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/filepermissions/optionset-implementations",
                "title": "OptionSet Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/filepermissions/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/init(_:)",
                    "title": "init<S>(S)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/filepermissions/init(arrayliteral:)",
                    "title": "init(arrayLiteral: Self.Element...)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/isempty",
                    "title": "var isEmpty: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/filepermissions/isdisjoint(with:)",
                    "title": "func isDisjoint(with: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/isstrictsubset(of:)",
                    "title": "func isStrictSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/isstrictsuperset(of:)",
                    "title": "func isStrictSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/issubset(of:)",
                    "title": "func isSubset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/issuperset(of:)",
                    "title": "func isSuperset(of: Self) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/subtract(_:)",
                    "title": "func subtract(Self)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/filepermissions/subtracting(_:)",
                    "title": "func subtracting(Self) -> Self",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/filepermissions/setalgebra-implementations",
                "title": "SetAlgebra Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/system/filepermissions",
            "title": "FilePermissions",
            "type": "struct"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "File and Directory Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/attributenotfound",
                "title": "static var attributeNotFound: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/badfiledescriptor",
                "title": "static var badFileDescriptor: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/fileexists",
                "title": "static var fileExists: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/filetoolarge",
                "title": "static var fileTooLarge: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/improperlink",
                "title": "static var improperLink: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/isdirectory",
                "title": "static var isDirectory: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nolocks",
                "title": "static var noLocks: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nosuchfileordirectory",
                "title": "static var noSuchFileOrDirectory: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notdirectory",
                "title": "static var notDirectory: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/permissiondenied",
                "title": "static var permissionDenied: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/textfilebusy",
                "title": "static var textFileBusy: Errno",
                "type": "property"
              },
              {
                "title": "File System Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/badfiletypeorformat",
                "title": "static var badFileTypeOrFormat: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/directorynotempty",
                "title": "static var directoryNotEmpty: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/diskquotaexceeded",
                "title": "static var diskQuotaExceeded: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nospace",
                "title": "static var noSpace: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/readonlyfilesystem",
                "title": "static var readOnlyFileSystem: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanylinks",
                "title": "static var tooManyLinks: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanyopenfilesinsystem",
                "title": "static var tooManyOpenFilesInSystem: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanyopenfiles",
                "title": "static var tooManyOpenFiles: Errno",
                "type": "property"
              },
              {
                "title": "NFS Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/authenticationerror",
                "title": "static var authenticationError: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/needauthenticator",
                "title": "static var needAuthenticator: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/stalenfsfilehandle",
                "title": "static var staleNFSFileHandle: Errno",
                "type": "property"
              },
              {
                "title": "Device Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/deviceerror",
                "title": "static var deviceError: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/devicepowerisoff",
                "title": "static var devicePowerIsOff: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/inappropriateioctlfordevice",
                "title": "static var inappropriateIOCTLForDevice: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/ioerror",
                "title": "static var ioError: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nosuchaddressordevice",
                "title": "static var noSuchAddressOrDevice: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notblockdevice",
                "title": "static var notBlockDevice: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/operationnotsupportedbydevice",
                "title": "static var operationNotSupportedByDevice: Errno",
                "type": "property"
              },
              {
                "title": "Path Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/filenametoolong",
                "title": "static var fileNameTooLong: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanyremotelevels",
                "title": "static var tooManyRemoteLevels: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanysymboliclinklevels",
                "title": "static var tooManySymbolicLinkLevels: Errno",
                "type": "property"
              },
              {
                "title": "Pipe Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/brokenpipe",
                "title": "static var brokenPipe: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/illegalseek",
                "title": "static var illegalSeek: Errno",
                "type": "property"
              },
              {
                "title": "Runtime Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/deadlock",
                "title": "static var deadlock: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nomemory",
                "title": "static var noMemory: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/wouldblock",
                "title": "static var wouldBlock: Errno",
                "type": "property"
              },
              {
                "title": "Math Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/outofdomain",
                "title": "static var outOfDomain: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/outofrange",
                "title": "static var outOfRange: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/overflow",
                "title": "static var overflow: Errno",
                "type": "property"
              },
              {
                "title": "Executable File Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/badcputype",
                "title": "static var badCPUType: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/badexecutable",
                "title": "static var badExecutable: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/execformaterror",
                "title": "static var execFormatError: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/malformedmacho",
                "title": "static var malformedMachO: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/sharedlibraryversionmismatch",
                "title": "static var sharedLibraryVersionMismatch: Errno",
                "type": "property"
              },
              {
                "title": "Network Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/connectionabort",
                "title": "static var connectionAbort: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/connectionrefused",
                "title": "static var connectionRefused: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/connectionreset",
                "title": "static var connectionReset: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/hostisdown",
                "title": "static var hostIsDown: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/messagetoolong",
                "title": "static var messageTooLong: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/networkdown",
                "title": "static var networkDown: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/networkreset",
                "title": "static var networkReset: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/networkunreachable",
                "title": "static var networkUnreachable: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nobufferspace",
                "title": "static var noBufferSpace: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/noroutetohost",
                "title": "static var noRouteToHost: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notsupported",
                "title": "static var notSupported: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/timedout",
                "title": "static var timedOut: Errno",
                "type": "property"
              },
              {
                "title": "Network Protocol Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/protocolerror",
                "title": "static var protocolError: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/protocolfamilynotsupported",
                "title": "static var protocolFamilyNotSupported: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/protocolnotavailable",
                "title": "static var protocolNotAvailable: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/protocolnotsupported",
                "title": "static var protocolNotSupported: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/protocolwrongtypeforsocket",
                "title": "static var protocolWrongTypeForSocket: Errno",
                "type": "property"
              },
              {
                "title": "Network Address Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/addressfamilynotsupported",
                "title": "static var addressFamilyNotSupported: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/addressinuse",
                "title": "static var addressInUse: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/addressnotavailable",
                "title": "static var addressNotAvailable: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/addressrequired",
                "title": "static var addressRequired: Errno",
                "type": "property"
              },
              {
                "title": "Network Socket Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/notsocket",
                "title": "static var notSocket: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notsupportedonsocket",
                "title": "static var notSupportedOnSocket: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/socketisconnected",
                "title": "static var socketIsConnected: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/socketnotconnected",
                "title": "static var socketNotConnected: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/socketshutdown",
                "title": "static var socketShutdown: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/sockettypenotsupported",
                "title": "static var socketTypeNotSupported: Errno",
                "type": "property"
              },
              {
                "title": "RPC Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/rpcprocedureunavailable",
                "title": "static var rpcProcedureUnavailable: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/rpcprogramunavailable",
                "title": "static var rpcProgramUnavailable: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/rpcprogramversionmismatch",
                "title": "static var rpcProgramVersionMismatch: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/rpcunsuccessful",
                "title": "static var rpcUnsuccessful: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/rpcversionmismatch",
                "title": "static var rpcVersionMismatch: Errno",
                "type": "property"
              },
              {
                "title": "Process Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/arglisttoolong",
                "title": "static var argListTooLong: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/identifierremoved",
                "title": "static var identifierRemoved: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nochildprocess",
                "title": "static var noChildProcess: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nosuchprocess",
                "title": "static var noSuchProcess: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/previousownerdied",
                "title": "static var previousOwnerDied: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanyprocesses",
                "title": "static var tooManyProcesses: Errno",
                "type": "property"
              },
              {
                "title": "System Call Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/alreadyinprocess",
                "title": "static var alreadyInProcess: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/badaddress",
                "title": "static var badAddress: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/interrupted",
                "title": "static var interrupted: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/invalidargument",
                "title": "static var invalidArgument: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nofunction",
                "title": "static var noFunction: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nowinprogress",
                "title": "static var nowInProgress: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/resourcebusy",
                "title": "static var resourceBusy: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/resourcetemporarilyunavailable",
                "title": "static var resourceTemporarilyUnavailable: Errno",
                "type": "property"
              },
              {
                "title": "General Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/badmessage",
                "title": "static var badMessage: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/canceled",
                "title": "static var canceled: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/illegalbytesequence",
                "title": "static var illegalByteSequence: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nodata",
                "title": "static var noData: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nomessage",
                "title": "static var noMessage: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nosuchpolicy",
                "title": "static var noSuchPolicy: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notpermitted",
                "title": "static var notPermitted: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notrecoverable",
                "title": "static var notRecoverable: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/outputqueuefull",
                "title": "static var outputQueueFull: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanyreferences",
                "title": "static var tooManyReferences: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/toomanyusers",
                "title": "static var tooManyUsers: Errno",
                "type": "property"
              },
              {
                "title": "Reserved",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/lasterrnovalue",
                "title": "static var lastErrnoValue: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/multihop",
                "title": "static var multiHop: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nolink",
                "title": "static var noLink: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/nostreamresources",
                "title": "static var noStreamResources: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notstream",
                "title": "static var notStream: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/notused",
                "title": "static var notUsed: Errno",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/timeout",
                "title": "static var timeout: Errno",
                "type": "property"
              },
              {
                "title": "Interacting with C APIs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/init(rawvalue:)",
                "title": "init(rawValue: CInt)",
                "type": "init"
              },
              {
                "path": "/documentation/system/errno/rawvalue-swift.property",
                "title": "let rawValue: CInt",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/rawvalue-swift.typealias",
                "title": "Errno.RawValue",
                "type": "typealias"
              },
              {
                "title": "Debugging",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/description",
                "title": "var description: String",
                "type": "property"
              },
              {
                "path": "/documentation/system/errno/debugdescription",
                "title": "var debugDescription: String",
                "type": "property"
              },
              {
                "title": "Encoding Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "path": "/documentation/system/errno/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "title": "Comparing Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/errno/!=(_:_:)",
                "title": "static func != (Self, Self) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/system/errno/~=(_:_:)",
                "title": "static func ~= (Errno, any Error) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/system/errno/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "path": "/documentation/system/errno/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/errno/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/system/errno/customdebugstringconvertible-implementations",
                "title": "CustomDebugStringConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/errno/description",
                    "title": "var description: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/system/errno/customstringconvertible-implementations",
                "title": "CustomStringConvertible Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/errno/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/system/errno/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/errno/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/errno/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/errno/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/errno/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/errno/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/system/errno",
            "title": "Errno",
            "type": "struct"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/system/machportright",
            "title": "MachPortRight",
            "type": "protocol"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/system/cinterop/char",
                "title": "CInterop.Char",
                "type": "typealias"
              },
              {
                "path": "/documentation/system/cinterop/mode",
                "title": "CInterop.Mode",
                "type": "typealias"
              },
              {
                "path": "/documentation/system/cinterop/platformchar",
                "title": "CInterop.PlatformChar",
                "type": "typealias"
              },
              {
                "path": "/documentation/system/cinterop/platformunicodeencoding",
                "title": "CInterop.PlatformUnicodeEncoding",
                "type": "typealias"
              }
            ],
            "path": "/documentation/system/cinterop",
            "title": "CInterop",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/mach/port/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/mach/port/init(name:)",
                    "title": "init(name: mach_port_name_t)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/mach/port/init(name:context:)-14mp9",
                    "title": "init(name: mach_port_name_t, context: mach_port_context_t)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/system/mach/port/init(name:context:)-oyjl",
                    "title": "init(name: mach_port_name_t, context: mach_port_context_t)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/mach/port/makesendcount",
                    "title": "var makeSendCount: mach_port_mscount_t",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/mach/port/copysendright()",
                    "title": "func copySendRight() throws -> Mach.Port<Mach.SendRight>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/makesendonceright()",
                    "title": "func makeSendOnceRight() -> Mach.Port<Mach.SendOnceRight>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/makesendright()",
                    "title": "func makeSendRight() -> Mach.Port<Mach.SendRight>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/relinquish()-241tg",
                    "title": "func relinquish() -> mach_port_name_t",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/relinquish()-70vbe",
                    "title": "func relinquish() -> (name: mach_port_name_t, context: mach_port_context_t)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/relinquish()-74amu",
                    "title": "func relinquish() -> mach_port_name_t",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/relinquish()-9lm56",
                    "title": "func relinquish() -> (name: mach_port_name_t, context: mach_port_context_t)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/unguardandrelinquish()",
                    "title": "func unguardAndRelinquish() -> mach_port_name_t",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/withborrowedname(body:)-4d4iq",
                    "title": "func withBorrowedName<ReturnType>(body: (mach_port_name_t, mach_port_context_t) -> ReturnType) -> ReturnType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/withborrowedname(body:)-8402i",
                    "title": "func withBorrowedName<ReturnType>(body: (mach_port_name_t, mach_port_context_t) -> ReturnType) -> ReturnType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/system/mach/port/withborrowedname(body:)-9v68k",
                    "title": "func withBorrowedName<ReturnType>(body: (mach_port_name_t) -> ReturnType) -> ReturnType",
                    "type": "method"
                  }
                ],
                "path": "/documentation/system/mach/port",
                "title": "Mach.Port",
                "type": "struct"
              },
              {
                "path": "/documentation/system/mach/receiveright",
                "title": "Mach.ReceiveRight",
                "type": "struct"
              },
              {
                "path": "/documentation/system/mach/sendonceright",
                "title": "Mach.SendOnceRight",
                "type": "struct"
              },
              {
                "path": "/documentation/system/mach/sendright",
                "title": "Mach.SendRight",
                "type": "struct"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/mach/portrighterror/==(_:_:)",
                    "title": "static func == (Mach.PortRightError, Mach.PortRightError) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/mach/portrighterror/deadname",
                    "title": "case deadName",
                    "type": "case"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/mach/portrighterror/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/system/mach/portrighterror/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/system/mach/portrighterror/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/system/mach/portrighterror/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/system/mach/portrighterror",
                "title": "Mach.PortRightError",
                "type": "enum"
              }
            ],
            "path": "/documentation/system/mach",
            "title": "Mach",
            "type": "enum"
          }
        ],
        "path": "/documentation/system",
        "title": "System",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
