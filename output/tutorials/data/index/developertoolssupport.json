{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Library Customization",
            "type": "groupMarker"
          },
          {
            "title": "Preview Registration",
            "type": "groupMarker"
          },
          {
            "title": "Resource Definition",
            "type": "groupMarker"
          },
          {
            "title": "Camera Management",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/developertoolssupport",
        "title": "DeveloperToolsSupport",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Library Customization",
            "type": "groupMarker"
          },
          {
            "title": "Preview Registration",
            "type": "groupMarker"
          },
          {
            "title": "Resource Definition",
            "type": "groupMarker"
          },
          {
            "title": "Camera Management",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/developertoolssupport",
        "title": "DeveloperToolsSupport",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Library Customization",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Adding Views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/librarycontentprovider/views",
                "title": "var views: [LibraryItem]",
                "type": "property"
              },
              {
                "title": "Adding Modifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/librarycontentprovider/modifiers(base:)",
                "title": "func modifiers(base: Self.ModifierBase) -> [LibraryItem]",
                "type": "method"
              },
              {
                "path": "/documentation/developertoolssupport/librarycontentprovider/modifierbase",
                "title": "ModifierBase",
                "type": "associatedtype"
              },
              {
                "title": "Building Arrays",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/developertoolssupport/librarycontentbuilder/buildblock(_:)",
                    "title": "static func buildBlock([LibraryItem]...) -> [LibraryItem]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/developertoolssupport/librarycontentbuilder/buildexpression(_:)-8x2oz",
                    "title": "static func buildExpression(LibraryItem) -> [LibraryItem]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/developertoolssupport/librarycontentbuilder/buildexpression(_:)-90ip4",
                    "title": "static func buildExpression([LibraryItem]) -> [LibraryItem]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/developertoolssupport/librarycontentbuilder",
                "title": "LibraryContentBuilder",
                "type": "struct"
              }
            ],
            "path": "/documentation/developertoolssupport/librarycontentprovider",
            "title": "LibraryContentProvider",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a Library Item",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/libraryitem/init(_:visible:title:category:matchingsignature:)",
                "title": "init<SnippetExpressionType>(@autoclosure () -> SnippetExpressionType, visible: Bool, title: String?, category: LibraryItem.Category, matchingSignature: String?)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Specifying a Category",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/developertoolssupport/libraryitem/category/control",
                    "title": "static let control: LibraryItem.Category",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/developertoolssupport/libraryitem/category/effect",
                    "title": "static let effect: LibraryItem.Category",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/developertoolssupport/libraryitem/category/layout",
                    "title": "static let layout: LibraryItem.Category",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/developertoolssupport/libraryitem/category/other",
                    "title": "static let other: LibraryItem.Category",
                    "type": "property"
                  }
                ],
                "path": "/documentation/developertoolssupport/libraryitem/category",
                "title": "LibraryItem.Category",
                "type": "struct"
              }
            ],
            "path": "/documentation/developertoolssupport/libraryitem",
            "title": "LibraryItem",
            "type": "struct"
          },
          {
            "title": "Preview Registration",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewregistry/column",
                "title": "static var column: Int",
                "type": "property"
              },
              {
                "path": "/documentation/developertoolssupport/previewregistry/fileid",
                "title": "static var fileID: String",
                "type": "property"
              },
              {
                "path": "/documentation/developertoolssupport/previewregistry/line",
                "title": "static var line: Int",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/developertoolssupport/previewregistry/preview",
                "title": "static var preview: Preview",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewregistry/makepreview()",
                "title": "static func makePreview() throws -> Preview",
                "type": "method"
              }
            ],
            "path": "/documentation/developertoolssupport/previewregistry",
            "title": "PreviewRegistry",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:as:using:widget:contentstates:)",
                "title": "init<Attributes>(String?, as: ActivityPreviewViewKind, using: Attributes, widget: () -> some Widget, contentStates: () async -> [Attributes.ContentState])",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:as:using:widget:timelineprovider:)-1if5u",
                "title": "init<Provider>(String?, as: WidgetFamily, using: Provider.Intent, widget: () -> some Widget, timelineProvider: () -> Provider)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:as:using:widget:timelineprovider:)-5335n",
                "title": "init<Provider>(String?, as: WidgetFamily, using: Provider.Intent, widget: () -> some Widget, timelineProvider: () -> Provider)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:as:widget:timeline:)",
                "title": "init(String?, as: WidgetFamily, widget: () -> some Widget, timeline: () async -> [any TimelineEntry])",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:as:widget:timelineprovider:)",
                "title": "init(String?, as: WidgetFamily, widget: () -> some Widget, timelineProvider: () -> some TimelineProvider)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:immersionstyle:traits:body:cameras:)",
                "title": "init(String?, immersionStyle: some ImmersionStyle, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> any View, cameras: () -> [PreviewCamera])",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:traits:body:)-158mk",
                "title": "init(String?, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> NSView)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:traits:body:)-2viaf",
                "title": "init(String?, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> NSViewController)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:traits:body:)-3i54d",
                "title": "init(String?, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> UIView)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:traits:body:)-8pemr",
                "title": "init(String?, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> any View)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:traits:body:)-941vb",
                "title": "init(String?, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> UIViewController)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:traits:body:cameras:)",
                "title": "init(String?, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> any View, cameras: () -> [PreviewCamera])",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/preview/init(_:windowstyle:traits:body:cameras:)",
                "title": "init(String?, windowStyle: some WindowStyle, traits: PreviewTrait<Preview.ViewTraits>..., body: () -> any View, cameras: () -> [PreviewCamera])",
                "type": "init"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/preview/viewtraits",
                "title": "Preview.ViewTraits",
                "type": "enum"
              }
            ],
            "path": "/documentation/developertoolssupport/preview",
            "title": "Preview",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewlayout/device",
                "title": "case device",
                "type": "case"
              },
              {
                "path": "/documentation/developertoolssupport/previewlayout/fixed(width:height:)",
                "title": "case fixed(width: CGFloat, height: CGFloat)",
                "type": "case"
              },
              {
                "path": "/documentation/developertoolssupport/previewlayout/fixed3d(width:height:depth:)",
                "title": "case fixed3D(width: CGFloat, height: CGFloat, depth: CGFloat)",
                "type": "case"
              },
              {
                "path": "/documentation/developertoolssupport/previewlayout/sizethatfits",
                "title": "case sizeThatFits",
                "type": "case"
              }
            ],
            "path": "/documentation/developertoolssupport/previewlayout",
            "title": "PreviewLayout",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/init(_:)",
                "title": "init(PreviewTrait<T>...)",
                "type": "init"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/defaultlayout",
                "title": "static var defaultLayout: PreviewTrait<Preview.ViewTraits>",
                "type": "property"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/landscapeleft",
                "title": "static var landscapeLeft: PreviewTrait<Preview.ViewTraits>",
                "type": "property"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/landscaperight",
                "title": "static var landscapeRight: PreviewTrait<Preview.ViewTraits>",
                "type": "property"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/portrait",
                "title": "static var portrait: PreviewTrait<Preview.ViewTraits>",
                "type": "property"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/portraitupsidedown",
                "title": "static var portraitUpsideDown: PreviewTrait<Preview.ViewTraits>",
                "type": "property"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/sizethatfitslayout",
                "title": "static var sizeThatFitsLayout: PreviewTrait<Preview.ViewTraits>",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/fixedlayout(width:height:)",
                "title": "static func fixedLayout(width: CGFloat, height: CGFloat) -> PreviewTrait<T>",
                "type": "method"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/fixedlayout(width:height:depth:)",
                "title": "static func fixedLayout(width: CGFloat, height: CGFloat, depth: CGFloat) -> PreviewTrait<T>",
                "type": "method"
              },
              {
                "path": "/documentation/developertoolssupport/previewtrait/modifier(_:)",
                "title": "static func modifier(some PreviewModifier) -> PreviewTrait<T>",
                "type": "method"
              }
            ],
            "path": "/documentation/developertoolssupport/previewtrait",
            "title": "PreviewTrait",
            "type": "struct"
          },
          {
            "title": "Resource Definition",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/colorresource/==(_:_:)",
                "title": "static func == (ColorResource, ColorResource) -> Bool",
                "type": "op"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/colorresource/init(name:bundle:)",
                "title": "init(name: String, bundle: Bundle)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/colorresource/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/colorresource/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/developertoolssupport/colorresource/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/developertoolssupport/colorresource/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/developertoolssupport/colorresource",
            "title": "ColorResource",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/imageresource/==(_:_:)",
                "title": "static func == (ImageResource, ImageResource) -> Bool",
                "type": "op"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/imageresource/init(name:bundle:)",
                "title": "init(name: String, bundle: Bundle)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/imageresource/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/imageresource/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/developertoolssupport/imageresource/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/developertoolssupport/imageresource/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/developertoolssupport/imageresource",
            "title": "ImageResource",
            "type": "struct"
          },
          {
            "title": "Camera Management",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewcamera/init(from:zoom:name:)",
                "title": "init(from: UnitPoint3D, zoom: Double, name: String?)",
                "type": "init"
              },
              {
                "path": "/documentation/developertoolssupport/previewcamera/init(lookingat:from:name:)",
                "title": "init(lookingAt: Point3D, from: Point3D, name: String?)",
                "type": "init"
              }
            ],
            "path": "/documentation/developertoolssupport/previewcamera",
            "title": "PreviewCamera",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewcamerabuilder/buildarray(_:)",
                "title": "static func buildArray([[PreviewCamera]]) -> [PreviewCamera]",
                "type": "method"
              },
              {
                "path": "/documentation/developertoolssupport/previewcamerabuilder/buildexpression(_:)-5okdh",
                "title": "static func buildExpression(PreviewCamera) -> [PreviewCamera]",
                "type": "method"
              },
              {
                "path": "/documentation/developertoolssupport/previewcamerabuilder/buildexpression(_:)-5t9d2",
                "title": "static func buildExpression([PreviewCamera]) -> [PreviewCamera]",
                "type": "method"
              },
              {
                "path": "/documentation/developertoolssupport/previewcamerabuilder/buildpartialblock(accumulated:next:)",
                "title": "static func buildPartialBlock(accumulated: [PreviewCamera], next: [PreviewCamera]) -> [PreviewCamera]",
                "type": "method"
              },
              {
                "path": "/documentation/developertoolssupport/previewcamerabuilder/buildpartialblock(first:)",
                "title": "static func buildPartialBlock(first: [PreviewCamera]) -> [PreviewCamera]",
                "type": "method"
              }
            ],
            "path": "/documentation/developertoolssupport/previewcamerabuilder",
            "title": "PreviewCameraBuilder",
            "type": "struct"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewbodybuilder/buildblock(_:)",
                "title": "static func buildBlock(Content) -> Content",
                "type": "method"
              }
            ],
            "path": "/documentation/developertoolssupport/previewbodybuilder",
            "title": "PreviewBodyBuilder",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewmacrobodybuilder/buildblock(_:)",
                "title": "static func buildBlock(Content) -> Content",
                "type": "method"
              }
            ],
            "path": "/documentation/developertoolssupport/previewmacrobodybuilder",
            "title": "PreviewMacroBodyBuilder",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/developertoolssupport/previewunavailable/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/developertoolssupport/previewunavailable/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/developertoolssupport/previewunavailable/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/developertoolssupport/previewunavailable",
            "title": "PreviewUnavailable",
            "type": "struct"
          }
        ],
        "path": "/documentation/developertoolssupport",
        "title": "DeveloperToolsSupport",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
