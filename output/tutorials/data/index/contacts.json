{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/contacts/accessing-the-contact-store",
            "title": "Accessing the contact store",
            "type": "article"
          },
          {
            "path": "/documentation/contacts/accessing-a-person-s-contact-data-using-contacts-and-contactsui",
            "title": "Accessing a person’s contact data using Contacts and ContactsUI",
            "type": "sampleCode"
          },
          {
            "title": "Contact data",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Addresses",
                "type": "groupMarker"
              },
              {
                "title": "Phone Numbers",
                "type": "groupMarker"
              },
              {
                "title": "Groups and Containers",
                "type": "groupMarker"
              },
              {
                "title": "Social Profiles",
                "type": "groupMarker"
              },
              {
                "title": "Related Data",
                "type": "groupMarker"
              },
              {
                "title": "Generic Types",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/contacts/data-objects",
            "title": "Data Objects",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Contact Identification",
                "type": "groupMarker"
              },
              {
                "title": "Name",
                "type": "groupMarker"
              },
              {
                "title": "Work",
                "type": "groupMarker"
              },
              {
                "title": "Addresses",
                "type": "groupMarker"
              },
              {
                "title": "Phone",
                "type": "groupMarker"
              },
              {
                "title": "Social Profiles",
                "type": "groupMarker"
              },
              {
                "title": "Birthday",
                "type": "groupMarker"
              },
              {
                "title": "Notes",
                "type": "groupMarker"
              },
              {
                "title": "Images",
                "type": "groupMarker"
              },
              {
                "title": "Relationships",
                "type": "groupMarker"
              },
              {
                "title": "Groups and Containers",
                "type": "groupMarker"
              },
              {
                "title": "Instant Messaging Keys",
                "type": "groupMarker"
              },
              {
                "title": "Social Profile Keys",
                "type": "groupMarker"
              },
              {
                "title": "Key Descriptors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/contacts/contact-keys",
            "title": "Contact Keys",
            "type": "collection"
          },
          {
            "title": "Fetch and save requests",
            "type": "groupMarker"
          },
          {
            "title": "Change history data",
            "type": "groupMarker"
          },
          {
            "title": "Formatters",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error domain",
                "type": "groupMarker"
              },
              {
                "title": "Error codes",
                "type": "groupMarker"
              },
              {
                "title": "Error data keys",
                "type": "groupMarker"
              },
              {
                "title": "Exceptions",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/contacts/error-information",
            "title": "Error Information",
            "type": "collection"
          }
        ],
        "path": "/documentation/contacts",
        "title": "Contacts",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/contacts/accessing-the-contact-store",
            "title": "Accessing the contact store",
            "type": "article"
          },
          {
            "path": "/documentation/contacts/accessing-a-person-s-contact-data-using-contacts-and-contactsui",
            "title": "Accessing a person’s contact data using Contacts and ContactsUI",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Requesting access to the user’s contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/requestaccess(for:completionhandler:)",
                "title": "- requestAccessForEntityType:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/authorizationstatus(for:)",
                "title": "+ authorizationStatusForEntityType:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Authorization statuses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/notdetermined",
                    "title": "CNAuthorizationStatusNotDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/restricted",
                    "title": "CNAuthorizationStatusRestricted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/denied",
                    "title": "CNAuthorizationStatusDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/authorized",
                    "title": "CNAuthorizationStatusAuthorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/limited",
                    "title": "CNAuthorizationStatusLimited",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cnauthorizationstatus",
                "title": "CNAuthorizationStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Entities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnentitytype/contacts",
                    "title": "CNEntityTypeContacts",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cnentitytype",
                "title": "CNEntityType",
                "type": "enum"
              },
              {
                "title": "Fetching contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/enumeratecontacts(with:usingblock:)",
                "title": "- enumerateContactsWithFetchRequest:error:usingBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/unifiedmecontactwithkeys(tofetch:)",
                "title": "- unifiedMeContactWithKeysToFetch:error:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/unifiedcontact(withidentifier:keystofetch:)",
                "title": "- unifiedContactWithIdentifier:keysToFetch:error:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/unifiedcontacts(matching:keystofetch:)",
                "title": "- unifiedContactsMatchingPredicate:keysToFetch:error:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/enumeratorforcontactfetchrequest:error:",
                "title": "- enumeratorForContactFetchRequest:error:",
                "type": "method"
              },
              {
                "title": "Fetching groups and containers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/defaultcontaineridentifier()",
                "title": "- defaultContainerIdentifier",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/groups(matching:)",
                "title": "- groupsMatchingPredicate:error:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/containers(matching:)",
                "title": "- containersMatchingPredicate:error:",
                "type": "method"
              },
              {
                "title": "Fetching change history info",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/enumeratorforchangehistoryfetchrequest:error:",
                "title": "- enumeratorForChangeHistoryFetchRequest:error:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/currenthistorytoken",
                "title": "currentHistoryToken",
                "type": "property"
              },
              {
                "title": "Saving changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/execute(_:)",
                "title": "- executeSaveRequest:error:",
                "type": "method"
              },
              {
                "title": "Responding to contact store changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstoredidchangenotification",
                "title": "CNContactStoreDidChangeNotification",
                "type": "var"
              }
            ],
            "path": "/documentation/contacts/cncontactstore",
            "title": "CNContactStore",
            "type": "class"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nscontactsusagedescription",
            "title": "NSContactsUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.contacts.notes",
            "title": "com.apple.developer.contacts.notes",
            "type": "typealias"
          },
          {
            "title": "Contact data",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying the Contact",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/identifier",
                "title": "identifier",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/contacttype",
                "title": "contactType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontacttype/person",
                    "title": "CNContactTypePerson",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontacttype/organization",
                    "title": "CNContactTypeOrganization",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cncontacttype",
                "title": "CNContactType",
                "type": "enum"
              },
              {
                "title": "Getting Name Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/nameprefix",
                "title": "namePrefix",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/givenname",
                "title": "givenName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/middlename",
                "title": "middleName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/familyname",
                "title": "familyName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/previousfamilyname",
                "title": "previousFamilyName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/namesuffix",
                "title": "nameSuffix",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/nickname",
                "title": "nickname",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticgivenname",
                "title": "phoneticGivenName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticmiddlename",
                "title": "phoneticMiddleName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticfamilyname",
                "title": "phoneticFamilyName",
                "type": "property"
              },
              {
                "title": "Getting Work Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/jobtitle",
                "title": "jobTitle",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/departmentname",
                "title": "departmentName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/organizationname",
                "title": "organizationName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticorganizationname",
                "title": "phoneticOrganizationName",
                "type": "property"
              },
              {
                "title": "Getting Addresses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/postaladdresses",
                "title": "postalAddresses",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/emailaddresses",
                "title": "emailAddresses",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/urladdresses",
                "title": "urlAddresses",
                "type": "property"
              },
              {
                "title": "Getting Phone Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/phonenumbers",
                "title": "phoneNumbers",
                "type": "property"
              },
              {
                "title": "Getting Social Profiles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/socialprofiles",
                "title": "socialProfiles",
                "type": "property"
              },
              {
                "title": "Getting Birthday Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/birthday",
                "title": "birthday",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/nongregorianbirthday",
                "title": "nonGregorianBirthday",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/dates",
                "title": "dates",
                "type": "property"
              },
              {
                "title": "Getting Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/note",
                "title": "note",
                "type": "property"
              },
              {
                "title": "Getting Contact Images",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/imagedata",
                "title": "imageData",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/thumbnailimagedata",
                "title": "thumbnailImageData",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/imagedataavailable",
                "title": "imageDataAvailable",
                "type": "property"
              },
              {
                "title": "Getting Related Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/contactrelations",
                "title": "contactRelations",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/instantmessageaddresses",
                "title": "instantMessageAddresses",
                "type": "property"
              },
              {
                "title": "Localizing Contact Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/localizedstring(forkey:)",
                "title": "+ localizedStringForKey:",
                "type": "method"
              },
              {
                "title": "Comparing Contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/descriptorforallcomparatorkeys()",
                "title": "+ descriptorForAllComparatorKeys",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/comparator(fornamesortorder:)",
                "title": "+ comparatorForNameSortOrder:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/isunifiedwithcontact(withidentifier:)",
                "title": "- isUnifiedWithContactWithIdentifier:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Sort Orders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/none",
                    "title": "CNContactSortOrderNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/userdefault",
                    "title": "CNContactSortOrderUserDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/givenname",
                    "title": "CNContactSortOrderGivenName",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/familyname",
                    "title": "CNContactSortOrderFamilyName",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cncontactsortorder",
                "title": "CNContactSortOrder",
                "type": "enum"
              },
              {
                "title": "Checking the Availability of Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/iskeyavailable(_:)",
                "title": "- isKeyAvailable:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/arekeysavailable(_:)",
                "title": "- areKeysAvailable:",
                "type": "method"
              },
              {
                "title": "Getting Search Predicates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(matchingname:)",
                "title": "+ predicateForContactsMatchingName:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(withidentifiers:)",
                "title": "+ predicateForContactsWithIdentifiers:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontactsingroup(withidentifier:)",
                "title": "+ predicateForContactsInGroupWithIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontactsincontainer(withidentifier:)",
                "title": "+ predicateForContactsInContainerWithIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(matching:)",
                "title": "+ predicateForContactsMatchingPhoneNumber:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(matchingemailaddress:)",
                "title": "+ predicateForContactsMatchingEmailAddress:",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cncontact",
            "title": "CNContact",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Setting the Identity of the Contact",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/contacttype",
                "title": "contactType",
                "type": "property"
              },
              {
                "title": "Setting Name Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/nameprefix",
                "title": "namePrefix",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/givenname",
                "title": "givenName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/middlename",
                "title": "middleName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/familyname",
                "title": "familyName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/previousfamilyname",
                "title": "previousFamilyName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/namesuffix",
                "title": "nameSuffix",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/nickname",
                "title": "nickname",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticgivenname",
                "title": "phoneticGivenName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticmiddlename",
                "title": "phoneticMiddleName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticfamilyname",
                "title": "phoneticFamilyName",
                "type": "property"
              },
              {
                "title": "Setting Work Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/jobtitle",
                "title": "jobTitle",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/departmentname",
                "title": "departmentName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/organizationname",
                "title": "organizationName",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticorganizationname",
                "title": "phoneticOrganizationName",
                "type": "property"
              },
              {
                "title": "Setting Addresses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/postaladdresses",
                "title": "postalAddresses",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/emailaddresses",
                "title": "emailAddresses",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/urladdresses",
                "title": "urlAddresses",
                "type": "property"
              },
              {
                "title": "Setting Phone Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phonenumbers",
                "title": "phoneNumbers",
                "type": "property"
              },
              {
                "title": "Setting Social Profiles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/socialprofiles",
                "title": "socialProfiles",
                "type": "property"
              },
              {
                "title": "Setting Birthday Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/dates",
                "title": "dates",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/nongregorianbirthday",
                "title": "nonGregorianBirthday",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/birthday",
                "title": "birthday",
                "type": "property"
              },
              {
                "title": "Setting Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/note",
                "title": "note",
                "type": "property"
              },
              {
                "title": "Setting Images",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/imagedata",
                "title": "imageData",
                "type": "property"
              },
              {
                "title": "Relating Other Information to the Contact",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/contactrelations",
                "title": "contactRelations",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/instantmessageaddresses",
                "title": "instantMessageAddresses",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnmutablecontact",
            "title": "CNMutableContact",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Addresses",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the Parts of a Postal Address",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/street",
                    "title": "street",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/city",
                    "title": "city",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/state",
                    "title": "state",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/postalcode",
                    "title": "postalCode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/country",
                    "title": "country",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/isocountrycode",
                    "title": "ISOCountryCode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/subadministrativearea",
                    "title": "subAdministrativeArea",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/sublocality",
                    "title": "subLocality",
                    "type": "property"
                  },
                  {
                    "title": "Getting Localized Postal Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/localizedstring(forkey:)",
                    "title": "+ localizedStringForKey:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressstreetkey",
                    "title": "CNPostalAddressStreetKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdresscitykey",
                    "title": "CNPostalAddressCityKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressstatekey",
                    "title": "CNPostalAddressStateKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdresspostalcodekey",
                    "title": "CNPostalAddressPostalCodeKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdresscountrykey",
                    "title": "CNPostalAddressCountryKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressisocountrycodekey",
                    "title": "CNPostalAddressISOCountryCodeKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cnpostaladdress",
                "title": "CNPostalAddress",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Modifying the Parts of a Postal Address",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/street",
                    "title": "street",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/city",
                    "title": "city",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/state",
                    "title": "state",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/postalcode",
                    "title": "postalCode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/country",
                    "title": "country",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/isocountrycode",
                    "title": "ISOCountryCode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/subadministrativearea",
                    "title": "subAdministrativeArea",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/sublocality",
                    "title": "subLocality",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contacts/cnmutablepostaladdress",
                "title": "CNMutablePostalAddress",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Instant Message Address",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/init(username:service:)",
                    "title": "- initWithUsername:service:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Address Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/service",
                    "title": "service",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/username",
                    "title": "username",
                    "type": "property"
                  },
                  {
                    "title": "Getting Localized Address Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/localizedstring(forkey:)",
                    "title": "+ localizedStringForKey:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddressusernamekey",
                    "title": "CNInstantMessageAddressUsernameKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddressservicekey",
                    "title": "CNInstantMessageAddressServiceKey",
                    "type": "var"
                  },
                  {
                    "title": "Getting Localized Service Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/localizedstring(forservice:)",
                    "title": "+ localizedStringForService:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceaim",
                    "title": "CNInstantMessageServiceAIM",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicefacebook",
                    "title": "CNInstantMessageServiceFacebook",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicegadugadu",
                    "title": "CNInstantMessageServiceGaduGadu",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicegoogletalk",
                    "title": "CNInstantMessageServiceGoogleTalk",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceicq",
                    "title": "CNInstantMessageServiceICQ",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicejabber",
                    "title": "CNInstantMessageServiceJabber",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicemsn",
                    "title": "CNInstantMessageServiceMSN",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceqq",
                    "title": "CNInstantMessageServiceQQ",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceskype",
                    "title": "CNInstantMessageServiceSkype",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceyahoo",
                    "title": "CNInstantMessageServiceYahoo",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cninstantmessageaddress",
                "title": "CNInstantMessageAddress",
                "type": "class"
              },
              {
                "title": "Phone Numbers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Phone Number Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnphonenumber/init(stringvalue:)",
                    "title": "- initWithStringValue:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnphonenumber/phonenumberwithstringvalue:",
                    "title": "+ phoneNumberWithStringValue:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Phone Number",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnphonenumber/stringvalue",
                    "title": "stringValue",
                    "type": "property"
                  },
                  {
                    "title": "Getting Phone-Related Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactphonenumberskey",
                    "title": "CNContactPhoneNumbersKey",
                    "type": "var"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/contacts/cnphonenumber/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/contacts/cnphonenumber/new()",
                    "title": "+ new",
                    "type": "method"
                  }
                ],
                "path": "/documentation/contacts/cnphonenumber",
                "title": "CNPhoneNumber",
                "type": "class"
              },
              {
                "title": "Groups and Containers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the Group Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/identifier",
                    "title": "identifier",
                    "type": "property"
                  },
                  {
                    "title": "Generating Search Predicates for Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/predicateforgroups(withidentifiers:)",
                    "title": "+ predicateForGroupsWithIdentifiers:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/predicateforgroupsincontainer(withidentifier:)",
                    "title": "+ predicateForGroupsInContainerWithIdentifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/predicateforsubgroupsingroup(withidentifier:)",
                    "title": "+ predicateForSubgroupsInGroupWithIdentifier:",
                    "type": "method"
                  },
                  {
                    "title": "Getting Group-Related Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cngroupidentifierkey",
                    "title": "CNGroupIdentifierKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cngroupnamekey",
                    "title": "CNGroupNameKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cngroup",
                "title": "CNGroup",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Modifying the Group Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablegroup/name",
                    "title": "name",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contacts/cnmutablegroup",
                "title": "CNMutableGroup",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Container Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/identifier",
                    "title": "identifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/local",
                        "title": "CNContainerTypeLocal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/exchange",
                        "title": "CNContainerTypeExchange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/carddav",
                        "title": "CNContainerTypeCardDAV",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/unassigned",
                        "title": "CNContainerTypeUnassigned",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/contacts/cncontainertype",
                    "title": "CNContainerType",
                    "type": "enum"
                  },
                  {
                    "title": "Generating Search Predicates for Containers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/predicateforcontainerofcontact(withidentifier:)",
                    "title": "+ predicateForContainerOfContactWithIdentifier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/predicateforcontainers(withidentifiers:)",
                    "title": "+ predicateForContainersWithIdentifiers:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/predicateforcontainerofgroup(withidentifier:)",
                    "title": "+ predicateForContainerOfGroupWithIdentifier:",
                    "type": "method"
                  },
                  {
                    "title": "Getting Container-Related Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontaineridentifierkey",
                    "title": "CNContainerIdentifierKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cncontainernamekey",
                    "title": "CNContainerNameKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cncontainertypekey",
                    "title": "CNContainerTypeKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cncontainer",
                "title": "CNContainer",
                "type": "class"
              },
              {
                "title": "Social Profiles",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Social Profile Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/init(urlstring:username:useridentifier:service:)",
                    "title": "- initWithUrlString:username:userIdentifier:service:",
                    "type": "method"
                  },
                  {
                    "title": "Getting Social Profile Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/username",
                    "title": "username",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/service",
                    "title": "service",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/urlstring",
                    "title": "urlString",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/useridentifier",
                    "title": "userIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Getting Localized User Profile Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/localizedstring(forkey:)",
                    "title": "+ localizedStringForKey:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileusernamekey",
                    "title": "CNSocialProfileUsernameKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicekey",
                    "title": "CNSocialProfileServiceKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileurlstringkey",
                    "title": "CNSocialProfileURLStringKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileuseridentifierkey",
                    "title": "CNSocialProfileUserIdentifierKey",
                    "type": "var"
                  },
                  {
                    "title": "Getting Localized Service Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/localizedstring(forservice:)",
                    "title": "+ localizedStringForService:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicefacebook",
                    "title": "CNSocialProfileServiceFacebook",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileserviceflickr",
                    "title": "CNSocialProfileServiceFlickr",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicegamecenter",
                    "title": "CNSocialProfileServiceGameCenter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicelinkedin",
                    "title": "CNSocialProfileServiceLinkedIn",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicemyspace",
                    "title": "CNSocialProfileServiceMySpace",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicesinaweibo",
                    "title": "CNSocialProfileServiceSinaWeibo",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicetencentweibo",
                    "title": "CNSocialProfileServiceTencentWeibo",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicetwitter",
                    "title": "CNSocialProfileServiceTwitter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileserviceyelp",
                    "title": "CNSocialProfileServiceYelp",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cnsocialprofile",
                "title": "CNSocialProfile",
                "type": "class"
              },
              {
                "title": "Related Data",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Contact Relation Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactrelation/init(name:)",
                    "title": "- initWithName:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cncontactrelation/contactrelationwithname:",
                    "title": "+ contactRelationWithName:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Relation Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactrelation/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Common Relationship Labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationspouse",
                    "title": "CNLabelContactRelationSpouse",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationpartner",
                    "title": "CNLabelContactRelationPartner",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughter",
                    "title": "CNLabelContactRelationDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationson",
                    "title": "CNLabelContactRelationSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationchild",
                    "title": "CNLabelContactRelationChild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfather",
                    "title": "CNLabelContactRelationFather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmother",
                    "title": "CNLabelContactRelationMother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparent",
                    "title": "CNLabelContactRelationParent",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrother",
                    "title": "CNLabelContactRelationBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsister",
                    "title": "CNLabelContactRelationSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfriend",
                    "title": "CNLabelContactRelationFriend",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationassistant",
                    "title": "CNLabelContactRelationAssistant",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmanager",
                    "title": "CNLabelContactRelationManager",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cncontactrelation",
                "title": "CNContactRelation",
                "type": "class"
              },
              {
                "title": "Generic Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a labeled value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/init(label:value:)",
                    "title": "- initWithLabel:value:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/labeledvaluewithlabel:value:",
                    "title": "+ labeledValueWithLabel:value:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the label and value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/value",
                    "title": "value",
                    "type": "property"
                  },
                  {
                    "title": "Setting labels and values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/settinglabel(_:)",
                    "title": "- labeledValueBySettingLabel:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/settinglabel(_:value:)",
                    "title": "- labeledValueBySettingLabel:value:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/settingvalue(_:)",
                    "title": "- labeledValueBySettingValue:",
                    "type": "method"
                  },
                  {
                    "title": "Localizing the label and value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/localizedstring(forlabel:)",
                    "title": "+ localizedStringForLabel:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the unique identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/identifier",
                    "title": "identifier",
                    "type": "property"
                  },
                  {
                    "title": "Getting common labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelhome",
                    "title": "CNLabelHome",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelwork",
                    "title": "CNLabelWork",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelschool",
                    "title": "CNLabelSchool",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelother",
                    "title": "CNLabelOther",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelemailicloud",
                    "title": "CNLabelEmailiCloud",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelurladdresshomepage",
                    "title": "CNLabelURLAddressHomePage",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeldateanniversary",
                    "title": "CNLabelDateAnniversary",
                    "type": "var"
                  },
                  {
                    "title": "Getting phone number labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumbermain",
                    "title": "CNLabelPhoneNumberMain",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberiphone",
                    "title": "CNLabelPhoneNumberiPhone",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberapplewatch",
                    "title": "CNLabelPhoneNumberAppleWatch",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumbermobile",
                    "title": "CNLabelPhoneNumberMobile",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberpager",
                    "title": "CNLabelPhoneNumberPager",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberworkfax",
                    "title": "CNLabelPhoneNumberWorkFax",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberhomefax",
                    "title": "CNLabelPhoneNumberHomeFax",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberotherfax",
                    "title": "CNLabelPhoneNumberOtherFax",
                    "type": "var"
                  },
                  {
                    "title": "Getting immediate family relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrother",
                    "title": "CNLabelContactRelationBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationchild",
                    "title": "CNLabelContactRelationChild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughter",
                    "title": "CNLabelContactRelationDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationelderbrother",
                    "title": "CNLabelContactRelationElderBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersibling",
                    "title": "CNLabelContactRelationElderSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersister",
                    "title": "CNLabelContactRelationElderSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldestbrother",
                    "title": "CNLabelContactRelationEldestBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldestsister",
                    "title": "CNLabelContactRelationEldestSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfather",
                    "title": "CNLabelContactRelationFather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfemalepartner",
                    "title": "CNLabelContactRelationFemalePartner",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationhusband",
                    "title": "CNLabelContactRelationHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmalepartner",
                    "title": "CNLabelContactRelationMalePartner",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmother",
                    "title": "CNLabelContactRelationMother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparent",
                    "title": "CNLabelContactRelationParent",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationpartner",
                    "title": "CNLabelContactRelationPartner",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsibling",
                    "title": "CNLabelContactRelationSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsister",
                    "title": "CNLabelContactRelationSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationson",
                    "title": "CNLabelContactRelationSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationspouse",
                    "title": "CNLabelContactRelationSpouse",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepbrother",
                    "title": "CNLabelContactRelationStepbrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepchild",
                    "title": "CNLabelContactRelationStepchild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepdaughter",
                    "title": "CNLabelContactRelationStepdaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepfather",
                    "title": "CNLabelContactRelationStepfather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepmother",
                    "title": "CNLabelContactRelationStepmother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepparent",
                    "title": "CNLabelContactRelationStepparent",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepsister",
                    "title": "CNLabelContactRelationStepsister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepson",
                    "title": "CNLabelContactRelationStepson",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationwife",
                    "title": "CNLabelContactRelationWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungerbrother",
                    "title": "CNLabelContactRelationYoungerBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersibling",
                    "title": "CNLabelContactRelationYoungerSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersister",
                    "title": "CNLabelContactRelationYoungerSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungestbrother",
                    "title": "CNLabelContactRelationYoungestBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungestsister",
                    "title": "CNLabelContactRelationYoungestSister",
                    "type": "var"
                  },
                  {
                    "title": "Getting acquaintance relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationboyfriend",
                    "title": "CNLabelContactRelationBoyfriend",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcolleague",
                    "title": "CNLabelContactRelationColleague",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfemalefriend",
                    "title": "CNLabelContactRelationFemaleFriend",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfriend",
                    "title": "CNLabelContactRelationFriend",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgirlfriend",
                    "title": "CNLabelContactRelationGirlfriend",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgirlfriendorboyfriend",
                    "title": "CNLabelContactRelationGirlfriendOrBoyfriend",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmalefriend",
                    "title": "CNLabelContactRelationMaleFriend",
                    "type": "var"
                  },
                  {
                    "title": "Getting business relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationassistant",
                    "title": "CNLabelContactRelationAssistant",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmanager",
                    "title": "CNLabelContactRelationManager",
                    "type": "var"
                  },
                  {
                    "title": "Getting education relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationteacher",
                    "title": "CNLabelContactRelationTeacher",
                    "type": "var"
                  },
                  {
                    "title": "Getting in-law relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlaw",
                    "title": "CNLabelContactRelationBrotherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlaweldersistershusband",
                    "title": "CNLabelContactRelationBrotherInLawElderSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawhusbandsbrother",
                    "title": "CNLabelContactRelationBrotherInLawHusbandsBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawhusbandssistershusband",
                    "title": "CNLabelContactRelationBrotherInLawHusbandsSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawsistershusband",
                    "title": "CNLabelContactRelationBrotherInLawSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawspousesbrother",
                    "title": "CNLabelContactRelationBrotherInLawSpousesBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawwifesbrother",
                    "title": "CNLabelContactRelationBrotherInLawWifesBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawwifessistershusband",
                    "title": "CNLabelContactRelationBrotherInLawWifesSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawyoungersistershusband",
                    "title": "CNLabelContactRelationBrotherInLawYoungerSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationchildinlaw",
                    "title": "CNLabelContactRelationChildInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcobrotherinlaw",
                    "title": "CNLabelContactRelationCoBrotherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcofatherinlaw",
                    "title": "CNLabelContactRelationCoFatherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcomotherinlaw",
                    "title": "CNLabelContactRelationCoMotherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcoparentinlaw",
                    "title": "CNLabelContactRelationCoParentInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcosiblinginlaw",
                    "title": "CNLabelContactRelationCoSiblingInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcosisterinlaw",
                    "title": "CNLabelContactRelationCoSisterInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationelderbrotherinlaw",
                    "title": "CNLabelContactRelationElderBrotherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersiblinginlaw",
                    "title": "CNLabelContactRelationElderSiblingInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersisterinlaw",
                    "title": "CNLabelContactRelationElderSisterInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlaw",
                    "title": "CNLabelContactRelationFatherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlawhusbandsfather",
                    "title": "CNLabelContactRelationFatherInLawHusbandsFather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlaworstepfather",
                    "title": "CNLabelContactRelationFatherInLawOrStepfather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlawwifesfather",
                    "title": "CNLabelContactRelationFatherInLawWifesFather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlaw",
                    "title": "CNLabelContactRelationMotherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlawhusbandsmother",
                    "title": "CNLabelContactRelationMotherInLawHusbandsMother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlaworstepmother",
                    "title": "CNLabelContactRelationMotherInLawOrStepmother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlawwifesmother",
                    "title": "CNLabelContactRelationMotherInLawWifesMother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentinlaw",
                    "title": "CNLabelContactRelationParentInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsiblinginlaw",
                    "title": "CNLabelContactRelationSiblingInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlaw",
                    "title": "CNLabelContactRelationSisterInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawbrotherswife",
                    "title": "CNLabelContactRelationSisterInLawBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawelderbrotherswife",
                    "title": "CNLabelContactRelationSisterInLawElderBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawhusbandsbrotherswife",
                    "title": "CNLabelContactRelationSisterInLawHusbandsBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawhusbandssister",
                    "title": "CNLabelContactRelationSisterInLawHusbandsSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawspousessister",
                    "title": "CNLabelContactRelationSisterInLawSpousesSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawwifesbrotherswife",
                    "title": "CNLabelContactRelationSisterInLawWifesBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawwifessister",
                    "title": "CNLabelContactRelationSisterInLawWifesSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawyoungerbrotherswife",
                    "title": "CNLabelContactRelationSisterInLawYoungerBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungerbrotherinlaw",
                    "title": "CNLabelContactRelationYoungerBrotherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersiblinginlaw",
                    "title": "CNLabelContactRelationYoungerSiblingInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersisterinlaw",
                    "title": "CNLabelContactRelationYoungerSisterInLaw",
                    "type": "var"
                  },
                  {
                    "title": "Getting extended family relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationaunt",
                    "title": "CNLabelContactRelationAunt",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfathersbrotherswife",
                    "title": "CNLabelContactRelationAuntFathersBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfatherselderbrotherswife",
                    "title": "CNLabelContactRelationAuntFathersElderBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfatherseldersister",
                    "title": "CNLabelContactRelationAuntFathersElderSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfatherssister",
                    "title": "CNLabelContactRelationAuntFathersSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfathersyoungerbrotherswife",
                    "title": "CNLabelContactRelationAuntFathersYoungerBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfathersyoungersister",
                    "title": "CNLabelContactRelationAuntFathersYoungerSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmothersbrotherswife",
                    "title": "CNLabelContactRelationAuntMothersBrothersWife",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmotherseldersister",
                    "title": "CNLabelContactRelationAuntMothersElderSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmotherssister",
                    "title": "CNLabelContactRelationAuntMothersSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmothersyoungersister",
                    "title": "CNLabelContactRelationAuntMothersYoungerSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntparentseldersister",
                    "title": "CNLabelContactRelationAuntParentsElderSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntparentssister",
                    "title": "CNLabelContactRelationAuntParentsSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntparentsyoungersister",
                    "title": "CNLabelContactRelationAuntParentsYoungerSister",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousin",
                    "title": "CNLabelContactRelationCousin",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfathersbrothersdaughter",
                    "title": "CNLabelContactRelationCousinFathersBrothersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfathersbrothersson",
                    "title": "CNLabelContactRelationCousinFathersBrothersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfatherssistersdaughter",
                    "title": "CNLabelContactRelationCousinFathersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfatherssistersson",
                    "title": "CNLabelContactRelationCousinFathersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousingrandparentssiblingschild",
                    "title": "CNLabelContactRelationCousinGrandparentsSiblingsChild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousingrandparentssiblingsdaughter",
                    "title": "CNLabelContactRelationCousinGrandparentsSiblingsDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousingrandparentssiblingsson",
                    "title": "CNLabelContactRelationCousinGrandparentsSiblingsSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmothersbrothersdaughter",
                    "title": "CNLabelContactRelationCousinMothersBrothersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmothersbrothersson",
                    "title": "CNLabelContactRelationCousinMothersBrothersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmotherssistersdaughter",
                    "title": "CNLabelContactRelationCousinMothersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmotherssistersson",
                    "title": "CNLabelContactRelationCousinMothersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinorsiblingschild",
                    "title": "CNLabelContactRelationCousinOrSiblingsChild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinparentssiblingschild",
                    "title": "CNLabelContactRelationCousinParentsSiblingsChild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinparentssiblingsdaughter",
                    "title": "CNLabelContactRelationCousinParentsSiblingsDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinparentssiblingsson",
                    "title": "CNLabelContactRelationCousinParentsSiblingsSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughterinlaw",
                    "title": "CNLabelContactRelationDaughterInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughterinlaworsisterinlaw",
                    "title": "CNLabelContactRelationDaughterInLawOrSisterInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughterinlaworstepdaughter",
                    "title": "CNLabelContactRelationDaughterInLawOrStepdaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousin",
                    "title": "CNLabelContactRelationElderCousin",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfathersbrothersdaughter",
                    "title": "CNLabelContactRelationElderCousinFathersBrothersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfathersbrothersson",
                    "title": "CNLabelContactRelationElderCousinFathersBrothersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfatherssistersdaughter",
                    "title": "CNLabelContactRelationElderCousinFathersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfatherssistersson",
                    "title": "CNLabelContactRelationElderCousinFathersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmothersbrothersdaughter",
                    "title": "CNLabelContactRelationElderCousinMothersBrothersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmothersbrothersson",
                    "title": "CNLabelContactRelationElderCousinMothersBrothersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssiblingsdaughterorfatherssistersdaughter",
                    "title": "CNLabelContactRelationElderCousinMothersSiblingsDaughterOrFathersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssiblingssonorfatherssistersson",
                    "title": "CNLabelContactRelationElderCousinMothersSiblingsSonOrFathersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssistersdaughter",
                    "title": "CNLabelContactRelationElderCousinMothersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssistersson",
                    "title": "CNLabelContactRelationElderCousinMothersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinparentssiblingsdaughter",
                    "title": "CNLabelContactRelationElderCousinParentsSiblingsDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinparentssiblingsson",
                    "title": "CNLabelContactRelationElderCousinParentsSiblingsSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfemalecousin",
                    "title": "CNLabelContactRelationFemaleCousin",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandaunt",
                    "title": "CNLabelContactRelationGrandaunt",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandchild",
                    "title": "CNLabelContactRelationGrandchild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandchildorsiblingschild",
                    "title": "CNLabelContactRelationGrandchildOrSiblingsChild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughter",
                    "title": "CNLabelContactRelationGranddaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughterdaughtersdaughter",
                    "title": "CNLabelContactRelationGranddaughterDaughtersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughtersonsdaughter",
                    "title": "CNLabelContactRelationGranddaughterSonsDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughterorniece",
                    "title": "CNLabelContactRelationGranddaughterOrNiece",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandfather",
                    "title": "CNLabelContactRelationGrandfather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandfatherfathersfather",
                    "title": "CNLabelContactRelationGrandfatherFathersFather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandfathermothersfather",
                    "title": "CNLabelContactRelationGrandfatherMothersFather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandmother",
                    "title": "CNLabelContactRelationGrandmother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandmotherfathersmother",
                    "title": "CNLabelContactRelationGrandmotherFathersMother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandmothermothersmother",
                    "title": "CNLabelContactRelationGrandmotherMothersMother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandnephew",
                    "title": "CNLabelContactRelationGrandnephew",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandnephewbrothersgrandson",
                    "title": "CNLabelContactRelationGrandnephewBrothersGrandson",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandnephewsistersgrandson",
                    "title": "CNLabelContactRelationGrandnephewSistersGrandson",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandniece",
                    "title": "CNLabelContactRelationGrandniece",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandniecebrothersgranddaughter",
                    "title": "CNLabelContactRelationGrandnieceBrothersGranddaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandniecesistersgranddaughter",
                    "title": "CNLabelContactRelationGrandnieceSistersGranddaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandparent",
                    "title": "CNLabelContactRelationGrandparent",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandson",
                    "title": "CNLabelContactRelationGrandson",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandsondaughtersson",
                    "title": "CNLabelContactRelationGrandsonDaughtersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandsonsonsson",
                    "title": "CNLabelContactRelationGrandsonSonsSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandsonornephew",
                    "title": "CNLabelContactRelationGrandsonOrNephew",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranduncle",
                    "title": "CNLabelContactRelationGranduncle",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandchild",
                    "title": "CNLabelContactRelationGreatGrandchild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandchildorsiblingsgrandchild",
                    "title": "CNLabelContactRelationGreatGrandchildOrSiblingsGrandchild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgranddaughter",
                    "title": "CNLabelContactRelationGreatGranddaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandfather",
                    "title": "CNLabelContactRelationGreatGrandfather",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandmother",
                    "title": "CNLabelContactRelationGreatGrandmother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandparent",
                    "title": "CNLabelContactRelationGreatGrandparent",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandson",
                    "title": "CNLabelContactRelationGreatGrandson",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmalecousin",
                    "title": "CNLabelContactRelationMaleCousin",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephew",
                    "title": "CNLabelContactRelationNephew",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewbrothersson",
                    "title": "CNLabelContactRelationNephewBrothersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewbrotherssonorhusbandssiblingsson",
                    "title": "CNLabelContactRelationNephewBrothersSonOrHusbandsSiblingsSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnepheworcousin",
                    "title": "CNLabelContactRelationNephewOrCousin",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewsistersson",
                    "title": "CNLabelContactRelationNephewSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewsisterssonorwifessiblingsson",
                    "title": "CNLabelContactRelationNephewSistersSonOrWifesSiblingsSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniece",
                    "title": "CNLabelContactRelationNiece",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecebrothersdaughter",
                    "title": "CNLabelContactRelationNieceBrothersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecebrothersdaughterorhusbandssiblingsdaughter",
                    "title": "CNLabelContactRelationNieceBrothersDaughterOrHusbandsSiblingsDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnieceorcousin",
                    "title": "CNLabelContactRelationNieceOrCousin",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecesistersdaughter",
                    "title": "CNLabelContactRelationNieceSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecesistersdaughterorwifessiblingsdaughter",
                    "title": "CNLabelContactRelationNieceSistersDaughterOrWifesSiblingsDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentseldersibling",
                    "title": "CNLabelContactRelationParentsElderSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssibling",
                    "title": "CNLabelContactRelationParentsSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingfatherseldersibling",
                    "title": "CNLabelContactRelationParentsSiblingFathersElderSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingfatherssibling",
                    "title": "CNLabelContactRelationParentsSiblingFathersSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingfathersyoungersibling",
                    "title": "CNLabelContactRelationParentsSiblingFathersYoungerSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingmotherseldersibling",
                    "title": "CNLabelContactRelationParentsSiblingMothersElderSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingmotherssibling",
                    "title": "CNLabelContactRelationParentsSiblingMothersSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingmothersyoungersibling",
                    "title": "CNLabelContactRelationParentsSiblingMothersYoungerSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentsyoungersibling",
                    "title": "CNLabelContactRelationParentsYoungerSibling",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsiblingschild",
                    "title": "CNLabelContactRelationSiblingsChild",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsoninlaw",
                    "title": "CNLabelContactRelationSonInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsoninlaworbrotherinlaw",
                    "title": "CNLabelContactRelationSonInLawOrBrotherInLaw",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsoninlaworstepson",
                    "title": "CNLabelContactRelationSonInLawOrStepson",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncle",
                    "title": "CNLabelContactRelationUncle",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefathersbrother",
                    "title": "CNLabelContactRelationUncleFathersBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefatherselderbrother",
                    "title": "CNLabelContactRelationUncleFathersElderBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefatherseldersistershusband",
                    "title": "CNLabelContactRelationUncleFathersElderSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefatherssistershusband",
                    "title": "CNLabelContactRelationUncleFathersSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefathersyoungerbrother",
                    "title": "CNLabelContactRelationUncleFathersYoungerBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefathersyoungersistershusband",
                    "title": "CNLabelContactRelationUncleFathersYoungerSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemothersbrother",
                    "title": "CNLabelContactRelationUncleMothersBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemotherselderbrother",
                    "title": "CNLabelContactRelationUncleMothersElderBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemotherssistershusband",
                    "title": "CNLabelContactRelationUncleMothersSistersHusband",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemothersyoungerbrother",
                    "title": "CNLabelContactRelationUncleMothersYoungerBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncleparentsbrother",
                    "title": "CNLabelContactRelationUncleParentsBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncleparentselderbrother",
                    "title": "CNLabelContactRelationUncleParentsElderBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncleparentsyoungerbrother",
                    "title": "CNLabelContactRelationUncleParentsYoungerBrother",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousin",
                    "title": "CNLabelContactRelationYoungerCousin",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfathersbrothersdaughter",
                    "title": "CNLabelContactRelationYoungerCousinFathersBrothersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfathersbrothersson",
                    "title": "CNLabelContactRelationYoungerCousinFathersBrothersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfatherssistersdaughter",
                    "title": "CNLabelContactRelationYoungerCousinFathersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfatherssistersson",
                    "title": "CNLabelContactRelationYoungerCousinFathersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmothersbrothersdaughter",
                    "title": "CNLabelContactRelationYoungerCousinMothersBrothersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmothersbrothersson",
                    "title": "CNLabelContactRelationYoungerCousinMothersBrothersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssiblingsdaughterorfatherssistersdaughter",
                    "title": "CNLabelContactRelationYoungerCousinMothersSiblingsDaughterOrFathersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssiblingssonorfatherssistersson",
                    "title": "CNLabelContactRelationYoungerCousinMothersSiblingsSonOrFathersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssistersdaughter",
                    "title": "CNLabelContactRelationYoungerCousinMothersSistersDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssistersson",
                    "title": "CNLabelContactRelationYoungerCousinMothersSistersSon",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinparentssiblingsdaughter",
                    "title": "CNLabelContactRelationYoungerCousinParentsSiblingsDaughter",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinparentssiblingsson",
                    "title": "CNLabelContactRelationYoungerCousinParentsSiblingsSon",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cnlabeledvalue",
                "title": "CNLabeledValue",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Contact Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/contact",
                    "title": "contact",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Property Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/key",
                    "title": "key",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/value",
                    "title": "value",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/identifier",
                    "title": "identifier",
                    "type": "property"
                  },
                  {
                    "title": "Handling Exceptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactpropertynotfetchedexceptionname",
                    "title": "CNContactPropertyNotFetchedExceptionName",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cncontactproperty",
                "title": "CNContactProperty",
                "type": "class"
              }
            ],
            "path": "/documentation/contacts/data-objects",
            "title": "Data Objects",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Contact Identification",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactidentifierkey",
                "title": "CNContactIdentifierKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontacttypekey",
                "title": "CNContactTypeKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactpropertyattribute",
                "title": "CNContactPropertyAttribute",
                "type": "var"
              },
              {
                "title": "Name",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactnameprefixkey",
                "title": "CNContactNamePrefixKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactgivennamekey",
                "title": "CNContactGivenNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactmiddlenamekey",
                "title": "CNContactMiddleNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactfamilynamekey",
                "title": "CNContactFamilyNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactpreviousfamilynamekey",
                "title": "CNContactPreviousFamilyNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactnamesuffixkey",
                "title": "CNContactNameSuffixKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactnicknamekey",
                "title": "CNContactNicknameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticgivennamekey",
                "title": "CNContactPhoneticGivenNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticmiddlenamekey",
                "title": "CNContactPhoneticMiddleNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticfamilynamekey",
                "title": "CNContactPhoneticFamilyNameKey",
                "type": "var"
              },
              {
                "title": "Work",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactjobtitlekey",
                "title": "CNContactJobTitleKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactdepartmentnamekey",
                "title": "CNContactDepartmentNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactorganizationnamekey",
                "title": "CNContactOrganizationNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticorganizationnamekey",
                "title": "CNContactPhoneticOrganizationNameKey",
                "type": "var"
              },
              {
                "title": "Addresses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactpostaladdresseskey",
                "title": "CNContactPostalAddressesKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactemailaddresseskey",
                "title": "CNContactEmailAddressesKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontacturladdresseskey",
                "title": "CNContactUrlAddressesKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactinstantmessageaddresseskey",
                "title": "CNContactInstantMessageAddressesKey",
                "type": "var"
              },
              {
                "title": "Phone",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactphonenumberskey",
                "title": "CNContactPhoneNumbersKey",
                "type": "var"
              },
              {
                "title": "Social Profiles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactsocialprofileskey",
                "title": "CNContactSocialProfilesKey",
                "type": "var"
              },
              {
                "title": "Birthday",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactbirthdaykey",
                "title": "CNContactBirthdayKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactnongregorianbirthdaykey",
                "title": "CNContactNonGregorianBirthdayKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactdateskey",
                "title": "CNContactDatesKey",
                "type": "var"
              },
              {
                "title": "Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactnotekey",
                "title": "CNContactNoteKey",
                "type": "var"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.contacts.notes",
                "title": "com.apple.developer.contacts.notes",
                "type": "typealias"
              },
              {
                "title": "Images",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactimagedatakey",
                "title": "CNContactImageDataKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactthumbnailimagedatakey",
                "title": "CNContactThumbnailImageDataKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactimagedataavailablekey",
                "title": "CNContactImageDataAvailableKey",
                "type": "var"
              },
              {
                "title": "Relationships",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactrelationskey",
                "title": "CNContactRelationsKey",
                "type": "var"
              },
              {
                "title": "Groups and Containers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cngroupnamekey",
                "title": "CNGroupNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cngroupidentifierkey",
                "title": "CNGroupIdentifierKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontainernamekey",
                "title": "CNContainerNameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontainertypekey",
                "title": "CNContainerTypeKey",
                "type": "var"
              },
              {
                "title": "Instant Messaging Keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cninstantmessageaddressservicekey",
                "title": "CNInstantMessageAddressServiceKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cninstantmessageaddressusernamekey",
                "title": "CNInstantMessageAddressUsernameKey",
                "type": "var"
              },
              {
                "title": "Social Profile Keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileservicekey",
                "title": "CNSocialProfileServiceKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileurlstringkey",
                "title": "CNSocialProfileURLStringKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileusernamekey",
                "title": "CNSocialProfileUsernameKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileuseridentifierkey",
                "title": "CNSocialProfileUserIdentifierKey",
                "type": "var"
              },
              {
                "title": "Key Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnkeydescriptor",
                "title": "CNKeyDescriptor",
                "type": "protocol"
              }
            ],
            "path": "/documentation/contacts/contact-keys",
            "title": "Contact Keys",
            "type": "collection"
          },
          {
            "title": "Fetch and save requests",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Fetch Request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/init(keystofetch:)",
                "title": "- initWithKeysToFetch:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnkeydescriptor",
                "title": "CNKeyDescriptor",
                "type": "protocol"
              },
              {
                "title": "Specifying the Search Predicate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/predicate",
                "title": "predicate",
                "type": "property"
              },
              {
                "title": "Configuring the Fetch Options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/mutableobjects",
                "title": "mutableObjects",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/unifyresults",
                "title": "unifyResults",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/sortorder",
                "title": "sortOrder",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Sort Orders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/none",
                    "title": "CNContactSortOrderNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/userdefault",
                    "title": "CNContactSortOrderUserDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/givenname",
                    "title": "CNContactSortOrderGivenName",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/familyname",
                    "title": "CNContactSortOrderFamilyName",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cncontactsortorder",
                "title": "CNContactSortOrder",
                "type": "enum"
              },
              {
                "title": "Specifying the Keys to Fetch",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/keystofetch",
                "title": "keysToFetch",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cncontactfetchrequest",
            "title": "CNContactFetchRequest",
            "type": "class"
          },
          {
            "path": "/documentation/contacts/cnfetchrequest",
            "title": "CNFetchRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing results",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnfetchresult/currenthistorytoken",
                "title": "currentHistoryToken",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnfetchresult/value",
                "title": "value",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnfetchresult",
            "title": "CNFetchResult",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Saving contact changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/add(_:tocontainerwithidentifier:)-7eut4",
                "title": "- addContact:toContainerWithIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/update(_:)-3gaig",
                "title": "- updateContact:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/delete(_:)-8m1tc",
                "title": "- deleteContact:",
                "type": "method"
              },
              {
                "title": "Saving group changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/add(_:tocontainerwithidentifier:)-4ikaa",
                "title": "- addGroup:toContainerWithIdentifier:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/update(_:)-8h6f6",
                "title": "- updateGroup:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/delete(_:)-29lsm",
                "title": "- deleteGroup:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/addmember(_:to:)",
                "title": "- addMember:toGroup:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/removemember(_:from:)",
                "title": "- removeMember:fromGroup:",
                "type": "method"
              },
              {
                "title": "Adding and removing subgroups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/addsubgroup(_:to:)",
                "title": "- addSubgroup:toGroup:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/removesubgroup(_:from:)",
                "title": "- removeSubgroup:fromGroup:",
                "type": "method"
              },
              {
                "title": "Configuring the save request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/shouldrefetchcontacts",
                "title": "shouldRefetchContacts",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/transactionauthor",
                "title": "transactionAuthor",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnsaverequest",
            "title": "CNSaveRequest",
            "type": "class"
          },
          {
            "title": "Change history data",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddcontactevent/contact",
                "title": "contact",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddcontactevent/containeridentifier",
                "title": "containerIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddcontactevent",
            "title": "CNChangeHistoryAddContactEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddgroupevent/group",
                "title": "group",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddgroupevent/containeridentifier",
                "title": "containerIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddgroupevent",
            "title": "CNChangeHistoryAddGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddmembertogroupevent/group",
                "title": "group",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddmembertogroupevent/member",
                "title": "member",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddmembertogroupevent",
            "title": "CNChangeHistoryAddMemberToGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddsubgrouptogroupevent/group",
                "title": "group",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddsubgrouptogroupevent/subgroup",
                "title": "subgroup",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddsubgrouptogroupevent",
            "title": "CNChangeHistoryAddSubgroupToGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistorydeletecontactevent/contactidentifier",
                "title": "contactIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistorydeletecontactevent",
            "title": "CNChangeHistoryDeleteContactEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistorydeletegroupevent/groupidentifier",
                "title": "groupIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistorydeletegroupevent",
            "title": "CNChangeHistoryDeleteGroupEvent",
            "type": "class"
          },
          {
            "path": "/documentation/contacts/cnchangehistorydropeverythingevent",
            "title": "CNChangeHistoryDropEverythingEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Processing an event",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryevent/accept(_:)",
                "title": "- acceptEventVisitor:",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryevent",
            "title": "CNChangeHistoryEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring the fetch request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/additionalcontactkeydescriptors",
                "title": "additionalContactKeyDescriptors",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/excludedtransactionauthors",
                "title": "excludedTransactionAuthors",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/includegroupchanges",
                "title": "includeGroupChanges",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/mutableobjects",
                "title": "mutableObjects",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/shouldunifyresults",
                "title": "shouldUnifyResults",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/startingtoken",
                "title": "startingToken",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryfetchrequest",
            "title": "CNChangeHistoryFetchRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovememberfromgroupevent/group",
                "title": "group",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovememberfromgroupevent/member",
                "title": "member",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryremovememberfromgroupevent",
            "title": "CNChangeHistoryRemoveMemberFromGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovesubgroupfromgroupevent/group",
                "title": "group",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovesubgroupfromgroupevent/subgroup",
                "title": "subgroup",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryremovesubgroupfromgroupevent",
            "title": "CNChangeHistoryRemoveSubgroupFromGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryupdatecontactevent/contact",
                "title": "contact",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryupdatecontactevent",
            "title": "CNChangeHistoryUpdateContactEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryupdategroupevent/group",
                "title": "group",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryupdategroupevent",
            "title": "CNChangeHistoryUpdateGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Updating contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-9w73y",
                "title": "- visitAddContactEvent:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-1pf2a",
                "title": "- visitUpdateContactEvent:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-ci4z",
                "title": "- visitDeleteContactEvent:",
                "type": "method"
              },
              {
                "title": "Updating groups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-ve62",
                "title": "- visitAddGroupEvent:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-23p9h",
                "title": "- visitUpdateGroupEvent:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-82duo",
                "title": "- visitDeleteGroupEvent:",
                "type": "method"
              },
              {
                "title": "Updating subgroups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitaddsubgroup(_:)",
                "title": "- visitAddSubgroupToGroupEvent:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitremovesubgroup(_:)",
                "title": "- visitRemoveSubgroupFromGroupEvent:",
                "type": "method"
              },
              {
                "title": "Updating contacts in groups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitaddmember(_:)",
                "title": "- visitAddMemberToGroupEvent:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitremovemember(_:)",
                "title": "- visitRemoveMemberFromGroupEvent:",
                "type": "method"
              },
              {
                "title": "Resetting synced data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-2yhz3",
                "title": "- visitDropEverythingEvent:",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryeventvisitor",
            "title": "CNChangeHistoryEventVisitor",
            "type": "protocol"
          },
          {
            "title": "Formatters",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a formatted attributed string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/attributedstring(from:defaultattributes:)",
                "title": "- attributedStringFromContact:defaultAttributes:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/attributedstring(from:style:defaultattributes:)",
                "title": "+ attributedStringFromContact:style:defaultAttributes:",
                "type": "method"
              },
              {
                "title": "Creating a formatted string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/string(from:)",
                "title": "- stringFromContact:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/string(from:style:)",
                "title": "+ stringFromContact:style:",
                "type": "method"
              },
              {
                "title": "Specifying the formatting style",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/style",
                "title": "style",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactformatterstyle/fullname",
                    "title": "CNContactFormatterStyleFullName",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactformatterstyle/phoneticfullname",
                    "title": "CNContactFormatterStylePhoneticFullName",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cncontactformatterstyle",
                "title": "CNContactFormatterStyle",
                "type": "enum"
              },
              {
                "title": "Getting a descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/descriptorforrequiredkeys(for:)",
                "title": "+ descriptorForRequiredKeysForStyle:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/descriptorforrequiredkeysfordelimiter",
                "title": "descriptorForRequiredKeysForDelimiter",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/descriptorforrequiredkeysfornameorder",
                "title": "descriptorForRequiredKeysForNameOrder",
                "type": "property"
              },
              {
                "title": "Getting format information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/delimiter(for:)",
                "title": "+ delimiterForContact:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/nameorder(for:)",
                "title": "+ nameOrderForContact:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactdisplaynameorder/userdefault",
                    "title": "CNContactDisplayNameOrderUserDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactdisplaynameorder/givennamefirst",
                    "title": "CNContactDisplayNameOrderGivenNameFirst",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactdisplaynameorder/familynamefirst",
                    "title": "CNContactDisplayNameOrderFamilyNameFirst",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cncontactdisplaynameorder",
                "title": "CNContactDisplayNameOrder",
                "type": "enum"
              }
            ],
            "path": "/documentation/contacts/cncontactformatter",
            "title": "CNContactFormatter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Generating a formatted attributed string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/attributedstring(from:withdefaultattributes:)",
                "title": "- attributedStringFromPostalAddress:withDefaultAttributes:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/attributedstring(from:style:withdefaultattributes:)",
                "title": "+ attributedStringFromPostalAddress:style:withDefaultAttributes:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresspropertyattribute",
                "title": "CNPostalAddressPropertyAttribute",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresslocalizedpropertynameattribute",
                "title": "CNPostalAddressLocalizedPropertyNameAttribute",
                "type": "var"
              },
              {
                "title": "Generating a formatted string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/string(from:)",
                "title": "- stringFromPostalAddress:",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/string(from:style:)",
                "title": "+ stringFromPostalAddress:style:",
                "type": "method"
              },
              {
                "title": "Specifying the formatting style",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/style",
                "title": "style",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Styles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressformatterstyle/mailingaddress",
                    "title": "CNPostalAddressFormatterStyleMailingAddress",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cnpostaladdressformatterstyle",
                "title": "CNPostalAddressFormatterStyle",
                "type": "enum"
              },
              {
                "title": "Getting the postal attribute keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresscitykey",
                "title": "CNPostalAddressCityKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresscountrykey",
                "title": "CNPostalAddressCountryKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressisocountrycodekey",
                "title": "CNPostalAddressISOCountryCodeKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresspostalcodekey",
                "title": "CNPostalAddressPostalCodeKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressstatekey",
                "title": "CNPostalAddressStateKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressstreetkey",
                "title": "CNPostalAddressStreetKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresssubadministrativeareakey",
                "title": "CNPostalAddressSubAdministrativeAreaKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresssublocalitykey",
                "title": "CNPostalAddressSubLocalityKey",
                "type": "var"
              }
            ],
            "path": "/documentation/contacts/cnpostaladdressformatter",
            "title": "CNPostalAddressFormatter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Extracting Contacts from a vCard",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactvcardserialization/contacts(with:)",
                "title": "+ contactsWithData:error:",
                "type": "method"
              },
              {
                "title": "Getting a vCard for Contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactvcardserialization/data(with:)",
                "title": "+ dataWithContacts:error:",
                "type": "method"
              },
              {
                "title": "Getting a Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactvcardserialization/descriptorforrequiredkeys()",
                "title": "+ descriptorForRequiredKeys",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cncontactvcardserialization",
            "title": "CNContactVCardSerialization",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting the Shared Database",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactsuserdefaults/shared()",
                "title": "+ sharedDefaults",
                "type": "method"
              },
              {
                "title": "Getting the Default Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactsuserdefaults/countrycode",
                "title": "countryCode",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactsuserdefaults/sortorder",
                "title": "sortOrder",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cncontactsuserdefaults",
            "title": "CNContactsUserDefaults",
            "type": "class"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnerrordomain",
                "title": "CNErrorDomain",
                "type": "var"
              },
              {
                "title": "Error codes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/authorizationdenied",
                    "title": "CNErrorCodeAuthorizationDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/changehistoryexpired",
                    "title": "CNErrorCodeChangeHistoryExpired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/changehistoryinvalidanchor",
                    "title": "CNErrorCodeChangeHistoryInvalidAnchor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/changehistoryinvalidfetchrequest",
                    "title": "CNErrorCodeChangeHistoryInvalidFetchRequest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/clientidentifiercollision",
                    "title": "CNErrorCodeClientIdentifierCollision",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/clientidentifierinvalid",
                    "title": "CNErrorCodeClientIdentifierInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/clientidentifierdoesnotexist",
                    "title": "CNErrorCodeClientIdentifierDoesNotExist",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/communicationerror",
                    "title": "CNErrorCodeCommunicationError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/containmentcycle",
                    "title": "CNErrorCodeContainmentCycle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/containmentscope",
                    "title": "CNErrorCodeContainmentScope",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/dataaccesserror",
                    "title": "CNErrorCodeDataAccessError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/featuredisabledbyuser",
                    "title": "CNErrorCodeFeatureDisabledByUser",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/featurenotavailable",
                    "title": "CNErrorCodeFeatureNotAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/insertedrecordalreadyexists",
                    "title": "CNErrorCodeInsertedRecordAlreadyExists",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/noaccessablewritablecontainers",
                    "title": "CNErrorCodeNoAccessableWritableContainers",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/parentcontainernotwritable",
                    "title": "CNErrorCodeParentContainerNotWritable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/parentrecorddoesnotexist",
                    "title": "CNErrorCodeParentRecordDoesNotExist",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/policyviolation",
                    "title": "CNErrorCodePolicyViolation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/predicateinvalid",
                    "title": "CNErrorCodePredicateInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/recorddoesnotexist",
                    "title": "CNErrorCodeRecordDoesNotExist",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/recordidentifierinvalid",
                    "title": "CNErrorCodeRecordIdentifierInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/recordnotwritable",
                    "title": "CNErrorCodeRecordNotWritable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/unauthorizedkeys",
                    "title": "CNErrorCodeUnauthorizedKeys",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/validationmultipleerrors",
                    "title": "CNErrorCodeValidationMultipleErrors",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/validationtypemismatch",
                    "title": "CNErrorCodeValidationTypeMismatch",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/validationconfigurationerror",
                    "title": "CNErrorCodeValidationConfigurationError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/vcardmalformed",
                    "title": "CNErrorCodeVCardMalformed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/vcardsummarizationerror",
                    "title": "CNErrorCodeVCardSummarizationError",
                    "type": "case"
                  }
                ],
                "path": "/documentation/contacts/cnerror/code",
                "title": "CNErrorCode",
                "type": "enum"
              },
              {
                "title": "Error data keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfoaffectedrecordskey",
                "title": "CNErrorUserInfoAffectedRecordsKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfoaffectedrecordidentifierskey",
                "title": "CNErrorUserInfoAffectedRecordIdentifiersKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfovalidationerrorskey",
                "title": "CNErrorUserInfoValidationErrorsKey",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfokeypathskey",
                "title": "CNErrorUserInfoKeyPathsKey",
                "type": "var"
              },
              {
                "title": "Exceptions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactpropertynotfetchedexceptionname",
                "title": "CNContactPropertyNotFetchedExceptionName",
                "type": "var"
              }
            ],
            "path": "/documentation/contacts/error-information",
            "title": "Error Information",
            "type": "collection"
          }
        ],
        "path": "/documentation/contacts",
        "title": "Contacts",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/contacts/accessing-the-contact-store",
            "title": "Accessing the contact store",
            "type": "article"
          },
          {
            "path": "/documentation/contacts/accessing-a-person-s-contact-data-using-contacts-and-contactsui",
            "title": "Accessing a person’s contact data using Contacts and ContactsUI",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Requesting access to the user’s contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/requestaccess(for:completionhandler:)",
                "title": "func requestAccess(for: CNEntityType, completionHandler: (Bool, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/authorizationstatus(for:)",
                "title": "class func authorizationStatus(for: CNEntityType) -> CNAuthorizationStatus",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Authorization statuses",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/notdetermined",
                    "title": "case notDetermined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/restricted",
                    "title": "case restricted",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/authorized",
                    "title": "case authorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/limited",
                    "title": "case limited",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnauthorizationstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cnauthorizationstatus",
                "title": "CNAuthorizationStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Entities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnentitytype/contacts",
                    "title": "case contacts",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnentitytype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cnentitytype",
                "title": "CNEntityType",
                "type": "enum"
              },
              {
                "title": "Fetching contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/enumeratecontacts(with:usingblock:)",
                "title": "func enumerateContacts(with: CNContactFetchRequest, usingBlock: (CNContact, UnsafeMutablePointer<ObjCBool>) -> Void) throws",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/unifiedmecontactwithkeys(tofetch:)",
                "title": "func unifiedMeContactWithKeys(toFetch: [any CNKeyDescriptor]) throws -> CNContact",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/unifiedcontact(withidentifier:keystofetch:)",
                "title": "func unifiedContact(withIdentifier: String, keysToFetch: [any CNKeyDescriptor]) throws -> CNContact",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/unifiedcontacts(matching:keystofetch:)",
                "title": "func unifiedContacts(matching: NSPredicate, keysToFetch: [any CNKeyDescriptor]) throws -> [CNContact]",
                "type": "method"
              },
              {
                "title": "Fetching groups and containers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/defaultcontaineridentifier()",
                "title": "func defaultContainerIdentifier() -> String",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/groups(matching:)",
                "title": "func groups(matching: NSPredicate?) throws -> [CNGroup]",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactstore/containers(matching:)",
                "title": "func containers(matching: NSPredicate?) throws -> [CNContainer]",
                "type": "method"
              },
              {
                "title": "Fetching change history info",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/currenthistorytoken",
                "title": "var currentHistoryToken: Data?",
                "type": "property"
              },
              {
                "title": "Saving changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactstore/execute(_:)",
                "title": "func execute(CNSaveRequest) throws",
                "type": "method"
              },
              {
                "title": "Responding to contact store changes",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/foundation/nsnotification/name/1403253-cncontactstoredidchange",
                "title": "static let CNContactStoreDidChange: NSNotification.Name",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cncontactstore",
            "title": "CNContactStore",
            "type": "class"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nscontactsusagedescription",
            "title": "NSContactsUsageDescription",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/entitlements/com.apple.developer.contacts.notes",
            "title": "com.apple.developer.contacts.notes",
            "type": "typealias"
          },
          {
            "title": "Contact data",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Identifying the Contact",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/identifier",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/contacttype",
                "title": "var contactType: CNContactType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontacttype/person",
                    "title": "case person",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontacttype/organization",
                    "title": "case organization",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontacttype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cncontacttype",
                "title": "CNContactType",
                "type": "enum"
              },
              {
                "title": "Getting Name Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/nameprefix",
                "title": "var namePrefix: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/givenname",
                "title": "var givenName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/middlename",
                "title": "var middleName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/familyname",
                "title": "var familyName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/previousfamilyname",
                "title": "var previousFamilyName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/namesuffix",
                "title": "var nameSuffix: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/nickname",
                "title": "var nickname: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticgivenname",
                "title": "var phoneticGivenName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticmiddlename",
                "title": "var phoneticMiddleName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticfamilyname",
                "title": "var phoneticFamilyName: String",
                "type": "property"
              },
              {
                "title": "Getting Work Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/jobtitle",
                "title": "var jobTitle: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/departmentname",
                "title": "var departmentName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/organizationname",
                "title": "var organizationName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/phoneticorganizationname",
                "title": "var phoneticOrganizationName: String",
                "type": "property"
              },
              {
                "title": "Getting Addresses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/postaladdresses",
                "title": "var postalAddresses: [CNLabeledValue<CNPostalAddress>]",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/emailaddresses",
                "title": "var emailAddresses: [CNLabeledValue<NSString>]",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/urladdresses",
                "title": "var urlAddresses: [CNLabeledValue<NSString>]",
                "type": "property"
              },
              {
                "title": "Getting Phone Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/phonenumbers",
                "title": "var phoneNumbers: [CNLabeledValue<CNPhoneNumber>]",
                "type": "property"
              },
              {
                "title": "Getting Social Profiles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/socialprofiles",
                "title": "var socialProfiles: [CNLabeledValue<CNSocialProfile>]",
                "type": "property"
              },
              {
                "title": "Getting Birthday Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/birthday",
                "title": "var birthday: DateComponents?",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/nongregorianbirthday",
                "title": "var nonGregorianBirthday: DateComponents?",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/dates",
                "title": "var dates: [CNLabeledValue<NSDateComponents>]",
                "type": "property"
              },
              {
                "title": "Getting Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/note",
                "title": "var note: String",
                "type": "property"
              },
              {
                "title": "Getting Contact Images",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/imagedata",
                "title": "var imageData: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/thumbnailimagedata",
                "title": "var thumbnailImageData: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/imagedataavailable",
                "title": "var imageDataAvailable: Bool",
                "type": "property"
              },
              {
                "title": "Getting Related Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/contactrelations",
                "title": "var contactRelations: [CNLabeledValue<CNContactRelation>]",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontact/instantmessageaddresses",
                "title": "var instantMessageAddresses: [CNLabeledValue<CNInstantMessageAddress>]",
                "type": "property"
              },
              {
                "title": "Localizing Contact Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/localizedstring(forkey:)",
                "title": "class func localizedString(forKey: String) -> String",
                "type": "method"
              },
              {
                "title": "Comparing Contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/descriptorforallcomparatorkeys()",
                "title": "class func descriptorForAllComparatorKeys() -> any CNKeyDescriptor",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/comparator(fornamesortorder:)",
                "title": "class func comparator(forNameSortOrder: CNContactSortOrder) -> Comparator",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/isunifiedwithcontact(withidentifier:)",
                "title": "func isUnifiedWithContact(withIdentifier: String) -> Bool",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Sort Orders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/userdefault",
                    "title": "case userDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/givenname",
                    "title": "case givenName",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/familyname",
                    "title": "case familyName",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cncontactsortorder",
                "title": "CNContactSortOrder",
                "type": "enum"
              },
              {
                "title": "Checking the Availability of Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/iskeyavailable(_:)",
                "title": "func isKeyAvailable(String) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/arekeysavailable(_:)",
                "title": "func areKeysAvailable([any CNKeyDescriptor]) -> Bool",
                "type": "method"
              },
              {
                "title": "Getting Search Predicates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(matchingname:)",
                "title": "class func predicateForContacts(matchingName: String) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(withidentifiers:)",
                "title": "class func predicateForContacts(withIdentifiers: [String]) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontactsingroup(withidentifier:)",
                "title": "class func predicateForContactsInGroup(withIdentifier: String) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontactsincontainer(withidentifier:)",
                "title": "class func predicateForContactsInContainer(withIdentifier: String) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(matching:)",
                "title": "class func predicateForContacts(matching: CNPhoneNumber) -> NSPredicate",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontact/predicateforcontacts(matchingemailaddress:)",
                "title": "class func predicateForContacts(matchingEmailAddress: String) -> NSPredicate",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cncontact",
            "title": "CNContact",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Setting the Identity of the Contact",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/contacttype",
                "title": "var contactType: CNContactType",
                "type": "property"
              },
              {
                "title": "Setting Name Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/nameprefix",
                "title": "var namePrefix: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/givenname",
                "title": "var givenName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/middlename",
                "title": "var middleName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/familyname",
                "title": "var familyName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/previousfamilyname",
                "title": "var previousFamilyName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/namesuffix",
                "title": "var nameSuffix: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/nickname",
                "title": "var nickname: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticgivenname",
                "title": "var phoneticGivenName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticmiddlename",
                "title": "var phoneticMiddleName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticfamilyname",
                "title": "var phoneticFamilyName: String",
                "type": "property"
              },
              {
                "title": "Setting Work Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/jobtitle",
                "title": "var jobTitle: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/departmentname",
                "title": "var departmentName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/organizationname",
                "title": "var organizationName: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phoneticorganizationname",
                "title": "var phoneticOrganizationName: String",
                "type": "property"
              },
              {
                "title": "Setting Addresses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/postaladdresses",
                "title": "var postalAddresses: [CNLabeledValue<CNPostalAddress>]",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/emailaddresses",
                "title": "var emailAddresses: [CNLabeledValue<NSString>]",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/urladdresses",
                "title": "var urlAddresses: [CNLabeledValue<NSString>]",
                "type": "property"
              },
              {
                "title": "Setting Phone Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/phonenumbers",
                "title": "var phoneNumbers: [CNLabeledValue<CNPhoneNumber>]",
                "type": "property"
              },
              {
                "title": "Setting Social Profiles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/socialprofiles",
                "title": "var socialProfiles: [CNLabeledValue<CNSocialProfile>]",
                "type": "property"
              },
              {
                "title": "Setting Birthday Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/dates",
                "title": "var dates: [CNLabeledValue<NSDateComponents>]",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/nongregorianbirthday",
                "title": "var nonGregorianBirthday: DateComponents?",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/birthday",
                "title": "var birthday: DateComponents?",
                "type": "property"
              },
              {
                "title": "Setting Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/note",
                "title": "var note: String",
                "type": "property"
              },
              {
                "title": "Setting Images",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/imagedata",
                "title": "var imageData: Data?",
                "type": "property"
              },
              {
                "title": "Relating Other Information to the Contact",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/contactrelations",
                "title": "var contactRelations: [CNLabeledValue<CNContactRelation>]",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/instantmessageaddresses",
                "title": "var instantMessageAddresses: [CNLabeledValue<CNInstantMessageAddress>]",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnmutablecontact/id",
                "title": "var id: UUID",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnmutablecontact",
            "title": "CNMutableContact",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Addresses",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the Parts of a Postal Address",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/street",
                    "title": "var street: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/city",
                    "title": "var city: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/state",
                    "title": "var state: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/postalcode",
                    "title": "var postalCode: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/country",
                    "title": "var country: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/isocountrycode",
                    "title": "var isoCountryCode: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/subadministrativearea",
                    "title": "var subAdministrativeArea: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/sublocality",
                    "title": "var subLocality: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting Localized Postal Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdress/localizedstring(forkey:)",
                    "title": "class func localizedString(forKey: String) -> String",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressstreetkey",
                    "title": "let CNPostalAddressStreetKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdresscitykey",
                    "title": "let CNPostalAddressCityKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressstatekey",
                    "title": "let CNPostalAddressStateKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdresspostalcodekey",
                    "title": "let CNPostalAddressPostalCodeKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdresscountrykey",
                    "title": "let CNPostalAddressCountryKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressisocountrycodekey",
                    "title": "let CNPostalAddressISOCountryCodeKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cnpostaladdress",
                "title": "CNPostalAddress",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Modifying the Parts of a Postal Address",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/street",
                    "title": "var street: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/city",
                    "title": "var city: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/state",
                    "title": "var state: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/postalcode",
                    "title": "var postalCode: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/country",
                    "title": "var country: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/isocountrycode",
                    "title": "var isoCountryCode: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/subadministrativearea",
                    "title": "var subAdministrativeArea: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablepostaladdress/sublocality",
                    "title": "var subLocality: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contacts/cnmutablepostaladdress",
                "title": "CNMutablePostalAddress",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Instant Message Address",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/init(username:service:)",
                    "title": "init(username: String, service: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the Address Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/service",
                    "title": "var service: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/username",
                    "title": "var username: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting Localized Address Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/localizedstring(forkey:)",
                    "title": "class func localizedString(forKey: String) -> String",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddressusernamekey",
                    "title": "let CNInstantMessageAddressUsernameKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddressservicekey",
                    "title": "let CNInstantMessageAddressServiceKey: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting Localized Service Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageaddress/localizedstring(forservice:)",
                    "title": "class func localizedString(forService: String) -> String",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceaim",
                    "title": "let CNInstantMessageServiceAIM: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicefacebook",
                    "title": "let CNInstantMessageServiceFacebook: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicegadugadu",
                    "title": "let CNInstantMessageServiceGaduGadu: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicegoogletalk",
                    "title": "let CNInstantMessageServiceGoogleTalk: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceicq",
                    "title": "let CNInstantMessageServiceICQ: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicejabber",
                    "title": "let CNInstantMessageServiceJabber: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageservicemsn",
                    "title": "let CNInstantMessageServiceMSN: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceqq",
                    "title": "let CNInstantMessageServiceQQ: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceskype",
                    "title": "let CNInstantMessageServiceSkype: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cninstantmessageserviceyahoo",
                    "title": "let CNInstantMessageServiceYahoo: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cninstantmessageaddress",
                "title": "CNInstantMessageAddress",
                "type": "class"
              },
              {
                "title": "Phone Numbers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Phone Number Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnphonenumber/init(stringvalue:)",
                    "title": "init(stringValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the Phone Number",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnphonenumber/stringvalue",
                    "title": "var stringValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting Phone-Related Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactphonenumberskey",
                    "title": "let CNContactPhoneNumbersKey: String",
                    "type": "var"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/contacts/cnphonenumber/init()",
                    "title": "init!()",
                    "type": "init"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/contacts/cnphonenumber/new()",
                    "title": "class func new() -> Self!",
                    "type": "method"
                  }
                ],
                "path": "/documentation/contacts/cnphonenumber",
                "title": "CNPhoneNumber",
                "type": "class"
              },
              {
                "title": "Groups and Containers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the Group Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/identifier",
                    "title": "var identifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Generating Search Predicates for Groups",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/predicateforgroups(withidentifiers:)",
                    "title": "class func predicateForGroups(withIdentifiers: [String]) -> NSPredicate",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/predicateforgroupsincontainer(withidentifier:)",
                    "title": "class func predicateForGroupsInContainer(withIdentifier: String) -> NSPredicate",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cngroup/predicateforsubgroupsingroup(withidentifier:)",
                    "title": "class func predicateForSubgroupsInGroup(withIdentifier: String) -> NSPredicate",
                    "type": "method"
                  },
                  {
                    "title": "Getting Group-Related Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cngroupidentifierkey",
                    "title": "let CNGroupIdentifierKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cngroupnamekey",
                    "title": "let CNGroupNameKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cngroup",
                "title": "CNGroup",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Modifying the Group Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnmutablegroup/name",
                    "title": "var name: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contacts/cnmutablegroup",
                "title": "CNMutableGroup",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Container Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/identifier",
                    "title": "var identifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/type",
                    "title": "var type: CNContainerType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/local",
                        "title": "case local",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/exchange",
                        "title": "case exchange",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/carddav",
                        "title": "case cardDAV",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/unassigned",
                        "title": "case unassigned",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contacts/cncontainertype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/contacts/cncontainertype",
                    "title": "CNContainerType",
                    "type": "enum"
                  },
                  {
                    "title": "Generating Search Predicates for Containers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/predicateforcontainerofcontact(withidentifier:)",
                    "title": "class func predicateForContainerOfContact(withIdentifier: String) -> NSPredicate",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/predicateforcontainers(withidentifiers:)",
                    "title": "class func predicateForContainers(withIdentifiers: [String]) -> NSPredicate",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cncontainer/predicateforcontainerofgroup(withidentifier:)",
                    "title": "class func predicateForContainerOfGroup(withIdentifier: String) -> NSPredicate",
                    "type": "method"
                  },
                  {
                    "title": "Getting Container-Related Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontaineridentifierkey",
                    "title": "let CNContainerIdentifierKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cncontainernamekey",
                    "title": "let CNContainerNameKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cncontainertypekey",
                    "title": "let CNContainerTypeKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cncontainer",
                "title": "CNContainer",
                "type": "class"
              },
              {
                "title": "Social Profiles",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Social Profile Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/init(urlstring:username:useridentifier:service:)",
                    "title": "init(urlString: String?, username: String?, userIdentifier: String?, service: String?)",
                    "type": "init"
                  },
                  {
                    "title": "Getting Social Profile Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/username",
                    "title": "var username: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/service",
                    "title": "var service: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/urlstring",
                    "title": "var urlString: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/useridentifier",
                    "title": "var userIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting Localized User Profile Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/localizedstring(forkey:)",
                    "title": "class func localizedString(forKey: String) -> String",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileusernamekey",
                    "title": "let CNSocialProfileUsernameKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicekey",
                    "title": "let CNSocialProfileServiceKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileurlstringkey",
                    "title": "let CNSocialProfileURLStringKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileuseridentifierkey",
                    "title": "let CNSocialProfileUserIdentifierKey: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting Localized Service Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofile/localizedstring(forservice:)",
                    "title": "class func localizedString(forService: String) -> String",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicefacebook",
                    "title": "let CNSocialProfileServiceFacebook: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileserviceflickr",
                    "title": "let CNSocialProfileServiceFlickr: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicegamecenter",
                    "title": "let CNSocialProfileServiceGameCenter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicelinkedin",
                    "title": "let CNSocialProfileServiceLinkedIn: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicemyspace",
                    "title": "let CNSocialProfileServiceMySpace: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicesinaweibo",
                    "title": "let CNSocialProfileServiceSinaWeibo: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicetencentweibo",
                    "title": "let CNSocialProfileServiceTencentWeibo: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileservicetwitter",
                    "title": "let CNSocialProfileServiceTwitter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnsocialprofileserviceyelp",
                    "title": "let CNSocialProfileServiceYelp: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cnsocialprofile",
                "title": "CNSocialProfile",
                "type": "class"
              },
              {
                "title": "Related Data",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Contact Relation Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactrelation/init(name:)",
                    "title": "init(name: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the Relation Name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactrelation/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Common Relationship Labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationspouse",
                    "title": "let CNLabelContactRelationSpouse: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationpartner",
                    "title": "let CNLabelContactRelationPartner: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughter",
                    "title": "let CNLabelContactRelationDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationson",
                    "title": "let CNLabelContactRelationSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationchild",
                    "title": "let CNLabelContactRelationChild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfather",
                    "title": "let CNLabelContactRelationFather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmother",
                    "title": "let CNLabelContactRelationMother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparent",
                    "title": "let CNLabelContactRelationParent: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrother",
                    "title": "let CNLabelContactRelationBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsister",
                    "title": "let CNLabelContactRelationSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfriend",
                    "title": "let CNLabelContactRelationFriend: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationassistant",
                    "title": "let CNLabelContactRelationAssistant: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmanager",
                    "title": "let CNLabelContactRelationManager: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cncontactrelation",
                "title": "CNContactRelation",
                "type": "class"
              },
              {
                "title": "Generic Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a labeled value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/init(label:value:)",
                    "title": "init(label: String?, value: ValueType)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the label and value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/value",
                    "title": "var value: ValueType",
                    "type": "property"
                  },
                  {
                    "title": "Setting labels and values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/settinglabel(_:)",
                    "title": "func settingLabel(String?) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/settinglabel(_:value:)",
                    "title": "func settingLabel(String?, value: ValueType) -> Self",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/settingvalue(_:)",
                    "title": "func settingValue(ValueType) -> Self",
                    "type": "method"
                  },
                  {
                    "title": "Localizing the label and value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/localizedstring(forlabel:)",
                    "title": "class func localizedString(forLabel: String) -> String",
                    "type": "method"
                  },
                  {
                    "title": "Getting the unique identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeledvalue/identifier",
                    "title": "var identifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting common labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelhome",
                    "title": "let CNLabelHome: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelwork",
                    "title": "let CNLabelWork: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelschool",
                    "title": "let CNLabelSchool: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelother",
                    "title": "let CNLabelOther: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelemailicloud",
                    "title": "let CNLabelEmailiCloud: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelurladdresshomepage",
                    "title": "let CNLabelURLAddressHomePage: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabeldateanniversary",
                    "title": "let CNLabelDateAnniversary: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting phone number labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumbermain",
                    "title": "let CNLabelPhoneNumberMain: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberiphone",
                    "title": "let CNLabelPhoneNumberiPhone: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberapplewatch",
                    "title": "let CNLabelPhoneNumberAppleWatch: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumbermobile",
                    "title": "let CNLabelPhoneNumberMobile: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberpager",
                    "title": "let CNLabelPhoneNumberPager: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberworkfax",
                    "title": "let CNLabelPhoneNumberWorkFax: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberhomefax",
                    "title": "let CNLabelPhoneNumberHomeFax: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelphonenumberotherfax",
                    "title": "let CNLabelPhoneNumberOtherFax: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting immediate family relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrother",
                    "title": "let CNLabelContactRelationBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationchild",
                    "title": "let CNLabelContactRelationChild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughter",
                    "title": "let CNLabelContactRelationDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationelderbrother",
                    "title": "let CNLabelContactRelationElderBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersibling",
                    "title": "let CNLabelContactRelationElderSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersister",
                    "title": "let CNLabelContactRelationElderSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldestbrother",
                    "title": "let CNLabelContactRelationEldestBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldestsister",
                    "title": "let CNLabelContactRelationEldestSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfather",
                    "title": "let CNLabelContactRelationFather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfemalepartner",
                    "title": "let CNLabelContactRelationFemalePartner: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationhusband",
                    "title": "let CNLabelContactRelationHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmalepartner",
                    "title": "let CNLabelContactRelationMalePartner: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmother",
                    "title": "let CNLabelContactRelationMother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparent",
                    "title": "let CNLabelContactRelationParent: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationpartner",
                    "title": "let CNLabelContactRelationPartner: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsibling",
                    "title": "let CNLabelContactRelationSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsister",
                    "title": "let CNLabelContactRelationSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationson",
                    "title": "let CNLabelContactRelationSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationspouse",
                    "title": "let CNLabelContactRelationSpouse: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepbrother",
                    "title": "let CNLabelContactRelationStepbrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepchild",
                    "title": "let CNLabelContactRelationStepchild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepdaughter",
                    "title": "let CNLabelContactRelationStepdaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepfather",
                    "title": "let CNLabelContactRelationStepfather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepmother",
                    "title": "let CNLabelContactRelationStepmother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepparent",
                    "title": "let CNLabelContactRelationStepparent: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepsister",
                    "title": "let CNLabelContactRelationStepsister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationstepson",
                    "title": "let CNLabelContactRelationStepson: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationwife",
                    "title": "let CNLabelContactRelationWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungerbrother",
                    "title": "let CNLabelContactRelationYoungerBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersibling",
                    "title": "let CNLabelContactRelationYoungerSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersister",
                    "title": "let CNLabelContactRelationYoungerSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungestbrother",
                    "title": "let CNLabelContactRelationYoungestBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungestsister",
                    "title": "let CNLabelContactRelationYoungestSister: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting acquaintance relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationboyfriend",
                    "title": "let CNLabelContactRelationBoyfriend: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcolleague",
                    "title": "let CNLabelContactRelationColleague: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfemalefriend",
                    "title": "let CNLabelContactRelationFemaleFriend: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfriend",
                    "title": "let CNLabelContactRelationFriend: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgirlfriend",
                    "title": "let CNLabelContactRelationGirlfriend: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgirlfriendorboyfriend",
                    "title": "let CNLabelContactRelationGirlfriendOrBoyfriend: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmalefriend",
                    "title": "let CNLabelContactRelationMaleFriend: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting business relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationassistant",
                    "title": "let CNLabelContactRelationAssistant: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmanager",
                    "title": "let CNLabelContactRelationManager: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting education relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationteacher",
                    "title": "let CNLabelContactRelationTeacher: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting in-law relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlaw",
                    "title": "let CNLabelContactRelationBrotherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlaweldersistershusband",
                    "title": "let CNLabelContactRelationBrotherInLawElderSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawhusbandsbrother",
                    "title": "let CNLabelContactRelationBrotherInLawHusbandsBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawhusbandssistershusband",
                    "title": "let CNLabelContactRelationBrotherInLawHusbandsSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawsistershusband",
                    "title": "let CNLabelContactRelationBrotherInLawSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawspousesbrother",
                    "title": "let CNLabelContactRelationBrotherInLawSpousesBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawwifesbrother",
                    "title": "let CNLabelContactRelationBrotherInLawWifesBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawwifessistershusband",
                    "title": "let CNLabelContactRelationBrotherInLawWifesSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationbrotherinlawyoungersistershusband",
                    "title": "let CNLabelContactRelationBrotherInLawYoungerSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationchildinlaw",
                    "title": "let CNLabelContactRelationChildInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcobrotherinlaw",
                    "title": "let CNLabelContactRelationCoBrotherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcofatherinlaw",
                    "title": "let CNLabelContactRelationCoFatherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcomotherinlaw",
                    "title": "let CNLabelContactRelationCoMotherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcoparentinlaw",
                    "title": "let CNLabelContactRelationCoParentInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcosiblinginlaw",
                    "title": "let CNLabelContactRelationCoSiblingInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcosisterinlaw",
                    "title": "let CNLabelContactRelationCoSisterInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationelderbrotherinlaw",
                    "title": "let CNLabelContactRelationElderBrotherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersiblinginlaw",
                    "title": "let CNLabelContactRelationElderSiblingInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldersisterinlaw",
                    "title": "let CNLabelContactRelationElderSisterInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlaw",
                    "title": "let CNLabelContactRelationFatherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlawhusbandsfather",
                    "title": "let CNLabelContactRelationFatherInLawHusbandsFather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlaworstepfather",
                    "title": "let CNLabelContactRelationFatherInLawOrStepfather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfatherinlawwifesfather",
                    "title": "let CNLabelContactRelationFatherInLawWifesFather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlaw",
                    "title": "let CNLabelContactRelationMotherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlawhusbandsmother",
                    "title": "let CNLabelContactRelationMotherInLawHusbandsMother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlaworstepmother",
                    "title": "let CNLabelContactRelationMotherInLawOrStepmother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmotherinlawwifesmother",
                    "title": "let CNLabelContactRelationMotherInLawWifesMother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentinlaw",
                    "title": "let CNLabelContactRelationParentInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsiblinginlaw",
                    "title": "let CNLabelContactRelationSiblingInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlaw",
                    "title": "let CNLabelContactRelationSisterInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawbrotherswife",
                    "title": "let CNLabelContactRelationSisterInLawBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawelderbrotherswife",
                    "title": "let CNLabelContactRelationSisterInLawElderBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawhusbandsbrotherswife",
                    "title": "let CNLabelContactRelationSisterInLawHusbandsBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawhusbandssister",
                    "title": "let CNLabelContactRelationSisterInLawHusbandsSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawspousessister",
                    "title": "let CNLabelContactRelationSisterInLawSpousesSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawwifesbrotherswife",
                    "title": "let CNLabelContactRelationSisterInLawWifesBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawwifessister",
                    "title": "let CNLabelContactRelationSisterInLawWifesSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsisterinlawyoungerbrotherswife",
                    "title": "let CNLabelContactRelationSisterInLawYoungerBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungerbrotherinlaw",
                    "title": "let CNLabelContactRelationYoungerBrotherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersiblinginlaw",
                    "title": "let CNLabelContactRelationYoungerSiblingInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungersisterinlaw",
                    "title": "let CNLabelContactRelationYoungerSisterInLaw: String",
                    "type": "var"
                  },
                  {
                    "title": "Getting extended family relationship labels",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationaunt",
                    "title": "let CNLabelContactRelationAunt: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfathersbrotherswife",
                    "title": "let CNLabelContactRelationAuntFathersBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfatherselderbrotherswife",
                    "title": "let CNLabelContactRelationAuntFathersElderBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfatherseldersister",
                    "title": "let CNLabelContactRelationAuntFathersElderSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfatherssister",
                    "title": "let CNLabelContactRelationAuntFathersSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfathersyoungerbrotherswife",
                    "title": "let CNLabelContactRelationAuntFathersYoungerBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntfathersyoungersister",
                    "title": "let CNLabelContactRelationAuntFathersYoungerSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmothersbrotherswife",
                    "title": "let CNLabelContactRelationAuntMothersBrothersWife: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmotherseldersister",
                    "title": "let CNLabelContactRelationAuntMothersElderSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmotherssister",
                    "title": "let CNLabelContactRelationAuntMothersSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntmothersyoungersister",
                    "title": "let CNLabelContactRelationAuntMothersYoungerSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntparentseldersister",
                    "title": "let CNLabelContactRelationAuntParentsElderSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntparentssister",
                    "title": "let CNLabelContactRelationAuntParentsSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationauntparentsyoungersister",
                    "title": "let CNLabelContactRelationAuntParentsYoungerSister: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousin",
                    "title": "let CNLabelContactRelationCousin: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfathersbrothersdaughter",
                    "title": "let CNLabelContactRelationCousinFathersBrothersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfathersbrothersson",
                    "title": "let CNLabelContactRelationCousinFathersBrothersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfatherssistersdaughter",
                    "title": "let CNLabelContactRelationCousinFathersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinfatherssistersson",
                    "title": "let CNLabelContactRelationCousinFathersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousingrandparentssiblingschild",
                    "title": "let CNLabelContactRelationCousinGrandparentsSiblingsChild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousingrandparentssiblingsdaughter",
                    "title": "let CNLabelContactRelationCousinGrandparentsSiblingsDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousingrandparentssiblingsson",
                    "title": "let CNLabelContactRelationCousinGrandparentsSiblingsSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmothersbrothersdaughter",
                    "title": "let CNLabelContactRelationCousinMothersBrothersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmothersbrothersson",
                    "title": "let CNLabelContactRelationCousinMothersBrothersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmotherssistersdaughter",
                    "title": "let CNLabelContactRelationCousinMothersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinmotherssistersson",
                    "title": "let CNLabelContactRelationCousinMothersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinorsiblingschild",
                    "title": "let CNLabelContactRelationCousinOrSiblingsChild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinparentssiblingschild",
                    "title": "let CNLabelContactRelationCousinParentsSiblingsChild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinparentssiblingsdaughter",
                    "title": "let CNLabelContactRelationCousinParentsSiblingsDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationcousinparentssiblingsson",
                    "title": "let CNLabelContactRelationCousinParentsSiblingsSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughterinlaw",
                    "title": "let CNLabelContactRelationDaughterInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughterinlaworsisterinlaw",
                    "title": "let CNLabelContactRelationDaughterInLawOrSisterInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationdaughterinlaworstepdaughter",
                    "title": "let CNLabelContactRelationDaughterInLawOrStepdaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousin",
                    "title": "let CNLabelContactRelationElderCousin: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfathersbrothersdaughter",
                    "title": "let CNLabelContactRelationElderCousinFathersBrothersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfathersbrothersson",
                    "title": "let CNLabelContactRelationElderCousinFathersBrothersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfatherssistersdaughter",
                    "title": "let CNLabelContactRelationElderCousinFathersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinfatherssistersson",
                    "title": "let CNLabelContactRelationElderCousinFathersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmothersbrothersdaughter",
                    "title": "let CNLabelContactRelationElderCousinMothersBrothersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmothersbrothersson",
                    "title": "let CNLabelContactRelationElderCousinMothersBrothersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssiblingsdaughterorfatherssistersdaughter",
                    "title": "let CNLabelContactRelationElderCousinMothersSiblingsDaughterOrFathersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssiblingssonorfatherssistersson",
                    "title": "let CNLabelContactRelationElderCousinMothersSiblingsSonOrFathersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssistersdaughter",
                    "title": "let CNLabelContactRelationElderCousinMothersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinmotherssistersson",
                    "title": "let CNLabelContactRelationElderCousinMothersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinparentssiblingsdaughter",
                    "title": "let CNLabelContactRelationElderCousinParentsSiblingsDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationeldercousinparentssiblingsson",
                    "title": "let CNLabelContactRelationElderCousinParentsSiblingsSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationfemalecousin",
                    "title": "let CNLabelContactRelationFemaleCousin: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandaunt",
                    "title": "let CNLabelContactRelationGrandaunt: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandchild",
                    "title": "let CNLabelContactRelationGrandchild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandchildorsiblingschild",
                    "title": "let CNLabelContactRelationGrandchildOrSiblingsChild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughter",
                    "title": "let CNLabelContactRelationGranddaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughterdaughtersdaughter",
                    "title": "let CNLabelContactRelationGranddaughterDaughtersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughtersonsdaughter",
                    "title": "let CNLabelContactRelationGranddaughterSonsDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranddaughterorniece",
                    "title": "let CNLabelContactRelationGranddaughterOrNiece: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandfather",
                    "title": "let CNLabelContactRelationGrandfather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandfatherfathersfather",
                    "title": "let CNLabelContactRelationGrandfatherFathersFather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandfathermothersfather",
                    "title": "let CNLabelContactRelationGrandfatherMothersFather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandmother",
                    "title": "let CNLabelContactRelationGrandmother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandmotherfathersmother",
                    "title": "let CNLabelContactRelationGrandmotherFathersMother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandmothermothersmother",
                    "title": "let CNLabelContactRelationGrandmotherMothersMother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandnephew",
                    "title": "let CNLabelContactRelationGrandnephew: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandnephewbrothersgrandson",
                    "title": "let CNLabelContactRelationGrandnephewBrothersGrandson: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandnephewsistersgrandson",
                    "title": "let CNLabelContactRelationGrandnephewSistersGrandson: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandniece",
                    "title": "let CNLabelContactRelationGrandniece: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandniecebrothersgranddaughter",
                    "title": "let CNLabelContactRelationGrandnieceBrothersGranddaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandniecesistersgranddaughter",
                    "title": "let CNLabelContactRelationGrandnieceSistersGranddaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandparent",
                    "title": "let CNLabelContactRelationGrandparent: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandson",
                    "title": "let CNLabelContactRelationGrandson: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandsondaughtersson",
                    "title": "let CNLabelContactRelationGrandsonDaughtersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandsonsonsson",
                    "title": "let CNLabelContactRelationGrandsonSonsSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgrandsonornephew",
                    "title": "let CNLabelContactRelationGrandsonOrNephew: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgranduncle",
                    "title": "let CNLabelContactRelationGranduncle: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandchild",
                    "title": "let CNLabelContactRelationGreatGrandchild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandchildorsiblingsgrandchild",
                    "title": "let CNLabelContactRelationGreatGrandchildOrSiblingsGrandchild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgranddaughter",
                    "title": "let CNLabelContactRelationGreatGranddaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandfather",
                    "title": "let CNLabelContactRelationGreatGrandfather: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandmother",
                    "title": "let CNLabelContactRelationGreatGrandmother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandparent",
                    "title": "let CNLabelContactRelationGreatGrandparent: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationgreatgrandson",
                    "title": "let CNLabelContactRelationGreatGrandson: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationmalecousin",
                    "title": "let CNLabelContactRelationMaleCousin: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephew",
                    "title": "let CNLabelContactRelationNephew: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewbrothersson",
                    "title": "let CNLabelContactRelationNephewBrothersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewbrotherssonorhusbandssiblingsson",
                    "title": "let CNLabelContactRelationNephewBrothersSonOrHusbandsSiblingsSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnepheworcousin",
                    "title": "let CNLabelContactRelationNephewOrCousin: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewsistersson",
                    "title": "let CNLabelContactRelationNephewSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnephewsisterssonorwifessiblingsson",
                    "title": "let CNLabelContactRelationNephewSistersSonOrWifesSiblingsSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniece",
                    "title": "let CNLabelContactRelationNiece: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecebrothersdaughter",
                    "title": "let CNLabelContactRelationNieceBrothersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecebrothersdaughterorhusbandssiblingsdaughter",
                    "title": "let CNLabelContactRelationNieceBrothersDaughterOrHusbandsSiblingsDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationnieceorcousin",
                    "title": "let CNLabelContactRelationNieceOrCousin: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecesistersdaughter",
                    "title": "let CNLabelContactRelationNieceSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationniecesistersdaughterorwifessiblingsdaughter",
                    "title": "let CNLabelContactRelationNieceSistersDaughterOrWifesSiblingsDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentseldersibling",
                    "title": "let CNLabelContactRelationParentsElderSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssibling",
                    "title": "let CNLabelContactRelationParentsSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingfatherseldersibling",
                    "title": "let CNLabelContactRelationParentsSiblingFathersElderSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingfatherssibling",
                    "title": "let CNLabelContactRelationParentsSiblingFathersSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingfathersyoungersibling",
                    "title": "let CNLabelContactRelationParentsSiblingFathersYoungerSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingmotherseldersibling",
                    "title": "let CNLabelContactRelationParentsSiblingMothersElderSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingmotherssibling",
                    "title": "let CNLabelContactRelationParentsSiblingMothersSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentssiblingmothersyoungersibling",
                    "title": "let CNLabelContactRelationParentsSiblingMothersYoungerSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationparentsyoungersibling",
                    "title": "let CNLabelContactRelationParentsYoungerSibling: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsiblingschild",
                    "title": "let CNLabelContactRelationSiblingsChild: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsoninlaw",
                    "title": "let CNLabelContactRelationSonInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsoninlaworbrotherinlaw",
                    "title": "let CNLabelContactRelationSonInLawOrBrotherInLaw: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationsoninlaworstepson",
                    "title": "let CNLabelContactRelationSonInLawOrStepson: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncle",
                    "title": "let CNLabelContactRelationUncle: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefathersbrother",
                    "title": "let CNLabelContactRelationUncleFathersBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefatherselderbrother",
                    "title": "let CNLabelContactRelationUncleFathersElderBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefatherseldersistershusband",
                    "title": "let CNLabelContactRelationUncleFathersElderSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefatherssistershusband",
                    "title": "let CNLabelContactRelationUncleFathersSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefathersyoungerbrother",
                    "title": "let CNLabelContactRelationUncleFathersYoungerBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclefathersyoungersistershusband",
                    "title": "let CNLabelContactRelationUncleFathersYoungerSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemothersbrother",
                    "title": "let CNLabelContactRelationUncleMothersBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemotherselderbrother",
                    "title": "let CNLabelContactRelationUncleMothersElderBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemotherssistershusband",
                    "title": "let CNLabelContactRelationUncleMothersSistersHusband: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationunclemothersyoungerbrother",
                    "title": "let CNLabelContactRelationUncleMothersYoungerBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncleparentsbrother",
                    "title": "let CNLabelContactRelationUncleParentsBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncleparentselderbrother",
                    "title": "let CNLabelContactRelationUncleParentsElderBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationuncleparentsyoungerbrother",
                    "title": "let CNLabelContactRelationUncleParentsYoungerBrother: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousin",
                    "title": "let CNLabelContactRelationYoungerCousin: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfathersbrothersdaughter",
                    "title": "let CNLabelContactRelationYoungerCousinFathersBrothersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfathersbrothersson",
                    "title": "let CNLabelContactRelationYoungerCousinFathersBrothersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfatherssistersdaughter",
                    "title": "let CNLabelContactRelationYoungerCousinFathersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinfatherssistersson",
                    "title": "let CNLabelContactRelationYoungerCousinFathersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmothersbrothersdaughter",
                    "title": "let CNLabelContactRelationYoungerCousinMothersBrothersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmothersbrothersson",
                    "title": "let CNLabelContactRelationYoungerCousinMothersBrothersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssiblingsdaughterorfatherssistersdaughter",
                    "title": "let CNLabelContactRelationYoungerCousinMothersSiblingsDaughterOrFathersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssiblingssonorfatherssistersson",
                    "title": "let CNLabelContactRelationYoungerCousinMothersSiblingsSonOrFathersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssistersdaughter",
                    "title": "let CNLabelContactRelationYoungerCousinMothersSistersDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinmotherssistersson",
                    "title": "let CNLabelContactRelationYoungerCousinMothersSistersSon: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinparentssiblingsdaughter",
                    "title": "let CNLabelContactRelationYoungerCousinParentsSiblingsDaughter: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/contacts/cnlabelcontactrelationyoungercousinparentssiblingsson",
                    "title": "let CNLabelContactRelationYoungerCousinParentsSiblingsSon: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cnlabeledvalue",
                "title": "CNLabeledValue",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Getting the Contact Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/contact",
                    "title": "var contact: CNContact",
                    "type": "property"
                  },
                  {
                    "title": "Getting the Property Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/key",
                    "title": "var key: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/value",
                    "title": "var value: Any?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cncontactproperty/identifier",
                    "title": "var identifier: String?",
                    "type": "property"
                  },
                  {
                    "title": "Handling Exceptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactpropertynotfetchedexceptionname",
                    "title": "let CNContactPropertyNotFetchedExceptionName: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/contacts/cncontactproperty",
                "title": "CNContactProperty",
                "type": "class"
              }
            ],
            "path": "/documentation/contacts/data-objects",
            "title": "Data Objects",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Contact Identification",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactidentifierkey",
                "title": "let CNContactIdentifierKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontacttypekey",
                "title": "let CNContactTypeKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactpropertyattribute",
                "title": "let CNContactPropertyAttribute: String",
                "type": "var"
              },
              {
                "title": "Name",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactnameprefixkey",
                "title": "let CNContactNamePrefixKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactgivennamekey",
                "title": "let CNContactGivenNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactmiddlenamekey",
                "title": "let CNContactMiddleNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactfamilynamekey",
                "title": "let CNContactFamilyNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactpreviousfamilynamekey",
                "title": "let CNContactPreviousFamilyNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactnamesuffixkey",
                "title": "let CNContactNameSuffixKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactnicknamekey",
                "title": "let CNContactNicknameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticgivennamekey",
                "title": "let CNContactPhoneticGivenNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticmiddlenamekey",
                "title": "let CNContactPhoneticMiddleNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticfamilynamekey",
                "title": "let CNContactPhoneticFamilyNameKey: String",
                "type": "var"
              },
              {
                "title": "Work",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactjobtitlekey",
                "title": "let CNContactJobTitleKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactdepartmentnamekey",
                "title": "let CNContactDepartmentNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactorganizationnamekey",
                "title": "let CNContactOrganizationNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactphoneticorganizationnamekey",
                "title": "let CNContactPhoneticOrganizationNameKey: String",
                "type": "var"
              },
              {
                "title": "Addresses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactpostaladdresseskey",
                "title": "let CNContactPostalAddressesKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactemailaddresseskey",
                "title": "let CNContactEmailAddressesKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontacturladdresseskey",
                "title": "let CNContactUrlAddressesKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactinstantmessageaddresseskey",
                "title": "let CNContactInstantMessageAddressesKey: String",
                "type": "var"
              },
              {
                "title": "Phone",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactphonenumberskey",
                "title": "let CNContactPhoneNumbersKey: String",
                "type": "var"
              },
              {
                "title": "Social Profiles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactsocialprofileskey",
                "title": "let CNContactSocialProfilesKey: String",
                "type": "var"
              },
              {
                "title": "Birthday",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactbirthdaykey",
                "title": "let CNContactBirthdayKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactnongregorianbirthdaykey",
                "title": "let CNContactNonGregorianBirthdayKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactdateskey",
                "title": "let CNContactDatesKey: String",
                "type": "var"
              },
              {
                "title": "Notes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactnotekey",
                "title": "let CNContactNoteKey: String",
                "type": "var"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.contacts.notes",
                "title": "com.apple.developer.contacts.notes",
                "type": "typealias"
              },
              {
                "title": "Images",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactimagedatakey",
                "title": "let CNContactImageDataKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactthumbnailimagedatakey",
                "title": "let CNContactThumbnailImageDataKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontactimagedataavailablekey",
                "title": "let CNContactImageDataAvailableKey: String",
                "type": "var"
              },
              {
                "title": "Relationships",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactrelationskey",
                "title": "let CNContactRelationsKey: String",
                "type": "var"
              },
              {
                "title": "Groups and Containers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cngroupnamekey",
                "title": "let CNGroupNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cngroupidentifierkey",
                "title": "let CNGroupIdentifierKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontainernamekey",
                "title": "let CNContainerNameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cncontainertypekey",
                "title": "let CNContainerTypeKey: String",
                "type": "var"
              },
              {
                "title": "Instant Messaging Keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cninstantmessageaddressservicekey",
                "title": "let CNInstantMessageAddressServiceKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cninstantmessageaddressusernamekey",
                "title": "let CNInstantMessageAddressUsernameKey: String",
                "type": "var"
              },
              {
                "title": "Social Profile Keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileservicekey",
                "title": "let CNSocialProfileServiceKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileurlstringkey",
                "title": "let CNSocialProfileURLStringKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileusernamekey",
                "title": "let CNSocialProfileUsernameKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnsocialprofileuseridentifierkey",
                "title": "let CNSocialProfileUserIdentifierKey: String",
                "type": "var"
              },
              {
                "title": "Key Descriptors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnkeydescriptor",
                "title": "CNKeyDescriptor",
                "type": "protocol"
              }
            ],
            "path": "/documentation/contacts/contact-keys",
            "title": "Contact Keys",
            "type": "collection"
          },
          {
            "title": "Fetch and save requests",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Fetch Request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/init(keystofetch:)",
                "title": "init(keysToFetch: [any CNKeyDescriptor])",
                "type": "init"
              },
              {
                "path": "/documentation/contacts/cnkeydescriptor",
                "title": "CNKeyDescriptor",
                "type": "protocol"
              },
              {
                "title": "Specifying the Search Predicate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/predicate",
                "title": "var predicate: NSPredicate?",
                "type": "property"
              },
              {
                "title": "Configuring the Fetch Options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/mutableobjects",
                "title": "var mutableObjects: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/unifyresults",
                "title": "var unifyResults: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/sortorder",
                "title": "var sortOrder: CNContactSortOrder",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Sort Orders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/userdefault",
                    "title": "case userDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/givenname",
                    "title": "case givenName",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/familyname",
                    "title": "case familyName",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactsortorder/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cncontactsortorder",
                "title": "CNContactSortOrder",
                "type": "enum"
              },
              {
                "title": "Specifying the Keys to Fetch",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactfetchrequest/keystofetch",
                "title": "var keysToFetch: [any CNKeyDescriptor]",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cncontactfetchrequest",
            "title": "CNContactFetchRequest",
            "type": "class"
          },
          {
            "path": "/documentation/contacts/cnfetchrequest",
            "title": "CNFetchRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing results",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnfetchresult/currenthistorytoken",
                "title": "var currentHistoryToken: Data",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnfetchresult/value",
                "title": "var value: ValueType",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnfetchresult",
            "title": "CNFetchResult",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Saving contact changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/add(_:tocontainerwithidentifier:)-7eut4",
                "title": "func add(CNMutableContact, toContainerWithIdentifier: String?)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/update(_:)-3gaig",
                "title": "func update(CNMutableContact)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/delete(_:)-8m1tc",
                "title": "func delete(CNMutableContact)",
                "type": "method"
              },
              {
                "title": "Saving group changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/add(_:tocontainerwithidentifier:)-4ikaa",
                "title": "func add(CNMutableGroup, toContainerWithIdentifier: String?)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/update(_:)-8h6f6",
                "title": "func update(CNMutableGroup)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/delete(_:)-29lsm",
                "title": "func delete(CNMutableGroup)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/addmember(_:to:)",
                "title": "func addMember(CNContact, to: CNGroup)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/removemember(_:from:)",
                "title": "func removeMember(CNContact, from: CNGroup)",
                "type": "method"
              },
              {
                "title": "Adding and removing subgroups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/addsubgroup(_:to:)",
                "title": "func addSubgroup(CNGroup, to: CNGroup)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/removesubgroup(_:from:)",
                "title": "func removeSubgroup(CNGroup, from: CNGroup)",
                "type": "method"
              },
              {
                "title": "Configuring the save request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/shouldrefetchcontacts",
                "title": "var shouldRefetchContacts: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnsaverequest/transactionauthor",
                "title": "var transactionAuthor: String?",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnsaverequest",
            "title": "CNSaveRequest",
            "type": "class"
          },
          {
            "title": "Change history data",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddcontactevent/contact",
                "title": "var contact: CNContact",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddcontactevent/containeridentifier",
                "title": "var containerIdentifier: String?",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddcontactevent",
            "title": "CNChangeHistoryAddContactEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddgroupevent/group",
                "title": "var group: CNGroup",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddgroupevent/containeridentifier",
                "title": "var containerIdentifier: String",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddgroupevent",
            "title": "CNChangeHistoryAddGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddmembertogroupevent/group",
                "title": "var group: CNGroup",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddmembertogroupevent/member",
                "title": "var member: CNContact",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddmembertogroupevent",
            "title": "CNChangeHistoryAddMemberToGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddsubgrouptogroupevent/group",
                "title": "var group: CNGroup",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryaddsubgrouptogroupevent/subgroup",
                "title": "var subgroup: CNGroup",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryaddsubgrouptogroupevent",
            "title": "CNChangeHistoryAddSubgroupToGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistorydeletecontactevent/contactidentifier",
                "title": "var contactIdentifier: String",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistorydeletecontactevent",
            "title": "CNChangeHistoryDeleteContactEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistorydeletegroupevent/groupidentifier",
                "title": "var groupIdentifier: String",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistorydeletegroupevent",
            "title": "CNChangeHistoryDeleteGroupEvent",
            "type": "class"
          },
          {
            "path": "/documentation/contacts/cnchangehistorydropeverythingevent",
            "title": "CNChangeHistoryDropEverythingEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Processing an event",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryevent/accept(_:)",
                "title": "func accept(any CNChangeHistoryEventVisitor)",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryevent",
            "title": "CNChangeHistoryEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring the fetch request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/additionalcontactkeydescriptors",
                "title": "var additionalContactKeyDescriptors: [any CNKeyDescriptor]?",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/excludedtransactionauthors",
                "title": "var excludedTransactionAuthors: [String]?",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/includegroupchanges",
                "title": "var includeGroupChanges: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/mutableobjects",
                "title": "var mutableObjects: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/shouldunifyresults",
                "title": "var shouldUnifyResults: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryfetchrequest/startingtoken",
                "title": "var startingToken: Data?",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryfetchrequest",
            "title": "CNChangeHistoryFetchRequest",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovememberfromgroupevent/group",
                "title": "var group: CNGroup",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovememberfromgroupevent/member",
                "title": "var member: CNContact",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryremovememberfromgroupevent",
            "title": "CNChangeHistoryRemoveMemberFromGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovesubgroupfromgroupevent/group",
                "title": "var group: CNGroup",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryremovesubgroupfromgroupevent/subgroup",
                "title": "var subgroup: CNGroup",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryremovesubgroupfromgroupevent",
            "title": "CNChangeHistoryRemoveSubgroupFromGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryupdatecontactevent/contact",
                "title": "var contact: CNContact",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryupdatecontactevent",
            "title": "CNChangeHistoryUpdateContactEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting event details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryupdategroupevent/group",
                "title": "var group: CNGroup",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryupdategroupevent",
            "title": "CNChangeHistoryUpdateGroupEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Updating contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-9w73y",
                "title": "func visit(CNChangeHistoryAddContactEvent)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-1pf2a",
                "title": "func visit(CNChangeHistoryUpdateContactEvent)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-ci4z",
                "title": "func visit(CNChangeHistoryDeleteContactEvent)",
                "type": "method"
              },
              {
                "title": "Updating groups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-ve62",
                "title": "func visit(CNChangeHistoryAddGroupEvent)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-23p9h",
                "title": "func visit(CNChangeHistoryUpdateGroupEvent)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-82duo",
                "title": "func visit(CNChangeHistoryDeleteGroupEvent)",
                "type": "method"
              },
              {
                "title": "Updating subgroups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitaddsubgroup(_:)",
                "title": "func visitAddSubgroup(CNChangeHistoryAddSubgroupToGroupEvent)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitremovesubgroup(_:)",
                "title": "func visitRemoveSubgroup(CNChangeHistoryRemoveSubgroupFromGroupEvent)",
                "type": "method"
              },
              {
                "title": "Updating contacts in groups",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitaddmember(_:)",
                "title": "func visitAddMember(CNChangeHistoryAddMemberToGroupEvent)",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visitremovemember(_:)",
                "title": "func visitRemoveMember(CNChangeHistoryRemoveMemberFromGroupEvent)",
                "type": "method"
              },
              {
                "title": "Resetting synced data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnchangehistoryeventvisitor/visit(_:)-2yhz3",
                "title": "func visit(CNChangeHistoryDropEverythingEvent)",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cnchangehistoryeventvisitor",
            "title": "CNChangeHistoryEventVisitor",
            "type": "protocol"
          },
          {
            "title": "Formatters",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a formatted attributed string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/attributedstring(from:defaultattributes:)",
                "title": "func attributedString(from: CNContact, defaultAttributes: [AnyHashable : Any]?) -> NSAttributedString?",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/attributedstring(from:style:defaultattributes:)",
                "title": "class func attributedString(from: CNContact, style: CNContactFormatterStyle, defaultAttributes: [AnyHashable : Any]?) -> NSAttributedString?",
                "type": "method"
              },
              {
                "title": "Creating a formatted string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/string(from:)",
                "title": "func string(from: CNContact) -> String?",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/string(from:style:)",
                "title": "class func string(from: CNContact, style: CNContactFormatterStyle) -> String?",
                "type": "method"
              },
              {
                "title": "Specifying the formatting style",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/style",
                "title": "var style: CNContactFormatterStyle",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactformatterstyle/fullname",
                    "title": "case fullName",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactformatterstyle/phoneticfullname",
                    "title": "case phoneticFullName",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactformatterstyle/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cncontactformatterstyle",
                "title": "CNContactFormatterStyle",
                "type": "enum"
              },
              {
                "title": "Getting a descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/descriptorforrequiredkeys(for:)",
                "title": "class func descriptorForRequiredKeys(for: CNContactFormatterStyle) -> any CNKeyDescriptor",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/descriptorforrequiredkeysfordelimiter",
                "title": "class var descriptorForRequiredKeysForDelimiter: any CNKeyDescriptor",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/descriptorforrequiredkeysfornameorder",
                "title": "class var descriptorForRequiredKeysForNameOrder: any CNKeyDescriptor",
                "type": "property"
              },
              {
                "title": "Getting format information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/delimiter(for:)",
                "title": "class func delimiter(for: CNContact) -> String",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cncontactformatter/nameorder(for:)",
                "title": "class func nameOrder(for: CNContact) -> CNContactDisplayNameOrder",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactdisplaynameorder/userdefault",
                    "title": "case userDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactdisplaynameorder/givennamefirst",
                    "title": "case givenNameFirst",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cncontactdisplaynameorder/familynamefirst",
                    "title": "case familyNameFirst",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cncontactdisplaynameorder/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cncontactdisplaynameorder",
                "title": "CNContactDisplayNameOrder",
                "type": "enum"
              }
            ],
            "path": "/documentation/contacts/cncontactformatter",
            "title": "CNContactFormatter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Generating a formatted attributed string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/attributedstring(from:withdefaultattributes:)",
                "title": "func attributedString(from: CNPostalAddress, withDefaultAttributes: [AnyHashable : Any]) -> NSAttributedString",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/attributedstring(from:style:withdefaultattributes:)",
                "title": "class func attributedString(from: CNPostalAddress, style: CNPostalAddressFormatterStyle, withDefaultAttributes: [AnyHashable : Any]) -> NSAttributedString",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresspropertyattribute",
                "title": "let CNPostalAddressPropertyAttribute: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresslocalizedpropertynameattribute",
                "title": "let CNPostalAddressLocalizedPropertyNameAttribute: String",
                "type": "var"
              },
              {
                "title": "Generating a formatted string",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/string(from:)",
                "title": "func string(from: CNPostalAddress) -> String",
                "type": "method"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/string(from:style:)",
                "title": "class func string(from: CNPostalAddress, style: CNPostalAddressFormatterStyle) -> String",
                "type": "method"
              },
              {
                "title": "Specifying the formatting style",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressformatter/style",
                "title": "var style: CNPostalAddressFormatterStyle",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Styles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressformatterstyle/mailingaddress",
                    "title": "case mailingAddress",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnpostaladdressformatterstyle/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cnpostaladdressformatterstyle",
                "title": "CNPostalAddressFormatterStyle",
                "type": "enum"
              },
              {
                "title": "Getting the postal attribute keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresscitykey",
                "title": "let CNPostalAddressCityKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresscountrykey",
                "title": "let CNPostalAddressCountryKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressisocountrycodekey",
                "title": "let CNPostalAddressISOCountryCodeKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresspostalcodekey",
                "title": "let CNPostalAddressPostalCodeKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressstatekey",
                "title": "let CNPostalAddressStateKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdressstreetkey",
                "title": "let CNPostalAddressStreetKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresssubadministrativeareakey",
                "title": "let CNPostalAddressSubAdministrativeAreaKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnpostaladdresssublocalitykey",
                "title": "let CNPostalAddressSubLocalityKey: String",
                "type": "var"
              }
            ],
            "path": "/documentation/contacts/cnpostaladdressformatter",
            "title": "CNPostalAddressFormatter",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Extracting Contacts from a vCard",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactvcardserialization/contacts(with:)",
                "title": "class func contacts(with: Data) throws -> [CNContact]",
                "type": "method"
              },
              {
                "title": "Getting a vCard for Contacts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactvcardserialization/data(with:)",
                "title": "class func data(with: [CNContact]) throws -> Data",
                "type": "method"
              },
              {
                "title": "Getting a Descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactvcardserialization/descriptorforrequiredkeys()",
                "title": "class func descriptorForRequiredKeys() -> any CNKeyDescriptor",
                "type": "method"
              }
            ],
            "path": "/documentation/contacts/cncontactvcardserialization",
            "title": "CNContactVCardSerialization",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting the Shared Database",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactsuserdefaults/shared()",
                "title": "class func shared() -> Self",
                "type": "method"
              },
              {
                "title": "Getting the Default Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactsuserdefaults/countrycode",
                "title": "var countryCode: String",
                "type": "property"
              },
              {
                "path": "/documentation/contacts/cncontactsuserdefaults/sortorder",
                "title": "var sortOrder: CNContactSortOrder",
                "type": "property"
              }
            ],
            "path": "/documentation/contacts/cncontactsuserdefaults",
            "title": "CNContactsUserDefaults",
            "type": "class"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnerrordomain",
                "title": "let CNErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Error codes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/authorizationdenied",
                    "title": "static var authorizationDenied: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/changehistoryexpired",
                    "title": "static var changeHistoryExpired: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/changehistoryinvalidanchor",
                    "title": "static var changeHistoryInvalidAnchor: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/changehistoryinvalidfetchrequest",
                    "title": "static var changeHistoryInvalidFetchRequest: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/clientidentifiercollision",
                    "title": "static var clientIdentifierCollision: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/clientidentifierdoesnotexist",
                    "title": "static var clientIdentifierDoesNotExist: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/clientidentifierinvalid",
                    "title": "static var clientIdentifierInvalid: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/communicationerror",
                    "title": "static var communicationError: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/containmentcycle",
                    "title": "static var containmentCycle: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/containmentscope",
                    "title": "static var containmentScope: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/dataaccesserror",
                    "title": "static var dataAccessError: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/featuredisabledbyuser",
                    "title": "static var featureDisabledByUser: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/featurenotavailable",
                    "title": "static var featureNotAvailable: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/insertedrecordalreadyexists",
                    "title": "static var insertedRecordAlreadyExists: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/noaccessablewritablecontainers",
                    "title": "static var noAccessableWritableContainers: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/parentcontainernotwritable",
                    "title": "static var parentContainerNotWritable: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/parentrecorddoesnotexist",
                    "title": "static var parentRecordDoesNotExist: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/policyviolation",
                    "title": "static var policyViolation: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/predicateinvalid",
                    "title": "static var predicateInvalid: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/recorddoesnotexist",
                    "title": "static var recordDoesNotExist: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/recordidentifierinvalid",
                    "title": "static var recordIdentifierInvalid: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/recordnotwritable",
                    "title": "static var recordNotWritable: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/unauthorizedkeys",
                    "title": "static var unauthorizedKeys: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/vcardmalformed",
                    "title": "static var vCardMalformed: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/vcardsummarizationerror",
                    "title": "static var vCardSummarizationError: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/validationconfigurationerror",
                    "title": "static var validationConfigurationError: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/validationmultipleerrors",
                    "title": "static var validationMultipleErrors: CNError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/validationtypemismatch",
                    "title": "static var validationTypeMismatch: CNError.Code",
                    "type": "property"
                  },
                  {
                    "title": "Error details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/affectedrecordidentifiers",
                    "title": "var affectedRecordIdentifiers: [String]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/affectedrecords",
                    "title": "var affectedRecords: [AnyObject]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Errors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/authorizationdenied",
                        "title": "case authorizationDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/changehistoryexpired",
                        "title": "case changeHistoryExpired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/changehistoryinvalidanchor",
                        "title": "case changeHistoryInvalidAnchor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/changehistoryinvalidfetchrequest",
                        "title": "case changeHistoryInvalidFetchRequest",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/clientidentifiercollision",
                        "title": "case clientIdentifierCollision",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/clientidentifierinvalid",
                        "title": "case clientIdentifierInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/clientidentifierdoesnotexist",
                        "title": "case clientIdentifierDoesNotExist",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/communicationerror",
                        "title": "case communicationError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/containmentcycle",
                        "title": "case containmentCycle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/containmentscope",
                        "title": "case containmentScope",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/dataaccesserror",
                        "title": "case dataAccessError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/featuredisabledbyuser",
                        "title": "case featureDisabledByUser",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/featurenotavailable",
                        "title": "case featureNotAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/insertedrecordalreadyexists",
                        "title": "case insertedRecordAlreadyExists",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/noaccessablewritablecontainers",
                        "title": "case noAccessableWritableContainers",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/parentcontainernotwritable",
                        "title": "case parentContainerNotWritable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/parentrecorddoesnotexist",
                        "title": "case parentRecordDoesNotExist",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/policyviolation",
                        "title": "case policyViolation",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/predicateinvalid",
                        "title": "case predicateInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/recorddoesnotexist",
                        "title": "case recordDoesNotExist",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/recordidentifierinvalid",
                        "title": "case recordIdentifierInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/recordnotwritable",
                        "title": "case recordNotWritable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/unauthorizedkeys",
                        "title": "case unauthorizedKeys",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/validationmultipleerrors",
                        "title": "case validationMultipleErrors",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/validationtypemismatch",
                        "title": "case validationTypeMismatch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/validationconfigurationerror",
                        "title": "case validationConfigurationError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/vcardmalformed",
                        "title": "case vCardMalformed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/vcardsummarizationerror",
                        "title": "case vCardSummarizationError",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/contacts/cnerror/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/contacts/cnerror/code",
                    "title": "CNError.Code",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/keypaths",
                    "title": "var keyPaths: [String]?",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/contacts/cnerror",
                "title": "CNError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/authorizationdenied",
                    "title": "case authorizationDenied",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/changehistoryexpired",
                    "title": "case changeHistoryExpired",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/changehistoryinvalidanchor",
                    "title": "case changeHistoryInvalidAnchor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/changehistoryinvalidfetchrequest",
                    "title": "case changeHistoryInvalidFetchRequest",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/clientidentifiercollision",
                    "title": "case clientIdentifierCollision",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/clientidentifierinvalid",
                    "title": "case clientIdentifierInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/clientidentifierdoesnotexist",
                    "title": "case clientIdentifierDoesNotExist",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/communicationerror",
                    "title": "case communicationError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/containmentcycle",
                    "title": "case containmentCycle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/containmentscope",
                    "title": "case containmentScope",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/dataaccesserror",
                    "title": "case dataAccessError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/featuredisabledbyuser",
                    "title": "case featureDisabledByUser",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/featurenotavailable",
                    "title": "case featureNotAvailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/insertedrecordalreadyexists",
                    "title": "case insertedRecordAlreadyExists",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/noaccessablewritablecontainers",
                    "title": "case noAccessableWritableContainers",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/parentcontainernotwritable",
                    "title": "case parentContainerNotWritable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/parentrecorddoesnotexist",
                    "title": "case parentRecordDoesNotExist",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/policyviolation",
                    "title": "case policyViolation",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/predicateinvalid",
                    "title": "case predicateInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/recorddoesnotexist",
                    "title": "case recordDoesNotExist",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/recordidentifierinvalid",
                    "title": "case recordIdentifierInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/recordnotwritable",
                    "title": "case recordNotWritable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/unauthorizedkeys",
                    "title": "case unauthorizedKeys",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/validationmultipleerrors",
                    "title": "case validationMultipleErrors",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/validationtypemismatch",
                    "title": "case validationTypeMismatch",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/validationconfigurationerror",
                    "title": "case validationConfigurationError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/vcardmalformed",
                    "title": "case vCardMalformed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/vcardsummarizationerror",
                    "title": "case vCardSummarizationError",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/contacts/cnerror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/contacts/cnerror/code",
                "title": "CNError.Code",
                "type": "enum"
              },
              {
                "title": "Error data keys",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfoaffectedrecordskey",
                "title": "let CNErrorUserInfoAffectedRecordsKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfoaffectedrecordidentifierskey",
                "title": "let CNErrorUserInfoAffectedRecordIdentifiersKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfovalidationerrorskey",
                "title": "let CNErrorUserInfoValidationErrorsKey: String",
                "type": "var"
              },
              {
                "path": "/documentation/contacts/cnerroruserinfokeypathskey",
                "title": "let CNErrorUserInfoKeyPathsKey: String",
                "type": "var"
              },
              {
                "title": "Exceptions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/contacts/cncontactpropertynotfetchedexceptionname",
                "title": "let CNContactPropertyNotFetchedExceptionName: String",
                "type": "var"
              }
            ],
            "path": "/documentation/contacts/error-information",
            "title": "Error Information",
            "type": "collection"
          }
        ],
        "path": "/documentation/contacts",
        "title": "Contacts",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
