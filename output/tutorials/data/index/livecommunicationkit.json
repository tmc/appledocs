{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/livecommunicationkit",
        "title": "LiveCommunicationKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/livecommunicationkit",
        "title": "LiveCommunicationKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/rawvalue-swift.property",
                    "title": "var rawValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/arrayliteralelement",
                    "title": "Conversation.Capabilities.ArrayLiteralElement",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/element",
                    "title": "Conversation.Capabilities.Element",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/rawvalue-swift.typealias",
                    "title": "Conversation.Capabilities.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/merging",
                    "title": "static let merging: Conversation.Capabilities",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/pausing",
                    "title": "static let pausing: Conversation.Capabilities",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/playingtones",
                    "title": "static let playingTones: Conversation.Capabilities",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/unmerging",
                    "title": "static let unmerging: Conversation.Capabilities",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/video",
                    "title": "static let video: Conversation.Capabilities",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/capabilities/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/capabilities/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversation/capabilities",
                "title": "Conversation.Capabilities",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/==(_:_:)",
                    "title": "static func == (Conversation.Update, Conversation.Update) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/init(localmember:members:activeremotemembers:capabilities:)",
                    "title": "init(localMember: Handle?, members: Set<Handle>?, activeRemoteMembers: Set<Handle>?, capabilities: Conversation.Capabilities?)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/activeremotemembers",
                    "title": "var activeRemoteMembers: Set<Handle>?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/capabilities",
                    "title": "var capabilities: Conversation.Capabilities?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/localmember",
                    "title": "var localMember: Handle?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/members",
                    "title": "var members: Set<Handle>?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/update/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/update/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/update/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversation/update",
                "title": "Conversation.Update",
                "type": "struct"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversation/localmember",
                "title": "var localMember: Handle?",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversation/state-swift.property",
                "title": "var state: Conversation.State",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversation/uuid",
                "title": "var uuid: UUID",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/declinedelsewhere",
                    "title": "case declinedElsewhere",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/failed",
                    "title": "case failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/joinedelsewhere",
                    "title": "case joinedElsewhere",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/remoteended",
                    "title": "case remoteEnded",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/unanswered",
                    "title": "case unanswered",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/rawvalue-swift.property",
                    "title": "var rawValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/rawvalue-swift.typealias",
                    "title": "Conversation.EndedReason.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/endedreason/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/endedreason/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/endedreason/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/endedreason/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/endedreason/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/endedreason/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversation/endedreason",
                "title": "Conversation.EndedReason",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/==(_:_:)",
                    "title": "static func == (Conversation.Event, Conversation.Event) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/conversationconnected(_:)",
                    "title": "case conversationConnected(Date)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/conversationended(_:_:)",
                    "title": "case conversationEnded(Date, Conversation.EndedReason)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/conversationstartedconnecting(_:)",
                    "title": "case conversationStartedConnecting(Date)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/conversationupdated(_:)",
                    "title": "case conversationUpdated(Conversation.Update)",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/event/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/event/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/event/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversation/event",
                "title": "Conversation.Event",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/idle",
                    "title": "case idle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/joined",
                    "title": "case joined",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/joining",
                    "title": "case joining",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/leaving",
                    "title": "case leaving",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/left",
                    "title": "case left",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/paused",
                    "title": "case paused",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/rawvalue-swift.property",
                    "title": "var rawValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/rawvalue-swift.typealias",
                    "title": "Conversation.State.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversation/state-swift.enum/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversation/state-swift.enum",
                "title": "Conversation.State",
                "type": "enum"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversation/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversation/customdebugstringconvertible-implementations",
                "title": "CustomDebugStringConvertible Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/livecommunicationkit/conversation",
            "title": "Conversation",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationaction/init(conversationuuid:timeoutdate:)",
                "title": "convenience init(conversationUUID: UUID, timeoutDate: Date)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationaction/conversationuuid",
                "title": "var conversationUUID: UUID",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationaction/state-swift.property",
                "title": "var state: ConversationAction.State",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationaction/timeoutdate",
                "title": "var timeoutDate: Date",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationaction/uuid",
                "title": "var uuid: UUID",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationaction/fail()",
                "title": "func fail()",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationaction/fulfill()",
                "title": "func fulfill()",
                "type": "method"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/==(_:_:)",
                    "title": "static func == (ConversationAction.State, ConversationAction.State) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/complete",
                    "title": "case complete",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/failed(reason:)",
                    "title": "case failed(reason: String)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/idle",
                    "title": "case idle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/running",
                    "title": "case running",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversationaction/state-swift.enum",
                "title": "ConversationAction.State",
                "type": "enum"
              }
            ],
            "path": "/documentation/livecommunicationkit/conversationaction",
            "title": "ConversationAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/init(ringtonename:icontemplateimagedata:maximumconversationgroups:maximumconversationsperconversationgroup:includesconversationinrecents:supportsvideo:supportedhandletypes:)",
                    "title": "init(ringtoneName: String?, iconTemplateImageData: Data?, maximumConversationGroups: Int, maximumConversationsPerConversationGroup: Int, includesConversationInRecents: Bool, supportsVideo: Bool, supportedHandleTypes: Set<Handle.Kind>)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/icontemplateimagedata",
                    "title": "var iconTemplateImageData: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/includesconversationinrecents",
                    "title": "var includesConversationInRecents: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/maximumconversationgroups",
                    "title": "var maximumConversationGroups: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/maximumconversationsperconversationgroup",
                    "title": "var maximumConversationsPerConversationGroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/ringtonename",
                    "title": "var ringtoneName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/supportedhandletypes",
                    "title": "var supportedHandleTypes: Set<Handle.Kind>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct/supportsvideo",
                    "title": "var supportsVideo: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.struct",
                "title": "ConversationManager.Configuration",
                "type": "struct"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/init(configuration:)",
                "title": "convenience init(configuration: ConversationManager.Configuration)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/configuration-swift.property",
                "title": "let configuration: ConversationManager.Configuration",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/conversations",
                "title": "var conversations: [Conversation]",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/delegate",
                "title": "var delegate: (any ConversationManagerDelegate)?",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/pendingactions",
                "title": "var pendingActions: [ConversationAction]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/invalidate()",
                "title": "func invalidate()",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/pendingconversationactions(of:for:)",
                "title": "func pendingConversationActions(of: ConversationAction.Type, for: Conversation) -> [ConversationAction]",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/perform(_:)",
                "title": "func perform([ConversationAction]) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/reportconversationevent(_:for:)",
                "title": "func reportConversationEvent(Conversation.Event, for: Conversation)",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/reportnewincomingconversation(uuid:update:)",
                "title": "func reportNewIncomingConversation(uuid: UUID, update: Conversation.Update) async throws",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanager/reportnewincomingvoippushpayload(_:)",
                "title": "class func reportNewIncomingVoIPPushPayload([AnyHashable : Any]) async throws",
                "type": "method"
              }
            ],
            "path": "/documentation/livecommunicationkit/conversationmanager",
            "title": "ConversationManager",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/endconversationaction/init(conversationuuid:)",
                "title": "init(conversationUUID: UUID)",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/endconversationaction/fulfill(dateended:)",
                "title": "func fulfill(dateEnded: Date)",
                "type": "method"
              }
            ],
            "path": "/documentation/livecommunicationkit/endconversationaction",
            "title": "EndConversationAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/joinconversationaction/init(conversationuuid:)",
                "title": "init(conversationUUID: UUID)",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/joinconversationaction/fulfill(dateconnected:)",
                "title": "func fulfill(dateConnected: Date)",
                "type": "method"
              }
            ],
            "path": "/documentation/livecommunicationkit/joinconversationaction",
            "title": "JoinConversationAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/mergeconversationaction/init(conversationuuid:conversationuuidtomergewith:)",
                "title": "init(conversationUUID: UUID, conversationUUIDToMergeWith: UUID)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/mergeconversationaction/conversationuuidtomergewith",
                "title": "let conversationUUIDToMergeWith: UUID",
                "type": "property"
              }
            ],
            "path": "/documentation/livecommunicationkit/mergeconversationaction",
            "title": "MergeConversationAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/muteconversationaction/init(conversationuuid:ismuted:)",
                "title": "init(conversationUUID: UUID, isMuted: Bool)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/muteconversationaction/ismuted",
                "title": "let isMuted: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/livecommunicationkit/muteconversationaction",
            "title": "MuteConversationAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/pauseconversationaction/init(conversationuuid:ispaused:)",
                "title": "init(conversationUUID: UUID, isPaused: Bool)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/pauseconversationaction/ispaused",
                "title": "let isPaused: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/livecommunicationkit/pauseconversationaction",
            "title": "PauseConversationAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/playtoneaction/init(conversationuuid:digits:tone:)",
                "title": "init(conversationUUID: UUID, digits: String, tone: PlayToneAction.Tone)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/playtoneaction/digits",
                "title": "let digits: String",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.property",
                "title": "let tone: PlayToneAction.Tone",
                "type": "property"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/hardpause",
                    "title": "case hardPause",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/single",
                    "title": "case single",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/softpause",
                    "title": "case softPause",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/rawvalue-swift.property",
                    "title": "var rawValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/rawvalue-swift.typealias",
                    "title": "PlayToneAction.Tone.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/playtoneaction/tone-swift.enum",
                "title": "PlayToneAction.Tone",
                "type": "enum"
              }
            ],
            "path": "/documentation/livecommunicationkit/playtoneaction",
            "title": "PlayToneAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/startconversationaction/init(conversationuuid:handles:isvideo:)",
                "title": "init(conversationUUID: UUID, handles: [Handle], isVideo: Bool)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/startconversationaction/handles",
                "title": "let handles: [Handle]",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/startconversationaction/isvideo",
                "title": "let isVideo: Bool",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/startconversationaction/fulfill(datestarted:)",
                "title": "func fulfill(dateStarted: Date)",
                "type": "method"
              }
            ],
            "path": "/documentation/livecommunicationkit/startconversationaction",
            "title": "StartConversationAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/unmergeconversationaction/init(conversationuuid:)",
                "title": "init(conversationUUID: UUID)",
                "type": "init"
              }
            ],
            "path": "/documentation/livecommunicationkit/unmergeconversationaction",
            "title": "UnmergeConversationAction",
            "type": "class"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanagerdelegate/conversationmanager(_:conversationchanged:)",
                "title": "func conversationManager(ConversationManager, conversationChanged: Conversation)",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanagerdelegate/conversationmanager(_:didactivate:)",
                "title": "func conversationManager(ConversationManager, didActivate: AVAudioSession)",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanagerdelegate/conversationmanager(_:diddeactivate:)",
                "title": "func conversationManager(ConversationManager, didDeactivate: AVAudioSession)",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanagerdelegate/conversationmanager(_:perform:)",
                "title": "func conversationManager(ConversationManager, perform: ConversationAction)",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanagerdelegate/conversationmanager(_:timedoutperforming:)",
                "title": "func conversationManager(ConversationManager, timedOutPerforming: ConversationAction)",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanagerdelegate/conversationmanagerdidbegin(_:)",
                "title": "func conversationManagerDidBegin(ConversationManager)",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/conversationmanagerdelegate/conversationmanagerdidreset(_:)",
                "title": "func conversationManagerDidReset(ConversationManager)",
                "type": "method"
              }
            ],
            "path": "/documentation/livecommunicationkit/conversationmanagerdelegate",
            "title": "ConversationManagerDelegate",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/==(_:_:)",
                "title": "static func == (Handle, Handle) -> Bool",
                "type": "op"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/init(type:value:displayname:)",
                "title": "init(type: Handle.Kind, value: String, displayName: String?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/displayname",
                "title": "var displayName: String",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/type",
                "title": "var type: Handle.Kind",
                "type": "property"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/value",
                "title": "var value: String",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "path": "/documentation/livecommunicationkit/handle/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/handle/kind/emailaddress",
                    "title": "case emailAddress",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/handle/kind/generic",
                    "title": "case generic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/handle/kind/phonenumber",
                    "title": "case phoneNumber",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/handle/kind/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/handle/kind/rawvalue-swift.property",
                    "title": "var rawValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/handle/kind/rawvalue-swift.typealias",
                    "title": "Handle.Kind.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/handle/kind/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/handle/kind/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/handle/kind/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/handle/kind/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/handle/kind/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/livecommunicationkit/handle/kind/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/livecommunicationkit/handle/kind/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/livecommunicationkit/handle/kind",
                "title": "Handle.Kind",
                "type": "enum"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/livecommunicationkit/handle/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/livecommunicationkit/handle/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/livecommunicationkit/handle",
            "title": "Handle",
            "type": "struct"
          }
        ],
        "path": "/documentation/livecommunicationkit",
        "title": "LiveCommunicationKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
