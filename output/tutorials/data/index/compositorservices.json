{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "App integration",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/compositorservices/drawing-fully-immersive-content-using-metal",
            "title": "Drawing fully immersive content using Metal",
            "type": "article"
          },
          {
            "path": "/documentation/compositorservices/interacting-with-virtual-content-blended-with-passthrough",
            "title": "Interacting with virtual content blended with passthrough",
            "type": "sampleCode"
          },
          {
            "title": "Render-loop setup",
            "type": "groupMarker"
          },
          {
            "title": "Drawing environment",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Articles",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/compositorservices/compositorservices-functions",
            "title": "CompositorServices Functions",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/compositorservices",
        "title": "Compositor Services",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "App integration",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/compositorservices/drawing-fully-immersive-content-using-metal",
            "title": "Drawing fully immersive content using Metal",
            "type": "article"
          },
          {
            "path": "/documentation/compositorservices/interacting-with-virtual-content-blended-with-passthrough",
            "title": "Interacting with virtual content blended with passthrough",
            "type": "sampleCode"
          },
          {
            "title": "Render-loop setup",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Configuring the layer renderer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/cp_object_cp_layer_renderer_configuration",
                "title": "CP_OBJECT_cp_layer_renderer_configuration",
                "type": "class"
              },
              {
                "path": "/documentation/compositorservices/cp_object_cp_layer_renderer_capabilities",
                "title": "CP_OBJECT_cp_layer_renderer_capabilities",
                "type": "class"
              },
              {
                "title": "Getting the layer renderer properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/cp_object_cp_layer_renderer_properties",
                "title": "CP_OBJECT_cp_layer_renderer_properties",
                "type": "class"
              },
              {
                "title": "Getting the GPU device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/device",
                "title": "cp_layer_renderer_get_device",
                "type": "func"
              },
              {
                "title": "Managing the rendering loop",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/state-swift.property",
                "title": "cp_layer_renderer_get_state",
                "type": "func"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/waituntilrunning()",
                "title": "cp_layer_renderer_wait_until_running",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Getting the states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/state-swift.enum/paused",
                    "title": "cp_layer_renderer_state_paused",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/state-swift.enum/running",
                    "title": "cp_layer_renderer_state_running",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/state-swift.enum/invalidated",
                    "title": "cp_layer_renderer_state_invalidated",
                    "type": "case"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/state-swift.enum",
                "title": "cp_layer_renderer_state",
                "type": "enum"
              },
              {
                "title": "Drawing a frame of content",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the views",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the viewâ€™s texture map",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.property",
                        "title": "cp_view_get_view_texture_map",
                        "type": "func"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the viewport",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/viewport",
                            "title": "cp_view_texture_map_get_viewport",
                            "type": "func"
                          },
                          {
                            "title": "Getting the texture indices",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/sliceindex",
                            "title": "cp_view_texture_map_get_slice_index",
                            "type": "func"
                          },
                          {
                            "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/textureindex",
                            "title": "cp_view_texture_map_get_texture_index",
                            "type": "func"
                          }
                        ],
                        "path": "/documentation/compositorservices/cp_view_texture_map_t",
                        "title": "cp_view_texture_map_t",
                        "type": "typealias"
                      },
                      {
                        "title": "Getting the transformations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/transform",
                        "title": "cp_view_get_transform",
                        "type": "func"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/tangents",
                        "title": "cp_view_get_tangents",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/compositorservices/cp_view_t",
                    "title": "cp_view_t",
                    "type": "typealias"
                  },
                  {
                    "title": "Enqueueing a command buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/encodepresent(commandbuffer:)",
                    "title": "cp_drawable_encode_present",
                    "type": "func"
                  },
                  {
                    "title": "Getting the projection matrix",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the axis directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightupback",
                        "title": "cp_axis_direction_convention_right_up_back",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightupforward",
                        "title": "cp_axis_direction_convention_right_up_forward",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightdownback",
                        "title": "cp_axis_direction_convention_right_down_back",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightdownforward",
                        "title": "cp_axis_direction_convention_right_down_forward",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/compositorservices/axisdirectionconvention",
                    "title": "cp_axis_direction_convention",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing pixel depth information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/depthrange",
                    "title": "cp_drawable_get_depth_range",
                    "type": "func"
                  },
                  {
                    "title": "Managing the state machine",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.property",
                    "title": "cp_drawable_get_state",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/available",
                        "title": "cp_drawable_state_available",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/presenting",
                        "title": "cp_drawable_state_presenting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/rendering",
                        "title": "cp_drawable_state_rendering",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum",
                    "title": "cp_drawable_state",
                    "type": "enum"
                  },
                  {
                    "title": "Synchronizing the drawing operation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/frametiming",
                    "title": "cp_drawable_get_frame_timing",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/presentationframeindex",
                    "title": "cp_drawable_get_presentation_frame_index",
                    "type": "func"
                  }
                ],
                "path": "/documentation/compositorservices/cp_drawable_t",
                "title": "cp_drawable_t",
                "type": "typealias"
              },
              {
                "title": "Configuring the frame update rate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/minimumframerepeatcount",
                "title": "cp_layer_renderer_get_minimum_frame_repeat_count",
                "type": "func"
              }
            ],
            "path": "/documentation/compositorservices/layerrenderer",
            "title": "CP_OBJECT_cp_layer_renderer",
            "type": "class"
          },
          {
            "title": "Drawing environment",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Articles",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/cp_drawable_compute_projection",
                "title": "cp_drawable_compute_projection",
                "type": "func"
              },
              {
                "path": "/documentation/compositorservices/cp_frame_binocular_frustum_matrix",
                "title": "cp_frame_binocular_frustum_matrix",
                "type": "func"
              },
              {
                "path": "/documentation/compositorservices/cp_frame_monocular_frustum_matrix",
                "title": "cp_frame_monocular_frustum_matrix",
                "type": "func"
              },
              {
                "path": "/documentation/compositorservices/cp_frame_timing_get_trackable_anchor_time",
                "title": "cp_frame_timing_get_trackable_anchor_time",
                "type": "func"
              }
            ],
            "path": "/documentation/compositorservices/compositorservices-functions",
            "title": "CompositorServices Functions",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/compositorservices",
        "title": "Compositor Services",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "App integration",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/compositorservices/drawing-fully-immersive-content-using-metal",
            "title": "Drawing fully immersive content using Metal",
            "type": "article"
          },
          {
            "path": "/documentation/compositorservices/interacting-with-virtual-content-blended-with-passthrough",
            "title": "Interacting with virtual content blended with passthrough",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/compositorlayer/init(configuration:renderer:)",
                "title": "init(configuration: any CompositorLayerConfiguration, renderer: (LayerRenderer) -> Void)",
                "type": "init"
              },
              {
                "deprecated": true,
                "path": "/documentation/compositorservices/compositorlayer/init(configuration:renderer:_:)",
                "title": "init(configuration: any CompositorLayerConfiguration, renderer: (LayerRenderer) -> Void, Void)",
                "type": "init"
              }
            ],
            "path": "/documentation/compositorservices/compositorlayer",
            "title": "CompositorLayer",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Specifying the custom options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/compositorlayerconfiguration/makeconfiguration(capabilities:configuration:)",
                "title": "func makeConfiguration(capabilities: LayerRenderer.Capabilities, configuration: inout LayerRenderer.Configuration)",
                "type": "method"
              },
              {
                "title": "Getting the default options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/compositorlayerconfiguration/default",
                "title": "static var `default`: DefaultCompositorLayerConfiguration",
                "type": "property"
              }
            ],
            "path": "/documentation/compositorservices/compositorlayerconfiguration",
            "title": "CompositorLayerConfiguration",
            "type": "protocol"
          },
          {
            "path": "/documentation/compositorservices/defaultcompositorlayerconfiguration",
            "title": "DefaultCompositorLayerConfiguration",
            "type": "struct"
          },
          {
            "title": "Render-loop setup",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Configuring the layer renderer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/configuration-swift.property",
                "title": "var configuration: LayerRenderer.Configuration",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Configuring the color textures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/colorformat",
                    "title": "var colorFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/colorusage",
                    "title": "var colorUsage: MTLTextureUsage",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the depth information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/depthformat",
                    "title": "var depthFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/depthusage",
                    "title": "var depthUsage: MTLTextureUsage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/defaultdepthrange",
                    "title": "var defaultDepthRange: SIMD2<Float>",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the texture layout",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/layout",
                    "title": "var layout: LayerRenderer.Layout",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the texture layouts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/layout/dedicated",
                        "title": "case dedicated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/layout/shared",
                        "title": "case shared",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/layout/layered",
                        "title": "case layered",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/layout/init(rawvalue:)",
                        "title": "init?(rawValue: UInt32)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/compositorservices/layerrenderer/layout",
                    "title": "LayerRenderer.Layout",
                    "type": "enum"
                  },
                  {
                    "title": "Configuring the foveation setting",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/isfoveationenabled",
                    "title": "var isFoveationEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct/generateflippedrasterizationratemaps",
                    "title": "var generateFlippedRasterizationRateMaps: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/configuration-swift.struct",
                "title": "LayerRenderer.Configuration",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the supported formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/capabilities/supportedcolorformats",
                    "title": "var supportedColorFormats: [MTLPixelFormat]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/capabilities/supporteddepthformats",
                    "title": "var supportedDepthFormats: [MTLPixelFormat]",
                    "type": "property"
                  },
                  {
                    "title": "Getting the supported layouts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/capabilities/supportedlayouts(options:)",
                    "title": "func supportedLayouts(options: LayerRenderer.Capabilities.SupportedLayoutsOptions) -> [LayerRenderer.Layout]",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/capabilities/supportedlayoutsoptions/foveationenabled",
                        "title": "static let foveationEnabled: LayerRenderer.Capabilities.SupportedLayoutsOptions",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/compositorservices/layerrenderer/capabilities/supportedlayoutsoptions",
                    "title": "LayerRenderer.Capabilities.SupportedLayoutsOptions",
                    "type": "struct"
                  },
                  {
                    "title": "Getting the supported layer features",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/capabilities/supportsfoveation",
                    "title": "var supportsFoveation: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Getting the minimum near plane distance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/capabilities/supportedminimumnearplanedistance",
                    "title": "var supportedMinimumNearPlaneDistance: Float",
                    "type": "property"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/capabilities",
                "title": "LayerRenderer.Capabilities",
                "type": "struct"
              },
              {
                "title": "Getting the layer renderer properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/properties-swift.property",
                "title": "var properties: LayerRenderer.Properties",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating representative properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/properties-swift.struct/init(configuration:)",
                    "title": "init(configuration: LayerRenderer.Configuration) throws",
                    "type": "init"
                  },
                  {
                    "title": "Getting view port information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/properties-swift.struct/viewcount",
                    "title": "var viewCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Getting the layerâ€™s texture topology",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/properties-swift.struct/texturetopologies",
                    "title": "var textureTopologies: [TextureTopology]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the topology type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/texturetopology/texturetype",
                        "title": "var textureType: MTLTextureType",
                        "type": "property"
                      },
                      {
                        "title": "Getting the array length",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/texturetopology/arraylength",
                        "title": "var arrayLength: UInt64",
                        "type": "property"
                      },
                      {
                        "title": "Creating a topology",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/texturetopology/init()",
                        "title": "init()",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/compositorservices/texturetopology",
                    "title": "TextureTopology",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/properties-swift.struct",
                "title": "LayerRenderer.Properties",
                "type": "struct"
              },
              {
                "title": "Getting the GPU device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/device",
                "title": "var device: any MTLDevice",
                "type": "property"
              },
              {
                "title": "Managing the rendering loop",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/state-swift.property",
                "title": "var state: LayerRenderer.State",
                "type": "property"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/waituntilrunning()",
                "title": "func waitUntilRunning()",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting the states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/state-swift.enum/paused",
                    "title": "case paused",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/state-swift.enum/running",
                    "title": "case running",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/state-swift.enum/invalidated",
                    "title": "case invalidated",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/state-swift.enum/init(rawvalue:)",
                    "title": "init?(rawValue: UInt32)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/state-swift.enum",
                "title": "LayerRenderer.State",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Putting the current thread to sleep",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/clock/wait(until:tolerance:)",
                    "title": "func wait(until: LayerRenderer.Clock.Instant, tolerance: Duration?)",
                    "type": "method"
                  },
                  {
                    "title": "Creating a clock",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/clock/init()",
                    "title": "init()",
                    "type": "init"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/clock",
                "title": "LayerRenderer.Clock",
                "type": "struct"
              },
              {
                "title": "Drawing a frame of content",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/querynextframe()",
                "title": "func queryNextFrame() -> LayerRenderer.Frame?",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting timing information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/predicttiming()",
                    "title": "func predictTiming() -> LayerRenderer.Frame.Timing?",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Updating the frame contents",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/frame/timing/optimalinputtime",
                        "title": "var optimalInputTime: LayerRenderer.Clock.Instant",
                        "type": "property"
                      },
                      {
                        "title": "Rendering the frame",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/frame/timing/renderingdeadline",
                        "title": "var renderingDeadline: LayerRenderer.Clock.Instant",
                        "type": "property"
                      },
                      {
                        "title": "Displaying the frame",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/frame/timing/presentationtime",
                        "title": "var presentationTime: LayerRenderer.Clock.Instant",
                        "type": "property"
                      },
                      {
                        "title": "Creating the timing details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/frame/timing/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/frame/timing/trackableanchortime",
                        "title": "var trackableAnchorTime: LayerRenderer.Clock.Instant",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/compositorservices/layerrenderer/frame/timing",
                    "title": "LayerRenderer.Frame.Timing",
                    "type": "struct"
                  },
                  {
                    "title": "Reporting frame update times",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/startupdate()",
                    "title": "func startUpdate()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/endupdate()",
                    "title": "func endUpdate()",
                    "type": "method"
                  },
                  {
                    "title": "Getting the drawable environment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/querydrawable()",
                    "title": "func queryDrawable() -> LayerRenderer.Drawable?",
                    "type": "method"
                  },
                  {
                    "title": "Reporting frame submission times",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/startsubmission()",
                    "title": "func startSubmission()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/endsubmission()",
                    "title": "func endSubmission()",
                    "type": "method"
                  },
                  {
                    "title": "Getting frame-related details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/frameindex",
                    "title": "var frameIndex: LayerFrameIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerframeindex",
                    "title": "LayerFrameIndex",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/compositorservices/compositorframeindex",
                    "title": "CompositorFrameIndex",
                    "type": "typealias"
                  },
                  {
                    "title": "Creating a frame",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/binocularfrustummatrix(convention:increasetangents:depthrange:)",
                    "title": "func binocularFrustumMatrix(convention: AxisDirectionConvention, increaseTangents: SIMD4<Float>, depthRange: SIMD2<Float>) -> matrix_float4x4",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/monocularfrustummatrix(convention:viewindex:increasetangents:depthrange:)",
                    "title": "func monocularFrustumMatrix(convention: AxisDirectionConvention, viewIndex: Int, increaseTangents: SIMD4<Float>, depthRange: SIMD2<Float>) -> matrix_float4x4",
                    "type": "method"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/frame",
                "title": "LayerRenderer.Frame",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the views",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/views",
                    "title": "var views: [LayerRenderer.Drawable.View]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the viewâ€™s texture map",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.property",
                        "title": "var textureMap: LayerRenderer.Drawable.View.TextureMap",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the viewport",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/viewport",
                            "title": "var viewport: MTLViewport",
                            "type": "property"
                          },
                          {
                            "title": "Getting the texture indices",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/sliceindex",
                            "title": "var sliceIndex: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/textureindex",
                            "title": "var textureIndex: Int",
                            "type": "property"
                          },
                          {
                            "title": "Creating a texture map",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct",
                        "title": "LayerRenderer.Drawable.View.TextureMap",
                        "type": "struct"
                      },
                      {
                        "title": "Getting the transformations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/transform",
                        "title": "var transform: simd_float4x4",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/tangents",
                        "title": "var tangents: simd_float4",
                        "type": "property"
                      },
                      {
                        "title": "Creating a view",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/init()",
                        "title": "init()",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view",
                    "title": "LayerRenderer.Drawable.View",
                    "type": "struct"
                  },
                  {
                    "title": "Accessing the device orientation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/deviceanchor",
                    "title": "var deviceAnchor: DeviceAnchor?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the render textures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/colortextures",
                    "title": "var colorTextures: [any MTLTexture]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/depthtextures",
                    "title": "var depthTextures: [any MTLTexture]",
                    "type": "property"
                  },
                  {
                    "title": "Enqueueing a command buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/encodepresent(commandbuffer:)",
                    "title": "func encodePresent(commandBuffer: any MTLCommandBuffer)",
                    "type": "method"
                  },
                  {
                    "title": "Getting the rasterization rate map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/rasterizationratemaps",
                    "title": "var rasterizationRateMaps: [any MTLRasterizationRateMap]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/flippedrasterizationratemaps",
                    "title": "var flippedRasterizationRateMaps: [any MTLRasterizationRateMap]",
                    "type": "property"
                  },
                  {
                    "title": "Getting the projection matrix",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the axis directions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightupback",
                        "title": "case rightUpBack",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightupforward",
                        "title": "case rightUpForward",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightdownback",
                        "title": "case rightDownBack",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/rightdownforward",
                        "title": "case rightDownForward",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/axisdirectionconvention/init(rawvalue:)",
                        "title": "init?(rawValue: UInt8)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/compositorservices/axisdirectionconvention",
                    "title": "AxisDirectionConvention",
                    "type": "enum"
                  },
                  {
                    "title": "Accessing pixel depth information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/depthrange",
                    "title": "var depthRange: simd_float2",
                    "type": "property"
                  },
                  {
                    "title": "Managing the state machine",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.property",
                    "title": "var state: LayerRenderer.Drawable.State",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/available",
                        "title": "case available",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/presenting",
                        "title": "case presenting",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/rendering",
                        "title": "case rendering",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/init(rawvalue:)",
                        "title": "init?(rawValue: UInt32)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum",
                    "title": "LayerRenderer.Drawable.State",
                    "type": "enum"
                  },
                  {
                    "title": "Synchronizing the drawing operation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/frametiming",
                    "title": "var frameTiming: LayerRenderer.Frame.Timing",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/presentationframeindex",
                    "title": "var presentationFrameIndex: CompositorFrameIndex",
                    "type": "property"
                  },
                  {
                    "title": "Creating a drawable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/computeprojection(convention:viewindex:)",
                    "title": "func computeProjection(convention: AxisDirectionConvention, viewIndex: Int) -> matrix_float4x4",
                    "type": "method"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/drawable",
                "title": "LayerRenderer.Drawable",
                "type": "struct"
              },
              {
                "title": "Handling events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/onspatialevent",
                "title": "var onSpatialEvent: (SpatialEventCollection) -> Void",
                "type": "property"
              },
              {
                "title": "Configuring the frame update rate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/minimumframerepeatcount",
                "title": "var minimumFrameRepeatCount: Int32",
                "type": "property"
              }
            ],
            "path": "/documentation/compositorservices/layerrenderer",
            "title": "LayerRenderer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting timing information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/predicttiming()",
                "title": "func predictTiming() -> LayerRenderer.Frame.Timing?",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Updating the frame contents",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/timing/optimalinputtime",
                    "title": "var optimalInputTime: LayerRenderer.Clock.Instant",
                    "type": "property"
                  },
                  {
                    "title": "Rendering the frame",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/timing/renderingdeadline",
                    "title": "var renderingDeadline: LayerRenderer.Clock.Instant",
                    "type": "property"
                  },
                  {
                    "title": "Displaying the frame",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/timing/presentationtime",
                    "title": "var presentationTime: LayerRenderer.Clock.Instant",
                    "type": "property"
                  },
                  {
                    "title": "Creating the timing details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/timing/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/frame/timing/trackableanchortime",
                    "title": "var trackableAnchorTime: LayerRenderer.Clock.Instant",
                    "type": "property"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/frame/timing",
                "title": "LayerRenderer.Frame.Timing",
                "type": "struct"
              },
              {
                "title": "Reporting frame update times",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/startupdate()",
                "title": "func startUpdate()",
                "type": "method"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/endupdate()",
                "title": "func endUpdate()",
                "type": "method"
              },
              {
                "title": "Getting the drawable environment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/querydrawable()",
                "title": "func queryDrawable() -> LayerRenderer.Drawable?",
                "type": "method"
              },
              {
                "title": "Reporting frame submission times",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/startsubmission()",
                "title": "func startSubmission()",
                "type": "method"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/endsubmission()",
                "title": "func endSubmission()",
                "type": "method"
              },
              {
                "title": "Getting frame-related details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/frameindex",
                "title": "var frameIndex: LayerFrameIndex",
                "type": "property"
              },
              {
                "path": "/documentation/compositorservices/layerframeindex",
                "title": "LayerFrameIndex",
                "type": "typealias"
              },
              {
                "path": "/documentation/compositorservices/compositorframeindex",
                "title": "CompositorFrameIndex",
                "type": "typealias"
              },
              {
                "title": "Creating a frame",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/binocularfrustummatrix(convention:increasetangents:depthrange:)",
                "title": "func binocularFrustumMatrix(convention: AxisDirectionConvention, increaseTangents: SIMD4<Float>, depthRange: SIMD2<Float>) -> matrix_float4x4",
                "type": "method"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/frame/monocularfrustummatrix(convention:viewindex:increasetangents:depthrange:)",
                "title": "func monocularFrustumMatrix(convention: AxisDirectionConvention, viewIndex: Int, increaseTangents: SIMD4<Float>, depthRange: SIMD2<Float>) -> matrix_float4x4",
                "type": "method"
              }
            ],
            "path": "/documentation/compositorservices/layerrenderer/frame",
            "title": "LayerRenderer.Frame",
            "type": "struct"
          },
          {
            "title": "Drawing environment",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the views",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/views",
                "title": "var views: [LayerRenderer.Drawable.View]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the viewâ€™s texture map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.property",
                    "title": "var textureMap: LayerRenderer.Drawable.View.TextureMap",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the viewport",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/viewport",
                        "title": "var viewport: MTLViewport",
                        "type": "property"
                      },
                      {
                        "title": "Getting the texture indices",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/sliceindex",
                        "title": "var sliceIndex: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/textureindex",
                        "title": "var textureIndex: Int",
                        "type": "property"
                      },
                      {
                        "title": "Creating a texture map",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/init()",
                        "title": "init()",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct",
                    "title": "LayerRenderer.Drawable.View.TextureMap",
                    "type": "struct"
                  },
                  {
                    "title": "Getting the transformations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/transform",
                    "title": "var transform: simd_float4x4",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/tangents",
                    "title": "var tangents: simd_float4",
                    "type": "property"
                  },
                  {
                    "title": "Creating a view",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/init()",
                    "title": "init()",
                    "type": "init"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/drawable/view",
                "title": "LayerRenderer.Drawable.View",
                "type": "struct"
              },
              {
                "title": "Accessing the device orientation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/deviceanchor",
                "title": "var deviceAnchor: DeviceAnchor?",
                "type": "property"
              },
              {
                "title": "Getting the render textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/colortextures",
                "title": "var colorTextures: [any MTLTexture]",
                "type": "property"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/depthtextures",
                "title": "var depthTextures: [any MTLTexture]",
                "type": "property"
              },
              {
                "title": "Enqueueing a command buffer",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/encodepresent(commandbuffer:)",
                "title": "func encodePresent(commandBuffer: any MTLCommandBuffer)",
                "type": "method"
              },
              {
                "title": "Getting the rasterization rate map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/rasterizationratemaps",
                "title": "var rasterizationRateMaps: [any MTLRasterizationRateMap]",
                "type": "property"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/flippedrasterizationratemaps",
                "title": "var flippedRasterizationRateMaps: [any MTLRasterizationRateMap]",
                "type": "property"
              },
              {
                "title": "Getting the projection matrix",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the axis directions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/axisdirectionconvention/rightupback",
                    "title": "case rightUpBack",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/axisdirectionconvention/rightupforward",
                    "title": "case rightUpForward",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/axisdirectionconvention/rightdownback",
                    "title": "case rightDownBack",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/axisdirectionconvention/rightdownforward",
                    "title": "case rightDownForward",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/axisdirectionconvention/init(rawvalue:)",
                    "title": "init?(rawValue: UInt8)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/compositorservices/axisdirectionconvention",
                "title": "AxisDirectionConvention",
                "type": "enum"
              },
              {
                "title": "Accessing pixel depth information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/depthrange",
                "title": "var depthRange: simd_float2",
                "type": "property"
              },
              {
                "title": "Managing the state machine",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.property",
                "title": "var state: LayerRenderer.Drawable.State",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/available",
                    "title": "case available",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/presenting",
                    "title": "case presenting",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/rendering",
                    "title": "case rendering",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum/init(rawvalue:)",
                    "title": "init?(rawValue: UInt32)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/drawable/state-swift.enum",
                "title": "LayerRenderer.Drawable.State",
                "type": "enum"
              },
              {
                "title": "Synchronizing the drawing operation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/frametiming",
                "title": "var frameTiming: LayerRenderer.Frame.Timing",
                "type": "property"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/presentationframeindex",
                "title": "var presentationFrameIndex: CompositorFrameIndex",
                "type": "property"
              },
              {
                "title": "Creating a drawable",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/computeprojection(convention:viewindex:)",
                "title": "func computeProjection(convention: AxisDirectionConvention, viewIndex: Int) -> matrix_float4x4",
                "type": "method"
              }
            ],
            "path": "/documentation/compositorservices/layerrenderer/drawable",
            "title": "LayerRenderer.Drawable",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the viewâ€™s texture map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.property",
                "title": "var textureMap: LayerRenderer.Drawable.View.TextureMap",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the viewport",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/viewport",
                    "title": "var viewport: MTLViewport",
                    "type": "property"
                  },
                  {
                    "title": "Getting the texture indices",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/sliceindex",
                    "title": "var sliceIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/textureindex",
                    "title": "var textureIndex: Int",
                    "type": "property"
                  },
                  {
                    "title": "Creating a texture map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct/init()",
                    "title": "init()",
                    "type": "init"
                  }
                ],
                "path": "/documentation/compositorservices/layerrenderer/drawable/view/texturemap-swift.struct",
                "title": "LayerRenderer.Drawable.View.TextureMap",
                "type": "struct"
              },
              {
                "title": "Getting the transformations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/view/transform",
                "title": "var transform: simd_float4x4",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/compositorservices/layerrenderer/drawable/view/tangents",
                "title": "var tangents: simd_float4",
                "type": "property"
              },
              {
                "title": "Creating a view",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrenderer/drawable/view/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/compositorservices/layerrenderer/drawable/view",
            "title": "LayerRenderer.Drawable.View",
            "type": "struct"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the configuration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/layoutnotsupported",
                "title": "case layoutNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/missingconfiguration",
                "title": "case missingConfiguration",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/notenoughframesrequested",
                "title": "case notEnoughFramesRequested",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/temporalantialiasingnotsupported",
                "title": "case temporalAntiAliasingNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/toomanyframesrequested",
                "title": "case tooManyFramesRequested",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/unsupportedforwarddepthrange",
                "title": "case unsupportedForwardDepthRange",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/unsupportednearplanedistance",
                "title": "case unsupportedNearPlaneDistance",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/variablerasterizationrateisnotsupported",
                "title": "case variableRasterizationRateIsNotSupported",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/unsupportedcolorformat",
                "title": "case unsupportedColorFormat",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/unsupportedcolorusage",
                "title": "case unsupportedColorUsage",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/unsupporteddepthformat",
                "title": "case unsupportedDepthFormat",
                "type": "case"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/unsupporteddepthusage",
                "title": "case unsupportedDepthUsage",
                "type": "case"
              },
              {
                "title": "Getting the error details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/layerrendererconfigurationerror/description",
                "title": "var description: String",
                "type": "property"
              }
            ],
            "path": "/documentation/compositorservices/layerrendererconfigurationerror",
            "title": "LayerRendererConfigurationError",
            "type": "enum"
          },
          {
            "title": "Articles",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Functions",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/compositorservices/compositorservices-functions",
            "title": "CompositorServices Functions",
            "type": "collection"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting the topology type",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/texturetopology/texturetype",
                "title": "var textureType: MTLTextureType",
                "type": "property"
              },
              {
                "title": "Getting the array length",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/texturetopology/arraylength",
                "title": "var arrayLength: UInt64",
                "type": "property"
              },
              {
                "title": "Creating a topology",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/compositorservices/texturetopology/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/compositorservices/texturetopology",
            "title": "TextureTopology",
            "type": "struct"
          }
        ],
        "path": "/documentation/compositorservices",
        "title": "Compositor Services",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
