{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "title": "Workflows",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/automator",
        "title": "Automator",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializing the Action",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/ambundleaction/awakefrombundle()",
                "title": "- awakeFromBundle",
                "type": "method"
              },
              {
                "title": "Managing Action Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/ambundleaction/bundle",
                "title": "bundle",
                "type": "property"
              },
              {
                "path": "/documentation/automator/ambundleaction/hasview",
                "title": "hasView",
                "type": "property"
              },
              {
                "path": "/documentation/automator/ambundleaction/view",
                "title": "view",
                "type": "property"
              },
              {
                "path": "/documentation/automator/ambundleaction/parameters",
                "title": "parameters",
                "type": "property"
              }
            ],
            "path": "/documentation/automator/ambundleaction",
            "title": "AMBundleAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Handling the I/O Separator Character",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amshellscriptaction/inputfieldseparator",
                "title": "inputFieldSeparator",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amshellscriptaction/outputfieldseparator",
                "title": "outputFieldSeparator",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amshellscriptaction/remaplineendings",
                "title": "remapLineEndings",
                "type": "property"
              }
            ],
            "path": "/documentation/automator/amshellscriptaction",
            "title": "AMShellScriptAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing and Encoding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/init(definition:fromarchive:)",
                "title": "- initWithDefinition:fromArchive:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/init(contentsof:)",
                "title": "- initWithContentsOfURL:error:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/write(to:)",
                "title": "- writeToDictionary:",
                "type": "method"
              },
              {
                "title": "Controlling the Action",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/run(withinput:)",
                "title": "- runWithInput:error:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/runasynchronously(withinput:)",
                "title": "- runAsynchronouslyWithInput:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/finishrunningwitherror(_:)",
                "title": "- finishRunningWithError:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/willfinishrunning()",
                "title": "- willFinishRunning",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/stop()",
                "title": "- stop",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/reset()",
                "title": "- reset",
                "type": "method"
              },
              {
                "title": "Initializing and Synchronizing the Action User Interface",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/activated()",
                "title": "- activated",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/opened()",
                "title": "- opened",
                "type": "method"
              },
              {
                "title": "Performing Logging",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/logmessagewithlevel:format:",
                "title": "- logMessageWithLevel:format:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/debug",
                    "title": "AMLogLevelDebug",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/info",
                    "title": "AMLogLevelInfo",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/warn",
                    "title": "AMLogLevelWarn",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/error",
                    "title": "AMLogLevelError",
                    "type": "case"
                  }
                ],
                "path": "/documentation/automator/amloglevel",
                "title": "AMLogLevel",
                "type": "enum"
              },
              {
                "title": "Updating Action Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/parametersupdated()",
                "title": "- parametersUpdated",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/updateparameters()",
                "title": "- updateParameters",
                "type": "method"
              },
              {
                "title": "Getting Action Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/name",
                "title": "name",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/progressvalue",
                "title": "progressValue",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/ignoresinput",
                "title": "ignoresInput",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/output",
                "title": "output",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/selectedinputtype",
                "title": "selectedInputType",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/selectedoutputtype",
                "title": "selectedOutputType",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/isstopped",
                "title": "stopped",
                "type": "property"
              },
              {
                "title": "Performing Cleanup Operations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/closed()",
                "title": "- closed",
                "type": "method"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/automator/amaction/runwithinput:fromaction:error:",
                "title": "- runWithInput:fromAction:error:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/automator/amaction/didfinishrunningwitherror:",
                "title": "- didFinishRunningWithError:",
                "type": "method"
              }
            ],
            "path": "/documentation/automator/amaction",
            "title": "AMAction",
            "type": "class"
          },
          {
            "title": "Workflows",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflow/init(contentsof:)",
                "title": "- initWithContentsOfURL:error:",
                "type": "method"
              },
              {
                "title": "Running a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/run(at:withinput:)",
                "title": "+ runWorkflowAtURL:withInput:error:",
                "type": "method"
              },
              {
                "title": "Saving Changes to a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/write(to:)",
                "title": "- writeToURL:error:",
                "type": "method"
              },
              {
                "title": "Getting Information About a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/actions",
                "title": "actions",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflow/fileurl",
                "title": "fileURL",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflow/valueforvariable(withname:)",
                "title": "- valueForVariableWithName:",
                "type": "method"
              },
              {
                "title": "Working with the Workflow’s Input and Output",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/input",
                "title": "input",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflow/output",
                "title": "output",
                "type": "property"
              },
              {
                "title": "Manipulating the Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/setvalue(_:forvariablewithname:)",
                "title": "- setValue:forVariableWithName:",
                "type": "method"
              },
              {
                "title": "Manipulating the Workflow’s Actions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/addaction(_:)",
                "title": "- addAction:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflow/insertaction(_:at:)",
                "title": "- insertAction:atIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflow/moveaction(at:to:)",
                "title": "- moveActionAtIndex:toIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflow/removeaction(_:)",
                "title": "- removeAction:",
                "type": "method"
              }
            ],
            "path": "/documentation/automator/amworkflow",
            "title": "AMWorkflow",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing the Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/workflow",
                "title": "workflow",
                "type": "property"
              },
              {
                "title": "Accessing the Workflow View",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/workflowview-swift.property",
                "title": "workflowView",
                "type": "property"
              },
              {
                "title": "Accessing the Delegate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Preparing to Run",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:willrun:)",
                    "title": "- workflowController:willRunAction:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillrun(_:)",
                    "title": "- workflowControllerWillRun:",
                    "type": "method"
                  },
                  {
                    "title": "Running",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:didrun:)",
                    "title": "- workflowController:didRunAction:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidrun(_:)",
                    "title": "- workflowControllerDidRun:",
                    "type": "method"
                  },
                  {
                    "title": "Stopping",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillstop(_:)",
                    "title": "- workflowControllerWillStop:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidstop(_:)",
                    "title": "- workflowControllerDidStop:",
                    "type": "method"
                  },
                  {
                    "title": "Handling Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:diderror:)",
                    "title": "- workflowController:didError:",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:willrun:)",
                    "title": "- workflowController:willRunAction:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillrun(_:)",
                    "title": "- workflowControllerWillRun:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:didrun:)",
                    "title": "- workflowController:didRunAction:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidrun(_:)",
                    "title": "- workflowControllerDidRun:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillstop(_:)",
                    "title": "- workflowControllerWillStop:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidstop(_:)",
                    "title": "- workflowControllerDidStop:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:diderror:)",
                    "title": "- workflowController:didError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/automator/amworkflowcontrollerdelegate",
                "title": "AMWorkflowControllerDelegate",
                "type": "protocol"
              },
              {
                "title": "Controlling the Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/pause(_:)",
                "title": "- pause:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/reset(_:)",
                "title": "- reset:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/run(_:)",
                "title": "- run:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/step(_:)",
                "title": "- step:",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/stop(_:)",
                "title": "- stop:",
                "type": "method"
              },
              {
                "title": "Getting Workflow Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/canrun",
                "title": "canRun",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/ispaused",
                "title": "paused",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/isrunning",
                "title": "running",
                "type": "property"
              },
              {
                "title": "Instance Variables",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/workflowview-c.ivar",
                "title": "workflowView",
                "type": "ivar"
              }
            ],
            "path": "/documentation/automator/amworkflowcontroller",
            "title": "AMWorkflowController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring the Workflow View",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowview/iseditable",
                "title": "editable",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflowview/workflowcontroller",
                "title": "workflowController",
                "type": "property"
              }
            ],
            "path": "/documentation/automator/amworkflowview",
            "title": "AMWorkflowView",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing the Shared Workspace",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkspace/shared",
                "title": "sharedWorkspace",
                "type": "property"
              },
              {
                "title": "Running Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkspace/runworkflow(atpath:withinput:)",
                "title": "- runWorkflowAtPath:withInput:error:",
                "type": "method"
              }
            ],
            "path": "/documentation/automator/amworkspace",
            "title": "AMWorkspace",
            "type": "class"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/automator/amautomatorerrordomain",
            "title": "AMAutomatorErrorDomain",
            "type": "macro"
          },
          {
            "path": "/documentation/automator/amactionerrorkey",
            "title": "AMActionErrorKey",
            "type": "macro"
          },
          {
            "children": [
              {
                "title": "Workflow Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowactionsnotloadederror",
                "title": "AMWorkflowActionsNotLoadedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowneweractionversionerror",
                "title": "AMWorkflowNewerActionVersionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflownewerversionerror",
                "title": "AMWorkflowNewerVersionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflownoenabledactionserror",
                "title": "AMWorkflowNoEnabledActionsError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowolderactionversionerror",
                "title": "AMWorkflowOlderActionVersionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowpropertylistinvaliderror",
                "title": "AMWorkflowPropertyListInvalidError",
                "type": "case"
              },
              {
                "title": "Workflow Runtime Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/usercancelederror",
                "title": "AMUserCanceledError",
                "type": "case"
              },
              {
                "title": "Action Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/actionapplicationresourceerror",
                "title": "AMActionApplicationResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionapplicationversionresourceerror",
                "title": "AMActionApplicationVersionResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionarchitecturemismatcherror",
                "title": "AMActionArchitectureMismatchError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionexceptionerror",
                "title": "AMActionExceptionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionexecutionerror",
                "title": "AMActionExecutionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionfailedgatekeepererror",
                "title": "AMActionFailedGatekeeperError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionfileresourceerror",
                "title": "AMActionFileResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actioninitializationerror",
                "title": "AMActionInitializationError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actioninsufficientdataerror",
                "title": "AMActionInsufficientDataError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionisdeprecatederror",
                "title": "AMActionIsDeprecatedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionlicenseresourceerror",
                "title": "AMActionLicenseResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionlinkerror",
                "title": "AMActionLinkError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionloaderror",
                "title": "AMActionLoadError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionmalwareerror",
                "title": "AMActionMalwareError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionnotloadableerror",
                "title": "AMActionNotLoadableError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionpropertylistinvaliderror",
                "title": "AMActionPropertyListInvalidError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionquarantineerror",
                "title": "AMActionQuarantineError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionrequiredactionresourceerror",
                "title": "AMActionRequiredActionResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionruntimemismatcherror",
                "title": "AMActionRuntimeMismatchError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionsignaturecorrupterror",
                "title": "AMActionSignatureCorruptError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionthirdpartyactionsnotallowederror",
                "title": "AMActionThirdPartyActionsNotAllowedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionxpcerror",
                "title": "AMActionXPCError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionxprotecterror",
                "title": "AMActionXProtectError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/nosuchactionerror",
                "title": "AMNoSuchActionError",
                "type": "case"
              },
              {
                "title": "Data Conversion Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/conversionfailederror",
                "title": "AMConversionFailedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/conversionnodataerror",
                "title": "AMConversionNoDataError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/conversionnotpossibleerror",
                "title": "AMConversionNotPossibleError",
                "type": "case"
              }
            ],
            "path": "/documentation/automator/amerror/code",
            "title": "AMErrorCode",
            "type": "enum"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing the script",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amapplescriptaction/script",
                "title": "script",
                "type": "property"
              }
            ],
            "deprecated": true,
            "path": "/documentation/automator/amapplescriptaction",
            "title": "AMAppleScriptAction",
            "type": "class"
          }
        ],
        "path": "/documentation/automator",
        "title": "Automator",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Actions",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializing the Action",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/ambundleaction/awakefrombundle()",
                "title": "func awakeFromBundle()",
                "type": "method"
              },
              {
                "title": "Managing Action Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/ambundleaction/bundle",
                "title": "var bundle: Bundle",
                "type": "property"
              },
              {
                "path": "/documentation/automator/ambundleaction/hasview",
                "title": "var hasView: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/automator/ambundleaction/view",
                "title": "var view: NSView?",
                "type": "property"
              },
              {
                "path": "/documentation/automator/ambundleaction/parameters",
                "title": "var parameters: NSMutableDictionary?",
                "type": "property"
              }
            ],
            "path": "/documentation/automator/ambundleaction",
            "title": "AMBundleAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Handling the I/O Separator Character",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amshellscriptaction/inputfieldseparator",
                "title": "var inputFieldSeparator: String",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amshellscriptaction/outputfieldseparator",
                "title": "var outputFieldSeparator: String",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amshellscriptaction/remaplineendings",
                "title": "var remapLineEndings: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/automator/amshellscriptaction",
            "title": "AMShellScriptAction",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializing and Encoding",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/init(definition:fromarchive:)",
                "title": "init?(definition: [String : Any]?, fromArchive: Bool)",
                "type": "init"
              },
              {
                "path": "/documentation/automator/amaction/init(contentsof:)",
                "title": "init(contentsOf: URL) throws",
                "type": "init"
              },
              {
                "path": "/documentation/automator/amaction/write(to:)",
                "title": "func write(to: NSMutableDictionary)",
                "type": "method"
              },
              {
                "title": "Controlling the Action",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/run(withinput:)",
                "title": "func run(withInput: Any?) throws -> Any",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/runasynchronously(withinput:)",
                "title": "func runAsynchronously(withInput: Any?)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/finishrunningwitherror(_:)",
                "title": "func finishRunningWithError((any Error)?)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/willfinishrunning()",
                "title": "func willFinishRunning()",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/stop()",
                "title": "func stop()",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/reset()",
                "title": "func reset()",
                "type": "method"
              },
              {
                "title": "Initializing and Synchronizing the Action User Interface",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/activated()",
                "title": "func activated()",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/opened()",
                "title": "func opened()",
                "type": "method"
              },
              {
                "title": "Performing Logging",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/debug",
                    "title": "case debug",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/info",
                    "title": "case info",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/warn",
                    "title": "case warn",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/error",
                    "title": "case error",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amloglevel/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/automator/amloglevel",
                "title": "AMLogLevel",
                "type": "enum"
              },
              {
                "title": "Updating Action Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/parametersupdated()",
                "title": "func parametersUpdated()",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amaction/updateparameters()",
                "title": "func updateParameters()",
                "type": "method"
              },
              {
                "title": "Getting Action Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/progressvalue",
                "title": "var progressValue: CGFloat",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/ignoresinput",
                "title": "var ignoresInput: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/output",
                "title": "var output: Any?",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/selectedinputtype",
                "title": "var selectedInputType: String?",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/selectedoutputtype",
                "title": "var selectedOutputType: String?",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amaction/isstopped",
                "title": "var isStopped: Bool",
                "type": "property"
              },
              {
                "title": "Performing Cleanup Operations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amaction/closed()",
                "title": "func closed()",
                "type": "method"
              }
            ],
            "path": "/documentation/automator/amaction",
            "title": "AMAction",
            "type": "class"
          },
          {
            "title": "Workflows",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "path": "/documentation/automator/amworkflow/init(contentsof:)",
                "title": "convenience init(contentsOf: URL) throws",
                "type": "init"
              },
              {
                "title": "Running a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/run(at:withinput:)",
                "title": "class func run(at: URL, withInput: Any?) throws -> Any",
                "type": "method"
              },
              {
                "title": "Saving Changes to a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/write(to:)",
                "title": "func write(to: URL) throws",
                "type": "method"
              },
              {
                "title": "Getting Information About a Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/actions",
                "title": "var actions: [AMAction]",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflow/fileurl",
                "title": "var fileURL: URL?",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflow/valueforvariable(withname:)",
                "title": "func valueForVariable(withName: String) -> Any?",
                "type": "method"
              },
              {
                "title": "Working with the Workflow’s Input and Output",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/input",
                "title": "var input: Any?",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflow/output",
                "title": "var output: Any?",
                "type": "property"
              },
              {
                "title": "Manipulating the Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/setvalue(_:forvariablewithname:)",
                "title": "func setValue(Any?, forVariableWithName: String) -> Bool",
                "type": "method"
              },
              {
                "title": "Manipulating the Workflow’s Actions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflow/addaction(_:)",
                "title": "func addAction(AMAction)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflow/insertaction(_:at:)",
                "title": "func insertAction(AMAction, at: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflow/moveaction(at:to:)",
                "title": "func moveAction(at: Int, to: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflow/removeaction(_:)",
                "title": "func removeAction(AMAction)",
                "type": "method"
              }
            ],
            "path": "/documentation/automator/amworkflow",
            "title": "AMWorkflow",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing the Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/workflow",
                "title": "var workflow: AMWorkflow?",
                "type": "property"
              },
              {
                "title": "Accessing the Workflow View",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/workflowview-swift.property",
                "title": "var workflowView: AMWorkflowView?",
                "type": "property"
              },
              {
                "title": "Accessing the Delegate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/delegate",
                "title": "var delegate: (any AMWorkflowControllerDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Preparing to Run",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:willrun:)",
                    "title": "func workflowController(AMWorkflowController, willRun: AMAction)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillrun(_:)",
                    "title": "func workflowControllerWillRun(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "title": "Running",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:didrun:)",
                    "title": "func workflowController(AMWorkflowController, didRun: AMAction)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidrun(_:)",
                    "title": "func workflowControllerDidRun(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "title": "Stopping",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillstop(_:)",
                    "title": "func workflowControllerWillStop(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidstop(_:)",
                    "title": "func workflowControllerDidStop(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "title": "Handling Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:diderror:)",
                    "title": "func workflowController(AMWorkflowController, didError: any Error)",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:willrun:)",
                    "title": "func workflowController(AMWorkflowController, willRun: AMAction)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillrun(_:)",
                    "title": "func workflowControllerWillRun(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:didrun:)",
                    "title": "func workflowController(AMWorkflowController, didRun: AMAction)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidrun(_:)",
                    "title": "func workflowControllerDidRun(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerwillstop(_:)",
                    "title": "func workflowControllerWillStop(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontrollerdidstop(_:)",
                    "title": "func workflowControllerDidStop(AMWorkflowController)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/automator/amworkflowcontrollerdelegate/workflowcontroller(_:diderror:)",
                    "title": "func workflowController(AMWorkflowController, didError: any Error)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/automator/amworkflowcontrollerdelegate",
                "title": "AMWorkflowControllerDelegate",
                "type": "protocol"
              },
              {
                "title": "Controlling the Workflow",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/pause(_:)",
                "title": "func pause(Any)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/reset(_:)",
                "title": "func reset(Any)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/run(_:)",
                "title": "func run(Any)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/step(_:)",
                "title": "func step(Any)",
                "type": "method"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/stop(_:)",
                "title": "func stop(Any)",
                "type": "method"
              },
              {
                "title": "Getting Workflow Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/canrun",
                "title": "var canRun: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/ispaused",
                "title": "var isPaused: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflowcontroller/isrunning",
                "title": "var isRunning: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/automator/amworkflowcontroller",
            "title": "AMWorkflowController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring the Workflow View",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkflowview/iseditable",
                "title": "var isEditable: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amworkflowview/workflowcontroller",
                "title": "var workflowController: AMWorkflowController?",
                "type": "property"
              }
            ],
            "path": "/documentation/automator/amworkflowview",
            "title": "AMWorkflowView",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing the Shared Workspace",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkspace/shared",
                "title": "class var shared: AMWorkspace!",
                "type": "property"
              },
              {
                "title": "Running Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amworkspace/runworkflow(atpath:withinput:)",
                "title": "func runWorkflow(atPath: String!, withInput: Any!) throws -> Any",
                "type": "method"
              }
            ],
            "path": "/documentation/automator/amworkspace",
            "title": "AMWorkspace",
            "type": "class"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/automator/amautomatorerrordomain",
            "title": "var AMAutomatorErrorDomain: String",
            "type": "var"
          },
          {
            "path": "/documentation/automator/amactionerrorkey",
            "title": "var AMActionErrorKey: String",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/workflowactionsnotloadederror",
                "title": "static var workflowActionsNotLoadedError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/workflowneweractionversionerror",
                "title": "static var workflowNewerActionVersionError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/workflownewerversionerror",
                "title": "static var workflowNewerVersionError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/workflownoenabledactionserror",
                "title": "static var workflowNoEnabledActionsError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/workflowolderactionversionerror",
                "title": "static var workflowOlderActionVersionError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/workflowpropertylistinvaliderror",
                "title": "static var workflowPropertyListInvalidError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/usercancelederror",
                "title": "static var userCanceledError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionapplicationresourceerror",
                "title": "static var actionApplicationResourceError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionapplicationversionresourceerror",
                "title": "static var actionApplicationVersionResourceError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionarchitecturemismatcherror",
                "title": "static var actionArchitectureMismatchError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionexceptionerror",
                "title": "static var actionExceptionError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionexecutionerror",
                "title": "static var actionExecutionError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionfailedgatekeepererror",
                "title": "static var actionFailedGatekeeperError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionfileresourceerror",
                "title": "static var actionFileResourceError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actioninitializationerror",
                "title": "static var actionInitializationError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actioninsufficientdataerror",
                "title": "static var actionInsufficientDataError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionisdeprecatederror",
                "title": "static var actionIsDeprecatedError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionlicenseresourceerror",
                "title": "static var actionLicenseResourceError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionlinkerror",
                "title": "static var actionLinkError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionloaderror",
                "title": "static var actionLoadError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionmalwareerror",
                "title": "static var actionMalwareError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionnotloadableerror",
                "title": "static var actionNotLoadableError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionpropertylistinvaliderror",
                "title": "static var actionPropertyListInvalidError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionquarantineerror",
                "title": "static var actionQuarantineError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionrequiredactionresourceerror",
                "title": "static var actionRequiredActionResourceError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionruntimemismatcherror",
                "title": "static var actionRuntimeMismatchError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionsignaturecorrupterror",
                "title": "static var actionSignatureCorruptError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionthirdpartyactionsnotallowederror",
                "title": "static var actionThirdPartyActionsNotAllowedError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionxpcerror",
                "title": "static var actionXPCError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/actionxprotecterror",
                "title": "static var actionXProtectError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/nosuchactionerror",
                "title": "static var noSuchActionError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/conversionfailederror",
                "title": "static var conversionFailedError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/conversionnodataerror",
                "title": "static var conversionNoDataError: AMError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/automator/amerror/conversionnotpossibleerror",
                "title": "static var conversionNotPossibleError: AMError.Code",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Workflow Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/workflowactionsnotloadederror",
                    "title": "case workflowActionsNotLoadedError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/workflowneweractionversionerror",
                    "title": "case workflowNewerActionVersionError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/workflownewerversionerror",
                    "title": "case workflowNewerVersionError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/workflownoenabledactionserror",
                    "title": "case workflowNoEnabledActionsError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/workflowolderactionversionerror",
                    "title": "case workflowOlderActionVersionError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/workflowpropertylistinvaliderror",
                    "title": "case workflowPropertyListInvalidError",
                    "type": "case"
                  },
                  {
                    "title": "Workflow Runtime Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/usercancelederror",
                    "title": "case userCanceledError",
                    "type": "case"
                  },
                  {
                    "title": "Action Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionapplicationresourceerror",
                    "title": "case actionApplicationResourceError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionapplicationversionresourceerror",
                    "title": "case actionApplicationVersionResourceError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionarchitecturemismatcherror",
                    "title": "case actionArchitectureMismatchError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionexceptionerror",
                    "title": "case actionExceptionError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionexecutionerror",
                    "title": "case actionExecutionError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionfailedgatekeepererror",
                    "title": "case actionFailedGatekeeperError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionfileresourceerror",
                    "title": "case actionFileResourceError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actioninitializationerror",
                    "title": "case actionInitializationError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actioninsufficientdataerror",
                    "title": "case actionInsufficientDataError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionisdeprecatederror",
                    "title": "case actionIsDeprecatedError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionlicenseresourceerror",
                    "title": "case actionLicenseResourceError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionlinkerror",
                    "title": "case actionLinkError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionloaderror",
                    "title": "case actionLoadError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionmalwareerror",
                    "title": "case actionMalwareError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionnotloadableerror",
                    "title": "case actionNotLoadableError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionpropertylistinvaliderror",
                    "title": "case actionPropertyListInvalidError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionquarantineerror",
                    "title": "case actionQuarantineError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionrequiredactionresourceerror",
                    "title": "case actionRequiredActionResourceError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionruntimemismatcherror",
                    "title": "case actionRuntimeMismatchError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionsignaturecorrupterror",
                    "title": "case actionSignatureCorruptError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionthirdpartyactionsnotallowederror",
                    "title": "case actionThirdPartyActionsNotAllowedError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionxpcerror",
                    "title": "case actionXPCError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/actionxprotecterror",
                    "title": "case actionXProtectError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/nosuchactionerror",
                    "title": "case noSuchActionError",
                    "type": "case"
                  },
                  {
                    "title": "Data Conversion Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/conversionfailederror",
                    "title": "case conversionFailedError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/conversionnodataerror",
                    "title": "case conversionNoDataError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/conversionnotpossibleerror",
                    "title": "case conversionNotPossibleError",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/automator/amerror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/automator/amerror/code",
                "title": "AMError.Code",
                "type": "enum"
              },
              {
                "title": "Error Domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amautomatorerrordomain",
                "title": "var AMAutomatorErrorDomain: String",
                "type": "var"
              }
            ],
            "path": "/documentation/automator/amerror",
            "title": "AMError",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Workflow Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowactionsnotloadederror",
                "title": "case workflowActionsNotLoadedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowneweractionversionerror",
                "title": "case workflowNewerActionVersionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflownewerversionerror",
                "title": "case workflowNewerVersionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflownoenabledactionserror",
                "title": "case workflowNoEnabledActionsError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowolderactionversionerror",
                "title": "case workflowOlderActionVersionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/workflowpropertylistinvaliderror",
                "title": "case workflowPropertyListInvalidError",
                "type": "case"
              },
              {
                "title": "Workflow Runtime Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/usercancelederror",
                "title": "case userCanceledError",
                "type": "case"
              },
              {
                "title": "Action Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/actionapplicationresourceerror",
                "title": "case actionApplicationResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionapplicationversionresourceerror",
                "title": "case actionApplicationVersionResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionarchitecturemismatcherror",
                "title": "case actionArchitectureMismatchError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionexceptionerror",
                "title": "case actionExceptionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionexecutionerror",
                "title": "case actionExecutionError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionfailedgatekeepererror",
                "title": "case actionFailedGatekeeperError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionfileresourceerror",
                "title": "case actionFileResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actioninitializationerror",
                "title": "case actionInitializationError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actioninsufficientdataerror",
                "title": "case actionInsufficientDataError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionisdeprecatederror",
                "title": "case actionIsDeprecatedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionlicenseresourceerror",
                "title": "case actionLicenseResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionlinkerror",
                "title": "case actionLinkError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionloaderror",
                "title": "case actionLoadError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionmalwareerror",
                "title": "case actionMalwareError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionnotloadableerror",
                "title": "case actionNotLoadableError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionpropertylistinvaliderror",
                "title": "case actionPropertyListInvalidError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionquarantineerror",
                "title": "case actionQuarantineError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionrequiredactionresourceerror",
                "title": "case actionRequiredActionResourceError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionruntimemismatcherror",
                "title": "case actionRuntimeMismatchError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionsignaturecorrupterror",
                "title": "case actionSignatureCorruptError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionthirdpartyactionsnotallowederror",
                "title": "case actionThirdPartyActionsNotAllowedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionxpcerror",
                "title": "case actionXPCError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/actionxprotecterror",
                "title": "case actionXProtectError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/nosuchactionerror",
                "title": "case noSuchActionError",
                "type": "case"
              },
              {
                "title": "Data Conversion Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/conversionfailederror",
                "title": "case conversionFailedError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/conversionnodataerror",
                "title": "case conversionNoDataError",
                "type": "case"
              },
              {
                "path": "/documentation/automator/amerror/code/conversionnotpossibleerror",
                "title": "case conversionNotPossibleError",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amerror/code/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/automator/amerror/code",
            "title": "AMError.Code",
            "type": "enum"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing the script",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/automator/amapplescriptaction/script",
                "title": "var script: OSAScript?",
                "type": "property"
              }
            ],
            "deprecated": true,
            "path": "/documentation/automator/amapplescriptaction",
            "title": "AMAppleScriptAction",
            "type": "class"
          }
        ],
        "path": "/documentation/automator",
        "title": "Automator",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
