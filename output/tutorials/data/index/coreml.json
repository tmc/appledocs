{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Core ML models",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/getting-a-core-ml-model",
            "title": "Getting a Core ML Model",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/updating-a-model-file-to-a-model-package",
            "title": "Updating a Model File to a Model Package",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/integrating-a-core-ml-model-into-your-app",
            "title": "Integrating a Core ML Model into Your App",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Model File Size",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/reducing-the-size-of-your-core-ml-app",
                "title": "Reducing the Size of Your Core ML App",
                "type": "article"
              },
              {
                "title": "Custom Model Layers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/creating-and-integrating-a-model-with-custom-layers",
                "title": "Creating and Integrating a Model with Custom Layers",
                "type": "article"
              },
              {
                "title": "Custom Models",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/coreml/model-customization",
            "title": "Model Customization",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "On-Device Model Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/personalizing-a-model-with-on-device-updates",
                "title": "Personalizing a Model with On-Device Updates",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/coreml/model-personalization",
            "title": "Model Personalization",
            "type": "collection"
          },
          {
            "title": "Model inputs and outputs",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/making-predictions-with-a-sequence-of-inputs",
            "title": "Making Predictions with a Sequence of Inputs",
            "type": "article"
          },
          {
            "title": "App integration",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/downloading-and-compiling-a-model-on-the-user-s-device",
            "title": "Downloading and Compiling a Model on the Userâ€™s Device",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Tabular Data Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/integrating-a-core-ml-model-into-your-app",
                "title": "Integrating a Core ML Model into Your App",
                "type": "sampleCode"
              },
              {
                "title": "Image Classification Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/using-core-ml-for-semantic-image-segmentation",
                "title": "Using Core ML for semantic image segmentation",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/coreml/detecting-human-body-poses-in-an-image",
                "title": "Detecting human body poses in an image",
                "type": "sampleCode"
              },
              {
                "title": "Text Classification Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/finding-answers-to-questions-in-a-text-document",
                "title": "Finding answers to questions in a text document",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/coreml/model-integration-samples",
            "title": "Model Integration Samples",
            "type": "collection"
          },
          {
            "title": "Model encryption",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/generating-a-model-encryption-key",
            "title": "Generating a Model Encryption Key",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/encrypting-a-model-in-your-app",
            "title": "Encrypting a Model in Your App",
            "type": "article"
          },
          {
            "title": "Compute devices",
            "type": "groupMarker"
          },
          {
            "title": "Compute plan",
            "type": "groupMarker"
          },
          {
            "title": "Model state",
            "type": "groupMarker"
          },
          {
            "title": "Model tensor",
            "type": "groupMarker"
          },
          {
            "title": "Model structure",
            "type": "groupMarker"
          },
          {
            "title": "Model errors",
            "type": "groupMarker"
          },
          {
            "title": "Model deployments",
            "type": "groupMarker"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/coreml/coreml-enumerations",
            "title": "CoreML Enumerations",
            "type": "collection"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/coreml",
        "title": "Core ML",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Core ML models",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/getting-a-core-ml-model",
            "title": "Getting a Core ML Model",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/updating-a-model-file-to-a-model-package",
            "title": "Updating a Model File to a Model Package",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/integrating-a-core-ml-model-into-your-app",
            "title": "Integrating a Core ML Model into Your App",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Loading a Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/load(_:configuration:completionhandler:)",
                "title": "+ loadModelAsset:configuration:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/loadcontentsofurl:configuration:completionhandler:",
                "title": "+ loadContentsOfURL:configuration:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/init(contentsof:)",
                "title": "+ modelWithContentsOfURL:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/init(contentsof:configuration:)",
                "title": "+ modelWithContentsOfURL:configuration:error:",
                "type": "method"
              },
              {
                "title": "Compiling a Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/compilemodel(at:)-3nea",
                "title": "+ compileModelAtURL:completionHandler:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodel/compilemodel(at:)-6442s",
                "title": "+ compileModelAtURL:error:",
                "type": "method"
              },
              {
                "title": "Making Predictions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:)-9y2aa",
                "title": "- predictionFromFeatures:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/predictionfromfeatures:completionhandler:",
                "title": "- predictionFromFeatures:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:options:)-81mr6",
                "title": "- predictionFromFeatures:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/predictionfromfeatures:options:completionhandler:",
                "title": "- predictionFromFeatures:options:completionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/predictions(frombatch:)",
                "title": "- predictionsFromBatch:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/predictions(from:options:)",
                "title": "- predictionsFromBatch:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:using:)-97bu1",
                "title": "- predictionFromFeatures:usingState:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:using:options:)-v4wp",
                "title": "- predictionFromFeatures:usingState:options:error:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting features",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlpredictionoptions/outputbackings",
                    "title": "outputBackings",
                    "type": "property"
                  },
                  {
                    "title": "Restricting computation to the CPU",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlpredictionoptions/usescpuonly",
                    "title": "usesCPUOnly",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlpredictionoptions",
                "title": "MLPredictionOptions",
                "type": "class"
              },
              {
                "title": "Inspecting a Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/availablecomputedevices-42uzt",
                "title": "availableComputeDevices",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodel/configuration",
                "title": "configuration",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodel/modeldescription",
                "title": "modelDescription",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessing Feature Descriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/inputdescriptionsbyname",
                    "title": "inputDescriptionsByName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/outputdescriptionsbyname",
                    "title": "outputDescriptionsByName",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting a Feature",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/name",
                        "title": "name",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/type",
                        "title": "type",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/int64",
                            "title": "MLFeatureTypeInt64",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/double",
                            "title": "MLFeatureTypeDouble",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/image",
                            "title": "MLFeatureTypeImage",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/multiarray",
                            "title": "MLFeatureTypeMultiArray",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/string",
                            "title": "MLFeatureTypeString",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/dictionary",
                            "title": "MLFeatureTypeDictionary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/sequence",
                            "title": "MLFeatureTypeSequence",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/invalid",
                            "title": "MLFeatureTypeInvalid",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/state",
                            "title": "MLFeatureTypeState",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/coreml/mlfeaturetype",
                        "title": "MLFeatureType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/isoptional",
                        "title": "optional",
                        "type": "property"
                      },
                      {
                        "title": "Checking for Validity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/isallowedvalue(_:)",
                        "title": "- isAllowedValue:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing Feature Constraints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/imageconstraint",
                        "title": "imageConstraint",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/pixelswide",
                            "title": "pixelsWide",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/pixelshigh",
                            "title": "pixelsHigh",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/pixelformattype",
                            "title": "pixelFormatType",
                            "type": "property"
                          },
                          {
                            "title": "Inspecting Acceptable Sizes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/sizeconstraint",
                            "title": "sizeConstraint",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Determining Relevant Constraints",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/type",
                                "title": "type",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Enumeration Cases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesizeconstrainttype/range",
                                    "title": "MLImageSizeConstraintTypeRange",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesizeconstrainttype/enumerated",
                                    "title": "MLImageSizeConstraintTypeEnumerated",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesizeconstrainttype/unspecified",
                                    "title": "MLImageSizeConstraintTypeUnspecified",
                                    "type": "case"
                                  }
                                ],
                                "path": "/documentation/coreml/mlimagesizeconstrainttype",
                                "title": "MLImageSizeConstraintType",
                                "type": "enum"
                              },
                              {
                                "title": "Accessing the Image Size Ranges",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/pixelswiderange",
                                "title": "pixelsWideRange",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/pixelshighrange",
                                "title": "pixelsHighRange",
                                "type": "property"
                              },
                              {
                                "title": "Accessing the Enumerated Image Sizes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/enumeratedimagesizes",
                                "title": "enumeratedImageSizes",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Accessing an Image Size",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesize/pixelshigh",
                                    "title": "pixelsHigh",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesize/pixelswide",
                                    "title": "pixelsWide",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/coreml/mlimagesize",
                                "title": "MLImageSize",
                                "type": "class"
                              }
                            ],
                            "path": "/documentation/coreml/mlimagesizeconstraint",
                            "title": "MLImageSizeConstraint",
                            "type": "class"
                          }
                        ],
                        "path": "/documentation/coreml/mlimageconstraint",
                        "title": "MLImageConstraint",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/dictionaryconstraint",
                        "title": "dictionaryConstraint",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraint",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mldictionaryconstraint/keytype",
                            "title": "keyType",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mldictionaryconstraint",
                        "title": "MLDictionaryConstraint",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/multiarrayconstraint",
                        "title": "multiArrayConstraint",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmultiarrayconstraint/shape",
                            "title": "shape",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmultiarrayconstraint/datatype",
                            "title": "dataType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmultiarrayconstraint/shapeconstraint",
                            "title": "shapeConstraint",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Accessing the Constraints",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlmultiarrayshapeconstraint/enumeratedshapes",
                                "title": "enumeratedShapes",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmultiarrayshapeconstraint/sizerangefordimension",
                                "title": "sizeRangeForDimension",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmultiarrayshapeconstraint/type",
                                "title": "type",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Enumeration Cases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype/enumerated",
                                    "title": "MLMultiArrayShapeConstraintTypeEnumerated",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype/range",
                                    "title": "MLMultiArrayShapeConstraintTypeRange",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype/unspecified",
                                    "title": "MLMultiArrayShapeConstraintTypeUnspecified",
                                    "type": "case"
                                  }
                                ],
                                "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype",
                                "title": "MLMultiArrayShapeConstraintType",
                                "type": "enum"
                              }
                            ],
                            "path": "/documentation/coreml/mlmultiarrayshapeconstraint",
                            "title": "MLMultiArrayShapeConstraint",
                            "type": "class"
                          }
                        ],
                        "path": "/documentation/coreml/mlmultiarrayconstraint",
                        "title": "MLMultiArrayConstraint",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/sequenceconstraint",
                        "title": "sequenceConstraint",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlsequenceconstraint/valuedescription",
                            "title": "valueDescription",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlsequenceconstraint/countrange",
                            "title": "countRange",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlsequenceconstraint",
                        "title": "MLSequenceConstraint",
                        "type": "class"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/stateconstraint",
                        "title": "stateConstraint",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlfeaturedescription",
                    "title": "MLFeatureDescription",
                    "type": "class"
                  },
                  {
                    "title": "Accessing Metadata",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/classlabels",
                    "title": "classLabels",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/metadata",
                    "title": "metadata",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Metadata Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/author",
                        "title": "MLModelAuthorKey",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/description",
                        "title": "MLModelDescriptionKey",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/license",
                        "title": "MLModelLicenseKey",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/versionstring",
                        "title": "MLModelVersionStringKey",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/creatordefinedkey",
                        "title": "MLModelCreatorDefinedKey",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelmetadatakey",
                    "title": "MLModelMetadataKey",
                    "type": "typealias"
                  },
                  {
                    "title": "Accessing Prediction Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/predictedfeaturename",
                    "title": "predictedFeatureName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/predictedprobabilitiesname",
                    "title": "predictedProbabilitiesName",
                    "type": "property"
                  },
                  {
                    "title": "Accessing Update Descriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/isupdatable",
                    "title": "isUpdatable",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/traininginputdescriptionsbyname",
                    "title": "trainingInputDescriptionsByName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/parameterdescriptionsbykey",
                    "title": "parameterDescriptionsByKey",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the Model Parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterdescription/defaultvalue",
                        "title": "defaultValue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterdescription/key",
                        "title": "key",
                        "type": "property"
                      },
                      {
                        "title": "Constraining Numeric Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterdescription/numericconstraint",
                        "title": "numericConstraint",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Numeric Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlnumericconstraint/minnumber",
                            "title": "minNumber",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlnumericconstraint/maxnumber",
                            "title": "maxNumber",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlnumericconstraint/enumeratednumbers",
                            "title": "enumeratedNumbers",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlnumericconstraint",
                        "title": "MLNumericConstraint",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/coreml/mlparameterdescription",
                    "title": "MLParameterDescription",
                    "type": "class"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/statedescriptionsbyname",
                    "title": "stateDescriptionsByName",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlmodeldescription",
                "title": "MLModelDescription",
                "type": "class"
              },
              {
                "path": "/documentation/coreml/mlmodel/parametervalue(for:)",
                "title": "- parameterValueForKey:error:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Scoping Parameter Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                    "title": "- scopedTo:",
                    "type": "method"
                  },
                  {
                    "title": "Accessing Model Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                    "title": "numberOfNeighbors",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                    "title": "linkedModelFileName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                    "title": "linkedModelSearchPath",
                    "type": "property"
                  },
                  {
                    "title": "Accessing Neural Network Layer Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/weights",
                    "title": "weights",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/biases",
                    "title": "biases",
                    "type": "property"
                  },
                  {
                    "title": "Accessing Model Update Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/learningrate",
                    "title": "learningRate",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/momentum",
                    "title": "momentum",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                    "title": "miniBatchSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/beta1",
                    "title": "beta1",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/beta2",
                    "title": "beta2",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/eps",
                    "title": "eps",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/epochs",
                    "title": "epochs",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/shuffle",
                    "title": "shuffle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/seed",
                    "title": "seed",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlparameterkey",
                "title": "MLParameterKey",
                "type": "class"
              },
              {
                "title": "Supporting Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring Model Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/modeldisplayname",
                    "title": "modelDisplayName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/parameters",
                    "title": "parameters",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Scoping Parameter Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                        "title": "- scopedTo:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing Model Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                        "title": "numberOfNeighbors",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                        "title": "linkedModelFileName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                        "title": "linkedModelSearchPath",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Neural Network Layer Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/weights",
                        "title": "weights",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/biases",
                        "title": "biases",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Model Update Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/learningrate",
                        "title": "learningRate",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/momentum",
                        "title": "momentum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                        "title": "miniBatchSize",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta1",
                        "title": "beta1",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta2",
                        "title": "beta2",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/eps",
                        "title": "eps",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/epochs",
                        "title": "epochs",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/shuffle",
                        "title": "shuffle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/seed",
                        "title": "seed",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlparameterkey",
                    "title": "MLParameterKey",
                    "type": "class"
                  },
                  {
                    "title": "Configuring GPU Usage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/preferredmetaldevice",
                    "title": "preferredMetalDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/allowlowprecisionaccumulationongpu",
                    "title": "allowLowPrecisionAccumulationOnGPU",
                    "type": "property"
                  },
                  {
                    "title": "Allowing Access to Processing Units",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/computeunits",
                    "title": "computeUnits",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Processing Unit Configurations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/all",
                        "title": "MLComputeUnitsAll",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/cpuonly",
                        "title": "MLComputeUnitsCPUOnly",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/cpuandgpu",
                        "title": "MLComputeUnitsCPUAndGPU",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/cpuandneuralengine",
                        "title": "MLComputeUnitsCPUAndNeuralEngine",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/coreml/mlcomputeunits",
                    "title": "MLComputeUnits",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/optimizationhints-81u6f",
                    "title": "optimizationHints",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/functionname",
                    "title": "functionName",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlmodelconfiguration",
                "title": "MLModelConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Retrieving a Keyâ€™s Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlkey/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlkey/scope",
                    "title": "scope",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlkey",
                "title": "MLKey",
                "type": "class"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/newstate",
                "title": "- newState",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/predictionfromfeatures:usingstate:options:completionhandler:",
                "title": "- predictionFromFeatures:usingState:options:completionHandler:",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mlmodel",
            "title": "MLModel",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Model File Size",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/reducing-the-size-of-your-core-ml-app",
                "title": "Reducing the Size of Your Core ML App",
                "type": "article"
              },
              {
                "title": "Custom Model Layers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/creating-and-integrating-a-model-with-custom-layers",
                "title": "Creating and Integrating a Model with Custom Layers",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating a Layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/init(parameters:)",
                    "title": "- initWithParameterDictionary:error:",
                    "type": "method"
                  },
                  {
                    "title": "Integrating a Layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/setweightdata(_:)",
                    "title": "- setWeightData:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/outputshapes(forinputshapes:)",
                    "title": "- outputShapesForInputShapes:error:",
                    "type": "method"
                  },
                  {
                    "title": "Evaluating a Layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/evaluate(inputs:outputs:)",
                    "title": "- evaluateOnCPUWithInputs:outputs:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/encode(commandbuffer:inputs:outputs:)",
                    "title": "- encodeToCommandBuffer:inputs:outputs:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coreml/mlcustomlayer",
                "title": "MLCustomLayer",
                "type": "protocol"
              },
              {
                "title": "Custom Models",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating the Model",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustommodel/init(modeldescription:parameters:)",
                    "title": "- initWithModelDescription:parameterDictionary:error:",
                    "type": "method"
                  },
                  {
                    "title": "Making Predictions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustommodel/prediction(from:options:)",
                    "title": "- predictionFromFeatures:options:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlcustommodel/predictions(from:options:)",
                    "title": "- predictionsFromBatch:options:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coreml/mlcustommodel",
                "title": "MLCustomModel",
                "type": "protocol"
              }
            ],
            "path": "/documentation/coreml/model-customization",
            "title": "Model Customization",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "On-Device Model Updates",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltask/taskidentifier",
                    "title": "taskIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Starting and Stopping a Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltask/resume()",
                    "title": "- resume",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mltask/cancel()",
                    "title": "- cancel",
                    "type": "method"
                  },
                  {
                    "title": "Checking the State of a Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltask/state",
                    "title": "state",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Transient States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/running",
                        "title": "MLTaskStateRunning",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/suspended",
                        "title": "MLTaskStateSuspended",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/cancelling",
                        "title": "MLTaskStateCancelling",
                        "type": "case"
                      },
                      {
                        "title": "Final States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/completed",
                        "title": "MLTaskStateCompleted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/failed",
                        "title": "MLTaskStateFailed",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/coreml/mltaskstate",
                    "title": "MLTaskState",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/coreml/mltask/error",
                    "title": "error",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mltask",
                "title": "MLTask",
                "type": "class"
              },
              {
                "path": "/documentation/coreml/personalizing-a-model-with-on-device-updates",
                "title": "Personalizing a Model with On-Device Updates",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Creating an Update Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:completionhandler:)",
                    "title": "+ updateTaskForModelAtURL:trainingData:completionHandler:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:progresshandlers:)",
                    "title": "+ updateTaskForModelAtURL:trainingData:progressHandlers:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:configuration:completionhandler:)",
                    "title": "+ updateTaskForModelAtURL:trainingData:configuration:completionHandler:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:configuration:progresshandlers:)",
                    "title": "+ updateTaskForModelAtURL:trainingData:configuration:progressHandlers:error:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlbatchprovider/features(at:)",
                        "title": "- featuresAtIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlbatchprovider/count",
                        "title": "count",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlbatchprovider",
                    "title": "MLBatchProvider",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring Model Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/modeldisplayname",
                        "title": "modelDisplayName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/parameters",
                        "title": "parameters",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Scoping Parameter Keys",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                            "title": "- scopedTo:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Model Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                            "title": "numberOfNeighbors",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                            "title": "linkedModelFileName",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                            "title": "linkedModelSearchPath",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Neural Network Layer Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/weights",
                            "title": "weights",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/biases",
                            "title": "biases",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Model Update Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/learningrate",
                            "title": "learningRate",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/momentum",
                            "title": "momentum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                            "title": "miniBatchSize",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta1",
                            "title": "beta1",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta2",
                            "title": "beta2",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/eps",
                            "title": "eps",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/epochs",
                            "title": "epochs",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/shuffle",
                            "title": "shuffle",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/seed",
                            "title": "seed",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlparameterkey",
                        "title": "MLParameterKey",
                        "type": "class"
                      },
                      {
                        "title": "Configuring GPU Usage",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/preferredmetaldevice",
                        "title": "preferredMetalDevice",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/allowlowprecisionaccumulationongpu",
                        "title": "allowLowPrecisionAccumulationOnGPU",
                        "type": "property"
                      },
                      {
                        "title": "Allowing Access to Processing Units",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/computeunits",
                        "title": "computeUnits",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Processing Unit Configurations",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/all",
                            "title": "MLComputeUnitsAll",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/cpuonly",
                            "title": "MLComputeUnitsCPUOnly",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/cpuandgpu",
                            "title": "MLComputeUnitsCPUAndGPU",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/cpuandneuralengine",
                            "title": "MLComputeUnitsCPUAndNeuralEngine",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/coreml/mlcomputeunits",
                        "title": "MLComputeUnits",
                        "type": "enum"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/optimizationhints-81u6f",
                        "title": "optimizationHints",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/functionname",
                        "title": "functionName",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelconfiguration",
                    "title": "MLModelConfiguration",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Update Context",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/event",
                        "title": "event",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Progress Event Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/trainingbegin",
                            "title": "MLUpdateProgressEventTrainingBegin",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/minibatchend",
                            "title": "MLUpdateProgressEventMiniBatchEnd",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/epochend",
                            "title": "MLUpdateProgressEventEpochEnd",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/coreml/mlupdateprogressevent",
                        "title": "MLUpdateProgressEvent",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/task",
                        "title": "task",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/parameters",
                        "title": "parameters",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Scoping Parameter Keys",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                            "title": "- scopedTo:",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Model Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                            "title": "numberOfNeighbors",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                            "title": "linkedModelFileName",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                            "title": "linkedModelSearchPath",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Neural Network Layer Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/weights",
                            "title": "weights",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/biases",
                            "title": "biases",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Model Update Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/learningrate",
                            "title": "learningRate",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/momentum",
                            "title": "momentum",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                            "title": "miniBatchSize",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta1",
                            "title": "beta1",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta2",
                            "title": "beta2",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/eps",
                            "title": "eps",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/epochs",
                            "title": "epochs",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/shuffle",
                            "title": "shuffle",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/seed",
                            "title": "seed",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlparameterkey",
                        "title": "MLParameterKey",
                        "type": "class"
                      },
                      {
                        "title": "Evaluating the Update",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/metrics",
                        "title": "metrics",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the Keys",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmetrickey/lossvalue",
                            "title": "lossValue",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmetrickey/epochindex",
                            "title": "epochIndex",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmetrickey/minibatchindex",
                            "title": "miniBatchIndex",
                            "type": "property"
                          },
                          {
                            "title": "Supporting Types",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Retrieving a Keyâ€™s Information",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlkey/name",
                                "title": "name",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlkey/scope",
                                "title": "scope",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/coreml/mlkey",
                            "title": "MLKey",
                            "type": "class"
                          }
                        ],
                        "path": "/documentation/coreml/mlmetrickey",
                        "title": "MLMetricKey",
                        "type": "class"
                      },
                      {
                        "title": "Saving an Updated Model",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/model",
                        "title": "model",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Saving to a File",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlwritable/write(to:)",
                            "title": "- writeToURL:error:",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/coreml/mlwritable",
                        "title": "MLWritable",
                        "type": "protocol"
                      }
                    ],
                    "path": "/documentation/coreml/mlupdatecontext",
                    "title": "MLUpdateContext",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Progress Handlers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdateprogresshandlers/init(forevents:progresshandler:completionhandler:)",
                        "title": "- initForEvents:progressHandler:completionHandler:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Progress Event Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/trainingbegin",
                            "title": "MLUpdateProgressEventTrainingBegin",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/minibatchend",
                            "title": "MLUpdateProgressEventMiniBatchEnd",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/epochend",
                            "title": "MLUpdateProgressEventEpochEnd",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/coreml/mlupdateprogressevent",
                        "title": "MLUpdateProgressEvent",
                        "type": "enum"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the Update Context",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/event",
                            "title": "event",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting Progress Event Types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlupdateprogressevent/trainingbegin",
                                "title": "MLUpdateProgressEventTrainingBegin",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/coreml/mlupdateprogressevent/minibatchend",
                                "title": "MLUpdateProgressEventMiniBatchEnd",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/coreml/mlupdateprogressevent/epochend",
                                "title": "MLUpdateProgressEventEpochEnd",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/coreml/mlupdateprogressevent",
                            "title": "MLUpdateProgressEvent",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/task",
                            "title": "task",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/parameters",
                            "title": "parameters",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Scoping Parameter Keys",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                                "title": "- scopedTo:",
                                "type": "method"
                              },
                              {
                                "title": "Accessing Model Parameters",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                                "title": "numberOfNeighbors",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                                "title": "linkedModelFileName",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                                "title": "linkedModelSearchPath",
                                "type": "property"
                              },
                              {
                                "title": "Accessing Neural Network Layer Parameters",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/weights",
                                "title": "weights",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/biases",
                                "title": "biases",
                                "type": "property"
                              },
                              {
                                "title": "Accessing Model Update Parameters",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/learningrate",
                                "title": "learningRate",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/momentum",
                                "title": "momentum",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                                "title": "miniBatchSize",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/beta1",
                                "title": "beta1",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/beta2",
                                "title": "beta2",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/eps",
                                "title": "eps",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/epochs",
                                "title": "epochs",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/shuffle",
                                "title": "shuffle",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/seed",
                                "title": "seed",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/coreml/mlparameterkey",
                            "title": "MLParameterKey",
                            "type": "class"
                          },
                          {
                            "title": "Evaluating the Update",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/metrics",
                            "title": "metrics",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the Keys",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlmetrickey/lossvalue",
                                "title": "lossValue",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmetrickey/epochindex",
                                "title": "epochIndex",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmetrickey/minibatchindex",
                                "title": "miniBatchIndex",
                                "type": "property"
                              },
                              {
                                "title": "Supporting Types",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Retrieving a Keyâ€™s Information",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlkey/name",
                                    "title": "name",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlkey/scope",
                                    "title": "scope",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/coreml/mlkey",
                                "title": "MLKey",
                                "type": "class"
                              }
                            ],
                            "path": "/documentation/coreml/mlmetrickey",
                            "title": "MLMetricKey",
                            "type": "class"
                          },
                          {
                            "title": "Saving an Updated Model",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/model",
                            "title": "model",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Saving to a File",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlwritable/write(to:)",
                                "title": "- writeToURL:error:",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/coreml/mlwritable",
                            "title": "MLWritable",
                            "type": "protocol"
                          }
                        ],
                        "path": "/documentation/coreml/mlupdatecontext",
                        "title": "MLUpdateContext",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/coreml/mlupdateprogresshandlers",
                    "title": "MLUpdateProgressHandlers",
                    "type": "class"
                  },
                  {
                    "title": "Starting and Resuming an Update",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/resume(withparameters:)",
                    "title": "- resumeWithParameters:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Scoping Parameter Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                        "title": "- scopedTo:",
                        "type": "method"
                      },
                      {
                        "title": "Accessing Model Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                        "title": "numberOfNeighbors",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                        "title": "linkedModelFileName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                        "title": "linkedModelSearchPath",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Neural Network Layer Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/weights",
                        "title": "weights",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/biases",
                        "title": "biases",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Model Update Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/learningrate",
                        "title": "learningRate",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/momentum",
                        "title": "momentum",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                        "title": "miniBatchSize",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta1",
                        "title": "beta1",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta2",
                        "title": "beta2",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/eps",
                        "title": "eps",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/epochs",
                        "title": "epochs",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/shuffle",
                        "title": "shuffle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/seed",
                        "title": "seed",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlparameterkey",
                    "title": "MLParameterKey",
                    "type": "class"
                  }
                ],
                "path": "/documentation/coreml/mlupdatetask",
                "title": "MLUpdateTask",
                "type": "class"
              }
            ],
            "path": "/documentation/coreml/model-personalization",
            "title": "Model Personalization",
            "type": "collection"
          },
          {
            "title": "Model inputs and outputs",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/making-predictions-with-a-sequence-of-inputs",
            "title": "Making Predictions with a Sequence of Inputs",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating Numeric Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(int64:)",
                "title": "+ featureValueWithInt64:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(double:)",
                "title": "+ featureValueWithDouble:",
                "type": "method"
              },
              {
                "title": "Creating String Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(string:)",
                "title": "+ featureValueWithString:",
                "type": "method"
              },
              {
                "title": "Creating Multidimensional Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(multiarray:)",
                "title": "+ featureValueWithMultiArray:",
                "type": "method"
              },
              {
                "title": "Creating Collection Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(dictionary:)",
                "title": "+ featureValueWithDictionary:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(sequence:)",
                "title": "+ featureValueWithSequence:",
                "type": "method"
              },
              {
                "title": "Creating Image Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(pixelbuffer:)",
                "title": "+ featureValueWithPixelBuffer:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "+ featureValueWithCGImage:pixelsWide:pixelsHigh:pixelFormatType:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:orientation:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "+ featureValueWithCGImage:orientation:pixelsWide:pixelsHigh:pixelFormatType:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:constraint:options:)",
                "title": "+ featureValueWithCGImage:constraint:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:orientation:constraint:options:)",
                "title": "+ featureValueWithCGImage:orientation:constraint:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "+ featureValueWithImageAtURL:pixelsWide:pixelsHigh:pixelFormatType:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:orientation:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "+ featureValueWithImageAtURL:orientation:pixelsWide:pixelsHigh:pixelFormatType:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:constraint:options:)",
                "title": "+ featureValueWithImageAtURL:constraint:options:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:orientation:constraint:options:)",
                "title": "+ featureValueWithImageAtURL:orientation:constraint:options:error:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Constraints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/pixelswide",
                    "title": "pixelsWide",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/pixelshigh",
                    "title": "pixelsHigh",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/pixelformattype",
                    "title": "pixelFormatType",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Acceptable Sizes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/sizeconstraint",
                    "title": "sizeConstraint",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Relevant Constraints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/type",
                        "title": "type",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesizeconstrainttype/range",
                            "title": "MLImageSizeConstraintTypeRange",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesizeconstrainttype/enumerated",
                            "title": "MLImageSizeConstraintTypeEnumerated",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesizeconstrainttype/unspecified",
                            "title": "MLImageSizeConstraintTypeUnspecified",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/coreml/mlimagesizeconstrainttype",
                        "title": "MLImageSizeConstraintType",
                        "type": "enum"
                      },
                      {
                        "title": "Accessing the Image Size Ranges",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/pixelswiderange",
                        "title": "pixelsWideRange",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/pixelshighrange",
                        "title": "pixelsHighRange",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the Enumerated Image Sizes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/enumeratedimagesizes",
                        "title": "enumeratedImageSizes",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing an Image Size",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesize/pixelshigh",
                            "title": "pixelsHigh",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesize/pixelswide",
                            "title": "pixelsWide",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlimagesize",
                        "title": "MLImageSize",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/coreml/mlimagesizeconstraint",
                    "title": "MLImageSizeConstraint",
                    "type": "class"
                  }
                ],
                "path": "/documentation/coreml/mlimageconstraint",
                "title": "MLImageConstraint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Image Options Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturevalue/imageoption/croprect",
                    "title": "MLFeatureValueImageOptionCropRect",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturevalue/imageoption/cropandscale",
                    "title": "MLFeatureValueImageOptionCropAndScale",
                    "type": "var"
                  }
                ],
                "path": "/documentation/coreml/mlfeaturevalue/imageoption",
                "title": "MLFeatureValueImageOption",
                "type": "typealias"
              },
              {
                "title": "Creating Undefined Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(undefined:)",
                "title": "+ undefinedFeatureValueWithType:",
                "type": "method"
              },
              {
                "title": "Accessing the Featureâ€™s Type",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/type",
                "title": "type",
                "type": "property"
              },
              {
                "title": "Accessing the Featureâ€™s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/isundefined",
                "title": "undefined",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/int64value",
                "title": "int64Value",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/doublevalue",
                "title": "doubleValue",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/stringvalue",
                "title": "stringValue",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/imagebuffervalue",
                "title": "imageBufferValue",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/multiarrayvalue",
                "title": "multiArrayValue",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/sequencevalue",
                "title": "sequenceValue",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/dictionaryvalue",
                "title": "dictionaryValue",
                "type": "property"
              },
              {
                "title": "Comparing Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/isequal(to:)",
                "title": "- isEqualToFeatureValue:",
                "type": "method"
              },
              {
                "title": "Supporting Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/int64",
                    "title": "MLFeatureTypeInt64",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/double",
                    "title": "MLFeatureTypeDouble",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/image",
                    "title": "MLFeatureTypeImage",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/multiarray",
                    "title": "MLFeatureTypeMultiArray",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/string",
                    "title": "MLFeatureTypeString",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/dictionary",
                    "title": "MLFeatureTypeDictionary",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/sequence",
                    "title": "MLFeatureTypeSequence",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/invalid",
                    "title": "MLFeatureTypeInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/state",
                    "title": "MLFeatureTypeState",
                    "type": "case"
                  }
                ],
                "path": "/documentation/coreml/mlfeaturetype",
                "title": "MLFeatureType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating a Multiarray",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(shape:datatype:)",
                    "title": "- initWithShape:dataType:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(datapointer:shape:datatype:strides:deallocator:)",
                    "title": "- initWithDataPointer:shape:dataType:strides:deallocator:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(byconcatenatingmultiarrays:alongaxis:datatype:)",
                    "title": "+ multiArrayByConcatenatingMultiArrays:alongAxis:dataType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(pixelbuffer:shape:)",
                    "title": "- initWithPixelBuffer:shape:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Multiarray Data Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/int32",
                        "title": "MLMultiArrayDataTypeInt32",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float16",
                        "title": "MLMultiArrayDataTypeFloat16",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float32",
                        "title": "MLMultiArrayDataTypeFloat32",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/double",
                        "title": "MLMultiArrayDataTypeDouble",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float",
                        "title": "MLMultiArrayDataTypeFloat",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float64",
                        "title": "MLMultiArrayDataTypeFloat64",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/coreml/mlmultiarraydatatype",
                    "title": "MLMultiArrayDataType",
                    "type": "enum"
                  },
                  {
                    "title": "Inspecting a Multiarray",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/count",
                    "title": "count",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/datatype",
                    "title": "dataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/shape",
                    "title": "shape",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/strides",
                    "title": "strides",
                    "type": "property"
                  },
                  {
                    "title": "Accessing a Multiarrayâ€™s Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/subscript(_:)-2hh91",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/subscript(_:)-3d9el",
                    "title": "- objectForKeyedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/setobject:forkeyedsubscript:",
                    "title": "- setObject:forKeyedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/getbyteswithhandler:",
                    "title": "- getBytesWithHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/getmutablebyteswithhandler:",
                    "title": "- getMutableBytesWithHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/pixelbuffer",
                    "title": "pixelBuffer",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmultiarray/datapointer",
                    "title": "dataPointer",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/initwithshape:datatype:strides:",
                    "title": "- initWithShape:dataType:strides:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/transfer(to:)",
                    "title": "- transferToMultiArray:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coreml/mlmultiarray",
                "title": "MLMultiArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Sequence",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/init(strings:)",
                    "title": "+ sequenceWithStringArray:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/init(int64s:)",
                    "title": "+ sequenceWithInt64Array:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/init(empty:)",
                    "title": "+ emptySequenceWithType:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Sequenceâ€™s Element Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "title": "Retrieving the Sequenceâ€™s Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/stringvalues",
                    "title": "stringValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/int64values",
                    "title": "int64Values",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlsequence",
                "title": "MLSequence",
                "type": "class"
              }
            ],
            "path": "/documentation/coreml/mlfeaturevalue",
            "title": "MLFeatureValue",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeatureprovider/featurevalue(for:)",
                "title": "- featureValueForName:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeatureprovider/featurenames",
                "title": "featureNames",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlfeatureprovider",
            "title": "MLFeatureProvider",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating the Provider",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mldictionaryfeatureprovider/init(dictionary:)",
                "title": "- initWithDictionary:error:",
                "type": "method"
              },
              {
                "title": "Accessing the Features",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mldictionaryfeatureprovider/subscript(_:)",
                "title": "- objectForKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mldictionaryfeatureprovider/dictionary",
                "title": "dictionary",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mldictionaryfeatureprovider",
            "title": "MLDictionaryFeatureProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlbatchprovider/features(at:)",
                "title": "- featuresAtIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlbatchprovider/count",
                "title": "count",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlbatchprovider",
            "title": "MLBatchProvider",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlarraybatchprovider/init(array:)",
                "title": "- initWithFeatureProviderArray:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlarraybatchprovider/init(dictionary:)",
                "title": "- initWithDictionary:error:",
                "type": "method"
              },
              {
                "title": "Accessing the Feature Providers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlarraybatchprovider/array",
                "title": "array",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlarraybatchprovider",
            "title": "MLArrayBatchProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a model asset",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/init(specification:)",
                "title": "+ modelAssetWithSpecificationData:error:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/functionnames(completionhandler:)",
                "title": "- functionNamesWithCompletionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/modeldescription(completionhandler:)",
                "title": "- modelDescriptionWithCompletionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/modeldescription(offunctionnamed:completionhandler:)",
                "title": "- modelDescriptionOfFunctionNamed:completionHandler:",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/init(specification:blobmapping:)",
                "title": "+ modelAssetWithSpecificationData:blobMapping:error:",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/init(url:)",
                "title": "+ modelAssetWithURL:error:",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mlmodelasset",
            "title": "MLModelAsset",
            "type": "class"
          },
          {
            "title": "App integration",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/downloading-and-compiling-a-model-on-the-user-s-device",
            "title": "Downloading and Compiling a Model on the Userâ€™s Device",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Tabular Data Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/integrating-a-core-ml-model-into-your-app",
                "title": "Integrating a Core ML Model into Your App",
                "type": "sampleCode"
              },
              {
                "title": "Image Classification Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/using-core-ml-for-semantic-image-segmentation",
                "title": "Using Core ML for semantic image segmentation",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/coreml/model_integration_samples/classifying_images_with_vision_and_core_ml",
                "title": "Classifying Images with Vision and Core ML",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/coreml/detecting-human-body-poses-in-an-image",
                "title": "Detecting human body poses in an image",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/coreml/model_integration_samples/understanding_a_dice_roll_with_vision_and_object_detection",
                "title": "Understanding a Dice Roll with Vision and Object Detection",
                "type": "sampleCode"
              },
              {
                "title": "Text Classification Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/finding-answers-to-questions-in-a-text-document",
                "title": "Finding answers to questions in a text document",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/coreml/model-integration-samples",
            "title": "Model Integration Samples",
            "type": "collection"
          },
          {
            "title": "Model encryption",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/generating-a-model-encryption-key",
            "title": "Generating a Model Encryption Key",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/encrypting-a-model-in-your-app",
            "title": "Encrypting a Model in Your App",
            "type": "article"
          },
          {
            "title": "Compute devices",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/mlcpucomputedevice",
            "title": "MLCPUComputeDevice",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting The Metal Device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlgpucomputedevice/metaldevice",
                "title": "metalDevice",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlgpucomputedevice",
            "title": "MLGPUComputeDevice",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting the Total Core Count",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlneuralenginecomputedevice/totalcorecount",
                "title": "totalCoreCount",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlneuralenginecomputedevice",
            "title": "MLNeuralEngineComputeDevice",
            "type": "class"
          },
          {
            "path": "/documentation/coreml/mlcomputedeviceprotocol",
            "title": "MLComputeDeviceProtocol",
            "type": "protocol"
          },
          {
            "title": "Compute plan",
            "type": "groupMarker"
          },
          {
            "title": "Model state",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlstate/getmultiarrayforstatenamed:handler:",
                "title": "- getMultiArrayForStateNamed:handler:",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mlstate",
            "title": "MLState",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlstateconstraint/buffershape-6o5vn",
                "title": "bufferShape",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlstateconstraint/datatype",
                "title": "dataType",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlstateconstraint",
            "title": "MLStateConstraint",
            "type": "class"
          },
          {
            "title": "Model tensor",
            "type": "groupMarker"
          },
          {
            "title": "Model structure",
            "type": "groupMarker"
          },
          {
            "title": "Model errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/featuretype",
                "title": "MLModelErrorFeatureType",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/parameters",
                "title": "MLModelErrorParameters",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modelcollection",
                "title": "MLModelErrorModelCollection",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modeldecryptionkeyfetch",
                "title": "MLModelErrorModelDecryptionKeyFetch",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modeldecryption",
                "title": "MLModelErrorModelDecryption",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/update",
                "title": "MLModelErrorUpdate",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/customlayer",
                "title": "MLModelErrorCustomLayer",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/custommodel",
                "title": "MLModelErrorCustomModel",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/io",
                "title": "MLModelErrorIO",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/predictioncancelled",
                "title": "MLModelErrorPredictionCancelled",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/generic",
                "title": "MLModelErrorGeneric",
                "type": "case"
              },
              {
                "title": "Error Domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerrordomain",
                "title": "MLModelErrorDomain",
                "type": "var"
              }
            ],
            "path": "/documentation/coreml/mlmodelerror-swift.struct/code",
            "title": "MLModelError",
            "type": "enum"
          },
          {
            "path": "/documentation/coreml/mlmodelerrordomain",
            "title": "MLModelErrorDomain",
            "type": "var"
          },
          {
            "title": "Model deployments",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing a Model Collection",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/beginaccessingmodelcollectionwithidentifier:completionhandler:",
                "title": "+ beginAccessingModelCollectionWithIdentifier:completionHandler:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/endaccessing(identifier:)",
                "title": "+ endAccessingModelCollectionWithIdentifier:completionHandler:",
                "type": "method"
              },
              {
                "title": "Identifying a Model Collection",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/identifier",
                "title": "identifier",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/deploymentid",
                "title": "deploymentID",
                "type": "property"
              },
              {
                "title": "Retreiving Models from a Collection",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/entries",
                "title": "entries",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Model",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmodelcollection/entry/modelidentifier",
                    "title": "modelIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Locating a Compiled Model File",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmodelcollection/entry/modelurl",
                    "title": "modelURL",
                    "type": "property"
                  },
                  {
                    "title": "Comparing Model Collection Entries",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmodelcollection/entry/isequal(to:)",
                    "title": "- isEqualToModelCollectionEntry:",
                    "type": "method"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/entry",
                "title": "MLModelCollectionEntry",
                "type": "class"
              },
              {
                "title": "Registering for Model Collection Updates",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/didchangenotification",
                "title": "MLModelCollectionDidChangeNotification",
                "type": "var"
              }
            ],
            "deprecated": true,
            "path": "/documentation/coreml/mlmodelcollection",
            "title": "MLModelCollection",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/coreml/coreml-enumerations",
            "title": "CoreML Enumerations",
            "type": "collection"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/coreml",
        "title": "Core ML",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Core ML models",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/getting-a-core-ml-model",
            "title": "Getting a Core ML Model",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/updating-a-model-file-to-a-model-package",
            "title": "Updating a Model File to a Model Package",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/integrating-a-core-ml-model-into-your-app",
            "title": "Integrating a Core ML Model into Your App",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Loading a Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/load(contentsof:configuration:)",
                "title": "class func load(contentsOf: URL, configuration: MLModelConfiguration) async throws -> MLModel",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/load(_:configuration:completionhandler:)",
                "title": "class func load(MLModelAsset, configuration: MLModelConfiguration, completionHandler: (MLModel?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/load(contentsof:configuration:completionhandler:)",
                "title": "class func load(contentsOf: URL, configuration: MLModelConfiguration, completionHandler: (Result<MLModel, any Error>) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/init(contentsof:)",
                "title": "convenience init(contentsOf: URL) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlmodel/init(contentsof:configuration:)",
                "title": "convenience init(contentsOf: URL, configuration: MLModelConfiguration) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlmodel/init(contentsofurl:)",
                "title": "convenience init(contentsOfURL: URL) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlmodel/init(contentsofurl:configuration:)",
                "title": "convenience init(contentsOfURL: URL, configuration: MLModelConfiguration) throws",
                "type": "init"
              },
              {
                "title": "Compiling a Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/compilemodel(at:)-45ao6",
                "title": "class func compileModel(at: URL) async throws -> URL",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/compilemodel(at:completionhandler:)",
                "title": "class func compileModel(at: URL, completionHandler: (Result<URL, any Error>) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/compilemodel(at:)-3nea",
                "title": "class func compileModel(at: URL) async throws -> URL",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodel/compilemodel(at:)-6442s",
                "title": "class func compileModel(at: URL) throws -> URL",
                "type": "method"
              },
              {
                "title": "Making Predictions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:)-9y2aa",
                "title": "func prediction(from: any MLFeatureProvider) throws -> any MLFeatureProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:)-7vsm8",
                "title": "func prediction(from: [String : MLTensor]) async throws -> [String : MLTensor]",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:options:)-81mr6",
                "title": "func prediction(from: any MLFeatureProvider, options: MLPredictionOptions) throws -> any MLFeatureProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:options:)-3vg03",
                "title": "func prediction(from: any MLFeatureProvider, options: MLPredictionOptions) async throws -> any MLFeatureProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/predictions(frombatch:)",
                "title": "func predictions(fromBatch: any MLBatchProvider) throws -> any MLBatchProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/predictions(from:options:)",
                "title": "func predictions(from: any MLBatchProvider, options: MLPredictionOptions) throws -> any MLBatchProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:using:)-6whkh",
                "title": "func prediction(from: [String : MLTensor], using: MLState) async throws -> [String : MLTensor]",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:using:)-97bu1",
                "title": "func prediction(from: any MLFeatureProvider, using: MLState) throws -> any MLFeatureProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:using:options:)-8b4qa",
                "title": "func prediction(from: any MLFeatureProvider, using: MLState, options: MLPredictionOptions) async throws -> any MLFeatureProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodel/prediction(from:using:options:)-v4wp",
                "title": "func prediction(from: any MLFeatureProvider, using: MLState, options: MLPredictionOptions) throws -> any MLFeatureProvider",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting features",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlpredictionoptions/outputbackings",
                    "title": "var outputBackings: [String : Any]",
                    "type": "property"
                  },
                  {
                    "title": "Restricting computation to the CPU",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlpredictionoptions/usescpuonly",
                    "title": "var usesCPUOnly: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlpredictionoptions",
                "title": "MLPredictionOptions",
                "type": "class"
              },
              {
                "title": "Inspecting a Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/availablecomputedevices-6klyt",
                "title": "static var availableComputeDevices: [MLComputeDevice]",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodel/configuration",
                "title": "var configuration: MLModelConfiguration",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodel/modeldescription",
                "title": "var modelDescription: MLModelDescription",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessing Feature Descriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/inputdescriptionsbyname",
                    "title": "var inputDescriptionsByName: [String : MLFeatureDescription]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/outputdescriptionsbyname",
                    "title": "var outputDescriptionsByName: [String : MLFeatureDescription]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting a Feature",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/type",
                        "title": "var type: MLFeatureType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/int64",
                            "title": "case int64",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/double",
                            "title": "case double",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/image",
                            "title": "case image",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/multiarray",
                            "title": "case multiArray",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/string",
                            "title": "case string",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/dictionary",
                            "title": "case dictionary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/sequence",
                            "title": "case sequence",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/state",
                            "title": "case state",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlfeaturetype/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/coreml/mlfeaturetype",
                        "title": "MLFeatureType",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/isoptional",
                        "title": "var isOptional: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Checking for Validity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/isallowedvalue(_:)",
                        "title": "func isAllowedValue(MLFeatureValue) -> Bool",
                        "type": "method"
                      },
                      {
                        "title": "Accessing Feature Constraints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/imageconstraint",
                        "title": "var imageConstraint: MLImageConstraint?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/pixelswide",
                            "title": "var pixelsWide: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/pixelshigh",
                            "title": "var pixelsHigh: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/pixelformattype",
                            "title": "var pixelFormatType: OSType",
                            "type": "property"
                          },
                          {
                            "title": "Inspecting Acceptable Sizes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimageconstraint/sizeconstraint",
                            "title": "var sizeConstraint: MLImageSizeConstraint",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Determining Relevant Constraints",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/type",
                                "title": "var type: MLImageSizeConstraintType",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Enumeration Cases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesizeconstrainttype/range",
                                    "title": "case range",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesizeconstrainttype/enumerated",
                                    "title": "case enumerated",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesizeconstrainttype/unspecified",
                                    "title": "case unspecified",
                                    "type": "case"
                                  },
                                  {
                                    "title": "Initializers",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesizeconstrainttype/init(rawvalue:)",
                                    "title": "init?(rawValue: Int)",
                                    "type": "init"
                                  }
                                ],
                                "path": "/documentation/coreml/mlimagesizeconstrainttype",
                                "title": "MLImageSizeConstraintType",
                                "type": "enum"
                              },
                              {
                                "title": "Accessing the Image Size Ranges",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/pixelswiderange",
                                "title": "var pixelsWideRange: NSRange",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/pixelshighrange",
                                "title": "var pixelsHighRange: NSRange",
                                "type": "property"
                              },
                              {
                                "title": "Accessing the Enumerated Image Sizes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlimagesizeconstraint/enumeratedimagesizes",
                                "title": "var enumeratedImageSizes: [MLImageSize]",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Accessing an Image Size",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesize/pixelshigh",
                                    "title": "var pixelsHigh: Int",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlimagesize/pixelswide",
                                    "title": "var pixelsWide: Int",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/coreml/mlimagesize",
                                "title": "MLImageSize",
                                "type": "class"
                              }
                            ],
                            "path": "/documentation/coreml/mlimagesizeconstraint",
                            "title": "MLImageSizeConstraint",
                            "type": "class"
                          }
                        ],
                        "path": "/documentation/coreml/mlimageconstraint",
                        "title": "MLImageConstraint",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/dictionaryconstraint",
                        "title": "var dictionaryConstraint: MLDictionaryConstraint?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraint",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mldictionaryconstraint/keytype",
                            "title": "var keyType: MLFeatureType",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mldictionaryconstraint",
                        "title": "MLDictionaryConstraint",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/multiarrayconstraint",
                        "title": "var multiArrayConstraint: MLMultiArrayConstraint?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmultiarrayconstraint/shape",
                            "title": "var shape: [NSNumber]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmultiarrayconstraint/datatype",
                            "title": "var dataType: MLMultiArrayDataType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmultiarrayconstraint/shapeconstraint",
                            "title": "var shapeConstraint: MLMultiArrayShapeConstraint",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Accessing the Constraints",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlmultiarrayshapeconstraint/enumeratedshapes",
                                "title": "var enumeratedShapes: [[NSNumber]]",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmultiarrayshapeconstraint/sizerangefordimension",
                                "title": "var sizeRangeForDimension: [NSValue]",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmultiarrayshapeconstraint/type",
                                "title": "var type: MLMultiArrayShapeConstraintType",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Enumeration Cases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype/enumerated",
                                    "title": "case enumerated",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype/range",
                                    "title": "case range",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype/unspecified",
                                    "title": "case unspecified",
                                    "type": "case"
                                  },
                                  {
                                    "title": "Initializers",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype/init(rawvalue:)",
                                    "title": "init?(rawValue: Int)",
                                    "type": "init"
                                  }
                                ],
                                "path": "/documentation/coreml/mlmultiarrayshapeconstrainttype",
                                "title": "MLMultiArrayShapeConstraintType",
                                "type": "enum"
                              }
                            ],
                            "path": "/documentation/coreml/mlmultiarrayshapeconstraint",
                            "title": "MLMultiArrayShapeConstraint",
                            "type": "class"
                          }
                        ],
                        "path": "/documentation/coreml/mlmultiarrayconstraint",
                        "title": "MLMultiArrayConstraint",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/sequenceconstraint",
                        "title": "var sequenceConstraint: MLSequenceConstraint?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlsequenceconstraint/valuedescription",
                            "title": "var valueDescription: MLFeatureDescription",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlsequenceconstraint/countrange",
                            "title": "var countRange: NSRange",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlsequenceconstraint",
                        "title": "MLSequenceConstraint",
                        "type": "class"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlfeaturedescription/stateconstraint",
                        "title": "var stateConstraint: MLStateConstraint?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlfeaturedescription",
                    "title": "MLFeatureDescription",
                    "type": "class"
                  },
                  {
                    "title": "Accessing Metadata",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/classlabels",
                    "title": "var classLabels: [Any]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/metadata",
                    "title": "var metadata: [MLModelMetadataKey : Any]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Metadata Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/author",
                        "title": "static let author: MLModelMetadataKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/description",
                        "title": "static let description: MLModelMetadataKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/license",
                        "title": "static let license: MLModelMetadataKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/versionstring",
                        "title": "static let versionString: MLModelMetadataKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/creatordefinedkey",
                        "title": "static let creatorDefinedKey: MLModelMetadataKey",
                        "type": "property"
                      },
                      {
                        "title": "Creating Metadata",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelmetadatakey/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelmetadatakey",
                    "title": "MLModelMetadataKey",
                    "type": "struct"
                  },
                  {
                    "title": "Accessing Prediction Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/predictedfeaturename",
                    "title": "var predictedFeatureName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/predictedprobabilitiesname",
                    "title": "var predictedProbabilitiesName: String?",
                    "type": "property"
                  },
                  {
                    "title": "Accessing Update Descriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/isupdatable",
                    "title": "var isUpdatable: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/traininginputdescriptionsbyname",
                    "title": "var trainingInputDescriptionsByName: [String : MLFeatureDescription]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/parameterdescriptionsbykey",
                    "title": "var parameterDescriptionsByKey: [MLParameterKey : MLParameterDescription]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the Model Parameter",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterdescription/defaultvalue",
                        "title": "var defaultValue: Any",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterdescription/key",
                        "title": "var key: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "title": "Constraining Numeric Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterdescription/numericconstraint",
                        "title": "var numericConstraint: MLNumericConstraint?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Numeric Constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlnumericconstraint/minnumber",
                            "title": "var minNumber: NSNumber",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlnumericconstraint/maxnumber",
                            "title": "var maxNumber: NSNumber",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlnumericconstraint/enumeratednumbers",
                            "title": "var enumeratedNumbers: Set<NSNumber>?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlnumericconstraint",
                        "title": "MLNumericConstraint",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/coreml/mlparameterdescription",
                    "title": "MLParameterDescription",
                    "type": "class"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodeldescription/statedescriptionsbyname",
                    "title": "var stateDescriptionsByName: [String : MLFeatureDescription]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlmodeldescription",
                "title": "MLModelDescription",
                "type": "class"
              },
              {
                "path": "/documentation/coreml/mlmodel/parametervalue(for:)",
                "title": "func parameterValue(for: MLParameterKey) throws -> Any",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Scoping Parameter Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                    "title": "func scoped(to: String) -> MLParameterKey",
                    "type": "method"
                  },
                  {
                    "title": "Accessing Model Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                    "title": "class var numberOfNeighbors: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                    "title": "class var linkedModelFileName: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                    "title": "class var linkedModelSearchPath: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "title": "Accessing Neural Network Layer Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/weights",
                    "title": "class var weights: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/biases",
                    "title": "class var biases: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "title": "Accessing Model Update Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/learningrate",
                    "title": "class var learningRate: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/momentum",
                    "title": "class var momentum: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                    "title": "class var miniBatchSize: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/beta1",
                    "title": "class var beta1: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/beta2",
                    "title": "class var beta2: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/eps",
                    "title": "class var eps: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/epochs",
                    "title": "class var epochs: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/shuffle",
                    "title": "class var shuffle: MLParameterKey",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlparameterkey/seed",
                    "title": "class var seed: MLParameterKey",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlparameterkey",
                "title": "MLParameterKey",
                "type": "class"
              },
              {
                "title": "Supporting Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring Model Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/modeldisplayname",
                    "title": "var modelDisplayName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/parameters",
                    "title": "var parameters: [MLParameterKey : Any]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Scoping Parameter Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                        "title": "func scoped(to: String) -> MLParameterKey",
                        "type": "method"
                      },
                      {
                        "title": "Accessing Model Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                        "title": "class var numberOfNeighbors: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                        "title": "class var linkedModelFileName: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                        "title": "class var linkedModelSearchPath: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Neural Network Layer Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/weights",
                        "title": "class var weights: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/biases",
                        "title": "class var biases: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Model Update Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/learningrate",
                        "title": "class var learningRate: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/momentum",
                        "title": "class var momentum: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                        "title": "class var miniBatchSize: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta1",
                        "title": "class var beta1: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta2",
                        "title": "class var beta2: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/eps",
                        "title": "class var eps: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/epochs",
                        "title": "class var epochs: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/shuffle",
                        "title": "class var shuffle: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/seed",
                        "title": "class var seed: MLParameterKey",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlparameterkey",
                    "title": "MLParameterKey",
                    "type": "class"
                  },
                  {
                    "title": "Configuring GPU Usage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/preferredmetaldevice",
                    "title": "var preferredMetalDevice: (any MTLDevice)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/allowlowprecisionaccumulationongpu",
                    "title": "var allowLowPrecisionAccumulationOnGPU: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Allowing Access to Processing Units",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/computeunits",
                    "title": "var computeUnits: MLComputeUnits",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Processing Unit Configurations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/all",
                        "title": "case all",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/cpuonly",
                        "title": "case cpuOnly",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/cpuandgpu",
                        "title": "case cpuAndGPU",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/cpuandneuralengine",
                        "title": "case cpuAndNeuralEngine",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlcomputeunits/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/coreml/mlcomputeunits",
                    "title": "MLComputeUnits",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/optimizationhints-1oq0g",
                    "title": "var optimizationHints: MLOptimizationHints",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelconfiguration/functionname",
                    "title": "var functionName: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlmodelconfiguration",
                "title": "MLModelConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mloptimizationhints-swift.struct/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mloptimizationhints-swift.struct/reshapefrequency-swift.property",
                    "title": "var reshapeFrequency: MLOptimizationHints.ReshapeFrequency",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mloptimizationhints-swift.struct/specializationstrategy-swift.property",
                    "title": "var specializationStrategy: MLOptimizationHints.SpecializationStrategy",
                    "type": "property"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mloptimizationhints-swift.struct/reshapefrequency-swift.enum/frequent",
                        "title": "case frequent",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mloptimizationhints-swift.struct/reshapefrequency-swift.enum/infrequent",
                        "title": "case infrequent",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/coreml/mloptimizationhints-swift.struct/reshapefrequency-swift.enum",
                    "title": "MLOptimizationHints.ReshapeFrequency",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mloptimizationhints-swift.struct/specializationstrategy-swift.enum/default",
                        "title": "case `default`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mloptimizationhints-swift.struct/specializationstrategy-swift.enum/fastprediction",
                        "title": "case fastPrediction",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/coreml/mloptimizationhints-swift.struct/specializationstrategy-swift.enum",
                    "title": "MLOptimizationHints.SpecializationStrategy",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/coreml/mloptimizationhints-swift.struct",
                "title": "MLOptimizationHints",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Retrieving a Keyâ€™s Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlkey/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlkey/scope",
                    "title": "var scope: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlkey",
                "title": "MLKey",
                "type": "class"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodel/makestate()",
                "title": "func makeState() -> MLState",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mlmodel",
            "title": "MLModel",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Model File Size",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/reducing-the-size-of-your-core-ml-app",
                "title": "Reducing the Size of Your Core ML App",
                "type": "article"
              },
              {
                "title": "Custom Model Layers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/creating-and-integrating-a-model-with-custom-layers",
                "title": "Creating and Integrating a Model with Custom Layers",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating a Layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/init(parameters:)",
                    "title": "init(parameters: [String : Any]) throws",
                    "type": "init"
                  },
                  {
                    "title": "Integrating a Layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/setweightdata(_:)",
                    "title": "func setWeightData([Data]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/outputshapes(forinputshapes:)",
                    "title": "func outputShapes(forInputShapes: [[NSNumber]]) throws -> [[NSNumber]]",
                    "type": "method"
                  },
                  {
                    "title": "Evaluating a Layer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/evaluate(inputs:outputs:)",
                    "title": "func evaluate(inputs: [MLMultiArray], outputs: [MLMultiArray]) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlcustomlayer/encode(commandbuffer:inputs:outputs:)",
                    "title": "func encode(commandBuffer: any MTLCommandBuffer, inputs: [any MTLTexture], outputs: [any MTLTexture]) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coreml/mlcustomlayer",
                "title": "MLCustomLayer",
                "type": "protocol"
              },
              {
                "title": "Custom Models",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating the Model",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustommodel/init(modeldescription:parameters:)",
                    "title": "init(modelDescription: MLModelDescription, parameters: [String : Any]) throws",
                    "type": "init"
                  },
                  {
                    "title": "Making Predictions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcustommodel/prediction(from:options:)",
                    "title": "func prediction(from: any MLFeatureProvider, options: MLPredictionOptions) throws -> any MLFeatureProvider",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlcustommodel/predictions(from:options:)",
                    "title": "func predictions(from: any MLBatchProvider, options: MLPredictionOptions) throws -> any MLBatchProvider",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coreml/mlcustommodel",
                "title": "MLCustomModel",
                "type": "protocol"
              }
            ],
            "path": "/documentation/coreml/model-customization",
            "title": "Model Customization",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "On-Device Model Updates",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltask/taskidentifier",
                    "title": "var taskIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Starting and Stopping a Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltask/resume()",
                    "title": "func resume()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mltask/cancel()",
                    "title": "func cancel()",
                    "type": "method"
                  },
                  {
                    "title": "Checking the State of a Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltask/state",
                    "title": "var state: MLTaskState",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Transient States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/running",
                        "title": "case running",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/suspended",
                        "title": "case suspended",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/cancelling",
                        "title": "case cancelling",
                        "type": "case"
                      },
                      {
                        "title": "Final States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/completed",
                        "title": "case completed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/failed",
                        "title": "case failed",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mltaskstate/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/coreml/mltaskstate",
                    "title": "MLTaskState",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/coreml/mltask/error",
                    "title": "var error: (any Error)?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mltask",
                "title": "MLTask",
                "type": "class"
              },
              {
                "path": "/documentation/coreml/personalizing-a-model-with-on-device-updates",
                "title": "Personalizing a Model with On-Device Updates",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Creating an Update Task",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:completionhandler:)",
                    "title": "convenience init(forModelAt: URL, trainingData: any MLBatchProvider, completionHandler: (MLUpdateContext) -> Void) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:progresshandlers:)",
                    "title": "convenience init(forModelAt: URL, trainingData: any MLBatchProvider, progressHandlers: MLUpdateProgressHandlers) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:configuration:completionhandler:)",
                    "title": "convenience init(forModelAt: URL, trainingData: any MLBatchProvider, configuration: MLModelConfiguration?, completionHandler: (MLUpdateContext) -> Void) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelat:trainingdata:configuration:progresshandlers:)",
                    "title": "convenience init(forModelAt: URL, trainingData: any MLBatchProvider, configuration: MLModelConfiguration?, progressHandlers: MLUpdateProgressHandlers) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelaturl:trainingdata:completionhandler:)",
                    "title": "convenience init(forModelAtURL: URL, trainingData: any MLBatchProvider, completionHandler: (MLUpdateContext) -> Void) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelaturl:trainingdata:progresshandlers:)",
                    "title": "convenience init(forModelAtURL: URL, trainingData: any MLBatchProvider, progressHandlers: MLUpdateProgressHandlers) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelaturl:trainingdata:configuration:completionhandler:)",
                    "title": "convenience init(forModelAtURL: URL, trainingData: any MLBatchProvider, configuration: MLModelConfiguration?, completionHandler: (MLUpdateContext) -> Void) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/init(formodelaturl:trainingdata:configuration:progresshandlers:)",
                    "title": "convenience init(forModelAtURL: URL, trainingData: any MLBatchProvider, configuration: MLModelConfiguration?, progressHandlers: MLUpdateProgressHandlers) throws",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlbatchprovider/features(at:)",
                        "title": "func features(at: Int) -> any MLFeatureProvider",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlbatchprovider/count",
                        "title": "var count: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlbatchprovider",
                    "title": "MLBatchProvider",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring Model Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/modeldisplayname",
                        "title": "var modelDisplayName: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/parameters",
                        "title": "var parameters: [MLParameterKey : Any]?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Scoping Parameter Keys",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                            "title": "func scoped(to: String) -> MLParameterKey",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Model Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                            "title": "class var numberOfNeighbors: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                            "title": "class var linkedModelFileName: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                            "title": "class var linkedModelSearchPath: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Neural Network Layer Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/weights",
                            "title": "class var weights: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/biases",
                            "title": "class var biases: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Model Update Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/learningrate",
                            "title": "class var learningRate: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/momentum",
                            "title": "class var momentum: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                            "title": "class var miniBatchSize: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta1",
                            "title": "class var beta1: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta2",
                            "title": "class var beta2: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/eps",
                            "title": "class var eps: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/epochs",
                            "title": "class var epochs: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/shuffle",
                            "title": "class var shuffle: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/seed",
                            "title": "class var seed: MLParameterKey",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlparameterkey",
                        "title": "MLParameterKey",
                        "type": "class"
                      },
                      {
                        "title": "Configuring GPU Usage",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/preferredmetaldevice",
                        "title": "var preferredMetalDevice: (any MTLDevice)?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/allowlowprecisionaccumulationongpu",
                        "title": "var allowLowPrecisionAccumulationOnGPU: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Allowing Access to Processing Units",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/computeunits",
                        "title": "var computeUnits: MLComputeUnits",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Processing Unit Configurations",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/all",
                            "title": "case all",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/cpuonly",
                            "title": "case cpuOnly",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/cpuandgpu",
                            "title": "case cpuAndGPU",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/cpuandneuralengine",
                            "title": "case cpuAndNeuralEngine",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlcomputeunits/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/coreml/mlcomputeunits",
                        "title": "MLComputeUnits",
                        "type": "enum"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/optimizationhints-1oq0g",
                        "title": "var optimizationHints: MLOptimizationHints",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelconfiguration/functionname",
                        "title": "var functionName: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelconfiguration",
                    "title": "MLModelConfiguration",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Update Context",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/event",
                        "title": "var event: MLUpdateProgressEvent",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Progress Event Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/trainingbegin",
                            "title": "static var trainingBegin: MLUpdateProgressEvent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/minibatchend",
                            "title": "static var miniBatchEnd: MLUpdateProgressEvent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/epochend",
                            "title": "static var epochEnd: MLUpdateProgressEvent",
                            "type": "property"
                          },
                          {
                            "title": "Creating a Progress Event",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/init(rawvalue:)",
                            "title": "init(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/coreml/mlupdateprogressevent",
                        "title": "MLUpdateProgressEvent",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/task",
                        "title": "var task: MLUpdateTask",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/parameters",
                        "title": "var parameters: [MLParameterKey : Any]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Scoping Parameter Keys",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                            "title": "func scoped(to: String) -> MLParameterKey",
                            "type": "method"
                          },
                          {
                            "title": "Accessing Model Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                            "title": "class var numberOfNeighbors: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                            "title": "class var linkedModelFileName: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                            "title": "class var linkedModelSearchPath: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Neural Network Layer Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/weights",
                            "title": "class var weights: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/biases",
                            "title": "class var biases: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "title": "Accessing Model Update Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/learningrate",
                            "title": "class var learningRate: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/momentum",
                            "title": "class var momentum: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                            "title": "class var miniBatchSize: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta1",
                            "title": "class var beta1: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/beta2",
                            "title": "class var beta2: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/eps",
                            "title": "class var eps: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/epochs",
                            "title": "class var epochs: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/shuffle",
                            "title": "class var shuffle: MLParameterKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlparameterkey/seed",
                            "title": "class var seed: MLParameterKey",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlparameterkey",
                        "title": "MLParameterKey",
                        "type": "class"
                      },
                      {
                        "title": "Evaluating the Update",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/metrics",
                        "title": "var metrics: [MLMetricKey : Any]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the Keys",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmetrickey/lossvalue",
                            "title": "class var lossValue: MLMetricKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmetrickey/epochindex",
                            "title": "class var epochIndex: MLMetricKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmetrickey/minibatchindex",
                            "title": "class var miniBatchIndex: MLMetricKey",
                            "type": "property"
                          },
                          {
                            "title": "Supporting Types",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Retrieving a Keyâ€™s Information",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlkey/name",
                                "title": "var name: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlkey/scope",
                                "title": "var scope: String?",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/coreml/mlkey",
                            "title": "MLKey",
                            "type": "class"
                          }
                        ],
                        "path": "/documentation/coreml/mlmetrickey",
                        "title": "MLMetricKey",
                        "type": "class"
                      },
                      {
                        "title": "Saving an Updated Model",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdatecontext/model",
                        "title": "var model: any MLModel & MLWritable",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Saving to a File",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlwritable/write(to:)",
                            "title": "func write(to: URL) throws",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/coreml/mlwritable",
                        "title": "MLWritable",
                        "type": "protocol"
                      }
                    ],
                    "path": "/documentation/coreml/mlupdatecontext",
                    "title": "MLUpdateContext",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Progress Handlers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlupdateprogresshandlers/init(forevents:progresshandler:completionhandler:)",
                        "title": "init(forEvents: MLUpdateProgressEvent, progressHandler: ((MLUpdateContext) -> Void)?, completionHandler: (MLUpdateContext) -> Void)",
                        "type": "init"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Progress Event Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/trainingbegin",
                            "title": "static var trainingBegin: MLUpdateProgressEvent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/minibatchend",
                            "title": "static var miniBatchEnd: MLUpdateProgressEvent",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/epochend",
                            "title": "static var epochEnd: MLUpdateProgressEvent",
                            "type": "property"
                          },
                          {
                            "title": "Creating a Progress Event",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdateprogressevent/init(rawvalue:)",
                            "title": "init(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/coreml/mlupdateprogressevent",
                        "title": "MLUpdateProgressEvent",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the Update Context",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/event",
                            "title": "var event: MLUpdateProgressEvent",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting Progress Event Types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlupdateprogressevent/trainingbegin",
                                "title": "static var trainingBegin: MLUpdateProgressEvent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlupdateprogressevent/minibatchend",
                                "title": "static var miniBatchEnd: MLUpdateProgressEvent",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlupdateprogressevent/epochend",
                                "title": "static var epochEnd: MLUpdateProgressEvent",
                                "type": "property"
                              },
                              {
                                "title": "Creating a Progress Event",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlupdateprogressevent/init(rawvalue:)",
                                "title": "init(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/coreml/mlupdateprogressevent",
                            "title": "MLUpdateProgressEvent",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/task",
                            "title": "var task: MLUpdateTask",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/parameters",
                            "title": "var parameters: [MLParameterKey : Any]",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Scoping Parameter Keys",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                                "title": "func scoped(to: String) -> MLParameterKey",
                                "type": "method"
                              },
                              {
                                "title": "Accessing Model Parameters",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                                "title": "class var numberOfNeighbors: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                                "title": "class var linkedModelFileName: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                                "title": "class var linkedModelSearchPath: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "title": "Accessing Neural Network Layer Parameters",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/weights",
                                "title": "class var weights: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/biases",
                                "title": "class var biases: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "title": "Accessing Model Update Parameters",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/learningrate",
                                "title": "class var learningRate: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/momentum",
                                "title": "class var momentum: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                                "title": "class var miniBatchSize: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/beta1",
                                "title": "class var beta1: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/beta2",
                                "title": "class var beta2: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/eps",
                                "title": "class var eps: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/epochs",
                                "title": "class var epochs: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/shuffle",
                                "title": "class var shuffle: MLParameterKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlparameterkey/seed",
                                "title": "class var seed: MLParameterKey",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/coreml/mlparameterkey",
                            "title": "MLParameterKey",
                            "type": "class"
                          },
                          {
                            "title": "Evaluating the Update",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/metrics",
                            "title": "var metrics: [MLMetricKey : Any]",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the Keys",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlmetrickey/lossvalue",
                                "title": "class var lossValue: MLMetricKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmetrickey/epochindex",
                                "title": "class var epochIndex: MLMetricKey",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/coreml/mlmetrickey/minibatchindex",
                                "title": "class var miniBatchIndex: MLMetricKey",
                                "type": "property"
                              },
                              {
                                "title": "Supporting Types",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Retrieving a Keyâ€™s Information",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlkey/name",
                                    "title": "var name: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/coreml/mlkey/scope",
                                    "title": "var scope: String?",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/coreml/mlkey",
                                "title": "MLKey",
                                "type": "class"
                              }
                            ],
                            "path": "/documentation/coreml/mlmetrickey",
                            "title": "MLMetricKey",
                            "type": "class"
                          },
                          {
                            "title": "Saving an Updated Model",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlupdatecontext/model",
                            "title": "var model: any MLModel & MLWritable",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Saving to a File",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/coreml/mlwritable/write(to:)",
                                "title": "func write(to: URL) throws",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/coreml/mlwritable",
                            "title": "MLWritable",
                            "type": "protocol"
                          }
                        ],
                        "path": "/documentation/coreml/mlupdatecontext",
                        "title": "MLUpdateContext",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/coreml/mlupdateprogresshandlers",
                    "title": "MLUpdateProgressHandlers",
                    "type": "class"
                  },
                  {
                    "title": "Starting and Resuming an Update",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlupdatetask/resume(withparameters:)",
                    "title": "func resume(withParameters: [MLParameterKey : Any])",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Scoping Parameter Keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/scoped(to:)",
                        "title": "func scoped(to: String) -> MLParameterKey",
                        "type": "method"
                      },
                      {
                        "title": "Accessing Model Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/numberofneighbors",
                        "title": "class var numberOfNeighbors: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelfilename",
                        "title": "class var linkedModelFileName: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/linkedmodelsearchpath",
                        "title": "class var linkedModelSearchPath: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Neural Network Layer Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/weights",
                        "title": "class var weights: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/biases",
                        "title": "class var biases: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "title": "Accessing Model Update Parameters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/learningrate",
                        "title": "class var learningRate: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/momentum",
                        "title": "class var momentum: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/minibatchsize",
                        "title": "class var miniBatchSize: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta1",
                        "title": "class var beta1: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/beta2",
                        "title": "class var beta2: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/eps",
                        "title": "class var eps: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/epochs",
                        "title": "class var epochs: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/shuffle",
                        "title": "class var shuffle: MLParameterKey",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlparameterkey/seed",
                        "title": "class var seed: MLParameterKey",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlparameterkey",
                    "title": "MLParameterKey",
                    "type": "class"
                  }
                ],
                "path": "/documentation/coreml/mlupdatetask",
                "title": "MLUpdateTask",
                "type": "class"
              }
            ],
            "path": "/documentation/coreml/model-personalization",
            "title": "Model Personalization",
            "type": "collection"
          },
          {
            "title": "Model inputs and outputs",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/making-predictions-with-a-sequence-of-inputs",
            "title": "Making Predictions with a Sequence of Inputs",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating Numeric Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(int64:)",
                "title": "convenience init(int64: Int64)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(double:)",
                "title": "convenience init(double: Double)",
                "type": "init"
              },
              {
                "title": "Creating String Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(string:)",
                "title": "convenience init(string: String)",
                "type": "init"
              },
              {
                "title": "Creating Multidimensional Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(multiarray:)",
                "title": "convenience init(multiArray: MLMultiArray)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(shapedarray:)",
                "title": "convenience init<Scalar>(shapedArray: MLShapedArray<Scalar>)",
                "type": "init"
              },
              {
                "title": "Creating Collection Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(dictionary:)",
                "title": "convenience init(dictionary: [AnyHashable : NSNumber]) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(sequence:)",
                "title": "convenience init(sequence: MLSequence)",
                "type": "init"
              },
              {
                "title": "Creating Image Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(pixelbuffer:)",
                "title": "convenience init(pixelBuffer: CVPixelBuffer)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "convenience init(CGImage: CGImage, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:orientation:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "convenience init(CGImage: CGImage, orientation: CGImagePropertyOrientation, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:constraint:options:)",
                "title": "convenience init(CGImage: CGImage, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(cgimage:orientation:constraint:options:)",
                "title": "convenience init(CGImage: CGImage, orientation: CGImagePropertyOrientation, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "convenience init(imageAtURL: URL, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:orientation:pixelswide:pixelshigh:pixelformattype:options:)",
                "title": "convenience init(imageAtURL: URL, orientation: CGImagePropertyOrientation, pixelsWide: Int, pixelsHigh: Int, pixelFormatType: OSType, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:constraint:options:)",
                "title": "convenience init(imageAtURL: URL, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(imageaturl:orientation:constraint:options:)",
                "title": "convenience init(imageAtURL: URL, orientation: CGImagePropertyOrientation, constraint: MLImageConstraint, options: [MLFeatureValue.ImageOption : Any]?) throws",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Constraints",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/pixelswide",
                    "title": "var pixelsWide: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/pixelshigh",
                    "title": "var pixelsHigh: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/pixelformattype",
                    "title": "var pixelFormatType: OSType",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Acceptable Sizes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlimageconstraint/sizeconstraint",
                    "title": "var sizeConstraint: MLImageSizeConstraint",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Relevant Constraints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/type",
                        "title": "var type: MLImageSizeConstraintType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesizeconstrainttype/range",
                            "title": "case range",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesizeconstrainttype/enumerated",
                            "title": "case enumerated",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesizeconstrainttype/unspecified",
                            "title": "case unspecified",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesizeconstrainttype/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/coreml/mlimagesizeconstrainttype",
                        "title": "MLImageSizeConstraintType",
                        "type": "enum"
                      },
                      {
                        "title": "Accessing the Image Size Ranges",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/pixelswiderange",
                        "title": "var pixelsWideRange: NSRange",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/pixelshighrange",
                        "title": "var pixelsHighRange: NSRange",
                        "type": "property"
                      },
                      {
                        "title": "Accessing the Enumerated Image Sizes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlimagesizeconstraint/enumeratedimagesizes",
                        "title": "var enumeratedImageSizes: [MLImageSize]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing an Image Size",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesize/pixelshigh",
                            "title": "var pixelsHigh: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlimagesize/pixelswide",
                            "title": "var pixelsWide: Int",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlimagesize",
                        "title": "MLImageSize",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/coreml/mlimagesizeconstraint",
                    "title": "MLImageSizeConstraint",
                    "type": "class"
                  }
                ],
                "path": "/documentation/coreml/mlimageconstraint",
                "title": "MLImageConstraint",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Image Options Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturevalue/imageoption/croprect",
                    "title": "static let cropRect: MLFeatureValue.ImageOption",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturevalue/imageoption/cropandscale",
                    "title": "static let cropAndScale: MLFeatureValue.ImageOption",
                    "type": "property"
                  },
                  {
                    "title": "Image Option Key Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturevalue/imageoption/init(_:)",
                    "title": "init(String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturevalue/imageoption/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/coreml/mlfeaturevalue/imageoption",
                "title": "MLFeatureValue.ImageOption",
                "type": "struct"
              },
              {
                "title": "Creating Undefined Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(undefined:)",
                "title": "convenience init(undefined: MLFeatureType)",
                "type": "init"
              },
              {
                "title": "Accessing the Featureâ€™s Type",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/type",
                "title": "var type: MLFeatureType",
                "type": "property"
              },
              {
                "title": "Accessing the Featureâ€™s Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/isundefined",
                "title": "var isUndefined: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/int64value",
                "title": "var int64Value: Int64",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/doublevalue",
                "title": "var doubleValue: Double",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/stringvalue",
                "title": "var stringValue: String",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/imagebuffervalue",
                "title": "var imageBufferValue: CVPixelBuffer?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/shapedarrayvalue(of:)",
                "title": "func shapedArrayValue<Scalar>(of: Scalar.Type) -> MLShapedArray<Scalar>?",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/multiarrayvalue",
                "title": "var multiArrayValue: MLMultiArray?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/sequencevalue",
                "title": "var sequenceValue: MLSequence?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/dictionaryvalue",
                "title": "var dictionaryValue: [AnyHashable : NSNumber]",
                "type": "property"
              },
              {
                "title": "Comparing Feature Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/isequal(to:)",
                "title": "func isEqual(to: MLFeatureValue) -> Bool",
                "type": "method"
              },
              {
                "title": "Supporting Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/int64",
                    "title": "case int64",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/double",
                    "title": "case double",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/image",
                    "title": "case image",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/multiarray",
                    "title": "case multiArray",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/string",
                    "title": "case string",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/dictionary",
                    "title": "case dictionary",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/sequence",
                    "title": "case sequence",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/invalid",
                    "title": "case invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/state",
                    "title": "case state",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlfeaturetype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/coreml/mlfeaturetype",
                "title": "MLFeatureType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating a Shaped Array",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(scalar:)",
                    "title": "init(scalar: Scalar)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(scalars:shape:)",
                    "title": "init<S>(scalars: S, shape: [Int])",
                    "type": "init"
                  },
                  {
                    "title": "Creating a Shaped Array from Another Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(_:)",
                    "title": "init(MLMultiArray)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(concatenating:alongaxis:)",
                    "title": "init<S>(concatenating: S, alongAxis: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Creating a shaped array with pointers to memory",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(unsafeuninitializedshape:initializingwith:)",
                    "title": "init(unsafeUninitializedShape: [Int], initializingWith: (inout UnsafeMutableBufferPointer<Scalar>, [Int]) throws -> Void) rethrows",
                    "type": "init"
                  },
                  {
                    "title": "Creating a shaped array from data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(data:shape:)",
                    "title": "init(data: Data, shape: [Int])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(data:shape:strides:)",
                    "title": "init(data: Data, shape: [Int], strides: [Int])",
                    "type": "init"
                  },
                  {
                    "title": "Encoding and decoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting a Shaped Array",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/description",
                    "title": "var description: String",
                    "type": "property"
                  },
                  {
                    "title": "Supporting Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/shaped-array-collection-operations",
                    "title": "Shaped Array Collection Operations",
                    "type": "collection"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/init(mutating:shape:)",
                    "title": "init(mutating: CVPixelBuffer, shape: [Int])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/changinglayout(to:)",
                    "title": "func changingLayout(to: MLShapedArrayBufferLayout) -> MLShapedArray<Scalar>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/expandingshape(at:)",
                    "title": "func expandingShape(at: Int) -> MLShapedArray<Scalar>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/reshaped(to:)",
                    "title": "func reshaped(to: [Int]) -> MLShapedArray<Scalar>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/squeezingshape()",
                    "title": "func squeezingShape() -> MLShapedArray<Scalar>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/transposed()",
                    "title": "func transposed() -> MLShapedArray<Scalar>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/transposed(permutation:)",
                    "title": "func transposed(permutation: [Int]) -> MLShapedArray<Scalar>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/withmutablepixelbufferifavailable(_:)",
                    "title": "func withMutablePixelBufferIfAvailable<R>((CVPixelBuffer) throws -> R) rethrows -> R?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/withpixelbufferifavailable(_:)",
                    "title": "func withPixelBufferIfAvailable<R>((CVPixelBuffer) throws -> R) rethrows -> R?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarray/withunsafemutableshapedbufferpointer(using:_:)",
                    "title": "func withUnsafeMutableShapedBufferPointer<R>(using: MLShapedArrayBufferLayout, (inout UnsafeMutableBufferPointer<Scalar>, [Int], [Int]) throws -> R) rethrows -> R",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarray/description",
                        "title": "var description: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlshapedarray/customstringconvertible-implementations",
                    "title": "CustomStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarray/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/coreml/mlshapedarray/decodable-implementations",
                    "title": "Decodable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarray/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/coreml/mlshapedarray/encodable-implementations",
                    "title": "Encodable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/coreml/mlshapedarray",
                "title": "MLShapedArray",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a Shaped Array Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(scalars:shape:)",
                    "title": "init<S>(scalars: S, shape: [Int])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(repeating:shape:)",
                    "title": "init(repeating: Self.Scalar, shape: [Int])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(identitymatrixofsize:)-77y0e",
                    "title": "init(identityMatrixOfSize: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(randomscalarsin:shape:)-99fnn",
                    "title": "init(randomScalarsIn: Range<Self.Scalar>, shape: [Int])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(bytesnocopy:shape:deallocator:)",
                    "title": "init(bytesNoCopy: UnsafeRawPointer, shape: [Int], deallocator: Data.Deallocator)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(bytesnocopy:shape:strides:deallocator:)",
                    "title": "init(bytesNoCopy: UnsafeRawPointer, shape: [Int], strides: [Int], deallocator: Data.Deallocator)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(unsafeuninitializedshape:initializingwith:)",
                    "title": "init(unsafeUninitializedShape: [Int], initializingWith: (inout UnsafeMutableBufferPointer<Self.Scalar>, [Int]) throws -> Void) rethrows",
                    "type": "init"
                  },
                  {
                    "title": "Creating a Shaped Array Type from Another Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(_:)",
                    "title": "init(MLMultiArray)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(converting:)-3d2eu",
                    "title": "init(converting: MLMultiArray)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(converting:)-701ib",
                    "title": "init<T>(converting: T)",
                    "type": "init"
                  },
                  {
                    "title": "Inspecting a Shaped Array Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/shape",
                    "title": "var shape: [Int]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/strides",
                    "title": "var strides: [Int]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/count",
                    "title": "var count: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/isscalar",
                    "title": "var isScalar: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/scalarcount",
                    "title": "var scalarCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/scalar-swift.property",
                    "title": "var scalar: Self.Scalar?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/scalars",
                    "title": "var scalars: [Self.Scalar]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/withunsafeshapedbufferpointer(_:)",
                    "title": "func withUnsafeShapedBufferPointer<R>((UnsafeBufferPointer<Self.Scalar>, [Int], [Int]) throws -> R) rethrows -> R",
                    "type": "method"
                  },
                  {
                    "title": "Accessing Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/subscript(scalarat:)",
                    "title": "subscript<C>(scalarAt _: C) -> Self.Scalar",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/subscript(_:)-zfw5",
                    "title": "subscript<C>(C) -> MLShapedArraySlice<Self.Scalar>",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/subscript(_:)-1q1sr",
                    "title": "subscript<C>(C) -> MLShapedArraySlice<Self.Scalar>",
                    "type": "subscript"
                  },
                  {
                    "title": "Modifying a Shaped Array Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/fill(with:)-9qpes",
                    "title": "func fill(with: Self.Scalar)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/fill(with:)-6a5k1",
                    "title": "func fill<C>(with: C)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/withunsafemutableshapedbufferpointer(_:)",
                    "title": "func withUnsafeMutableShapedBufferPointer<R>((inout UnsafeMutableBufferPointer<Self.Scalar>, [Int], [Int]) throws -> R) rethrows -> R",
                    "type": "method"
                  },
                  {
                    "title": "Supporting Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/scalar-swift.associatedtype",
                    "title": "Scalar",
                    "type": "associatedtype"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a Shaped Array Slice",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(scalar:)",
                        "title": "init(scalar: Scalar)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(scalars:shape:)",
                        "title": "init<S>(scalars: S, shape: [Int])",
                        "type": "init"
                      },
                      {
                        "title": "Creating a Shaped Array Slice from Another Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(_:)",
                        "title": "init(MLMultiArray)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(concatenating:alongaxis:)",
                        "title": "init<S>(concatenating: S, alongAxis: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Creating a Shaped Array Slice with Pointers to Memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(unsafeuninitializedshape:initializingwith:)",
                        "title": "init(unsafeUninitializedShape: [Int], initializingWith: (inout UnsafeMutableBufferPointer<Scalar>, [Int]) throws -> Void) rethrows",
                        "type": "init"
                      },
                      {
                        "title": "Creating a Shaped Array Slice with Data",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(data:shape:)",
                        "title": "init(data: Data, shape: [Int])",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(data:shape:strides:)",
                        "title": "init(data: Data, shape: [Int], strides: [Int])",
                        "type": "init"
                      },
                      {
                        "title": "Encoding and Decoding an Array Slice",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "title": "Supporting Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/shaped-array-slice-collection-operations",
                        "title": "Shaped Array Slice Collection Operations",
                        "type": "collection"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/init(mutating:shape:)",
                        "title": "init(mutating: CVPixelBuffer, shape: [Int])",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/changinglayout(to:)",
                        "title": "func changingLayout(to: MLShapedArrayBufferLayout) -> MLShapedArraySlice<Scalar>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/expandingshape(at:)",
                        "title": "func expandingShape(at: Int) -> MLShapedArraySlice<Scalar>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/reshaped(to:)",
                        "title": "func reshaped(to: [Int]) -> MLShapedArraySlice<Scalar>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/squeezingshape()",
                        "title": "func squeezingShape() -> MLShapedArraySlice<Scalar>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/transposed()",
                        "title": "func transposed() -> MLShapedArraySlice<Scalar>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/transposed(permutation:)",
                        "title": "func transposed(permutation: [Int]) -> MLShapedArraySlice<Scalar>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayslice/withunsafemutableshapedbufferpointer(using:_:)",
                        "title": "func withUnsafeMutableShapedBufferPointer<R>(using: MLShapedArrayBufferLayout, (inout UnsafeMutableBufferPointer<Scalar>, [Int], [Int]) throws -> R) rethrows -> R",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlshapedarrayslice/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/coreml/mlshapedarrayslice/decodable-implementations",
                        "title": "Decodable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlshapedarrayslice/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/coreml/mlshapedarrayslice/encodable-implementations",
                        "title": "Encodable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/coreml/mlshapedarrayslice",
                    "title": "MLShapedArraySlice",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining the Underlying Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayscalar/multiarraydatatype",
                        "title": "static var multiArrayDataType: MLMultiArrayDataType",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlshapedarrayscalar",
                    "title": "MLShapedArrayScalar",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Generating Relative Ranges",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlshapedarrayrangeexpression/relative(toshapedarrayaxis:)",
                        "title": "func relative(toShapedArrayAxis: Range<Int>) -> Range<Int>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/coreml/mlshapedarrayrangeexpression",
                    "title": "MLShapedArrayRangeExpression",
                    "type": "protocol"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(identitymatrixofsize:)-1xx88",
                    "title": "init(identityMatrixOfSize: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlshapedarrayprotocol/init(randomscalarsin:shape:)-4c8k1",
                    "title": "init(randomScalarsIn: Range<Self.Scalar>, shape: [Int])",
                    "type": "init"
                  }
                ],
                "path": "/documentation/coreml/mlshapedarrayprotocol",
                "title": "MLShapedArrayProtocol",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating a Multiarray",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(_:)-3eqoq",
                    "title": "convenience init<C>(C) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(_:)-fh2x",
                    "title": "convenience init<C>(C) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(_:)-8bsfu",
                    "title": "convenience init<C>(C) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(shape:datatype:)",
                    "title": "init(shape: [NSNumber], dataType: MLMultiArrayDataType) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(_:)-wk41",
                    "title": "convenience init<ShapedArray>(ShapedArray)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(datapointer:shape:datatype:strides:deallocator:)",
                    "title": "init(dataPointer: UnsafeMutableRawPointer, shape: [NSNumber], dataType: MLMultiArrayDataType, strides: [NSNumber], deallocator: ((UnsafeMutableRawPointer) -> Void)?) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(byconcatenatingmultiarrays:alongaxis:datatype:)",
                    "title": "convenience init(byConcatenatingMultiArrays: [MLMultiArray], alongAxis: Int, dataType: MLMultiArrayDataType)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(pixelbuffer:shape:)",
                    "title": "init(pixelBuffer: CVPixelBuffer, shape: [NSNumber])",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Multiarray Data Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/int32",
                        "title": "case int32",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float16",
                        "title": "case float16",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float32",
                        "title": "case float32",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/double",
                        "title": "case double",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float",
                        "title": "static var float: MLMultiArrayDataType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/float64",
                        "title": "static var float64: MLMultiArrayDataType",
                        "type": "property"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmultiarraydatatype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/coreml/mlmultiarraydatatype",
                    "title": "MLMultiArrayDataType",
                    "type": "enum"
                  },
                  {
                    "title": "Inspecting a Multiarray",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/count",
                    "title": "var count: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/datatype",
                    "title": "var dataType: MLMultiArrayDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/shape",
                    "title": "var shape: [NSNumber]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/strides",
                    "title": "var strides: [NSNumber]",
                    "type": "property"
                  },
                  {
                    "title": "Providing buffer access",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/withunsafebufferpointer(oftype:_:)",
                    "title": "func withUnsafeBufferPointer<S, R>(ofType: S.Type, (UnsafeBufferPointer<S>) throws -> R) rethrows -> R",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/withunsafebytes(_:)",
                    "title": "func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/withunsafemutablebufferpointer(oftype:_:)",
                    "title": "func withUnsafeMutableBufferPointer<S, R>(ofType: S.Type, (UnsafeMutableBufferPointer<S>, [Int]) throws -> R) rethrows -> R",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/withunsafemutablebytes(_:)",
                    "title": "func withUnsafeMutableBytes<R>((UnsafeMutableRawBufferPointer, [Int]) throws -> R) rethrows -> R",
                    "type": "method"
                  },
                  {
                    "title": "Accessing a Multiarrayâ€™s Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/subscript(_:)-2hh91",
                    "title": "subscript(Int) -> NSNumber",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/subscript(_:)-3d9el",
                    "title": "subscript([NSNumber]) -> NSNumber",
                    "type": "subscript"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/pixelbuffer",
                    "title": "var pixelBuffer: CVPixelBuffer?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmultiarray/datapointer",
                    "title": "var dataPointer: UnsafeMutableRawPointer",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/init(shape:datatype:strides:)",
                    "title": "convenience init(shape: [Int], dataType: MLMultiArrayDataType, strides: [Int])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmultiarray/transfer(to:)",
                    "title": "func transfer(to: MLMultiArray)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/coreml/mlmultiarray",
                "title": "MLMultiArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Sequence",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/init(strings:)",
                    "title": "convenience init(strings: [String])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/init(int64s:)",
                    "title": "convenience init(int64s: [NSNumber])",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/init(empty:)",
                    "title": "convenience init(empty: MLFeatureType)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying the Sequenceâ€™s Element Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/type",
                    "title": "var type: MLFeatureType",
                    "type": "property"
                  },
                  {
                    "title": "Retrieving the Sequenceâ€™s Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/stringvalues",
                    "title": "var stringValues: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlsequence/int64values",
                    "title": "var int64Values: [NSNumber]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlsequence",
                "title": "MLSequence",
                "type": "class"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeaturevalue/init(_:)",
                "title": "convenience init(MLSendableFeatureValue)",
                "type": "init"
              }
            ],
            "path": "/documentation/coreml/mlfeaturevalue",
            "title": "MLFeatureValue",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-1rhc9",
                "title": "init([String : Int])",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-1vy3o",
                "title": "init(String)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-28hj2",
                "title": "init([String : Double])",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-2luvn",
                "title": "init(Int)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-2na46",
                "title": "init(Double)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-41vmh",
                "title": "init(Float)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-5l8d8",
                "title": "init?(MLFeatureValue)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-5xnf3",
                "title": "init<Scalar>(MLShapedArray<Scalar>)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-6m5iu",
                "title": "init([String])",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-83wb9",
                "title": "init(Int32)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-99w6f",
                "title": "init([Int : Double])",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-9bylj",
                "title": "init([Int : Int])",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(_:)-iaa4",
                "title": "init(Float16)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/init(undefined:)",
                "title": "init(undefined: MLFeatureType)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/doublevalue",
                "title": "var doubleValue: Double?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/float16value",
                "title": "var float16Value: Float16?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/floatvalue",
                "title": "var floatValue: Float?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/integerdictionaryvalue",
                "title": "var integerDictionaryValue: [Int : Double]?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/integervalue",
                "title": "var integerValue: Int?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/isscalar",
                "title": "var isScalar: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/isshapedarray",
                "title": "var isShapedArray: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/isundefined",
                "title": "var isUndefined: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/stringarrayvalue",
                "title": "var stringArrayValue: [String]?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/stringdictionaryvalue",
                "title": "var stringDictionaryValue: [String : Double]?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/stringvalue",
                "title": "var stringValue: String?",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/type",
                "title": "var type: MLFeatureType",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlsendablefeaturevalue/shapedarrayvalue(of:)",
                "title": "func shapedArrayValue<Scalar>(of: Scalar.Type) -> MLShapedArray<Scalar>?",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mlsendablefeaturevalue",
            "title": "MLSendableFeatureValue",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Accessing Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlfeatureprovider/featurevalue(for:)",
                "title": "func featureValue(for: String) -> MLFeatureValue?",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlfeatureprovider/featurenames",
                "title": "var featureNames: Set<String>",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlfeatureprovider",
            "title": "MLFeatureProvider",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating the Provider",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mldictionaryfeatureprovider/init(dictionary:)",
                "title": "init(dictionary: [String : Any]) throws",
                "type": "init"
              },
              {
                "title": "Accessing the Features",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mldictionaryfeatureprovider/subscript(_:)",
                "title": "subscript(String) -> MLFeatureValue?",
                "type": "subscript"
              },
              {
                "path": "/documentation/coreml/mldictionaryfeatureprovider/dictionary",
                "title": "var dictionary: [String : MLFeatureValue]",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mldictionaryfeatureprovider",
            "title": "MLDictionaryFeatureProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessing Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlbatchprovider/features(at:)",
                "title": "func features(at: Int) -> any MLFeatureProvider",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlbatchprovider/count",
                "title": "var count: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlbatchprovider",
            "title": "MLBatchProvider",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlarraybatchprovider/init(array:)",
                "title": "init(array: [any MLFeatureProvider])",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlarraybatchprovider/init(dictionary:)",
                "title": "init(dictionary: [String : [Any]]) throws",
                "type": "init"
              },
              {
                "title": "Accessing the Feature Providers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlarraybatchprovider/array",
                "title": "var array: [any MLFeatureProvider]",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlarraybatchprovider",
            "title": "MLArrayBatchProvider",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a model asset",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/init(specification:)",
                "title": "convenience init(specification: Data) throws",
                "type": "init"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/init(specification:blobmapping:)",
                "title": "convenience init(specification: Data, blobMapping: [URL : Data]) throws",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/init(url:)",
                "title": "convenience init(url: URL) throws",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/functionnames(completionhandler:)",
                "title": "func functionNames(completionHandler: ([String]?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/modeldescription(completionhandler:)",
                "title": "func modelDescription(completionHandler: (MLModelDescription?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodelasset/modeldescription(offunctionnamed:completionhandler:)",
                "title": "func modelDescription(ofFunctionNamed: String, completionHandler: (MLModelDescription?, (any Error)?) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mlmodelasset",
            "title": "MLModelAsset",
            "type": "class"
          },
          {
            "title": "App integration",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/downloading-and-compiling-a-model-on-the-user-s-device",
            "title": "Downloading and Compiling a Model on the Userâ€™s Device",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Tabular Data Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/integrating-a-core-ml-model-into-your-app",
                "title": "Integrating a Core ML Model into Your App",
                "type": "sampleCode"
              },
              {
                "title": "Image Classification Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/using-core-ml-for-semantic-image-segmentation",
                "title": "Using Core ML for semantic image segmentation",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/coreml/model_integration_samples/classifying_images_with_vision_and_core_ml",
                "title": "Classifying Images with Vision and Core ML",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/coreml/detecting-human-body-poses-in-an-image",
                "title": "Detecting human body poses in an image",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/coreml/model_integration_samples/understanding_a_dice_roll_with_vision_and_object_detection",
                "title": "Understanding a Dice Roll with Vision and Object Detection",
                "type": "sampleCode"
              },
              {
                "title": "Text Classification Models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/finding-answers-to-questions-in-a-text-document",
                "title": "Finding answers to questions in a text document",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/coreml/model-integration-samples",
            "title": "Model Integration Samples",
            "type": "collection"
          },
          {
            "title": "Model encryption",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/coreml/generating-a-model-encryption-key",
            "title": "Generating a Model Encryption Key",
            "type": "article"
          },
          {
            "path": "/documentation/coreml/encrypting-a-model-in-your-app",
            "title": "Encrypting a Model in Your App",
            "type": "article"
          },
          {
            "title": "Compute devices",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Device Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlcomputedevice/cpu(_:)",
                "title": "case cpu(MLCPUComputeDevice)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlcomputedevice/gpu(_:)",
                "title": "case gpu(MLGPUComputeDevice)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlcomputedevice/neuralengine(_:)",
                "title": "case neuralEngine(MLNeuralEngineComputeDevice)",
                "type": "case"
              },
              {
                "title": "Getting All Devices",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlcomputedevice/allcomputedevices",
                "title": "static var allComputeDevices: [MLComputeDevice]",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlcomputedevice",
            "title": "MLComputeDevice",
            "type": "enum"
          },
          {
            "path": "/documentation/coreml/mlcpucomputedevice",
            "title": "MLCPUComputeDevice",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting The Metal Device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlgpucomputedevice/metaldevice",
                "title": "var metalDevice: (any MTLDevice)!",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlgpucomputedevice",
            "title": "MLGPUComputeDevice",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting the Total Core Count",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlneuralenginecomputedevice/totalcorecount",
                "title": "var totalCoreCount: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlneuralenginecomputedevice",
            "title": "MLNeuralEngineComputeDevice",
            "type": "class"
          },
          {
            "path": "/documentation/coreml/mlcomputedeviceprotocol",
            "title": "MLComputeDeviceProtocol",
            "type": "protocol"
          },
          {
            "title": "Compute plan",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlcomputeplan-1w21n/modelstructure",
                "title": "let modelStructure: MLModelStructure",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlcomputeplan-1w21n/deviceusage(for:)-9em1q",
                "title": "func deviceUsage(for: MLModelStructure.NeuralNetwork.Layer) -> MLComputePlan.DeviceUsage?",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlcomputeplan-1w21n/deviceusage(for:)-7cdlm",
                "title": "func deviceUsage(for: MLModelStructure.Program.Operation) -> MLComputePlan.DeviceUsage?",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlcomputeplan-1w21n/estimatedcost(of:)",
                "title": "func estimatedCost(of: MLModelStructure.Program.Operation) -> MLComputePlan.Cost?",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlcomputeplan-1w21n/load(asset:configuration:)",
                "title": "static func load(asset: MLModelAsset, configuration: MLModelConfiguration) async throws -> MLComputePlan",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlcomputeplan-1w21n/load(contentsof:configuration:)",
                "title": "static func load(contentsOf: URL, configuration: MLModelConfiguration) async throws -> MLComputePlan",
                "type": "method"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcomputeplan-1w21n/cost/weight",
                    "title": "let weight: Double",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlcomputeplan-1w21n/cost",
                "title": "MLComputePlan.Cost",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcomputeplan-1w21n/deviceusage/preferred",
                    "title": "let preferred: MLComputeDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlcomputeplan-1w21n/deviceusage/supported",
                    "title": "let supported: [MLComputeDevice]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlcomputeplan-1w21n/deviceusage",
                "title": "MLComputePlan.DeviceUsage",
                "type": "struct"
              }
            ],
            "path": "/documentation/coreml/mlcomputeplan-1w21n",
            "title": "MLComputePlan",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork(_:)",
                "title": "case neuralNetwork(MLModelStructure.NeuralNetwork)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline(_:)",
                "title": "case pipeline(MLModelStructure.Pipeline)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/program(_:)",
                "title": "case program(MLModelStructure.Program)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/unsupported",
                "title": "case unsupported",
                "type": "case"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/load(asset:)",
                "title": "static func load(asset: MLModelAsset) async throws -> MLModelStructure",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/load(contentsof:)",
                "title": "static func load(contentsOf: URL) async throws -> MLModelStructure",
                "type": "method"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layers",
                    "title": "let layers: [MLModelStructure.NeuralNetwork.Layer]",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/inputnames",
                        "title": "let inputNames: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/name",
                        "title": "let name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/outputnames",
                        "title": "let outputNames: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/type",
                        "title": "let type: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer",
                    "title": "MLModelStructure.NeuralNetwork.Layer",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork",
                "title": "MLModelStructure.NeuralNetwork",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline/submodelnames",
                    "title": "let subModelNames: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline/submodels",
                    "title": "let subModels: [MLModelStructure]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline",
                "title": "MLModelStructure.Pipeline",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/functions",
                    "title": "let functions: [String : MLModelStructure.Program.Function]",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/argument/bindings",
                        "title": "let bindings: [MLModelStructure.Program.Binding]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/argument",
                    "title": "MLModelStructure.Program.Argument",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/inputs",
                        "title": "let inputs: [MLModelStructure.Program.NamedValueType]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/operations",
                        "title": "let operations: [MLModelStructure.Program.Operation]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/outputnames",
                        "title": "let outputNames: [String]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block",
                    "title": "MLModelStructure.Program.Block",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function/block",
                        "title": "let block: MLModelStructure.Program.Block",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function/inputs",
                        "title": "let inputs: [MLModelStructure.Program.NamedValueType]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function",
                    "title": "MLModelStructure.Program.Function",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype/name",
                        "title": "let name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype/type",
                        "title": "let type: MLModelStructure.Program.ValueType",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype",
                    "title": "MLModelStructure.Program.NamedValueType",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/blocks",
                        "title": "let blocks: [MLModelStructure.Program.Block]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/inputs",
                        "title": "let inputs: [String : MLModelStructure.Program.Argument]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/operatorname",
                        "title": "let operatorName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/outputs",
                        "title": "let outputs: [MLModelStructure.Program.NamedValueType]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation",
                    "title": "MLModelStructure.Program.Operation",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/value",
                    "title": "MLModelStructure.Program.Value",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/valuetype",
                    "title": "MLModelStructure.Program.ValueType",
                    "type": "struct"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding/name(_:)",
                        "title": "case name(String)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding/value(_:)",
                        "title": "case value(MLModelStructure.Program.Value)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding",
                    "title": "MLModelStructure.Program.Binding",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/program",
                "title": "MLModelStructure.Program",
                "type": "struct"
              }
            ],
            "path": "/documentation/coreml/mlmodelstructure-swift.enum",
            "title": "MLModelStructure",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlcomputepolicy/init(_:)",
                "title": "init(MLComputeUnits)",
                "type": "init"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlcomputepolicy/cpuandgpu",
                "title": "static var cpuAndGPU: MLComputePolicy",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlcomputepolicy/cpuonly",
                "title": "static var cpuOnly: MLComputePolicy",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcomputepolicy/custommirror",
                    "title": "var customMirror: Mirror",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlcomputepolicy/customreflectable-implementations",
                "title": "CustomReflectable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlcomputepolicy/description",
                    "title": "var description: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlcomputepolicy/customstringconvertible-implementations",
                "title": "CustomStringConvertible Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coreml/mlcomputepolicy",
            "title": "MLComputePolicy",
            "type": "struct"
          },
          {
            "path": "/documentation/coreml/withmltensorcomputepolicy(_:_:)-8stx9",
            "title": "func withMLTensorComputePolicy<R>(MLComputePolicy, () async throws -> R) async rethrows -> R",
            "type": "func"
          },
          {
            "path": "/documentation/coreml/withmltensorcomputepolicy(_:_:)-6z33x",
            "title": "func withMLTensorComputePolicy<Result>(MLComputePolicy, () throws -> Result) rethrows -> Result",
            "type": "func"
          },
          {
            "title": "Model state",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlstate/withmultiarray(_:)",
                "title": "func withMultiArray<R>((MLMultiArray) -> R) throws -> R",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlstate/withmultiarray(for:_:)",
                "title": "func withMultiArray<R>(for: String, (MLMultiArray) throws -> R) rethrows -> R",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mlstate",
            "title": "MLState",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlstateconstraint/buffershape-4zb3w",
                "title": "var bufferShape: [Int]",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlstateconstraint/datatype",
                "title": "var dataType: MLMultiArrayDataType",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlstateconstraint",
            "title": "MLStateConstraint",
            "type": "class"
          },
          {
            "title": "Model tensor",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mltensor/*(_:_:)-1ovun",
                "title": "static func * (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/*(_:_:)-3pdvi",
                "title": "static func * (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/*(_:_:)-9w6om",
                "title": "static func * (some MLTensorScalar & Numeric, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/*=(_:_:)",
                "title": "static func *= (inout MLTensor, MLTensor)",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/+(_:_:)-64bxm",
                "title": "static func + (some MLTensorScalar & Numeric, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/+(_:_:)-83w29",
                "title": "static func + (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/+(_:_:)-958w1",
                "title": "static func + (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/+=(_:_:)",
                "title": "static func += (inout MLTensor, MLTensor)",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/-(_:)",
                "title": "static func - (MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/-(_:_:)-65yzi",
                "title": "static func - (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/-(_:_:)-6en2e",
                "title": "static func - (some MLTensorScalar & Numeric, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/-(_:_:)-7jko5",
                "title": "static func - (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/-=(_:_:)",
                "title": "static func -= (inout MLTensor, MLTensor)",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'.!(_:)",
                "title": "static func .! (MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'.!=(_:_:)-90xyy",
                "title": "static func .!= (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'.!=(_:_:)-9i2ns",
                "title": "static func .!= (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'.&(_:_:)",
                "title": "static func .& (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'.==(_:_:)-8ejfu",
                "title": "static func .== (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'.==(_:_:)-9lqot",
                "title": "static func .== (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._(_:_:)-32m7y",
                "title": "static func .> (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._(_:_:)-6llkp",
                "title": "static func .> (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._(_:_:)-7406y",
                "title": "static func .< (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._(_:_:)-7b1mq",
                "title": "static func .< (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._(_:_:)-7z7ks",
                "title": "static func .| (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._(_:_:)-8il7w",
                "title": "static func .^ (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._=(_:_:)-1rc0m",
                "title": "static func .<= (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._=(_:_:)-2zak0",
                "title": "static func .>= (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._=(_:_:)-4y1x4",
                "title": "static func .<= (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/'._=(_:_:)-78naz",
                "title": "static func .>= (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_(_:_:)-11647",
                "title": "static func / (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_(_:_:)-1ipto",
                "title": "static func % (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_(_:_:)-1oy6l",
                "title": "static func % (some MLTensorScalar & Numeric, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_(_:_:)-3fkva",
                "title": "static func / (MLTensor, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_(_:_:)-4w3ly",
                "title": "static func % (MLTensor, some MLTensorScalar & Numeric) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_(_:_:)-78x58",
                "title": "static func / (some MLTensorScalar & Numeric, MLTensor) -> MLTensor",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_=(_:_:)-3xllm",
                "title": "static func %= (inout MLTensor, MLTensor)",
                "type": "op"
              },
              {
                "path": "/documentation/coreml/mltensor/_=(_:_:)-53k1k",
                "title": "static func /= (inout MLTensor, MLTensor)",
                "type": "op"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mltensor/init(_:)-179ei",
                "title": "init<ShapedArray>(ShapedArray)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(_:)-3nevy",
                "title": "init(some Collection<Float>)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(_:)-949ue",
                "title": "init(some Collection<Int32>)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(_:alongaxis:)",
                "title": "init(some Collection<MLTensor>, alongAxis: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(_:scalartype:)-3f5yt",
                "title": "init<Scalar>(Scalar, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(_:scalartype:)-3qoyj",
                "title": "init<Scalar>(some Collection, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(bytesnocopy:shape:scalartype:deallocator:)",
                "title": "init(bytesNoCopy: UnsafeRawBufferPointer, shape: [Int], scalarType: any MLTensorScalar.Type, deallocator: Data.Deallocator)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(concatenating:alongaxis:)",
                "title": "init(concatenating: some Collection<MLTensor>, alongAxis: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(linearspacefrom:through:count:)",
                "title": "init(linearSpaceFrom: Float, through: Float, count: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(linearspacefrom:through:count:scalartype:)",
                "title": "init<Scalar>(linearSpaceFrom: Scalar, through: Scalar, count: Int, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(ones:scalartype:)-6pvyp",
                "title": "init<Scalar>(ones: [Int], scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(ones:scalartype:)-8sg3n",
                "title": "init<Scalar>(ones: [Int], scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(randomnormal:mean:standarddeviation:seed:scalartype:)",
                "title": "init<Scalar>(randomNormal: [Int], mean: Scalar, standardDeviation: Scalar, seed: UInt64?, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(randomuniform:in:seed:scalartype:)-4ktle",
                "title": "init<Scalar>(randomUniform: [Int], in: ClosedRange<Scalar>, seed: UInt64?, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(randomuniform:in:seed:scalartype:)-9sn38",
                "title": "init<Scalar>(randomUniform: [Int], in: Range<Scalar>, seed: UInt64?, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(rangefrom:to:by:)",
                "title": "init(rangeFrom: Float, to: Float, by: Float.Stride)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(rangefrom:to:by:scalartype:)",
                "title": "init<Scalar>(rangeFrom: Scalar, to: Scalar, by: Scalar.Stride, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(repeating:shape:)",
                "title": "init(repeating: Float, shape: [Int])",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(repeating:shape:scalartype:)",
                "title": "init<Scalar>(repeating: Scalar, shape: [Int], scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(shape:data:scalartype:)",
                "title": "init(shape: [Int], data: Data, scalarType: any MLTensorScalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(shape:scalars:)",
                "title": "init(shape: [Int], scalars: some Collection<Float>)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(shape:scalars:scalartype:)",
                "title": "init<Scalar>(shape: [Int], scalars: some Collection, scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(stacking:alongaxis:)",
                "title": "init(stacking: some Collection<MLTensor>, alongAxis: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(unsafeuninitializedshape:scalartype:initializingwith:)",
                "title": "init(unsafeUninitializedShape: [Int], scalarType: any MLTensorScalar.Type, initializingWith: (UnsafeMutableRawBufferPointer) throws -> Void) rethrows",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(zeros:scalartype:)-2afw9",
                "title": "init<Scalar>(zeros: [Int], scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "path": "/documentation/coreml/mltensor/init(zeros:scalartype:)-50e0f",
                "title": "init<Scalar>(zeros: [Int], scalarType: Scalar.Type)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mltensor/isscalar",
                "title": "var isScalar: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mltensor/rank",
                "title": "var rank: Int",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mltensor/scalarcount",
                "title": "var scalarCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mltensor/scalartype",
                "title": "var scalarType: any MLTensorScalar.Type",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mltensor/shape",
                "title": "var shape: [Int]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mltensor/abs()",
                "title": "func abs() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/acos()",
                "title": "func acos() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/acosh()",
                "title": "func acosh() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/all(alongaxes:keeprank:)-2d8f6",
                "title": "func all(alongAxes: Int..., keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/all(alongaxes:keeprank:)-7qb8a",
                "title": "func all(alongAxes: [Int], keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/all(keeprank:)",
                "title": "func all(keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/any(alongaxes:keeprank:)-2ovx0",
                "title": "func any(alongAxes: Int..., keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/any(alongaxes:keeprank:)-8lpdi",
                "title": "func any(alongAxes: [Int], keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/any(keeprank:)",
                "title": "func any(keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/argmax()",
                "title": "func argmax() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/argmax(alongaxis:keeprank:)",
                "title": "func argmax(alongAxis: Int, keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/argmin()",
                "title": "func argmin() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/argmin(alongaxis:keeprank:)",
                "title": "func argmin(alongAxis: Int, keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/argsort(alongaxis:descendingorder:)",
                "title": "func argsort(alongAxis: Int, descendingOrder: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/asin()",
                "title": "func asin() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/asinh()",
                "title": "func asinh() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/atan()",
                "title": "func atan() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/atanh()",
                "title": "func atanh() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/bandpart(lowerbandcount:upperbandcount:)",
                "title": "func bandPart(lowerBandCount: Int, upperBandCount: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/cast(like:)",
                "title": "func cast(like: MLTensor) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/cast(to:)",
                "title": "func cast<Scalar>(to: Scalar.Type) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/ceil()",
                "title": "func ceil() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/clamped(to:)-1dntg",
                "title": "func clamped(to: PartialRangeFrom<Float>) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/clamped(to:)-1objz",
                "title": "func clamped(to: PartialRangeThrough<Float>) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/clamped(to:)-8wqqn",
                "title": "func clamped(to: ClosedRange<Float>) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/concatenated(with:alongaxis:)",
                "title": "func concatenated(with: MLTensor, alongAxis: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/cos()",
                "title": "func cos() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/cosh()",
                "title": "func cosh() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/cumulativeproduct(alongaxis:)",
                "title": "func cumulativeProduct(alongAxis: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/cumulativesum(alongaxis:)",
                "title": "func cumulativeSum(alongAxis: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/exp()",
                "title": "func exp() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/exp2()",
                "title": "func exp2() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/expandingshape(at:)-1daz8",
                "title": "func expandingShape(at: Int...) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/expandingshape(at:)-j7nc",
                "title": "func expandingShape(at: [Int]) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/flattened()",
                "title": "func flattened() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/floor()",
                "title": "func floor() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/gathering(atindices:)",
                "title": "func gathering(atIndices: MLTensor) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/gathering(atindices:alongaxis:)",
                "title": "func gathering(atIndices: MLTensor, alongAxis: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/log()",
                "title": "func log() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/matmul(_:)",
                "title": "func matmul(MLTensor) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/max(alongaxes:keeprank:)-23p32",
                "title": "func max(alongAxes: [Int], keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/max(alongaxes:keeprank:)-m8re",
                "title": "func max(alongAxes: Int..., keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/max(keeprank:)",
                "title": "func max(keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/mean(alongaxes:keeprank:)-2ii3s",
                "title": "func mean(alongAxes: [Int], keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/mean(alongaxes:keeprank:)-67zvf",
                "title": "func mean(alongAxes: Int..., keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/mean(keeprank:)",
                "title": "func mean(keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/min(alongaxes:keeprank:)-5dbgj",
                "title": "func min(alongAxes: Int..., keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/min(alongaxes:keeprank:)-62xw5",
                "title": "func min(alongAxes: [Int], keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/min(keeprank:)",
                "title": "func min(keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/padded(forsizes:mode:)",
                "title": "func padded(forSizes: [(before: Int, after: Int)], mode: MLTensor.PaddingMode) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/padded(forsizes:with:)",
                "title": "func padded(forSizes: [(before: Int, after: Int)], with: Float) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/pow(_:)-1yxrh",
                "title": "func pow(some MLTensorScalar & Numeric) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/pow(_:)-44j8r",
                "title": "func pow(MLTensor) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/product(alongaxes:keeprank:)-157l4",
                "title": "func product(alongAxes: Int..., keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/product(alongaxes:keeprank:)-8k0j4",
                "title": "func product(alongAxes: [Int], keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/product(keeprank:)",
                "title": "func product(keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/reciprocal()",
                "title": "func reciprocal() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/replacing(atindices:with:alongaxis:)",
                "title": "func replacing(atIndices: MLTensor, with: some MLTensorScalar, alongAxis: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/replacing(with:atindices:alongaxis:)",
                "title": "func replacing(with: MLTensor, atIndices: MLTensor, alongAxis: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/replacing(with:where:)-1mnn",
                "title": "func replacing(with: MLTensor, where: MLTensor) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/replacing(with:where:)-8kotd",
                "title": "func replacing(with: some MLTensorScalar, where: MLTensor) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/reshaped(to:)",
                "title": "func reshaped(to: [Int]) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/resized(to:method:)",
                "title": "func resized(to: (newHeight: Int, newWidth: Int), method: MLTensor.ResizeMethod) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/reversed(alongaxes:)-2zg3v",
                "title": "func reversed(alongAxes: Int...) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/reversed(alongaxes:)-5h7to",
                "title": "func reversed(alongAxes: [Int]) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/round()",
                "title": "func round() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/rsqrt()",
                "title": "func rsqrt() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/shapedarray(of:)",
                "title": "func shapedArray<Scalar>(of: Scalar.Type) async -> MLShapedArray<Scalar>",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/sign()",
                "title": "func sign() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/sin()",
                "title": "func sin() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/sinh()",
                "title": "func sinh() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/softmax(alongaxis:)",
                "title": "func softmax(alongAxis: Int) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/split(count:alongaxis:)",
                "title": "func split(count: Int, alongAxis: Int) -> [MLTensor]",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/split(sizes:alongaxis:)",
                "title": "func split(sizes: [Int], alongAxis: Int) -> [MLTensor]",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/squareroot()",
                "title": "func squareRoot() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/squared()",
                "title": "func squared() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/squeezingshape()",
                "title": "func squeezingShape() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/squeezingshape(at:)-4lgo4",
                "title": "func squeezingShape(at: Int...) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/squeezingshape(at:)-8u1e",
                "title": "func squeezingShape(at: [Int]) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/sum(alongaxes:keeprank:)-1c1j6",
                "title": "func sum(alongAxes: Int..., keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/sum(alongaxes:keeprank:)-58tnj",
                "title": "func sum(alongAxes: [Int], keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/sum(keeprank:)",
                "title": "func sum(keepRank: Bool) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/tan()",
                "title": "func tan() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/tanh()",
                "title": "func tanh() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/tiled(multiples:)",
                "title": "func tiled(multiples: [Int]) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/topk(_:)",
                "title": "func topK(Int) -> (values: MLTensor, indices: MLTensor)",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/transposed()",
                "title": "func transposed() -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/transposed(permutation:)-5t35l",
                "title": "func transposed(permutation: [Int]) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/transposed(permutation:)-5w0x9",
                "title": "func transposed(permutation: Int...) -> MLTensor",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensor/unstacked(alongaxis:)",
                "title": "func unstacked(alongAxis: Int) -> [MLTensor]",
                "type": "method"
              },
              {
                "title": "Subscripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mltensor/subscript(_:)",
                "title": "subscript((any MLTensorRangeExpression)?...) -> MLTensor",
                "type": "subscript"
              },
              {
                "path": "/documentation/coreml/mltensor/subscript(_:_:)",
                "title": "subscript((UnboundedRange_) -> (), (any MLTensorRangeExpression)?...) -> MLTensor",
                "type": "subscript"
              },
              {
                "path": "/documentation/coreml/mltensor/subscript(_:_:_:)",
                "title": "subscript((any MLTensorRangeExpression)?, (UnboundedRange_) -> (), (any MLTensorRangeExpression)?...) -> MLTensor",
                "type": "subscript"
              },
              {
                "path": "/documentation/coreml/mltensor/subscript(_:_:_:_:)",
                "title": "subscript((any MLTensorRangeExpression)?, (any MLTensorRangeExpression)?, (UnboundedRange_) -> (), (any MLTensorRangeExpression)?...) -> MLTensor",
                "type": "subscript"
              },
              {
                "path": "/documentation/coreml/mltensor/subscript(_:_:_:_:_:)",
                "title": "subscript((any MLTensorRangeExpression)?, (any MLTensorRangeExpression)?, (any MLTensorRangeExpression)?, (UnboundedRange_) -> (), (any MLTensorRangeExpression)?...) -> MLTensor",
                "type": "subscript"
              },
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltensor/paddingmode/constant(_:)",
                    "title": "case constant(Float)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mltensor/paddingmode/reflection",
                    "title": "case reflection",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mltensor/paddingmode/symmetric",
                    "title": "case symmetric",
                    "type": "case"
                  }
                ],
                "path": "/documentation/coreml/mltensor/paddingmode",
                "title": "MLTensor.PaddingMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltensor/resizemethod/bilinear(aligncorners:)",
                    "title": "case bilinear(alignCorners: Bool)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mltensor/resizemethod/nearestneighbor",
                    "title": "case nearestNeighbor",
                    "type": "case"
                  }
                ],
                "path": "/documentation/coreml/mltensor/resizemethod",
                "title": "MLTensor.ResizeMethod",
                "type": "enum"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mltensor/custommirror",
                    "title": "var customMirror: Mirror",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mltensor/customreflectable-implementations",
                "title": "CustomReflectable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/coreml/mltensor",
            "title": "MLTensor",
            "type": "struct"
          },
          {
            "path": "/documentation/coreml/mltensorscalar",
            "title": "MLTensorScalar",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/fillall",
                "title": "static var fillAll: any MLTensorRangeExpression",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/newaxis",
                "title": "static var newAxis: any MLTensorRangeExpression",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/squeezeaxis",
                "title": "static var squeezeAxis: any MLTensorRangeExpression",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/closedrange(_:stride:)",
                "title": "static func closedRange(ClosedRange<Int>, stride: Int) -> any MLTensorRangeExpression",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/index(_:)",
                "title": "static func index(Int) -> any MLTensorRangeExpression",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/partialrangefrom(_:stride:)",
                "title": "static func partialRangeFrom(PartialRangeFrom<Int>, stride: Int) -> any MLTensorRangeExpression",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/partialrangeupto(_:stride:)-4vz11",
                "title": "static func partialRangeUpTo(PartialRangeUpTo<Int>, stride: Int) -> any MLTensorRangeExpression",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/partialrangeupto(_:stride:)-5ccj1",
                "title": "static func partialRangeUpTo(PartialRangeThrough<Int>, stride: Int) -> any MLTensorRangeExpression",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mltensorrangeexpression/range(_:stride:)",
                "title": "static func range(Range<Int>, stride: Int) -> any MLTensorRangeExpression",
                "type": "method"
              }
            ],
            "path": "/documentation/coreml/mltensorrangeexpression",
            "title": "MLTensorRangeExpression",
            "type": "protocol"
          },
          {
            "path": "/documentation/coreml/pointwisemin(_:_:)",
            "title": "func pointwiseMin(MLTensor, MLTensor) -> MLTensor",
            "type": "func"
          },
          {
            "path": "/documentation/coreml/pointwisemax(_:_:)",
            "title": "func pointwiseMax(MLTensor, MLTensor) -> MLTensor",
            "type": "func"
          },
          {
            "title": "Model structure",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork(_:)",
                "title": "case neuralNetwork(MLModelStructure.NeuralNetwork)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline(_:)",
                "title": "case pipeline(MLModelStructure.Pipeline)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/program(_:)",
                "title": "case program(MLModelStructure.Program)",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/unsupported",
                "title": "case unsupported",
                "type": "case"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/load(asset:)",
                "title": "static func load(asset: MLModelAsset) async throws -> MLModelStructure",
                "type": "method"
              },
              {
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/load(contentsof:)",
                "title": "static func load(contentsOf: URL) async throws -> MLModelStructure",
                "type": "method"
              },
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layers",
                    "title": "let layers: [MLModelStructure.NeuralNetwork.Layer]",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/inputnames",
                        "title": "let inputNames: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/name",
                        "title": "let name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/outputnames",
                        "title": "let outputNames: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/type",
                        "title": "let type: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer",
                    "title": "MLModelStructure.NeuralNetwork.Layer",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork",
                "title": "MLModelStructure.NeuralNetwork",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline/submodelnames",
                    "title": "let subModelNames: [String]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline/submodels",
                    "title": "let subModels: [MLModelStructure]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline",
                "title": "MLModelStructure.Pipeline",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/functions",
                    "title": "let functions: [String : MLModelStructure.Program.Function]",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/argument/bindings",
                        "title": "let bindings: [MLModelStructure.Program.Binding]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/argument",
                    "title": "MLModelStructure.Program.Argument",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/inputs",
                        "title": "let inputs: [MLModelStructure.Program.NamedValueType]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/operations",
                        "title": "let operations: [MLModelStructure.Program.Operation]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/outputnames",
                        "title": "let outputNames: [String]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block",
                    "title": "MLModelStructure.Program.Block",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function/block",
                        "title": "let block: MLModelStructure.Program.Block",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function/inputs",
                        "title": "let inputs: [MLModelStructure.Program.NamedValueType]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function",
                    "title": "MLModelStructure.Program.Function",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype/name",
                        "title": "let name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype/type",
                        "title": "let type: MLModelStructure.Program.ValueType",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype",
                    "title": "MLModelStructure.Program.NamedValueType",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/blocks",
                        "title": "let blocks: [MLModelStructure.Program.Block]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/inputs",
                        "title": "let inputs: [String : MLModelStructure.Program.Argument]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/operatorname",
                        "title": "let operatorName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/outputs",
                        "title": "let outputs: [MLModelStructure.Program.NamedValueType]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation",
                    "title": "MLModelStructure.Program.Operation",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/value",
                    "title": "MLModelStructure.Program.Value",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/valuetype",
                    "title": "MLModelStructure.Program.ValueType",
                    "type": "struct"
                  },
                  {
                    "title": "Enumerations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding/name(_:)",
                        "title": "case name(String)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding/value(_:)",
                        "title": "case value(MLModelStructure.Program.Value)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding",
                    "title": "MLModelStructure.Program.Binding",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/coreml/mlmodelstructure-swift.enum/program",
                "title": "MLModelStructure.Program",
                "type": "struct"
              }
            ],
            "path": "/documentation/coreml/mlmodelstructure-swift.enum",
            "title": "MLModelStructure",
            "type": "enum"
          },
          {
            "title": "Model errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/featuretype",
                "title": "static var featureType: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/parameters",
                "title": "static var parameters: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/modelcollection",
                "title": "static var modelCollection: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/modeldecryptionkeyfetch",
                "title": "static var modelDecryptionKeyFetch: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/modeldecryption",
                "title": "static var modelDecryption: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/update",
                "title": "static var update: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/customlayer",
                "title": "static var customLayer: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/custommodel",
                "title": "static var customModel: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/io",
                "title": "static var io: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/predictioncancelled",
                "title": "static var predictionCancelled: MLModelError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/generic",
                "title": "static var generic: MLModelError.Code",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/featuretype",
                    "title": "case featureType",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/parameters",
                    "title": "case parameters",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modelcollection",
                    "title": "case modelCollection",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modeldecryptionkeyfetch",
                    "title": "case modelDecryptionKeyFetch",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modeldecryption",
                    "title": "case modelDecryption",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/update",
                    "title": "case update",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/customlayer",
                    "title": "case customLayer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/custommodel",
                    "title": "case customModel",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/io",
                    "title": "case io",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/predictioncancelled",
                    "title": "case predictionCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/generic",
                    "title": "case generic",
                    "type": "case"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerrordomain",
                    "title": "let MLModelErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelerror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code",
                "title": "MLModelError.Code",
                "type": "enum"
              },
              {
                "title": "Error Domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerrordomain",
                "title": "let MLModelErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/coreml/mlmodelerror-swift.struct",
            "title": "MLModelError",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/featuretype",
                "title": "case featureType",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/parameters",
                "title": "case parameters",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modelcollection",
                "title": "case modelCollection",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modeldecryptionkeyfetch",
                "title": "case modelDecryptionKeyFetch",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/modeldecryption",
                "title": "case modelDecryption",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/update",
                "title": "case update",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/customlayer",
                "title": "case customLayer",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/custommodel",
                "title": "case customModel",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/io",
                "title": "case io",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/predictioncancelled",
                "title": "case predictionCancelled",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/generic",
                "title": "case generic",
                "type": "case"
              },
              {
                "title": "Error Domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerrordomain",
                "title": "let MLModelErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlmodelerror-swift.struct/code/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              }
            ],
            "path": "/documentation/coreml/mlmodelerror-swift.struct/code",
            "title": "MLModelError.Code",
            "type": "enum"
          },
          {
            "path": "/documentation/coreml/mlmodelerrordomain",
            "title": "let MLModelErrorDomain: String",
            "type": "var"
          },
          {
            "title": "Model deployments",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing a Model Collection",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/endaccessing(identifier:)",
                "title": "class func endAccessing(identifier: String) async throws -> Bool",
                "type": "method"
              },
              {
                "title": "Identifying a Model Collection",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/identifier",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/deploymentid",
                "title": "var deploymentID: String",
                "type": "property"
              },
              {
                "title": "Retreiving Models from a Collection",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/entries",
                "title": "var entries: [String : MLModelCollection.Entry]",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Model",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmodelcollection/entry/modelidentifier",
                    "title": "var modelIdentifier: String",
                    "type": "property"
                  },
                  {
                    "title": "Locating a Compiled Model File",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmodelcollection/entry/modelurl",
                    "title": "var modelURL: URL",
                    "type": "property"
                  },
                  {
                    "title": "Comparing Model Collection Entries",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/coreml/mlmodelcollection/entry/isequal(to:)",
                    "title": "func isEqual(to: MLModelCollection.Entry) -> Bool",
                    "type": "method"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/entry",
                "title": "MLModelCollection.Entry",
                "type": "class"
              },
              {
                "title": "Registering for Model Collection Updates",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/coreml/mlmodelcollection/didchangenotification",
                "title": "class let didChangeNotification: NSNotification.Name",
                "type": "property"
              }
            ],
            "deprecated": true,
            "path": "/documentation/coreml/mlmodelcollection",
            "title": "MLModelCollection",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork(_:)",
                    "title": "case neuralNetwork(MLModelStructure.NeuralNetwork)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline(_:)",
                    "title": "case pipeline(MLModelStructure.Pipeline)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program(_:)",
                    "title": "case program(MLModelStructure.Program)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/load(asset:)",
                    "title": "static func load(asset: MLModelAsset) async throws -> MLModelStructure",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/load(contentsof:)",
                    "title": "static func load(contentsOf: URL) async throws -> MLModelStructure",
                    "type": "method"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layers",
                        "title": "let layers: [MLModelStructure.NeuralNetwork.Layer]",
                        "type": "property"
                      },
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/inputnames",
                            "title": "let inputNames: [String]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/name",
                            "title": "let name: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/outputnames",
                            "title": "let outputNames: [String]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer/type",
                            "title": "let type: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork/layer",
                        "title": "MLModelStructure.NeuralNetwork.Layer",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/neuralnetwork",
                    "title": "MLModelStructure.NeuralNetwork",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline/submodelnames",
                        "title": "let subModelNames: [String]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline/submodels",
                        "title": "let subModels: [MLModelStructure]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/pipeline",
                    "title": "MLModelStructure.Pipeline",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/functions",
                        "title": "let functions: [String : MLModelStructure.Program.Function]",
                        "type": "property"
                      },
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/argument/bindings",
                            "title": "let bindings: [MLModelStructure.Program.Binding]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/argument",
                        "title": "MLModelStructure.Program.Argument",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/inputs",
                            "title": "let inputs: [MLModelStructure.Program.NamedValueType]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/operations",
                            "title": "let operations: [MLModelStructure.Program.Operation]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block/outputnames",
                            "title": "let outputNames: [String]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/block",
                        "title": "MLModelStructure.Program.Block",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function/block",
                            "title": "let block: MLModelStructure.Program.Block",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function/inputs",
                            "title": "let inputs: [MLModelStructure.Program.NamedValueType]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/function",
                        "title": "MLModelStructure.Program.Function",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype/name",
                            "title": "let name: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype/type",
                            "title": "let type: MLModelStructure.Program.ValueType",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/namedvaluetype",
                        "title": "MLModelStructure.Program.NamedValueType",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/blocks",
                            "title": "let blocks: [MLModelStructure.Program.Block]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/inputs",
                            "title": "let inputs: [String : MLModelStructure.Program.Argument]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/operatorname",
                            "title": "let operatorName: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation/outputs",
                            "title": "let outputs: [MLModelStructure.Program.NamedValueType]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/operation",
                        "title": "MLModelStructure.Program.Operation",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/value",
                        "title": "MLModelStructure.Program.Value",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/valuetype",
                        "title": "MLModelStructure.Program.ValueType",
                        "type": "struct"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding/name(_:)",
                            "title": "case name(String)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding/value(_:)",
                            "title": "case value(MLModelStructure.Program.Value)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/coreml/mlmodelstructure-swift.enum/program/binding",
                        "title": "MLModelStructure.Program.Binding",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/coreml/mlmodelstructure-swift.enum/program",
                    "title": "MLModelStructure.Program",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/coreml/mlmodelstructure-swift.enum",
                "title": "MLModelStructure",
                "type": "enum"
              }
            ],
            "path": "/documentation/coreml/coreml-enumerations",
            "title": "CoreML Enumerations",
            "type": "collection"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/coreml/mlshapedarraybufferlayout/firstmajorcontiguous",
                "title": "case firstMajorContiguous",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlshapedarraybufferlayout/lastmajorcontiguous",
                "title": "case lastMajorContiguous",
                "type": "case"
              },
              {
                "path": "/documentation/coreml/mlshapedarraybufferlayout/strides(_:)",
                "title": "case strides([Int])",
                "type": "case"
              }
            ],
            "path": "/documentation/coreml/mlshapedarraybufferlayout",
            "title": "MLShapedArrayBufferLayout",
            "type": "enum"
          }
        ],
        "path": "/documentation/coreml",
        "title": "Core ML",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
