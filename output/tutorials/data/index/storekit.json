{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "In-App Purchase",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "In-App Purchase merchandising",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Merchandising In-App Purchases and subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/backyard-birds-sample",
                    "title": "Backyard Birds: Building an app with SwiftData and widgets",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Styling product views",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Styling subscription store controls",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring subscription store controls",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Creating custom subscription store control styles",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Declaring the structure of a subscription store",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Styling subscription option groups",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Adding backgrounds to subscription stores",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring accessory buttons",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring the subscription store policies",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Selecting subscription offers",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring purchase options and product descriptions",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Responding to store events",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Loading StoreKit data",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Refunding a request",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/storekit/storekit-views",
                "title": "StoreKit views",
                "type": "collection"
              },
              {
                "title": "Product and subscription information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/implementing-a-store-in-your-app-using-the-storekit-api",
                "title": "Implementing a store in your app using the StoreKit API",
                "type": "sampleCode"
              },
              {
                "title": "Purchase requests and results",
                "type": "groupMarker"
              },
              {
                "title": "Transaction history and entitlements",
                "type": "groupMarker"
              },
              {
                "title": "JWS verification",
                "type": "groupMarker"
              },
              {
                "title": "Subscription status and renewal information",
                "type": "groupMarker"
              },
              {
                "title": "Subscription offers and offer codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/supporting-win-back-offers-in-your-app",
                "title": "Supporting win-back offers in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/merchandising-win-back-offers-in-your-app",
                "title": "Merchandising win-back offers in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/supporting-subscription-offer-codes-in-your-app",
                "title": "Supporting subscription offer codes in your app",
                "type": "article"
              },
              {
                "title": "Promoted In-App Purchases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/supporting-promoted-in-app-purchases-in-your-app",
                "title": "Supporting promoted In-App Purchases in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-promoted-in-app-purchases",
                "title": "Testing promoted In-App Purchases",
                "type": "article"
              },
              {
                "title": "App Store interactions",
                "type": "groupMarker"
              },
              {
                "title": "Storefront information",
                "type": "groupMarker"
              },
              {
                "title": "In-App Purchase Testing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/testing-at-all-stages-of-development-with-xcode-and-the-sandbox",
                "title": "Testing at all stages of development with Xcode and the sandbox",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Product identifiers and requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-fetching-product-identifiers",
                    "title": "Testing fetching product identifiers",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-invalid-product-identifier-handling",
                    "title": "Testing invalid product identifier handling",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-product-request",
                    "title": "Testing a product request",
                    "type": "article"
                  },
                  {
                    "title": "Payment transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-purchases-made-outside-your-app",
                    "title": "Testing purchases made outside your app",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-win-back-offers-in-the-sandbox-environment",
                    "title": "Testing win-back offers in the sandbox environment",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-an-interrupted-purchase",
                    "title": "Testing an interrupted purchase",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-failing-subscription-renewals-and-in-app-purchases",
                    "title": "Testing failing subscription renewals and In-App Purchases",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-payment-request",
                    "title": "Testing a payment request",
                    "type": "article"
                  },
                  {
                    "title": "Subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-an-auto-renewable-subscription",
                    "title": "Testing an auto-renewable subscription",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-resubscribing-from-the-subscriptions-page",
                    "title": "Testing resubscribing from the subscriptions page",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-disabling-auto-renew",
                    "title": "Testing disabling auto-renew",
                    "type": "article"
                  },
                  {
                    "title": "Family Sharing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-family-sharing",
                    "title": "Testing Family Sharing",
                    "type": "article"
                  },
                  {
                    "title": "Refunds",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-refund-requests",
                    "title": "Testing refund requests",
                    "type": "article"
                  },
                  {
                    "title": "Server notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-app-store-server-notifications",
                    "title": "Testing App Store server notifications",
                    "type": "article"
                  },
                  {
                    "title": "Transaction observer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-transaction-observer-code",
                    "title": "Testing transaction observer code",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-successful-transaction",
                    "title": "Testing a successful transaction",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-complete-transactions",
                    "title": "Testing complete transactions",
                    "type": "article"
                  }
                ],
                "path": "/documentation/storekit/testing-in-app-purchases-with-sandbox",
                "title": "Testing In-App Purchases with sandbox",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-refund-requests",
                "title": "Testing refund requests",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-win-back-offers-in-xcode",
                "title": "Testing win-back offers in Xcode",
                "type": "article"
              },
              {
                "title": "Advanced Commerce API interactions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/sending-advanced-commerce-api-requests-from-your-app",
                "title": "Sending Advanced Commerce API requests from your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/generating-jws-to-sign-app-store-requests",
                "title": "Generating JWS to sign App Store requests",
                "type": "article"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/choosing-a-storekit-api-for-in-app-purchases",
                "title": "Choosing a StoreKit API for In-App Purchases",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/setting-up-the-transaction-observer-for-the-payment-queue",
                    "title": "Setting up the transaction observer for the payment queue",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/offering-completing-and-restoring-in-app-purchases",
                    "title": "Offering, completing, and restoring in-app purchases",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Product information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/loading-in-app-product-identifiers",
                    "title": "Loading in-app product identifiers",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/fetching-product-information-from-the-app-store",
                    "title": "Fetching product information from the App Store",
                    "type": "article"
                  },
                  {
                    "title": "Storefronts",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Purchases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/requesting-a-payment-from-the-app-store",
                    "title": "Requesting a payment from the App Store",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/processing-a-transaction",
                    "title": "Processing a transaction",
                    "type": "article"
                  },
                  {
                    "title": "Purchase validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/choosing-a-receipt-validation-technique",
                    "title": "Choosing a receipt validation technique",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/validating-receipts-with-the-app-store",
                    "title": "Validating receipts with the App Store",
                    "type": "article"
                  },
                  {
                    "title": "Content delivery",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/unlocking-purchased-content",
                    "title": "Unlocking purchased content",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/persisting-a-purchase",
                    "title": "Persisting a purchase",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/finishing-a-transaction",
                    "title": "Finishing a transaction",
                    "type": "article"
                  },
                  {
                    "title": "Refunds",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/handling-refund-notifications",
                    "title": "Handling refund notifications",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-refund-requests",
                    "title": "Testing refund requests",
                    "type": "article"
                  },
                  {
                    "title": "Providing access to previously purchased products",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/restoring-purchased-products",
                    "title": "Restoring purchased products",
                    "type": "article"
                  },
                  {
                    "title": "Family Sharing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/supporting-family-sharing-in-your-app",
                    "title": "Supporting Family Sharing in your app",
                    "type": "article"
                  },
                  {
                    "title": "Subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Essentials",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/handling-subscriptions-billing",
                        "title": "Handling Subscriptions Billing",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/enabling-app-store-server-notifications",
                        "title": "Enabling App Store Server Notifications",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/offering-a-subscription-across-multiple-apps",
                        "title": "Offering a Subscription Across Multiple Apps",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/reducing-involuntary-subscriber-churn",
                        "title": "Reducing Involuntary Subscriber Churn",
                        "type": "article"
                      },
                      {
                        "title": "Introductory offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/implementing-introductory-offers-in-your-app",
                        "title": "Implementing introductory offers in your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-introductory-offers",
                        "title": "Testing introductory offers",
                        "type": "article"
                      },
                      {
                        "title": "Promotional offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/setting-up-promotional-offers",
                        "title": "Setting up promotional offers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/implementing-promotional-offers-in-your-app",
                        "title": "Implementing promotional offers in your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/generating-a-signature-for-promotional-offers",
                        "title": "Generating a signature for promotional offers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/generating-a-promotional-offer-signature-on-the-server",
                        "title": "Generating a Promotional Offer Signature on the Server",
                        "type": "sampleCode"
                      },
                      {
                        "title": "Subscription offer codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/implementing-offer-codes-in-your-app",
                        "title": "Implementing offer codes in your app",
                        "type": "article"
                      },
                      {
                        "title": "Subscription service entitlement",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/determining-service-entitlement-on-the-server",
                        "title": "Determining service entitlement on the server",
                        "type": "sampleCode"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptions-and-offers",
                    "title": "Subscriptions and offers",
                    "type": "collection"
                  },
                  {
                    "title": "Promotions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/promoting-in-app-purchases",
                    "title": "Promoting In-App Purchases",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-promoted-in-app-purchases",
                    "title": "Testing promoted In-App Purchases",
                    "type": "article"
                  },
                  {
                    "title": "Testing In-App Purchases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-at-all-stages-of-development-with-xcode-and-the-sandbox",
                    "title": "Testing at all stages of development with Xcode and the sandbox",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/xcode/setting-up-storekit-testing-in-xcode",
                    "title": "Setting up StoreKit Testing in Xcode",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-in-app-purchases-in-xcode",
                    "title": "Testing In-App Purchases in Xcode",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Product identifiers and requests",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-fetching-product-identifiers",
                        "title": "Testing fetching product identifiers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-invalid-product-identifier-handling",
                        "title": "Testing invalid product identifier handling",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-product-request",
                        "title": "Testing a product request",
                        "type": "article"
                      },
                      {
                        "title": "Payment transactions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-purchases-made-outside-your-app",
                        "title": "Testing purchases made outside your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-win-back-offers-in-the-sandbox-environment",
                        "title": "Testing win-back offers in the sandbox environment",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-an-interrupted-purchase",
                        "title": "Testing an interrupted purchase",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-failing-subscription-renewals-and-in-app-purchases",
                        "title": "Testing failing subscription renewals and In-App Purchases",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-payment-request",
                        "title": "Testing a payment request",
                        "type": "article"
                      },
                      {
                        "title": "Subscriptions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-an-auto-renewable-subscription",
                        "title": "Testing an auto-renewable subscription",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-resubscribing-from-the-subscriptions-page",
                        "title": "Testing resubscribing from the subscriptions page",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-disabling-auto-renew",
                        "title": "Testing disabling auto-renew",
                        "type": "article"
                      },
                      {
                        "title": "Family Sharing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-family-sharing",
                        "title": "Testing Family Sharing",
                        "type": "article"
                      },
                      {
                        "title": "Refunds",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-refund-requests",
                        "title": "Testing refund requests",
                        "type": "article"
                      },
                      {
                        "title": "Server notifications",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-app-store-server-notifications",
                        "title": "Testing App Store server notifications",
                        "type": "article"
                      },
                      {
                        "title": "Transaction observer",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-transaction-observer-code",
                        "title": "Testing transaction observer code",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-successful-transaction",
                        "title": "Testing a successful transaction",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-complete-transactions",
                        "title": "Testing complete transactions",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/testing-in-app-purchases-with-sandbox",
                    "title": "Testing In-App Purchases with sandbox",
                    "type": "article"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/handling-errors",
                    "title": "Handling errors",
                    "type": "article"
                  }
                ],
                "path": "/documentation/storekit/original-api-for-in-app-purchase",
                "title": "Original API for In-App Purchase",
                "type": "collection"
              }
            ],
            "path": "/documentation/storekit/in-app-purchase",
            "title": "In-App Purchase",
            "type": "collection"
          },
          {
            "title": "App transaction",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/supporting-business-model-changes-by-using-the-app-transaction",
            "title": "Supporting business model changes by using the app transaction",
            "type": "article"
          },
          {
            "title": "Messages",
            "type": "groupMarker"
          },
          {
            "title": "Reviews",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/requesting-app-store-reviews",
            "title": "Requesting App Store reviews",
            "type": "sampleCode"
          },
          {
            "title": "Recommendations",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/offering-media-for-sale-in-your-app",
            "title": "Offering media for sale in your app",
            "type": "sampleCode"
          },
          {
            "title": "Ad network attribution",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Ad impressions and installation validations",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/adattributionkit/adattributionkit-skadnetwork-interoperability",
                "title": "Understanding AdAttributionKit and SKAdNetwork interoperability",
                "type": "article"
              },
              {
                "title": "Error handling",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/storekit/ad-network-attribution",
            "title": "Ad network attribution",
            "type": "collection"
          },
          {
            "title": "External Purchase",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Offering external purchases",
                "type": "groupMarker"
              },
              {
                "title": "Offering external purchases with custom links",
                "type": "groupMarker"
              },
              {
                "title": "Offering external purchase links",
                "type": "groupMarker"
              },
              {
                "title": "Managing external purchase tokens",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/receiving-and-decoding-external-purchase-tokens",
                "title": "Receiving and decoding external purchase tokens",
                "type": "article"
              }
            ],
            "path": "/documentation/storekit/external-purchase",
            "title": "External Purchase",
            "type": "collection"
          },
          {
            "title": "External link account",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "External accounts",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/storekit/external-link-account",
            "title": "External link account",
            "type": "collection"
          },
          {
            "title": "Payment method binding",
            "type": "groupMarker"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/storekit",
        "title": "StoreKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "In-App Purchase",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "In-App Purchase merchandising",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Merchandising In-App Purchases and subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/backyard-birds-sample",
                    "title": "Backyard Birds: Building an app with SwiftData and widgets",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Styling product views",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Styling subscription store controls",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring subscription store controls",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Creating custom subscription store control styles",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Declaring the structure of a subscription store",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Styling subscription option groups",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Adding backgrounds to subscription stores",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring accessory buttons",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring the subscription store policies",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Selecting subscription offers",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Configuring purchase options and product descriptions",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Responding to store events",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Loading StoreKit data",
                    "type": "groupMarker"
                  },
                  {
                    "title": "Refunding a request",
                    "type": "groupMarker"
                  }
                ],
                "path": "/documentation/storekit/storekit-views",
                "title": "StoreKit views",
                "type": "collection"
              },
              {
                "title": "Product and subscription information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/implementing-a-store-in-your-app-using-the-storekit-api",
                "title": "Implementing a store in your app using the StoreKit API",
                "type": "sampleCode"
              },
              {
                "title": "Purchase requests and results",
                "type": "groupMarker"
              },
              {
                "title": "Transaction history and entitlements",
                "type": "groupMarker"
              },
              {
                "title": "JWS verification",
                "type": "groupMarker"
              },
              {
                "title": "Subscription status and renewal information",
                "type": "groupMarker"
              },
              {
                "title": "Subscription offers and offer codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/supporting-win-back-offers-in-your-app",
                "title": "Supporting win-back offers in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/merchandising-win-back-offers-in-your-app",
                "title": "Merchandising win-back offers in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/supporting-subscription-offer-codes-in-your-app",
                "title": "Supporting subscription offer codes in your app",
                "type": "article"
              },
              {
                "title": "Promoted In-App Purchases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/supporting-promoted-in-app-purchases-in-your-app",
                "title": "Supporting promoted In-App Purchases in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-promoted-in-app-purchases",
                "title": "Testing promoted In-App Purchases",
                "type": "article"
              },
              {
                "title": "App Store interactions",
                "type": "groupMarker"
              },
              {
                "title": "Storefront information",
                "type": "groupMarker"
              },
              {
                "title": "In-App Purchase Testing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/testing-at-all-stages-of-development-with-xcode-and-the-sandbox",
                "title": "Testing at all stages of development with Xcode and the sandbox",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Product identifiers and requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-fetching-product-identifiers",
                    "title": "Testing fetching product identifiers",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-invalid-product-identifier-handling",
                    "title": "Testing invalid product identifier handling",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-product-request",
                    "title": "Testing a product request",
                    "type": "article"
                  },
                  {
                    "title": "Payment transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-purchases-made-outside-your-app",
                    "title": "Testing purchases made outside your app",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-win-back-offers-in-the-sandbox-environment",
                    "title": "Testing win-back offers in the sandbox environment",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-an-interrupted-purchase",
                    "title": "Testing an interrupted purchase",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-failing-subscription-renewals-and-in-app-purchases",
                    "title": "Testing failing subscription renewals and In-App Purchases",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-payment-request",
                    "title": "Testing a payment request",
                    "type": "article"
                  },
                  {
                    "title": "Subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-an-auto-renewable-subscription",
                    "title": "Testing an auto-renewable subscription",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-resubscribing-from-the-subscriptions-page",
                    "title": "Testing resubscribing from the subscriptions page",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-disabling-auto-renew",
                    "title": "Testing disabling auto-renew",
                    "type": "article"
                  },
                  {
                    "title": "Family Sharing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-family-sharing",
                    "title": "Testing Family Sharing",
                    "type": "article"
                  },
                  {
                    "title": "Refunds",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-refund-requests",
                    "title": "Testing refund requests",
                    "type": "article"
                  },
                  {
                    "title": "Server notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-app-store-server-notifications",
                    "title": "Testing App Store server notifications",
                    "type": "article"
                  },
                  {
                    "title": "Transaction observer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-transaction-observer-code",
                    "title": "Testing transaction observer code",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-successful-transaction",
                    "title": "Testing a successful transaction",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-complete-transactions",
                    "title": "Testing complete transactions",
                    "type": "article"
                  }
                ],
                "path": "/documentation/storekit/testing-in-app-purchases-with-sandbox",
                "title": "Testing In-App Purchases with sandbox",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-refund-requests",
                "title": "Testing refund requests",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-win-back-offers-in-xcode",
                "title": "Testing win-back offers in Xcode",
                "type": "article"
              },
              {
                "title": "Advanced Commerce API interactions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/sending-advanced-commerce-api-requests-from-your-app",
                "title": "Sending Advanced Commerce API requests from your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/generating-jws-to-sign-app-store-requests",
                "title": "Generating JWS to sign App Store requests",
                "type": "article"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/choosing-a-storekit-api-for-in-app-purchases",
                "title": "Choosing a StoreKit API for In-App Purchases",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/setting-up-the-transaction-observer-for-the-payment-queue",
                    "title": "Setting up the transaction observer for the payment queue",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/offering-completing-and-restoring-in-app-purchases",
                    "title": "Offering, completing, and restoring in-app purchases",
                    "type": "sampleCode"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Whether the User Can Make Payments",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/canmakepayments()",
                        "title": "+ canMakePayments",
                        "type": "method"
                      },
                      {
                        "title": "Determining Store Content",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/storefront",
                        "title": "storefront",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Queue",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/default()",
                        "title": "+ defaultQueue",
                        "type": "method"
                      },
                      {
                        "title": "Adding, Getting, and Removing Observers",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/add(_:)-5ciz2",
                        "title": "- addTransactionObserver:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/transactionobservers",
                        "title": "transactionObservers",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/remove(_:)",
                        "title": "- removeTransactionObserver:",
                        "type": "method"
                      },
                      {
                        "title": "Managing Transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/delegate",
                        "title": "delegate",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/transactions",
                        "title": "transactions",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/add(_:)-4vct1",
                        "title": "- addPayment:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/finishtransaction(_:)",
                        "title": "- finishTransaction:",
                        "type": "method"
                      },
                      {
                        "title": "Restoring Purchases",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/restorecompletedtransactions()",
                        "title": "- restoreCompletedTransactions",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/restorecompletedtransactions(withapplicationusername:)",
                        "title": "- restoreCompletedTransactionsWithApplicationUsername:",
                        "type": "method"
                      },
                      {
                        "title": "Showing Price Consent",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/showpriceconsentifneeded()",
                        "title": "- showPriceConsentIfNeeded",
                        "type": "method"
                      },
                      {
                        "title": "Redeeming Codes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/presentcoderedemptionsheet()",
                        "title": "- presentCodeRedemptionSheet",
                        "type": "method"
                      },
                      {
                        "title": "Downloading Content",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/start(_:)",
                        "title": "- startDownloads:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/cancel(_:)",
                        "title": "- cancelDownloads:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/pause(_:)",
                        "title": "- pauseDownloads:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/resume(_:)",
                        "title": "- resumeDownloads:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymentqueue",
                    "title": "SKPaymentQueue",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Handling transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:updatedtransactions:)",
                        "title": "- paymentQueue:updatedTransactions:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:removedtransactions:)",
                        "title": "- paymentQueue:removedTransactions:",
                        "type": "method"
                      },
                      {
                        "title": "Restoring transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:restorecompletedtransactionsfailedwitherror:)",
                        "title": "- paymentQueue:restoreCompletedTransactionsFailedWithError:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueuerestorecompletedtransactionsfinished(_:)",
                        "title": "- paymentQueueRestoreCompletedTransactionsFinished:",
                        "type": "method"
                      },
                      {
                        "title": "Handling promoted in-app purchases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/promoting-in-app-purchases",
                        "title": "Promoting In-App Purchases",
                        "type": "article"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:shouldaddstorepayment:for:)",
                        "title": "- paymentQueue:shouldAddStorePayment:forProduct:",
                        "type": "method"
                      },
                      {
                        "title": "Revoking entitlements",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:didrevokeentitlementsforproductidentifiers:)",
                        "title": "- paymentQueue:didRevokeEntitlementsForProductIdentifiers:",
                        "type": "method"
                      },
                      {
                        "title": "Changing the storefront",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueuedidchangestorefront(_:)",
                        "title": "- paymentQueueDidChangeStorefront:",
                        "type": "method"
                      },
                      {
                        "title": "Handling download actions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:updateddownloads:)",
                        "title": "- paymentQueue:updatedDownloads:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransactionobserver",
                    "title": "SKPaymentTransactionObserver",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Continuing transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueuedelegate/paymentqueue(_:shouldcontinue:in:)",
                        "title": "- paymentQueue:shouldContinueTransaction:inStorefront:",
                        "type": "method"
                      },
                      {
                        "title": "Showing price consent",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueuedelegate/paymentqueueshouldshowpriceconsent(_:)",
                        "title": "- paymentQueueShouldShowPriceConsent:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymentqueuedelegate",
                    "title": "SKPaymentQueueDelegate",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Controlling the Request",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/start()",
                        "title": "- start",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the Delegate",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/delegate",
                        "title": "delegate",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Completing Requests",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/requestdidfinish(_:)",
                            "title": "- requestDidFinish:",
                            "type": "method"
                          },
                          {
                            "title": "Handling Errors",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/request(_:didfailwitherror:)",
                            "title": "- request:didFailWithError:",
                            "type": "method"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequestdelegate",
                        "title": "SKRequestDelegate",
                        "type": "protocol"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skrequest",
                    "title": "SKRequest",
                    "type": "class"
                  },
                  {
                    "title": "Product information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/loading-in-app-product-identifiers",
                    "title": "Loading in-app product identifiers",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/fetching-product-information-from-the-app-store",
                    "title": "Fetching product information from the App Store",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing a Products Request",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsrequest/init(productidentifiers:)",
                        "title": "- initWithProductIdentifiers:",
                        "type": "method"
                      },
                      {
                        "title": "Setting the Delegate",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsrequest/delegate",
                        "title": "delegate",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Receiving the Response",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductsrequestdelegate/productsrequest(_:didreceive:)",
                            "title": "- productsRequest:didReceiveResponse:",
                            "type": "method"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsrequestdelegate",
                        "title": "SKProductsRequestDelegate",
                        "type": "protocol"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproductsrequest",
                    "title": "SKProductsRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Response Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsresponse/products",
                        "title": "products",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsresponse/invalidproductidentifiers",
                        "title": "invalidProductIdentifiers",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproductsresponse",
                    "title": "SKProductsResponse",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Product Identifier",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/productidentifier",
                        "title": "productIdentifier",
                        "type": "property"
                      },
                      {
                        "title": "Getting Product Attributes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/localizeddescription",
                        "title": "localizedDescription",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/localizedtitle",
                        "title": "localizedTitle",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/contentversion",
                        "title": "contentVersion",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/isfamilyshareable",
                        "title": "isFamilyShareable",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/contentlengths",
                        "title": "contentLengths",
                        "type": "property"
                      },
                      {
                        "title": "Getting Pricing Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/price",
                        "title": "price",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/pricelocale",
                        "title": "priceLocale",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/introductoryprice",
                        "title": "introductoryPrice",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/discounts",
                        "title": "discounts",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/identifier",
                            "title": "identifier",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.property",
                            "title": "type",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Types of Offers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/introductory",
                                "title": "SKProductDiscountTypeIntroductory",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/subscription",
                                "title": "SKProductDiscountTypeSubscription",
                                "type": "case"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.enum",
                            "title": "SKProductDiscountType",
                            "type": "enum"
                          },
                          {
                            "title": "Getting Price and Payment Mode",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/price",
                            "title": "price",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/pricelocale",
                            "title": "priceLocale",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.property",
                            "title": "paymentMode",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Discount Price Payment Modes",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payasyougo",
                                "title": "SKProductDiscountPaymentModePayAsYouGo",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payupfront",
                                "title": "SKProductDiscountPaymentModePayUpFront",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/freetrial",
                                "title": "SKProductDiscountPaymentModeFreeTrial",
                                "type": "case"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum",
                            "title": "SKProductDiscountPaymentMode",
                            "type": "enum"
                          },
                          {
                            "title": "Getting the Discount Duration",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/numberofperiods",
                            "title": "numberOfPeriods",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/subscriptionperiod",
                            "title": "subscriptionPeriod",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductdiscount",
                        "title": "SKProductDiscount",
                        "type": "class"
                      },
                      {
                        "title": "Getting Subscription Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/subscriptiongroupidentifier",
                        "title": "subscriptionGroupIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/subscriptionperiod",
                        "title": "subscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Subscription Period Details",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductsubscriptionperiod/numberofunits",
                            "title": "numberOfUnits",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductsubscriptionperiod/unit",
                            "title": "unit",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Period Units",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/day",
                                "title": "SKProductPeriodUnitDay",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/month",
                                "title": "SKProductPeriodUnitMonth",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/week",
                                "title": "SKProductPeriodUnitWeek",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/year",
                                "title": "SKProductPeriodUnitYear",
                                "type": "case"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit",
                            "title": "SKProductPeriodUnit",
                            "type": "enum"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsubscriptionperiod",
                        "title": "SKProductSubscriptionPeriod",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Period Units",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/day",
                            "title": "SKProductPeriodUnitDay",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/month",
                            "title": "SKProductPeriodUnitMonth",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/week",
                            "title": "SKProductPeriodUnitWeek",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/year",
                            "title": "SKProductPeriodUnitYear",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/periodunit",
                        "title": "SKProductPeriodUnit",
                        "type": "enum"
                      },
                      {
                        "title": "Getting Downloadable Content Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/isdownloadable",
                        "title": "isDownloadable",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/downloadcontentlengths",
                        "title": "downloadContentLengths",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/downloadcontentversion",
                        "title": "downloadContentVersion",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/downloadable",
                        "title": "downloadable",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproduct",
                    "title": "SKProduct",
                    "type": "class"
                  },
                  {
                    "title": "Storefronts",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifying the Storefront",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skstorefront/countrycode",
                        "title": "countryCode",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skstorefront/identifier",
                        "title": "identifier",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skstorefront",
                    "title": "SKStorefront",
                    "type": "class"
                  },
                  {
                    "title": "Purchases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/requesting-a-payment-from-the-app-store",
                    "title": "Requesting a payment from the App Store",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/processing-a-transaction",
                    "title": "Processing a transaction",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Payments",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/init(product:)",
                        "title": "+ paymentWithProduct:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/paymentwithproductidentifier:",
                        "title": "+ paymentWithProductIdentifier:",
                        "type": "method"
                      },
                      {
                        "title": "Getting Payment Details",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/productidentifier",
                        "title": "productIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/quantity",
                        "title": "quantity",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/requestdata",
                        "title": "requestData",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/applicationusername",
                        "title": "applicationUsername",
                        "type": "property"
                      },
                      {
                        "title": "Simulating Purchases for Testing",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/simulatesasktobuyinsandbox",
                        "title": "simulatesAskToBuyInSandbox",
                        "type": "property"
                      },
                      {
                        "title": "Getting Discount Details",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/paymentdiscount",
                        "title": "paymentDiscount",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Payment Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/init(identifier:keyidentifier:nonce:signature:timestamp:)",
                            "title": "- initWithIdentifier:keyIdentifier:nonce:signature:timestamp:",
                            "type": "method"
                          },
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/identifier",
                            "title": "identifier",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/keyidentifier",
                            "title": "keyIdentifier",
                            "type": "property"
                          },
                          {
                            "title": "Validating the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/nonce",
                            "title": "nonce",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/signature",
                            "title": "signature",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/timestamp",
                            "title": "timestamp",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentdiscount",
                        "title": "SKPaymentDiscount",
                        "type": "class"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpayment",
                    "title": "SKPayment",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting and Setting Attributes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/productidentifier",
                        "title": "productIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/quantity",
                        "title": "quantity",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/requestdata",
                        "title": "requestData",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/applicationusername",
                        "title": "applicationUsername",
                        "type": "property"
                      },
                      {
                        "title": "Simulating Buy for Testing",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/simulatesasktobuyinsandbox",
                        "title": "simulatesAskToBuyInSandbox",
                        "type": "property"
                      },
                      {
                        "title": "Getting and Setting Discount Details",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/paymentdiscount",
                        "title": "paymentDiscount",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skmutablepayment",
                    "title": "SKMutablePayment",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Transaction Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/payment",
                        "title": "payment",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionidentifier",
                        "title": "transactionIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactiondate",
                        "title": "transactionDate",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/original",
                        "title": "originalTransaction",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/error",
                        "title": "error",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionreceipt",
                        "title": "transactionReceipt",
                        "type": "property"
                      },
                      {
                        "title": "Getting Downloads",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/downloads",
                        "title": "downloads",
                        "type": "property"
                      },
                      {
                        "title": "Getting Transaction State",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionstate",
                        "title": "transactionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Constants",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchasing",
                            "title": "SKPaymentTransactionStatePurchasing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchased",
                            "title": "SKPaymentTransactionStatePurchased",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/failed",
                            "title": "SKPaymentTransactionStateFailed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/restored",
                            "title": "SKPaymentTransactionStateRestored",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/deferred",
                            "title": "SKPaymentTransactionStateDeferred",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionstate",
                        "title": "SKPaymentTransactionState",
                        "type": "enum"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransaction",
                    "title": "SKPaymentTransaction",
                    "type": "class"
                  },
                  {
                    "title": "Purchase validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/choosing-a-receipt-validation-technique",
                    "title": "Choosing a receipt validation technique",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/validating-receipts-with-the-app-store",
                    "title": "Validating receipts with the App Store",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Receipt Refresh Requests",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/init(receiptproperties:)",
                        "title": "- initWithReceiptProperties:",
                        "type": "method"
                      },
                      {
                        "title": "Receipt Properties and Keys",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/receiptproperties",
                        "title": "receiptProperties",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisexpired",
                        "title": "SKReceiptPropertyIsExpired",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisrevoked",
                        "title": "SKReceiptPropertyIsRevoked",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisvolumepurchase",
                        "title": "SKReceiptPropertyIsVolumePurchase",
                        "type": "var"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skreceiptrefreshrequest",
                    "title": "SKReceiptRefreshRequest",
                    "type": "class"
                  },
                  {
                    "title": "Content delivery",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/unlocking-purchased-content",
                    "title": "Unlocking purchased content",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/persisting-a-purchase",
                    "title": "Persisting a purchase",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/finishing-a-transaction",
                    "title": "Finishing a transaction",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Content Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/expectedcontentlength",
                        "title": "expectedContentLength",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contentidentifier",
                        "title": "contentIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contentversion",
                        "title": "contentVersion",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/transaction",
                        "title": "transaction",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contentlength",
                        "title": "contentLength",
                        "type": "property"
                      },
                      {
                        "title": "Getting State Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/state",
                        "title": "state",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/progress",
                        "title": "progress",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/timeremaining",
                        "title": "timeRemaining",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownloadtimeremainingunknown",
                        "title": "SKDownloadTimeRemainingUnknown",
                        "type": "var"
                      },
                      {
                        "children": [
                          {
                            "title": "Constants",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/waiting",
                            "title": "SKDownloadStateWaiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/active",
                            "title": "SKDownloadStateActive",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/paused",
                            "title": "SKDownloadStatePaused",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/finished",
                            "title": "SKDownloadStateFinished",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/failed",
                            "title": "SKDownloadStateFailed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/cancelled",
                            "title": "SKDownloadStateCancelled",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownloadstate",
                        "title": "SKDownloadState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/downloadstate",
                        "title": "downloadState",
                        "type": "property"
                      },
                      {
                        "title": "Accessing a Completed Download",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/error",
                        "title": "error",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contenturl",
                        "title": "contentURL",
                        "type": "property"
                      },
                      {
                        "title": "Managing Downloaded Content",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contenturl(forproductid:)",
                        "title": "+ contentURLForProductID:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/deletecontent(forproductid:)",
                        "title": "+ deleteContentForProductID:",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skdownload",
                    "title": "SKDownload",
                    "type": "class"
                  },
                  {
                    "title": "Refunds",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/handling-refund-notifications",
                    "title": "Handling refund notifications",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-refund-requests",
                    "title": "Testing refund requests",
                    "type": "article"
                  },
                  {
                    "title": "Providing access to previously purchased products",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/restoring-purchased-products",
                    "title": "Restoring purchased products",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Receipt Refresh Requests",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/init(receiptproperties:)",
                        "title": "- initWithReceiptProperties:",
                        "type": "method"
                      },
                      {
                        "title": "Receipt Properties and Keys",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/receiptproperties",
                        "title": "receiptProperties",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisexpired",
                        "title": "SKReceiptPropertyIsExpired",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisrevoked",
                        "title": "SKReceiptPropertyIsRevoked",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisvolumepurchase",
                        "title": "SKReceiptPropertyIsVolumePurchase",
                        "type": "var"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skreceiptrefreshrequest",
                    "title": "SKReceiptRefreshRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Controlling the Request",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/start()",
                        "title": "- start",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/cancel()",
                        "title": "- cancel",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the Delegate",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/delegate",
                        "title": "delegate",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Completing Requests",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/requestdidfinish(_:)",
                            "title": "- requestDidFinish:",
                            "type": "method"
                          },
                          {
                            "title": "Handling Errors",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/request(_:didfailwitherror:)",
                            "title": "- request:didFailWithError:",
                            "type": "method"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequestdelegate",
                        "title": "SKRequestDelegate",
                        "type": "protocol"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skrequest",
                    "title": "SKRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Transaction Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/payment",
                        "title": "payment",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionidentifier",
                        "title": "transactionIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactiondate",
                        "title": "transactionDate",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/original",
                        "title": "originalTransaction",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/error",
                        "title": "error",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionreceipt",
                        "title": "transactionReceipt",
                        "type": "property"
                      },
                      {
                        "title": "Getting Downloads",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/downloads",
                        "title": "downloads",
                        "type": "property"
                      },
                      {
                        "title": "Getting Transaction State",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionstate",
                        "title": "transactionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Constants",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchasing",
                            "title": "SKPaymentTransactionStatePurchasing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchased",
                            "title": "SKPaymentTransactionStatePurchased",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/failed",
                            "title": "SKPaymentTransactionStateFailed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/restored",
                            "title": "SKPaymentTransactionStateRestored",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/deferred",
                            "title": "SKPaymentTransactionStateDeferred",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionstate",
                        "title": "SKPaymentTransactionState",
                        "type": "enum"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransaction",
                    "title": "SKPaymentTransaction",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/storekit/skterminateforinvalidreceipt()",
                    "title": "SKTerminateForInvalidReceipt",
                    "type": "func"
                  },
                  {
                    "title": "Family Sharing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/supporting-family-sharing-in-your-app",
                    "title": "Supporting Family Sharing in your app",
                    "type": "article"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skproduct/isfamilyshareable",
                    "title": "isFamilyShareable",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:didrevokeentitlementsforproductidentifiers:)",
                    "title": "- paymentQueue:didRevokeEntitlementsForProductIdentifiers:",
                    "type": "method"
                  },
                  {
                    "title": "Subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Essentials",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/handling-subscriptions-billing",
                        "title": "Handling Subscriptions Billing",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/enabling-app-store-server-notifications",
                        "title": "Enabling App Store Server Notifications",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/offering-a-subscription-across-multiple-apps",
                        "title": "Offering a Subscription Across Multiple Apps",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/reducing-involuntary-subscriber-churn",
                        "title": "Reducing Involuntary Subscriber Churn",
                        "type": "article"
                      },
                      {
                        "title": "Introductory offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/implementing-introductory-offers-in-your-app",
                        "title": "Implementing introductory offers in your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-introductory-offers",
                        "title": "Testing introductory offers",
                        "type": "article"
                      },
                      {
                        "children": [
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/identifier",
                            "title": "identifier",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.property",
                            "title": "type",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Types of Offers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/introductory",
                                "title": "SKProductDiscountTypeIntroductory",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/subscription",
                                "title": "SKProductDiscountTypeSubscription",
                                "type": "case"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.enum",
                            "title": "SKProductDiscountType",
                            "type": "enum"
                          },
                          {
                            "title": "Getting Price and Payment Mode",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/price",
                            "title": "price",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/pricelocale",
                            "title": "priceLocale",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.property",
                            "title": "paymentMode",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Discount Price Payment Modes",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payasyougo",
                                "title": "SKProductDiscountPaymentModePayAsYouGo",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payupfront",
                                "title": "SKProductDiscountPaymentModePayUpFront",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/freetrial",
                                "title": "SKProductDiscountPaymentModeFreeTrial",
                                "type": "case"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum",
                            "title": "SKProductDiscountPaymentMode",
                            "type": "enum"
                          },
                          {
                            "title": "Getting the Discount Duration",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/numberofperiods",
                            "title": "numberOfPeriods",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/subscriptionperiod",
                            "title": "subscriptionPeriod",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductdiscount",
                        "title": "SKProductDiscount",
                        "type": "class"
                      },
                      {
                        "title": "Promotional offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/setting-up-promotional-offers",
                        "title": "Setting up promotional offers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/implementing-promotional-offers-in-your-app",
                        "title": "Implementing promotional offers in your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/generating-a-signature-for-promotional-offers",
                        "title": "Generating a signature for promotional offers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/generating-a-promotional-offer-signature-on-the-server",
                        "title": "Generating a Promotional Offer Signature on the Server",
                        "type": "sampleCode"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Payment Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/init(identifier:keyidentifier:nonce:signature:timestamp:)",
                            "title": "- initWithIdentifier:keyIdentifier:nonce:signature:timestamp:",
                            "type": "method"
                          },
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/identifier",
                            "title": "identifier",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/keyidentifier",
                            "title": "keyIdentifier",
                            "type": "property"
                          },
                          {
                            "title": "Validating the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/nonce",
                            "title": "nonce",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/signature",
                            "title": "signature",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/timestamp",
                            "title": "timestamp",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentdiscount",
                        "title": "SKPaymentDiscount",
                        "type": "class"
                      },
                      {
                        "title": "Subscription offer codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/implementing-offer-codes-in-your-app",
                        "title": "Implementing offer codes in your app",
                        "type": "article"
                      },
                      {
                        "title": "Subscription service entitlement",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/determining-service-entitlement-on-the-server",
                        "title": "Determining service entitlement on the server",
                        "type": "sampleCode"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptions-and-offers",
                    "title": "Subscriptions and offers",
                    "type": "collection"
                  },
                  {
                    "title": "Promotions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/promoting-in-app-purchases",
                    "title": "Promoting In-App Purchases",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-promoted-in-app-purchases",
                    "title": "Testing promoted In-App Purchases",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Managing promoted product order",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/fetchstorepromotionorder(completionhandler:)",
                        "title": "- fetchStorePromotionOrderWithCompletionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/update(storepromotionorder:completionhandler:)",
                        "title": "- updateStorePromotionOrder:completionHandler:",
                        "type": "method"
                      },
                      {
                        "title": "Managing promoted product visibility",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/fetchstorepromotionvisibility(for:completionhandler:)",
                        "title": "- fetchStorePromotionVisibilityForProduct:completionHandler:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/update(storepromotionvisibility:for:completionhandler:)",
                        "title": "- updateStorePromotionVisibility:forProduct:completionHandler:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration cases",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductstorepromotionvisibility/default",
                            "title": "SKProductStorePromotionVisibilityDefault",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductstorepromotionvisibility/hide",
                            "title": "SKProductStorePromotionVisibilityHide",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductstorepromotionvisibility/show",
                            "title": "SKProductStorePromotionVisibilityShow",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotionvisibility",
                        "title": "SKProductStorePromotionVisibility",
                        "type": "enum"
                      },
                      {
                        "title": "Getting the controller",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/default()",
                        "title": "+ defaultController",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproductstorepromotioncontroller",
                    "title": "SKProductStorePromotionController",
                    "type": "class"
                  },
                  {
                    "title": "Testing In-App Purchases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-at-all-stages-of-development-with-xcode-and-the-sandbox",
                    "title": "Testing at all stages of development with Xcode and the sandbox",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/xcode/setting-up-storekit-testing-in-xcode",
                    "title": "Setting up StoreKit Testing in Xcode",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-in-app-purchases-in-xcode",
                    "title": "Testing In-App Purchases in Xcode",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Product identifiers and requests",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-fetching-product-identifiers",
                        "title": "Testing fetching product identifiers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-invalid-product-identifier-handling",
                        "title": "Testing invalid product identifier handling",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-product-request",
                        "title": "Testing a product request",
                        "type": "article"
                      },
                      {
                        "title": "Payment transactions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-purchases-made-outside-your-app",
                        "title": "Testing purchases made outside your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-win-back-offers-in-the-sandbox-environment",
                        "title": "Testing win-back offers in the sandbox environment",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-an-interrupted-purchase",
                        "title": "Testing an interrupted purchase",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-failing-subscription-renewals-and-in-app-purchases",
                        "title": "Testing failing subscription renewals and In-App Purchases",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-payment-request",
                        "title": "Testing a payment request",
                        "type": "article"
                      },
                      {
                        "title": "Subscriptions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-an-auto-renewable-subscription",
                        "title": "Testing an auto-renewable subscription",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-resubscribing-from-the-subscriptions-page",
                        "title": "Testing resubscribing from the subscriptions page",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-disabling-auto-renew",
                        "title": "Testing disabling auto-renew",
                        "type": "article"
                      },
                      {
                        "title": "Family Sharing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-family-sharing",
                        "title": "Testing Family Sharing",
                        "type": "article"
                      },
                      {
                        "title": "Refunds",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-refund-requests",
                        "title": "Testing refund requests",
                        "type": "article"
                      },
                      {
                        "title": "Server notifications",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-app-store-server-notifications",
                        "title": "Testing App Store server notifications",
                        "type": "article"
                      },
                      {
                        "title": "Transaction observer",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-transaction-observer-code",
                        "title": "Testing transaction observer code",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-successful-transaction",
                        "title": "Testing a successful transaction",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-complete-transactions",
                        "title": "Testing complete transactions",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/testing-in-app-purchases-with-sandbox",
                    "title": "Testing In-App Purchases with sandbox",
                    "type": "article"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/handling-errors",
                    "title": "Handling errors",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/unknown",
                        "title": "SKErrorUnknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/clientinvalid",
                        "title": "SKErrorClientInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/paymentcancelled",
                        "title": "SKErrorPaymentCancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/paymentinvalid",
                        "title": "SKErrorPaymentInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/paymentnotallowed",
                        "title": "SKErrorPaymentNotAllowed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/storeproductnotavailable",
                        "title": "SKErrorStoreProductNotAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/cloudservicepermissiondenied",
                        "title": "SKErrorCloudServicePermissionDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/cloudservicenetworkconnectionfailed",
                        "title": "SKErrorCloudServiceNetworkConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/cloudservicerevoked",
                        "title": "SKErrorCloudServiceRevoked",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/privacyacknowledgementrequired",
                        "title": "SKErrorPrivacyAcknowledgementRequired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/unauthorizedrequestdata",
                        "title": "SKErrorUnauthorizedRequestData",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/invalidofferidentifier",
                        "title": "SKErrorInvalidOfferIdentifier",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/invalidofferprice",
                        "title": "SKErrorInvalidOfferPrice",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/invalidsignature",
                        "title": "SKErrorInvalidSignature",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/missingofferparams",
                        "title": "SKErrorMissingOfferParams",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/ineligibleforoffer",
                        "title": "SKErrorIneligibleForOffer",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlaycancelled",
                        "title": "SKErrorOverlayCancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlayinvalidconfiguration",
                        "title": "SKErrorOverlayInvalidConfiguration",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlaypresentedinbackgroundscene",
                        "title": "SKErrorOverlayPresentedInBackgroundScene",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlaytimeout",
                        "title": "SKErrorOverlayTimeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/unsupportedplatform",
                        "title": "SKErrorUnsupportedPlatform",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/skerror/code",
                    "title": "SKErrorCode",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/storekit/skerrordomain",
                    "title": "SKErrorDomain",
                    "type": "var"
                  }
                ],
                "path": "/documentation/storekit/original-api-for-in-app-purchase",
                "title": "Original API for In-App Purchase",
                "type": "collection"
              }
            ],
            "path": "/documentation/storekit/in-app-purchase",
            "title": "In-App Purchase",
            "type": "collection"
          },
          {
            "title": "App transaction",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/supporting-business-model-changes-by-using-the-app-transaction",
            "title": "Supporting business model changes by using the app transaction",
            "type": "article"
          },
          {
            "title": "Messages",
            "type": "groupMarker"
          },
          {
            "title": "Reviews",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/requesting-app-store-reviews",
            "title": "Requesting App Store reviews",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Indicating an appropriate time for a review",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skstorereviewcontroller/requestreview(in:)",
                "title": "+ requestReviewInScene:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skstorereviewcontroller/requestreview()",
                "title": "+ requestReview",
                "type": "method"
              }
            ],
            "deprecated": true,
            "path": "/documentation/storekit/skstorereviewcontroller",
            "title": "SKStoreReviewController",
            "type": "class"
          },
          {
            "title": "Recommendations",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/offering-media-for-sale-in-your-app",
            "title": "Offering media for sale in your app",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Setting a delegate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Responding to a Dismiss Action",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductviewcontrollerdelegate/productviewcontrollerdidfinish(_:)",
                    "title": "- productViewControllerDidFinish:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skstoreproductviewcontrollerdelegate",
                "title": "SKStoreProductViewControllerDelegate",
                "type": "protocol"
              },
              {
                "title": "Loading a new product screen",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/offering-media-for-sale-in-your-app",
                "title": "Offering media for sale in your app",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/loadproduct(withparameters:completionblock:)",
                "title": "- loadProductWithParameters:completionBlock:",
                "type": "method"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/loadproduct(withparameters:impression:completionblock:)",
                "title": "- loadProductWithParameters:impression:completionBlock:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Required Key",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameteritunesitemidentifier",
                    "title": "SKStoreProductParameterITunesItemIdentifier",
                    "type": "var"
                  },
                  {
                    "title": "Affiliate and Analytics Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameterproductidentifier",
                    "title": "SKStoreProductParameterProductIdentifier",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameteradvertisingpartnertoken",
                    "title": "SKStoreProductParameterAdvertisingPartnerToken",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameteraffiliatetoken",
                    "title": "SKStoreProductParameterAffiliateToken",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparametercampaigntoken",
                    "title": "SKStoreProductParameterCampaignToken",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameterprovidertoken",
                    "title": "SKStoreProductParameterProviderToken",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparametercustomproductpageidentifier",
                    "title": "SKStoreProductParameterCustomProductPageIdentifier",
                    "type": "var"
                  }
                ],
                "path": "/documentation/storekit/product-dictionary-keys",
                "title": "Product Dictionary Keys",
                "type": "collection"
              }
            ],
            "path": "/documentation/storekit/skstoreproductviewcontroller",
            "title": "SKStoreProductViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an overlay",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/init(configuration:)",
                "title": "- initWithConfiguration:",
                "type": "method"
              },
              {
                "path": "/documentation/storekit/skoverlay/configuration-swift.property",
                "title": "configuration",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an App Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/init(appidentifier:position:)",
                    "title": "- initWithAppIdentifier:position:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/appidentifier",
                    "title": "appIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/position",
                    "title": "position",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the Overlay’s Position",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottom",
                        "title": "SKOverlayPositionBottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottomraised",
                        "title": "SKOverlayPositionBottomRaised",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/skoverlay/position",
                    "title": "SKOverlayPosition",
                    "type": "enum"
                  },
                  {
                    "title": "Dismissing the Overlay",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/userdismissible",
                    "title": "userDismissible",
                    "type": "property"
                  },
                  {
                    "title": "Verifying Advertising Campaigns",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/campaigntoken",
                    "title": "campaignToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/providertoken",
                    "title": "providerToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/setadditionalvalue(_:forkey:)",
                    "title": "- setAdditionalValue:forKey:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/additionalvalue(forkey:)",
                    "title": "- additionalValueForKey:",
                    "type": "method"
                  },
                  {
                    "title": "Promoting the Latest App Version",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/latestreleaseid",
                    "title": "latestReleaseID",
                    "type": "property"
                  },
                  {
                    "title": "Advertising Another App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/customproductpageidentifier",
                    "title": "customProductPageIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Setting an Ad Impression",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/setadimpression(_:)",
                    "title": "- setAdImpression:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skoverlay/appconfiguration",
                "title": "SKOverlayAppConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an App Clip Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/init(position:)",
                    "title": "- initWithPosition:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/position",
                    "title": "position",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the Overlay’s Position",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottom",
                        "title": "SKOverlayPositionBottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottomraised",
                        "title": "SKOverlayPositionBottomRaised",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/skoverlay/position",
                    "title": "SKOverlayPosition",
                    "type": "enum"
                  },
                  {
                    "title": "Verifying Advertising Campaigns",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/campaigntoken",
                    "title": "campaignToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/providertoken",
                    "title": "providerToken",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/setadditionalvalue(_:forkey:)",
                    "title": "- setAdditionalValue:forKey:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/additionalvalue(forkey:)",
                    "title": "- additionalValueForKey:",
                    "type": "method"
                  },
                  {
                    "title": "Promoting the Latest App Version",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/latestreleaseid",
                    "title": "latestReleaseID",
                    "type": "property"
                  },
                  {
                    "title": "Advertising Another App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/customproductpageidentifier",
                    "title": "customProductPageIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/skoverlay/appclipconfiguration",
                "title": "SKOverlayAppClipConfiguration",
                "type": "class"
              },
              {
                "path": "/documentation/storekit/skoverlay/configuration-swift.class",
                "title": "SKOverlayConfiguration",
                "type": "class"
              },
              {
                "title": "Presenting an overlay",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/present(in:)",
                "title": "- presentInScene:",
                "type": "method"
              },
              {
                "title": "Dismissing an overlay",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/dismiss(in:)",
                "title": "+ dismissOverlayInScene:",
                "type": "method"
              },
              {
                "title": "Setting a delegate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Responding to the Overlay’s Appearance and Disappearance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaywillstartpresentation(_:transitioncontext:)",
                    "title": "- storeOverlay:willStartPresentation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaydidfinishpresentation(_:transitioncontext:)",
                    "title": "- storeOverlay:didFinishPresentation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaywillstartdismissal(_:transitioncontext:)",
                    "title": "- storeOverlay:willStartDismissal:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaydidfinishdismissal(_:transitioncontext:)",
                    "title": "- storeOverlay:didFinishDismissal:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Adding an Animation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/transitioncontext/addanimation(_:)",
                        "title": "- addAnimationBlock:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/transitioncontext/startframe",
                        "title": "startFrame",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/transitioncontext/endframe",
                        "title": "endFrame",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/skoverlay/transitioncontext",
                    "title": "SKOverlayTransitionContext",
                    "type": "class"
                  },
                  {
                    "title": "Responding to Failures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaydidfailtoload(_:error:)",
                    "title": "- storeOverlay:didFailToLoadWithError:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skoverlaydelegate",
                "title": "SKOverlayDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/storekit/skoverlay",
            "title": "SKOverlay",
            "type": "class"
          },
          {
            "title": "Ad network attribution",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Ad impressions and installation validations",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/adattributionkit/adattributionkit-skadnetwork-interoperability",
                "title": "Understanding AdAttributionKit and SKAdNetwork interoperability",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/signing-and-providing-ads",
                    "title": "Signing and providing ads",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/receiving-ad-attributions-and-postbacks",
                    "title": "Receiving ad attributions and postbacks",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/receiving-postbacks-in-multiple-conversion-windows",
                    "title": "Receiving postbacks in multiple conversion windows",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "SKAdNetwork versions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-4-release-notes",
                        "title": "SKAdNetwork 4 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-3-release-notes",
                        "title": "SKAdNetwork 3 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-2-2-release-notes",
                        "title": "SKAdNetwork 2.2 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-2-1-release-notes",
                        "title": "SKAdNetwork 2.1 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-2-release-notes",
                        "title": "SKAdNetwork 2 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-1-release-notes",
                        "title": "SKAdNetwork 1 release notes",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/skadnetwork-release-notes",
                    "title": "SKAdNetwork release notes",
                    "type": "collection"
                  },
                  {
                    "title": "Registering ad networks and configuring apps",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/registering-an-ad-network",
                    "title": "Registering an ad network",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/configuring-a-source-app",
                    "title": "Configuring a source app",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/configuring-an-advertised-app",
                    "title": "Configuring an advertised app",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/skadnetworkitems",
                    "title": "SKAdNetworkItems",
                    "type": "dictionary"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nsadvertisingattributionreportendpoint",
                    "title": "NSAdvertisingAttributionReportEndpoint",
                    "type": "typealias"
                  },
                  {
                    "title": "Signing StoreKit-rendered ads",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Signatures for SKAdNetwork 1, 2, and 2.2–3",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-to-generate-signatures-for-skadnetwork-2-2-and-3",
                        "title": "Combining parameters to generate signatures for SKAdNetwork 2.2 and 3",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-to-generate-a-signature-for-skadnetwork-2",
                        "title": "Combining parameters to generate a signature for SKAdNetwork 2",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-to-generate-a-signature-for-skadnetwork-1",
                        "title": "Combining parameters to generate a signature for SKAdNetwork 1",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/generating-the-signature-to-validate-storekit-rendered-ads",
                    "title": "Generating the signature to validate StoreKit-rendered ads",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Required keys for SKAdNetwork 4 and later",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworksourceidentifier",
                        "title": "SKStoreProductParameterAdNetworkSourceIdentifier",
                        "type": "var"
                      },
                      {
                        "title": "Required keys for SKAdNetwork 2 and later",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkversion",
                        "title": "SKStoreProductParameterAdNetworkVersion",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworksourceappstoreidentifier",
                        "title": "SKStoreProductParameterAdNetworkSourceAppStoreIdentifier",
                        "type": "var"
                      },
                      {
                        "title": "Required keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkidentifier",
                        "title": "SKStoreProductParameterAdNetworkIdentifier",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkcampaignidentifier",
                        "title": "SKStoreProductParameterAdNetworkCampaignIdentifier",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworktimestamp",
                        "title": "SKStoreProductParameterAdNetworkTimestamp",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworknonce",
                        "title": "SKStoreProductParameterAdNetworkNonce",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkattributionsignature",
                        "title": "SKStoreProductParameterAdNetworkAttributionSignature",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/storekit/ad-network-install-validation-keys",
                    "title": "Ad network install-validation keys",
                    "type": "collection"
                  },
                  {
                    "title": "Signing view-through ads",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/generating-the-signature-to-validate-view-through-ads",
                    "title": "Generating the signature to validate view-through ads",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing a signature",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/signature",
                        "title": "signature",
                        "type": "property"
                      },
                      {
                        "title": "Creating a signature",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/init(sourceappstoreitemidentifier:advertisedappstoreitemidentifier:adnetworkidentifier:adcampaignidentifier:adimpressionidentifier:timestamp:signature:version:)",
                        "title": "- initWithSourceAppStoreItemIdentifier:advertisedAppStoreItemIdentifier:adNetworkIdentifier:adCampaignIdentifier:adImpressionIdentifier:timestamp:signature:version:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/version",
                        "title": "version",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adnetworkidentifier",
                        "title": "adNetworkIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/sourceidentifier",
                        "title": "sourceIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adcampaignidentifier",
                        "title": "adCampaignIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/advertisedappstoreitemidentifier",
                        "title": "advertisedAppStoreItemIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adimpressionidentifier",
                        "title": "adImpressionIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/sourceappstoreitemidentifier",
                        "title": "sourceAppStoreItemIdentifier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/timestamp",
                        "title": "timestamp",
                        "type": "property"
                      },
                      {
                        "title": "Describing ads",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adtype",
                        "title": "adType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/addescription",
                        "title": "adDescription",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adpurchasername",
                        "title": "adPurchaserName",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/skadimpression",
                    "title": "SKAdImpression",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/startimpression(_:completionhandler:)",
                    "title": "+ startImpression:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/endimpression(_:completionhandler:)",
                    "title": "+ endImpression:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Providing conversion information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/updatepostbackconversionvalue(_:coarsevalue:lockwindow:completionhandler:)",
                    "title": "+ updatePostbackConversionValue:coarseValue:lockWindow:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/updatepostbackconversionvalue(_:coarsevalue:completionhandler:)",
                    "title": "+ updatePostbackConversionValue:coarseValue:completionHandler:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing coarse conversion values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork/coarseconversionvalue/high",
                        "title": "SKAdNetworkCoarseConversionValueHigh",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork/coarseconversionvalue/low",
                        "title": "SKAdNetworkCoarseConversionValueLow",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork/coarseconversionvalue/medium",
                        "title": "SKAdNetworkCoarseConversionValueMedium",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/storekit/skadnetwork/coarseconversionvalue",
                    "title": "SKAdNetworkCoarseConversionValue",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/updatepostbackconversionvalue(_:completionhandler:)",
                    "title": "+ updatePostbackConversionValue:completionHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Verifying postbacks",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "SKAdNetworks 3 and earlier postbacks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-for-skadnetwork-3-postbacks",
                        "title": "Combining parameters for SKAdNetwork 3 postbacks",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-for-previous-skadnetwork-postback-versions",
                        "title": "Combining parameters for previous SKAdNetwork postback versions",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/verifying-an-install-validation-postback",
                    "title": "Verifying an install-validation postback",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/identifying-the-parameters-in-install-validation-postbacks",
                    "title": "Identifying the parameters in install-validation postbacks",
                    "type": "article"
                  },
                  {
                    "title": "Testing ad attributions and postbacks",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-ad-attributions-with-a-downloaded-profile",
                    "title": "Testing ad attributions with a downloaded profile",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/storekittest/testing-and-validating-ad-impression-signatures-and-postbacks-for-skadnetwork",
                    "title": "Testing and validating ad impression signatures and postbacks for SKAdNetwork",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skadnetwork/registerappforadnetworkattribution()",
                    "title": "+ registerAppForAdNetworkAttribution",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skadnetwork/updateconversionvalue(_:)",
                    "title": "+ updateConversionValue:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skadnetwork",
                "title": "SKAdNetwork",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Providing a signature",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/signature",
                    "title": "signature",
                    "type": "property"
                  },
                  {
                    "title": "Creating a signature",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/init(sourceappstoreitemidentifier:advertisedappstoreitemidentifier:adnetworkidentifier:adcampaignidentifier:adimpressionidentifier:timestamp:signature:version:)",
                    "title": "- initWithSourceAppStoreItemIdentifier:advertisedAppStoreItemIdentifier:adNetworkIdentifier:adCampaignIdentifier:adImpressionIdentifier:timestamp:signature:version:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/version",
                    "title": "version",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adnetworkidentifier",
                    "title": "adNetworkIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/sourceidentifier",
                    "title": "sourceIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adcampaignidentifier",
                    "title": "adCampaignIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/advertisedappstoreitemidentifier",
                    "title": "advertisedAppStoreItemIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adimpressionidentifier",
                    "title": "adImpressionIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/sourceappstoreitemidentifier",
                    "title": "sourceAppStoreItemIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/timestamp",
                    "title": "timestamp",
                    "type": "property"
                  },
                  {
                    "title": "Describing ads",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adtype",
                    "title": "adType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/addescription",
                    "title": "adDescription",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adpurchasername",
                    "title": "adPurchaserName",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/skadimpression",
                "title": "SKAdImpression",
                "type": "class"
              },
              {
                "title": "Error handling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skanerrordomain",
                "title": "SKANErrorDomain",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/adnetworkidmissing",
                    "title": "SKANErrorAdNetworkIdMissing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/impressionmissingrequiredvalue",
                    "title": "SKANErrorImpressionMissingRequiredValue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/impressionnotfound",
                    "title": "SKANErrorImpressionNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/impressiontooshort",
                    "title": "SKANErrorImpressionTooShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidadvertisedappid",
                    "title": "SKANErrorInvalidAdvertisedAppId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidcampaignid",
                    "title": "SKANErrorInvalidCampaignId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidconversionvalue",
                    "title": "SKANErrorInvalidConversionValue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidsourceappid",
                    "title": "SKANErrorInvalidSourceAppId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidversion",
                    "title": "SKANErrorInvalidVersion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/mismatchedsourceappid",
                    "title": "SKANErrorMismatchedSourceAppId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/unknown",
                    "title": "SKANErrorUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/unsupported",
                    "title": "SKANErrorUnsupported",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekit/skanerror-swift.struct/code",
                "title": "SKANError",
                "type": "enum"
              }
            ],
            "path": "/documentation/storekit/ad-network-attribution",
            "title": "Ad network attribution",
            "type": "collection"
          },
          {
            "title": "External Purchase",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Offering external purchases",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-purchase",
                "title": "com.apple.developer.storekit.external-purchase",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchase",
                "title": "SKExternalPurchase",
                "type": "typealias"
              },
              {
                "title": "Offering external purchases with custom links",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-purchase-link",
                "title": "com.apple.developer.storekit.external-purchase-link",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchasecustomlinkregions",
                "title": "SKExternalPurchaseCustomLinkRegions",
                "type": "typealias"
              },
              {
                "title": "Offering external purchase links",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-purchase-link",
                "title": "com.apple.developer.storekit.external-purchase-link",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchasemultilink",
                "title": "SKExternalPurchaseMultiLink",
                "type": "dictionary"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchaselink",
                "title": "SKExternalPurchaseLink",
                "type": "dictionary"
              },
              {
                "title": "Managing external purchase tokens",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/receiving-and-decoding-external-purchase-tokens",
                "title": "Receiving and decoding external purchase tokens",
                "type": "article"
              }
            ],
            "path": "/documentation/storekit/external-purchase",
            "title": "External Purchase",
            "type": "collection"
          },
          {
            "title": "External link account",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "External accounts",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-link.account",
                "title": "com.apple.developer.storekit.external-link.account",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternallinkaccount",
                "title": "SKExternalLinkAccount",
                "type": "dictionary"
              }
            ],
            "path": "/documentation/storekit/external-link-account",
            "title": "External link account",
            "type": "collection"
          },
          {
            "title": "Payment method binding",
            "type": "groupMarker"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Setting a delegate",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicesetupviewcontroller/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Receiving Notification of Dismissal",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupviewcontrollerdelegate/cloudservicesetupviewcontrollerdiddismiss(_:)",
                    "title": "- cloudServiceSetupViewControllerDidDismiss:",
                    "type": "method"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicesetupviewcontrollerdelegate",
                "title": "SKCloudServiceSetupViewControllerDelegate",
                "type": "protocol"
              },
              {
                "title": "Loading the setup view",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/offering-apple-music-subscription-in-your-app",
                "title": "Offering Apple Music Subscription in Your App",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Indicating Setup Options",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/action",
                    "title": "SKCloudServiceSetupOptionsActionKey",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupaction/subscribe",
                        "title": "SKCloudServiceSetupActionSubscribe",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/storekit/skcloudservicesetupaction",
                    "title": "SKCloudServiceSetupAction",
                    "type": "typealias"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/itunesitemidentifier",
                    "title": "SKCloudServiceSetupOptionsITunesItemIdentifierKey",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/affiliatetoken",
                    "title": "SKCloudServiceSetupOptionsAffiliateTokenKey",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/campaigntoken",
                    "title": "SKCloudServiceSetupOptionsCampaignTokenKey",
                    "type": "var"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/messageidentifier",
                    "title": "SKCloudServiceSetupOptionsMessageIdentifierKey",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Message Identifiers",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/addmusic",
                        "title": "SKCloudServiceSetupMessageIdentifierAddMusic",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/connect",
                        "title": "SKCloudServiceSetupMessageIdentifierConnect",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/join",
                        "title": "SKCloudServiceSetupMessageIdentifierJoin",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/playmusic",
                        "title": "SKCloudServiceSetupMessageIdentifierPlayMusic",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/storekit/skcloudservicesetupmessageidentifier",
                    "title": "SKCloudServiceSetupMessageIdentifier",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/storekit/skcloudservicesetupoptionskey",
                "title": "SKCloudServiceSetupOptionsKey",
                "type": "typealias"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicesetupviewcontroller/load(options:completionhandler:)",
                "title": "- loadWithOptions:completionHandler:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skarcadeservice/arcadesubscriptionstatus(withnonce:resulthandler:)",
                    "title": "+ arcadeSubscriptionStatusWithNonce:resultHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skarcadeservice/registerarcadeappwithrandom(fromlib:randomfromliblength:resulthandler:)",
                    "title": "+ registerArcadeAppWithRandomFromLib:randomFromLibLength:resultHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skarcadeservice/repairarcadeapp()",
                    "title": "+ repairArcadeApp",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skarcadeservice",
                "title": "SKArcadeService",
                "type": "class"
              }
            ],
            "deprecated": true,
            "path": "/documentation/storekit/skcloudservicesetupviewcontroller",
            "title": "SKCloudServiceSetupViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting authorization to access the Music library",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/requesting-access-to-apple-music-library",
                "title": "Requesting Access to Apple Music Library",
                "type": "article"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/authorizationstatus()",
                "title": "+ authorizationStatus",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestauthorization(_:)",
                "title": "+ requestAuthorization:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/notdetermined",
                    "title": "SKCloudServiceAuthorizationStatusNotDetermined",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/denied",
                    "title": "SKCloudServiceAuthorizationStatusDenied",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/restricted",
                    "title": "SKCloudServiceAuthorizationStatusRestricted",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/authorized",
                    "title": "SKCloudServiceAuthorizationStatusAuthorized",
                    "type": "case"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/storekit/skcloudserviceauthorizationstatus",
                "title": "SKCloudServiceAuthorizationStatus",
                "type": "enum"
              },
              {
                "title": "Determining capabilities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/determining-a-person-s-apple-music-capabilities",
                "title": "Determining a person’s Apple Music capabilities",
                "type": "article"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestusertoken(fordevelopertoken:completionhandler:)",
                "title": "- requestUserTokenForDeveloperToken:completionHandler:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requeststorefrontcountrycode(completionhandler:)",
                "title": "- requestStorefrontCountryCodeWithCompletionHandler:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestcapabilities(completionhandler:)",
                "title": "- requestCapabilitiesWithCompletionHandler:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Identifying Cloud Service Capabilities",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/musiccatalogplayback",
                    "title": "SKCloudServiceCapabilityMusicCatalogPlayback",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/musiccatalogsubscriptioneligible",
                    "title": "SKCloudServiceCapabilityMusicCatalogSubscriptionEligible",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/addtocloudmusiclibrary",
                    "title": "SKCloudServiceCapabilityAddToCloudMusicLibrary",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/skcloudservicecapabilitynone",
                    "title": "SKCloudServiceCapabilityNone",
                    "type": "case"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecapability",
                "title": "SKCloudServiceCapability",
                "type": "enum"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requeststorefrontidentifier(completionhandler:)",
                "title": "- requestStorefrontIdentifierWithCompletionHandler:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestpersonalizationtoken(forclienttoken:withcompletionhandler:)",
                "title": "- requestPersonalizationTokenForClientToken:withCompletionHandler:",
                "type": "method"
              },
              {
                "title": "Notifications",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skstorefrontidentifierdidchangenotification",
                "title": "SKStorefrontIdentifierDidChangeNotification",
                "type": "var"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecapabilitiesdidchangenotification",
                "title": "SKCloudServiceCapabilitiesDidChangeNotification",
                "type": "var"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skstorefrontcountrycodedidchangenotification",
                "title": "SKStorefrontCountryCodeDidChangeNotification",
                "type": "var"
              }
            ],
            "deprecated": true,
            "path": "/documentation/storekit/skcloudservicecontroller",
            "title": "SKCloudServiceController",
            "type": "class"
          }
        ],
        "path": "/documentation/storekit",
        "title": "StoreKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "In-App Purchase",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "In-App Purchase merchandising",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Merchandising In-App Purchases and subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating product views that load products",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(id:preferspromotionalicon:)",
                        "title": "init(id: Product.ID, prefersPromotionalIcon: Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(id:preferspromotionalicon:icon:)",
                        "title": "init(id: Product.ID, prefersPromotionalIcon: Bool, icon: () -> Icon)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(id:preferspromotionalicon:icon:placeholdericon:)",
                        "title": "init(id: Product.ID, prefersPromotionalIcon: Bool, icon: () -> Icon, placeholderIcon: () -> PlaceholderIcon)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(id:icon:placeholdericon:)",
                        "title": "init(id: Product.ID, icon: (ProductIconPhase) -> Icon, placeholderIcon: () -> PlaceholderIcon)",
                        "type": "init"
                      },
                      {
                        "title": "Creating product views with preloaded products",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(_:preferspromotionalicon:icon:)",
                        "title": "init(Product, prefersPromotionalIcon: Bool, icon: () -> Icon)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(_:preferspromotionalicon:)",
                        "title": "init(Product, prefersPromotionalIcon: Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(_:icon:)",
                        "title": "init(Product, icon: (ProductIconPhase) -> Icon)",
                        "type": "init"
                      },
                      {
                        "title": "Creating product views with a configuration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productview/init(_:)",
                        "title": "init(ProductViewStyleConfiguration)",
                        "type": "init"
                      },
                      {
                        "title": "Loading promotional images",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the promotional image’s load phases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/loading",
                            "title": "case loading",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/success(_:)",
                            "title": "case success(Image)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/unavailable",
                            "title": "case unavailable",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/failure(_:)",
                            "title": "case failure(any Error)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the promotional image",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/promotionalicon",
                            "title": "var promotionalIcon: Image?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the error",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/error",
                            "title": "var error: (any Error)?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/producticonphase",
                        "title": "ProductIconPhase",
                        "type": "enum"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/automaticproductplaceholdericon",
                        "title": "AutomaticProductPlaceholderIcon",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/productview",
                    "title": "ProductView",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating store views that load products",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storeview/init(ids:preferspromotionalicon:)",
                        "title": "init(ids: some Collection<String>, prefersPromotionalIcon: Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/storeview/init(ids:preferspromotionalicon:icon:)",
                        "title": "init(ids: some Collection<String>, prefersPromotionalIcon: Bool, icon: (Product) -> Icon)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/storeview/init(ids:preferspromotionalicon:icon:placeholdericon:)",
                        "title": "init(ids: some Collection<String>, prefersPromotionalIcon: Bool, icon: (Product) -> Icon, placeholderIcon: () -> PlaceholderIcon)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/storeview/init(ids:icon:placeholdericon:)",
                        "title": "init(ids: some Collection<String>, icon: (Product, ProductIconPhase) -> Icon, placeholderIcon: () -> PlaceholderIcon)",
                        "type": "init"
                      },
                      {
                        "title": "Creating store views with preloaded products",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storeview/init(products:preferspromotionalicon:)",
                        "title": "init(products: some Collection<Product>, prefersPromotionalIcon: Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/storeview/init(products:preferspromotionalicon:icon:)",
                        "title": "init(products: some Collection<Product>, prefersPromotionalIcon: Bool, icon: (Product) -> Icon)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/storeview/init(products:icon:)",
                        "title": "init(products: some Collection<Product>, icon: (Product, ProductIconPhase) -> Icon)",
                        "type": "init"
                      },
                      {
                        "title": "Loading promotional images",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the promotional image’s load phases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/loading",
                            "title": "case loading",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/success(_:)",
                            "title": "case success(Image)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/unavailable",
                            "title": "case unavailable",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/failure(_:)",
                            "title": "case failure(any Error)",
                            "type": "case"
                          },
                          {
                            "title": "Getting the promotional image",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/promotionalicon",
                            "title": "var promotionalIcon: Image?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the error",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/producticonphase/error",
                            "title": "var error: (any Error)?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/producticonphase",
                        "title": "ProductIconPhase",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/storekit/storeview",
                    "title": "StoreView",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating subscription store views with automatic marketing content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(groupid:visiblerelationships:)",
                        "title": "init(groupID: String, visibleRelationships: Product.SubscriptionRelationship)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(productids:)",
                        "title": "init(productIDs: some Collection<String>)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(subscriptions:)",
                        "title": "init(subscriptions: some Collection<Product>)",
                        "type": "init"
                      },
                      {
                        "title": "Creating subscription store views with custom marketing content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(groupid:visiblerelationships:marketingcontent:)",
                        "title": "init(groupID: String, visibleRelationships: Product.SubscriptionRelationship, marketingContent: () -> Content)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(productids:marketingcontent:)",
                        "title": "init(productIDs: some Collection<String>, marketingContent: () -> Content)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(subscriptions:marketingcontent:)",
                        "title": "init(subscriptions: some Collection<Product>, marketingContent: () -> Content)",
                        "type": "init"
                      },
                      {
                        "title": "Creating subscription store views with a hierarchichal structure",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(groupid:visiblerelationships:content:)",
                        "title": "init<C>(groupID: String, visibleRelationships: Product.SubscriptionRelationship, content: () -> C)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(productids:content:)",
                        "title": "init<C>(productIDs: some Collection<String>, content: () -> C)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstoreview/init(subscriptions:content:)",
                        "title": "init<C>(subscriptions: some Collection<Product>, content: () -> C)",
                        "type": "init"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/automaticsubscriptionstoremarketingcontent",
                        "title": "AutomaticSubscriptionStoreMarketingContent",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontentview",
                        "title": "SubscriptionStoreContentView",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstoreview",
                    "title": "SubscriptionStoreView",
                    "type": "struct"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/backyard-birds-sample",
                    "title": "Backyard Birds: Building an app with SwiftData and widgets",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Styling product views",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/productviewstyle(_:)",
                    "title": "func productViewStyle(some ProductViewStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/producticonborder()",
                    "title": "func productIconBorder() -> some View",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting built-in product view styles",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyle/automatic",
                        "title": "static var automatic: AutomaticProductViewStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyle/compact",
                        "title": "static var compact: CompactProductViewStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyle/large",
                        "title": "static var large: LargeProductViewStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyle/regular",
                        "title": "static var regular: RegularProductViewStyle",
                        "type": "property"
                      },
                      {
                        "title": "Creating custom product views",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyle/makebody(configuration:)",
                        "title": "func makeBody(configuration: Self.Configuration) -> Self.Body",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyle/configuration",
                        "title": "ProductViewStyle.Configuration",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyle/body",
                        "title": "Body",
                        "type": "associatedtype"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating automatic product view styles",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/automaticproductviewstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/automaticproductviewstyle",
                        "title": "AutomaticProductViewStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the compact product view style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/productviewstyle/compact",
                            "title": "static var compact: CompactProductViewStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/compactproductviewstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/compactproductviewstyle",
                        "title": "CompactProductViewStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the regular product view style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/productviewstyle/regular",
                            "title": "static var regular: RegularProductViewStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/regularproductviewstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/regularproductviewstyle",
                        "title": "RegularProductViewStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the large product view style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/productviewstyle/large",
                            "title": "static var large: LargeProductViewStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/largeproductviewstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/largeproductviewstyle",
                        "title": "LargeProductViewStyle",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/productviewstyle",
                    "title": "ProductViewStyle",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting a product’s information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyleconfiguration/product",
                        "title": "var product: Product?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyleconfiguration/state",
                        "title": "let state: Product.TaskState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyleconfiguration/hascurrententitlement",
                        "title": "let hasCurrentEntitlement: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Getting a product view’s icon",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyleconfiguration/icon-swift.property",
                        "title": "let icon: ProductViewStyleConfiguration.Icon",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyleconfiguration/icon-swift.struct",
                        "title": "ProductViewStyleConfiguration.Icon",
                        "type": "struct"
                      },
                      {
                        "title": "Getting a product’s description visibility",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyleconfiguration/descriptionvisibility",
                        "title": "let descriptionVisibility: Visibility",
                        "type": "property"
                      },
                      {
                        "title": "Initiating a purchase",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/productviewstyleconfiguration/purchase()",
                        "title": "func purchase()",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/productviewstyleconfiguration",
                    "title": "ProductViewStyleConfiguration",
                    "type": "struct"
                  },
                  {
                    "title": "Styling subscription store controls",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorecontrolstyle(_:)",
                    "title": "func subscriptionStoreControlStyle(some SubscriptionStoreControlStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorecontrolstyle(_:placement:)",
                    "title": "func subscriptionStoreControlStyle<S>(S, placement: S.Placement) -> some View",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting built-in subscription store control styles",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/automatic",
                        "title": "static var automatic: AutomaticSubscriptionStoreControlStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/buttons",
                        "title": "static var buttons: ButtonsSubscriptionStoreControlStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/picker",
                        "title": "static var picker: PickerSubscriptionStoreControlStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/prominentpicker",
                        "title": "static var prominentPicker: ProminentPickerSubscriptionStoreControlStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/pagedpicker",
                        "title": "static var pagedPicker: PagedPickerSubscriptionStoreControlStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/pagedprominentpicker",
                        "title": "static var pagedProminentPicker: PagedProminentPickerSubscriptionStoreControlStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/compactpicker",
                        "title": "static var compactPicker: CompactPickerSubscriptionStoreControlStyle",
                        "type": "property"
                      },
                      {
                        "title": "Creating custom subscription store control styles",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/makebody(configuration:)",
                        "title": "func makeBody(configuration: Self.Configuration) -> Self.Body",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/configuration",
                        "title": "SubscriptionStoreControlStyle.Configuration",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/subscribebutton",
                        "title": "SubscriptionStoreControlStyle.SubscribeButton",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/subscriptionpicker",
                        "title": "SubscriptionStoreControlStyle.SubscriptionPicker",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/subscriptionpickeroption",
                        "title": "SubscriptionStoreControlStyle.SubscriptionPickerOption",
                        "type": "typealias"
                      },
                      {
                        "children": [
                          {
                            "title": "Placing subscription store controls",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolplacementkey/bottom",
                            "title": "static var bottom: SubscriptionStoreControlPlacementKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolplacementkey/leading",
                            "title": "static var leading: SubscriptionStoreControlPlacementKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolplacementkey/scrollview",
                            "title": "static var scrollView: SubscriptionStoreControlPlacementKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolplacementkey/trailing",
                            "title": "static var trailing: SubscriptionStoreControlPlacementKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolplacementkey/bottombar",
                            "title": "static var bottomBar: SubscriptionStoreControlPlacementKey",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolplacementkey/buttonsinbottombar",
                            "title": "static var buttonsInBottomBar: SubscriptionStoreControlPlacementKey",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/subscriptionstorecontrolplacementkey",
                        "title": "SubscriptionStoreControlPlacementKey",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/placement",
                        "title": "Placement",
                        "type": "associatedtype"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyle/body",
                        "title": "Body",
                        "type": "associatedtype"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the automatic subscription store control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/automatic",
                            "title": "static var automatic: AutomaticSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/automaticsubscriptionstorecontrolstyle",
                        "title": "AutomaticSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the button subscription store style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/buttons",
                            "title": "static var buttons: ButtonsSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/buttonssubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/buttonssubscriptionstorecontrolstyle",
                        "title": "ButtonsSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/picker",
                            "title": "static var picker: PickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/placement",
                            "title": "Placement",
                            "type": "associatedtype"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/pickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/pickersubscriptionstorecontrolstyle",
                        "title": "PickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the prominent picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/pagedprominentpicker",
                            "title": "static var pagedProminentPicker: PagedProminentPickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/prominentpickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/placement",
                            "title": "Placement",
                            "type": "associatedtype"
                          }
                        ],
                        "path": "/documentation/storekit/prominentpickersubscriptionstorecontrolstyle",
                        "title": "ProminentPickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the compact picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/compactpicker",
                            "title": "static var compactPicker: CompactPickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting a placement",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/automatic",
                                "title": "static var automatic: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/bottombar",
                                "title": "static var bottomBar: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/buttonsinbottombar",
                                "title": "static var buttonsInBottomBar: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/scrollview",
                                "title": "static var scrollView: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement",
                            "title": "CompactPickerSubscriptionStoreControlStyle.Placement",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle",
                        "title": "CompactPickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the paged picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/pagedpicker",
                            "title": "static var pagedPicker: PagedPickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting a placement",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/automatic",
                                "title": "static var automatic: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/bottombar",
                                "title": "static var bottomBar: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/buttonsinbottombar",
                                "title": "static var buttonsInBottomBar: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/scrollview",
                                "title": "static var scrollView: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement",
                            "title": "PagedPickerSubscriptionStoreControlStyle.Placement",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle",
                        "title": "PagedPickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the paged prominent picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/pagedprominentpicker",
                            "title": "static var pagedProminentPicker: PagedProminentPickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/pagedprominentpickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/pagedprominentpickersubscriptionstorecontrolstyle/placement",
                            "title": "PagedProminentPickerSubscriptionStoreControlStyle.Placement",
                            "type": "typealias"
                          }
                        ],
                        "path": "/documentation/storekit/pagedprominentpickersubscriptionstorecontrolstyle",
                        "title": "PagedProminentPickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting automatic placements",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement/automatic",
                            "title": "static var automatic: AutomaticSubscriptionStoreControlPlacement",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement/bottombar",
                            "title": "static var bottomBar: AutomaticSubscriptionStoreControlPlacement",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement/buttonsinbottombar",
                            "title": "static var buttonsInBottomBar: AutomaticSubscriptionStoreControlPlacement",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement/scrollview",
                            "title": "static var scrollView: AutomaticSubscriptionStoreControlPlacement",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement/bottom",
                            "title": "static var bottom: AutomaticSubscriptionStoreControlPlacement",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement/leading",
                            "title": "static var leading: AutomaticSubscriptionStoreControlPlacement",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement/trailing",
                            "title": "static var trailing: AutomaticSubscriptionStoreControlPlacement",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/automaticsubscriptionstorecontrolplacement",
                        "title": "AutomaticSubscriptionStoreControlPlacement",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorecontrolstyle",
                    "title": "SubscriptionStoreControlStyle",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting subscription options to merchandise",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/options",
                        "title": "var options: [SubscriptionStoreControlStyleConfiguration.Option]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/sections",
                        "title": "var sections: [SubscriptionStoreControlStyleConfiguration.Section]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the subscription product and offer",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/subscription",
                            "title": "var subscription: Product",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/id",
                            "title": "var id: Product.ID",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/activeoffer",
                            "title": "var activeOffer: Product.SubscriptionOffer?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the icon",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/icon",
                            "title": "var icon: SubscriptionStoreControlStyleConfiguration.Icon?",
                            "type": "property"
                          },
                          {
                            "title": "Purchasing a subscription option",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/subscribe()",
                            "title": "func subscribe()",
                            "type": "method"
                          },
                          {
                            "title": "Looking up dynamic members",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/subscript(dynamicmember:)-8sl2m",
                            "title": "subscript<T>(dynamicMember _: KeyPath<Product.SubscriptionInfo, T?>) -> T?",
                            "type": "subscript"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/subscript(dynamicmember:)-wjww",
                            "title": "subscript<T>(dynamicMember _: KeyPath<Product.SubscriptionInfo, T>) -> T?",
                            "type": "subscript"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/subscript(dynamicmember:)-9g2sm",
                            "title": "subscript<T>(dynamicMember _: KeyPath<Product, T>) -> T",
                            "type": "subscript"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/id",
                                "title": "var id: Product.ID",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option/identifiable-implementations",
                            "title": "Identifiable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/option",
                        "title": "SubscriptionStoreControlStyleConfiguration.Option",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting properties of the subscription picker option",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/subscription",
                            "title": "var subscription: Product",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/activeoffer",
                            "title": "var activeOffer: Product.SubscriptionOffer?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/isselected",
                            "title": "let isSelected: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/icon",
                            "title": "var icon: SubscriptionStoreControlStyleConfiguration.Icon?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/id",
                            "title": "var id: Product.ID",
                            "type": "property"
                          },
                          {
                            "title": "Dynamic member lookup support",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/subscript(dynamicmember:)-2ahxy",
                            "title": "subscript<T>(dynamicMember _: KeyPath<Product.SubscriptionInfo, T?>) -> T?",
                            "type": "subscript"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/subscript(dynamicmember:)-4f3i1",
                            "title": "subscript<T>(dynamicMember _: KeyPath<Product.SubscriptionInfo, T>) -> T?",
                            "type": "subscript"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/subscript(dynamicmember:)-8bsxh",
                            "title": "subscript<T>(dynamicMember _: KeyPath<Product, T>) -> T",
                            "type": "subscript"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/id",
                                "title": "var id: Product.ID",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption/identifiable-implementations",
                            "title": "Identifiable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/pickeroption",
                        "title": "SubscriptionStoreControlStyleConfiguration.PickerOption",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting a section’s content",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/section/options",
                            "title": "var options: [SubscriptionStoreControlStyleConfiguration.Option]",
                            "type": "property"
                          },
                          {
                            "title": "Getting accessory views",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/section/header-swift.property",
                            "title": "var header: SubscriptionStoreControlStyleConfiguration.Section.Header?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/section/footer-swift.property",
                            "title": "var footer: SubscriptionStoreControlStyleConfiguration.Section.Footer?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/section/header-swift.struct",
                            "title": "SubscriptionStoreControlStyleConfiguration.Section.Header",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/section/footer-swift.struct",
                            "title": "SubscriptionStoreControlStyleConfiguration.Section.Footer",
                            "type": "struct"
                          },
                          {
                            "title": "Identifying a section",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/section/id",
                            "title": "SubscriptionStoreControlStyleConfiguration.Section.ID",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/section",
                        "title": "SubscriptionStoreControlStyleConfiguration.Section",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/icon",
                        "title": "SubscriptionStoreControlStyleConfiguration.Icon",
                        "type": "struct"
                      },
                      {
                        "title": "Getting subscription group properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/groupdisplayname",
                        "title": "var groupDisplayName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/autorenewpreference",
                        "title": "var autoRenewPreference: Product?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/alloptions",
                        "title": "var allOptions: [Product]",
                        "type": "property"
                      },
                      {
                        "title": "Getting subscription description visibility",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration/descriptionvisibility",
                        "title": "var descriptionVisibility: Visibility",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorecontrolstyleconfiguration",
                    "title": "SubscriptionStoreControlStyleConfiguration",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting a placement",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolplacement/automatic",
                        "title": "static var automatic: Self",
                        "type": "property"
                      },
                      {
                        "title": "Placement types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the automatic subscription store control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/automatic",
                            "title": "static var automatic: AutomaticSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/automaticsubscriptionstorecontrolstyle",
                        "title": "AutomaticSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the button subscription store style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/buttons",
                            "title": "static var buttons: ButtonsSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/buttonssubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/buttonssubscriptionstorecontrolstyle",
                        "title": "ButtonsSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/picker",
                            "title": "static var picker: PickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/placement",
                            "title": "Placement",
                            "type": "associatedtype"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/pickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/pickersubscriptionstorecontrolstyle",
                        "title": "PickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the compact picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/compactpicker",
                            "title": "static var compactPicker: CompactPickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting a placement",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/automatic",
                                "title": "static var automatic: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/bottombar",
                                "title": "static var bottomBar: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/buttonsinbottombar",
                                "title": "static var buttonsInBottomBar: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement/scrollview",
                                "title": "static var scrollView: CompactPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle/placement",
                            "title": "CompactPickerSubscriptionStoreControlStyle.Placement",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/compactpickersubscriptionstorecontrolstyle",
                        "title": "CompactPickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the paged picker control style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionstorecontrolstyle/pagedpicker",
                            "title": "static var pagedPicker: PagedPickerSubscriptionStoreControlStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "title": "Placing the controls",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting a placement",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/automatic",
                                "title": "static var automatic: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/bottombar",
                                "title": "static var bottomBar: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/buttonsinbottombar",
                                "title": "static var buttonsInBottomBar: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement/scrollview",
                                "title": "static var scrollView: PagedPickerSubscriptionStoreControlStyle.Placement",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle/placement",
                            "title": "PagedPickerSubscriptionStoreControlStyle.Placement",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/pagedpickersubscriptionstorecontrolstyle",
                        "title": "PagedPickerSubscriptionStoreControlStyle",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorecontrolplacement",
                    "title": "SubscriptionStoreControlPlacement",
                    "type": "protocol"
                  },
                  {
                    "title": "Configuring subscription store controls",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorecontrolicon(icon:)",
                    "title": "func subscriptionStoreControlIcon(icon: (Product, Product.SubscriptionInfo) -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorepickeritembackground(_:)",
                    "title": "func subscriptionStorePickerItemBackground(some ShapeStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorepickeritembackground(_:in:)",
                    "title": "func subscriptionStorePickerItemBackground(some ShapeStyle, in: some Shape) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorebuttonlabel(_:)",
                    "title": "func subscriptionStoreButtonLabel(SubscriptionStoreButtonLabel) -> some View",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/action-swift.property",
                        "title": "var action: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/displayname-swift.property",
                        "title": "var displayName: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/multiline-swift.property",
                        "title": "var multiline: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/price-swift.property",
                        "title": "var price: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/singleline-swift.property",
                        "title": "var singleLine: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/action-swift.type.property",
                        "title": "static var action: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/automatic",
                        "title": "static var automatic: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/displayname-swift.type.property",
                        "title": "static var displayName: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/multiline-swift.type.property",
                        "title": "static var multiline: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/price-swift.type.property",
                        "title": "static var price: SubscriptionStoreButtonLabel",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebuttonlabel/singleline-swift.type.property",
                        "title": "static var singleLine: SubscriptionStoreButtonLabel",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorebuttonlabel",
                    "title": "SubscriptionStoreButtonLabel",
                    "type": "struct"
                  },
                  {
                    "title": "Creating custom subscription store control styles",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a subscription store button",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorebutton/init(_:)",
                        "title": "init(SubscriptionStoreControlStyleConfiguration.Option)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorebutton",
                    "title": "SubscriptionStoreButton",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a subscription store picker",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepicker/init(pickercontent:confirmation:)",
                        "title": "init(pickerContent: () -> PickerContent, confirmation: (SubscriptionStoreControlStyleConfiguration.Option) -> ConfirmationContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepicker/init(_:pickeroptioncontent:confirmation:)",
                        "title": "init(SubscriptionStoreControlStyleConfiguration, pickerOptionContent: (SubscriptionStoreControlStyleConfiguration.PickerOption) -> PickerContent, confirmation: (SubscriptionStoreControlStyleConfiguration.Option) -> ConfirmationContent)",
                        "type": "init"
                      },
                      {
                        "title": "Managing a subscription picker’s selection state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepicker/init(selection:pickercontent:confirmation:)",
                        "title": "init(selection: Binding<SubscriptionStoreControlStyleConfiguration.Option?>, pickerContent: () -> PickerContent, confirmation: (SubscriptionStoreControlStyleConfiguration.Option) -> ConfirmationContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepicker/init(_:selection:pickeroptioncontent:confirmation:)",
                        "title": "init(SubscriptionStoreControlStyleConfiguration, selection: Binding<SubscriptionStoreControlStyleConfiguration.Option?>, pickerOptionContent: (SubscriptionStoreControlStyleConfiguration.PickerOption) -> PickerContent, confirmation: (SubscriptionStoreControlStyleConfiguration.Option) -> ConfirmationContent)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorepicker",
                    "title": "SubscriptionStorePicker",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a subscription picker option",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepickeroption/init(_:)-4cb3l",
                        "title": "init(SubscriptionStoreControlStyleConfiguration.Option)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepickeroption/init(_:)-3iu97",
                        "title": "init(SubscriptionStoreControlStyleConfiguration.PickerOption)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepickeroption/init(_:label:)",
                        "title": "init(SubscriptionStoreControlStyleConfiguration.Option, label: (SubscriptionStoreControlStyleConfiguration.PickerOption) -> Label)",
                        "type": "init"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/automaticsubscriptionstorepickeroptionlabel",
                        "title": "AutomaticSubscriptionStorePickerOptionLabel",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorepickeroption",
                    "title": "SubscriptionStorePickerOption",
                    "type": "struct"
                  },
                  {
                    "title": "Declaring the structure of a subscription store",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating subscription option groups",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:content:)-2nlpw",
                        "title": "init(LocalizedStringKey, content: () -> Content)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:content:)-24grh",
                        "title": "init(some StringProtocol, content: () -> Content)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:content:marketingcontent:)-9jybc",
                        "title": "init(LocalizedStringKey, content: () -> Content, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:content:marketingcontent:)-550q0",
                        "title": "init(some StringProtocol, content: () -> Content, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:isincluded:)-uhqa",
                        "title": "init(LocalizedStringKey, isIncluded: (Product) -> Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:isincluded:)-5f3ml",
                        "title": "init(some StringProtocol, isIncluded: (Product) -> Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:isincluded:marketingcontent:)-8vmdm",
                        "title": "init(LocalizedStringKey, isIncluded: (Product) -> Bool, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(_:isincluded:marketingcontent:)-4d72a",
                        "title": "init(some StringProtocol, isIncluded: (Product) -> Bool, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(content:)",
                        "title": "init(content: () -> Content)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(content:label:)",
                        "title": "init(content: () -> Content, label: () -> Label)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(content:label:marketingcontent:)",
                        "title": "init(content: () -> Content, label: () -> Label, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(content:marketingcontent:)",
                        "title": "init(content: () -> Content, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(isincluded:)",
                        "title": "init(isIncluded: (Product) -> Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(isincluded:label:)",
                        "title": "init(isIncluded: (Product) -> Bool, label: () -> Label)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(isincluded:label:marketingcontent:)",
                        "title": "init(isIncluded: (Product) -> Bool, label: () -> Label, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroup/init(isincluded:marketingcontent:)",
                        "title": "init(isIncluded: (Product) -> Bool, marketingContent: () -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/automaticsubscriptionoptiongrouplabel",
                        "title": "AutomaticSubscriptionOptionGroupLabel",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionoptiongroup",
                    "title": "SubscriptionOptionGroup",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating subscription option group sets",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroupset/init(idtype:groupedby:label:)",
                        "title": "init(idType: GroupID.Type, groupedBy: (Product) -> GroupID, label: (GroupID) -> Label)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroupset/init(idtype:groupedby:label:marketingcontent:)",
                        "title": "init(idType: GroupID.Type, groupedBy: (Product) -> GroupID, label: (GroupID) -> Label, marketingContent: (GroupID) -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "title": "Creating the group style",
                        "type": "groupMarker"
                      },
                      {
                        "external": true,
                        "path": "/documentation/swiftui/view/subscriptionstoreoptiongroupstyle(_:)",
                        "title": "func subscriptionStoreOptionGroupStyle(some SubscriptionOptionGroupStyle) -> some View",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionoptiongroupset",
                    "title": "SubscriptionOptionGroupSet",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating subscription period group sets",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionperiodgroupset/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionperiodgroupset/init(marketingcontent:)",
                        "title": "init(marketingContent: (Product.SubscriptionPeriod?) -> MarketingContent)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionperiodgroupset/init(marketingcontent:label:)",
                        "title": "init(marketingContent: (Product.SubscriptionPeriod?) -> MarketingContent, label: (Product.SubscriptionPeriod?) -> Label)",
                        "type": "init"
                      },
                      {
                        "title": "Creating the group style",
                        "type": "groupMarker"
                      },
                      {
                        "external": true,
                        "path": "/documentation/swiftui/view/subscriptionstoreoptiongroupstyle(_:)",
                        "title": "func subscriptionStoreOptionGroupStyle(some SubscriptionOptionGroupStyle) -> some View",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionperiodgroupset",
                    "title": "SubscriptionPeriodGroupSet",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating subscription option sections",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptionsection/init(_:isincluded:footer:)-17lo3",
                        "title": "init(LocalizedStringKey, isIncluded: (Product) -> Bool, footer: () -> Footer)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptionsection/init(_:isincluded:footer:)-36k79",
                        "title": "init(some StringProtocol, isIncluded: (Product) -> Bool, footer: () -> Footer)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptionsection/init(isincluded:header:footer:)",
                        "title": "init(isIncluded: (Product) -> Bool, header: () -> Header, footer: () -> Footer)",
                        "type": "init"
                      },
                      {
                        "title": "Choosing a subscription option group style",
                        "type": "groupMarker"
                      },
                      {
                        "external": true,
                        "path": "/documentation/swiftui/view/subscriptionstoreoptiongroupstyle(_:)",
                        "title": "func subscriptionStoreOptionGroupStyle(some SubscriptionOptionGroupStyle) -> some View",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionoptionsection",
                    "title": "SubscriptionOptionSection",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Implementing store content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/body-swift.property",
                        "title": "var body: Self.Body",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/body-swift.associatedtype",
                        "title": "Body",
                        "type": "associatedtype"
                      },
                      {
                        "title": "Configuring store content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/subscriptionstoreoptiongroupstyle(_:)",
                        "title": "func subscriptionStoreOptionGroupStyle(some SubscriptionOptionGroupStyle) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/subscriptionstorebuttonlabel(_:)",
                        "title": "func subscriptionStoreButtonLabel(SubscriptionStoreButtonLabel) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/storebutton(_:for:)",
                        "title": "func storeButton(Visibility, for: StoreButtonKind...) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/subscriptionstorecontrolstyle(_:placement:)",
                        "title": "func subscriptionStoreControlStyle<S>(S, placement: S.Placement) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/productdescription(_:)",
                        "title": "func productDescription(Visibility) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "title": "Configuring backgrounds",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/subscriptionstorecontrolbackground(_:)-10hv8",
                        "title": "func subscriptionStoreControlBackground(SubscriptionStoreControlBackground) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/subscriptionstorecontrolbackground(_:)-3xzai",
                        "title": "func subscriptionStoreControlBackground(some ShapeStyle) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/subscriptionstorepickeritembackground(_:)",
                        "title": "func subscriptionStorePickerItemBackground(some ShapeStyle) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontent/subscriptionstorepickeritembackground(_:in:)",
                        "title": "func subscriptionStorePickerItemBackground(some ShapeStyle, in: some Shape) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/identifiedstorecontent",
                        "title": "IdentifiedStoreContent",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/storecontent",
                    "title": "StoreContent",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Building store content",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storecontentbuilder/buildblock(_:)",
                        "title": "static func buildBlock<each Content>(repeat each Content) -> TupleStoreContent<repeat each Content>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontentbuilder/buildeither(first:)",
                        "title": "static func buildEither<TrueContent, FalseContent>(first: TrueContent) -> _ConditionalContent<TrueContent, FalseContent>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontentbuilder/buildeither(second:)",
                        "title": "static func buildEither<TrueContent, FalseContent>(second: FalseContent) -> _ConditionalContent<TrueContent, FalseContent>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontentbuilder/buildexpression(_:)",
                        "title": "static func buildExpression<Content>(Content) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontentbuilder/buildif(_:)",
                        "title": "static func buildIf<Content>(Content?) -> Content?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/storecontentbuilder/buildlimitedavailability(_:)",
                        "title": "static func buildLimitedAvailability(any StoreContent) -> some StoreContent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/tuplestorecontent",
                        "title": "TupleStoreContent",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/storecontentbuilder",
                    "title": "StoreContentBuilder",
                    "type": "struct"
                  },
                  {
                    "title": "Styling subscription option groups",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstoreoptiongroupstyle(_:)",
                    "title": "func subscriptionStoreOptionGroupStyle(some SubscriptionOptionGroupStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/storecontent/subscriptionstoreoptiongroupstyle(_:)",
                    "title": "func subscriptionStoreOptionGroupStyle(some SubscriptionOptionGroupStyle) -> some StoreContent",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting built-in subscription option group styles",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroupstyle/automatic",
                        "title": "static var automatic: AutomaticSubscriptionOptionGroupStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroupstyle/links",
                        "title": "static var links: LinksSubscriptionOptionGroupStyle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroupstyle/tabs",
                        "title": "static var tabs: TabsSubscriptionOptionGroupStyle",
                        "type": "property"
                      },
                      {
                        "title": "Supporting types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the automatic style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionoptiongroupstyle/automatic",
                            "title": "static var automatic: AutomaticSubscriptionOptionGroupStyle",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/automaticsubscriptionoptiongroupstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/automaticsubscriptionoptiongroupstyle",
                        "title": "AutomaticSubscriptionOptionGroupStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the links style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionoptiongroupstyle/links",
                            "title": "static var links: LinksSubscriptionOptionGroupStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/linkssubscriptionoptiongroupstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/linkssubscriptionoptiongroupstyle",
                        "title": "LinksSubscriptionOptionGroupStyle",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the tabs style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/subscriptionoptiongroupstyle/tabs",
                            "title": "static var tabs: TabsSubscriptionOptionGroupStyle",
                            "type": "property"
                          },
                          {
                            "title": "Creating the style",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/tabssubscriptionoptiongroupstyle/init()",
                            "title": "init()",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/tabssubscriptionoptiongroupstyle",
                        "title": "TabsSubscriptionOptionGroupStyle",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionoptiongroupstyleoutput",
                        "title": "SubscriptionOptionGroupStyleOutput",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionoptiongroupstyle",
                    "title": "SubscriptionOptionGroupStyle",
                    "type": "protocol"
                  },
                  {
                    "title": "Adding backgrounds to subscription stores",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/containerbackground(_:for:)",
                    "title": "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/containerbackground(for:alignment:content:)",
                    "title": "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorecontrolbackground(_:)-7jxa9",
                    "title": "func subscriptionStoreControlBackground(some ShapeStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorecontrolbackground(_:)-7ev89",
                    "title": "func subscriptionStoreControlBackground(SubscriptionStoreControlBackground) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/containerbackgroundplacement/subscriptionstore",
                    "title": "static var subscriptionStore: ContainerBackgroundPlacement",
                    "type": "property"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/containerbackgroundplacement/subscriptionstoreheader",
                    "title": "static var subscriptionStoreHeader: ContainerBackgroundPlacement",
                    "type": "property"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/containerbackgroundplacement/subscriptionstorefullheight",
                    "title": "static var subscriptionStoreFullHeight: ContainerBackgroundPlacement",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Background types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolbackground/automatic",
                        "title": "static var automatic: SubscriptionStoreControlBackground",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolbackground/gradientmaterial",
                        "title": "static var gradientMaterial: SubscriptionStoreControlBackground",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorecontrolbackground/gradientmaterialonscroll",
                        "title": "static var gradientMaterialOnScroll: SubscriptionStoreControlBackground",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorecontrolbackground",
                    "title": "SubscriptionStoreControlBackground",
                    "type": "struct"
                  },
                  {
                    "title": "Configuring accessory buttons",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/storebutton(_:for:)",
                    "title": "func storeButton(Visibility, for: StoreButtonKind...) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstoresigninaction(_:)",
                    "title": "func subscriptionStoreSignInAction((() -> ())?) -> some View",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting button types for store views",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storebuttonkind/cancellation",
                        "title": "static var cancellation: StoreButtonKind",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/storebuttonkind/restorepurchases",
                        "title": "static var restorePurchases: StoreButtonKind",
                        "type": "property"
                      },
                      {
                        "title": "Getting additional button types for subscription store views",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/storebuttonkind/signin",
                        "title": "static var signIn: StoreButtonKind",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/storebuttonkind/redeemcode",
                        "title": "static var redeemCode: StoreButtonKind",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/storebuttonkind/policies",
                        "title": "static var policies: StoreButtonKind",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/storebuttonkind",
                    "title": "StoreButtonKind",
                    "type": "struct"
                  },
                  {
                    "title": "Configuring the subscription store policies",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorepolicydestination(for:destination:)",
                    "title": "func subscriptionStorePolicyDestination(for: SubscriptionStorePolicyKind, destination: () -> some View) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorepolicydestination(url:for:)",
                    "title": "func subscriptionStorePolicyDestination(url: URL, for: SubscriptionStorePolicyKind) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorepolicyforegroundstyle(_:)",
                    "title": "func subscriptionStorePolicyForegroundStyle(some ShapeStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstorepolicyforegroundstyle(_:_:)",
                    "title": "func subscriptionStorePolicyForegroundStyle(some ShapeStyle, some ShapeStyle) -> some View",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting policy types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepolicykind/privacypolicy",
                        "title": "static var privacyPolicy: SubscriptionStorePolicyKind",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/subscriptionstorepolicykind/termsofservice",
                        "title": "static var termsOfService: SubscriptionStorePolicyKind",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptionstorepolicykind",
                    "title": "SubscriptionStorePolicyKind",
                    "type": "struct"
                  },
                  {
                    "title": "Selecting subscription offers",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionpromotionaloffer(offer:signature:)",
                    "title": "func subscriptionPromotionalOffer(offer: (Product, Product.SubscriptionInfo) -> Product.SubscriptionOffer?, signature: (Product, Product.SubscriptionInfo, Product.SubscriptionOffer) async throws -> Product.SubscriptionOffer.Signature) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/preferredsubscriptionoffer(_:)",
                    "title": "func preferredSubscriptionOffer((Product, Product.SubscriptionInfo, [Product.SubscriptionOffer]) -> Product.SubscriptionOffer?) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/offercoderedemption(ispresented:oncompletion:)",
                    "title": "func offerCodeRedemption(isPresented: Binding<Bool>, onCompletion: (Result<Void, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "title": "Configuring purchase options and product descriptions",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/inapppurchaseoptions(_:)",
                    "title": "func inAppPurchaseOptions(((Product) async -> Set<Product.PurchaseOption>)?) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/productdescription(_:)",
                    "title": "func productDescription(Visibility) -> some View",
                    "type": "method"
                  },
                  {
                    "title": "Responding to store events",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/oninapppurchasestart(perform:)",
                    "title": "func onInAppPurchaseStart(perform: ((Product) async -> ())?) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/oninapppurchasecompletion(perform:)",
                    "title": "func onInAppPurchaseCompletion(perform: ((Product, Result<Product.PurchaseResult, any Error>) async -> ())?) -> some View",
                    "type": "method"
                  },
                  {
                    "title": "Loading StoreKit data",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/storeproducttask(for:priority:action:)",
                    "title": "func storeProductTask(for: Product.ID, priority: TaskPriority, action: (Product.TaskState) async -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/storeproductstask(for:priority:action:)",
                    "title": "func storeProductsTask(for: some Collection<String> & Equatable & Sendable, priority: TaskPriority, action: (Product.CollectionTaskState) async -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/currententitlementtask(for:priority:action:)",
                    "title": "func currentEntitlementTask(for: String, priority: TaskPriority, action: (EntitlementTaskState<VerificationResult<Transaction>?>) async -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/subscriptionstatustask(for:priority:action:)",
                    "title": "func subscriptionStatusTask(for: String, priority: TaskPriority, action: (EntitlementTaskState<[Product.SubscriptionInfo.Status]>) async -> ()) -> some View",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Collection task states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/loading",
                        "title": "case loading",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/success(_:unavailable:)",
                        "title": "case success([Product], unavailable: [Product.ID])",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/failure(_:)",
                        "title": "case failure(any Error)",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/products",
                        "title": "var products: [Product]?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/collectiontaskstate",
                    "title": "Product.CollectionTaskState",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Task states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/loading",
                        "title": "case loading",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/success(_:)",
                        "title": "case success(Product)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/unavailable",
                        "title": "case unavailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/failure(_:)",
                        "title": "case failure(any Error)",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/product",
                        "title": "var product: Product?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/taskstate",
                    "title": "Product.TaskState",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the task state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/loading",
                        "title": "case loading",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/success(_:)",
                        "title": "case success(Value)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/failure(_:)",
                        "title": "case failure(any Error)",
                        "type": "case"
                      },
                      {
                        "title": "Getting the transaction with the entitlement",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/transaction",
                        "title": "var transaction: VerificationResult<Transaction>?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/value",
                        "title": "var value: Value?",
                        "type": "property"
                      },
                      {
                        "title": "Helper methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/flatmap(_:)-7gsnv",
                        "title": "func flatMap<NewValue>((Value) throws -> EntitlementTaskState<NewValue>) rethrows -> EntitlementTaskState<NewValue>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/flatmap(_:)-66eb8",
                        "title": "func flatMap<NewValue>((Value) async throws -> EntitlementTaskState<NewValue>) async rethrows -> EntitlementTaskState<NewValue>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/map(_:)-8ly3v",
                        "title": "func map<NewValue>((Value) throws -> NewValue) rethrows -> EntitlementTaskState<NewValue>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/entitlementtaskstate/map(_:)-250dk",
                        "title": "func map<NewValue>((Value) async throws -> NewValue) async rethrows -> EntitlementTaskState<NewValue>",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/entitlementtaskstate",
                    "title": "EntitlementTaskState",
                    "type": "enum"
                  },
                  {
                    "title": "Refunding a request",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/refundrequestsheet(for:ispresented:ondismiss:)",
                    "title": "func refundRequestSheet(for: Transaction.ID, isPresented: Binding<Bool>, onDismiss: ((Result<Transaction.RefundRequestStatus, Transaction.RefundRequestError>) -> ())?) -> some View",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/storekit-views",
                "title": "StoreKit views",
                "type": "collection"
              },
              {
                "title": "Product and subscription information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/implementing-a-store-in-your-app-using-the-storekit-api",
                "title": "Implementing a store in your app using the StoreKit API",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Requesting products from the App Store",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/products(for:)",
                    "title": "static func products<Identifiers>(for: Identifiers) async throws -> [Product]",
                    "type": "method"
                  },
                  {
                    "title": "Displaying a product description and price",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/displayname",
                    "title": "let displayName: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/description",
                    "title": "let description: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/displayprice",
                    "title": "let displayPrice: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/price",
                    "title": "let price: Decimal",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/priceformatstyle",
                    "title": "var priceFormatStyle: Decimal.FormatStyle.Currency",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionperiodformatstyle",
                    "title": "var subscriptionPeriodFormatStyle: Date.ComponentsFormatStyle",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionperiodunitformatstyle",
                    "title": "var subscriptionPeriodUnitFormatStyle: Product.SubscriptionPeriod.Unit.FormatStyle",
                    "type": "property"
                  },
                  {
                    "title": "Purchasing a product",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/purchase(options:)",
                    "title": "func purchase(options: Set<Product.PurchaseOption>) async throws -> Product.PurchaseResult",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/product/purchase(confirmin:options:)-6dj6y",
                    "title": "func purchase(confirmIn: some UIScene, options: Set<Product.PurchaseOption>) async throws -> Product.PurchaseResult",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/product/purchase(confirmin:options:)-3bivf",
                    "title": "func purchase(confirmIn: UIViewController, options: Set<Product.PurchaseOption>) async throws -> Product.PurchaseResult",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/product/purchase(confirmin:options:)-8eai6",
                    "title": "func purchase(confirmIn: NSWindow, options: Set<Product.PurchaseOption>) async throws -> Product.PurchaseResult",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Setting the purchase options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/appaccounttoken(_:)",
                        "title": "static func appAccountToken(UUID) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/winbackoffer(_:)",
                        "title": "static func winBackOffer(Product.SubscriptionOffer) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/promotionaloffer(offerid:keyid:nonce:signature:timestamp:)",
                        "title": "static func promotionalOffer(offerID: String, keyID: String, nonce: UUID, signature: Data, timestamp: Int) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/promotionaloffer(offerid:signature:)",
                        "title": "static func promotionalOffer(offerID: String, signature: Product.SubscriptionOffer.Signature) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/quantity(_:)",
                        "title": "static func quantity(Int) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "title": "Specifying the behavior for storefront changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/onstorefrontchange(shouldcontinuepurchase:)",
                        "title": "static func onStorefrontChange(shouldContinuePurchase: (Storefront) -> Bool) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "title": "Specifying eligibility for an introductory offer",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/introductoryoffereligibility(compactjws:)",
                        "title": "static func introductoryOfferEligibility(compactJWS: String) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "title": "Setting options for StoreKit Testing in Xcode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/purchasedate(_:renewalbehavior:)",
                        "title": "static func purchaseDate(Date, renewalBehavior: Product.PurchaseOption.SubscriptionRenewalBehavior) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Renewal behaviors in the testing environment",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/purchaseoption/subscriptionrenewalbehavior/cancelimmediately",
                            "title": "case cancelImmediately",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/purchaseoption/subscriptionrenewalbehavior/renewuntilnow",
                            "title": "case renewUntilNow",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/storekit/product/purchaseoption/subscriptionrenewalbehavior",
                        "title": "Product.PurchaseOption.SubscriptionRenewalBehavior",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/codeoffer(referencename:)",
                        "title": "static func codeOffer(referenceName: String) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/promotionaloffer(id:)",
                        "title": "static func promotionalOffer(id: String) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "title": "Setting options for sandbox testing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/simulatesasktobuyinsandbox(_:)",
                        "title": "static func simulatesAskToBuyInSandbox(Bool) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "title": "Setting custom purchase options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/custom(key:value:)-80cvh",
                        "title": "static func custom(key: String, value: Data) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/custom(key:value:)-3g3nc",
                        "title": "static func custom(key: String, value: String) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/custom(key:value:)-8tjim",
                        "title": "static func custom(key: String, value: Bool) -> Product.PurchaseOption",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseoption/custom(key:value:)-7rju9",
                        "title": "static func custom(key: String, value: Double) -> Product.PurchaseOption",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/product/purchaseoption",
                    "title": "Product.PurchaseOption",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Purchase Results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseresult/success(_:)",
                        "title": "case success(VerificationResult<Transaction>)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseresult/usercancelled",
                        "title": "case userCancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseresult/pending",
                        "title": "case pending",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/product/purchaseresult",
                    "title": "Product.PurchaseResult",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Purchase Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/invalidofferidentifier",
                        "title": "case invalidOfferIdentifier",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/productunavailable",
                        "title": "case productUnavailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/purchasenotallowed",
                        "title": "case purchaseNotAllowed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/ineligibleforoffer",
                        "title": "case ineligibleForOffer",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/invalidofferprice",
                        "title": "case invalidOfferPrice",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/invalidoffersignature",
                        "title": "case invalidOfferSignature",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/invalidquantity",
                        "title": "case invalidQuantity",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/purchaseerror/missingofferparameters",
                        "title": "case missingOfferParameters",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/product/purchaseerror",
                    "title": "Product.PurchaseError",
                    "type": "enum"
                  },
                  {
                    "title": "Receiving current entitlement information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/currententitlement",
                    "title": "var currentEntitlement: VerificationResult<Transaction>?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the latest transaction",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/latesttransaction",
                    "title": "var latestTransaction: VerificationResult<Transaction>?",
                    "type": "property"
                  },
                  {
                    "title": "Getting subscription information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscription",
                    "title": "let subscription: Product.SubscriptionInfo?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining the subscription status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.property",
                        "title": "var status: [Product.SubscriptionInfo.Status]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status(for:)",
                        "title": "static func status(for: String) async throws -> [Product.SubscriptionInfo.Status]",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Monitoring subscription status changes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/updates",
                            "title": "static var updates: Product.SubscriptionInfo.Status.Statuses",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/all",
                            "title": "static var all: AsyncStream<(groupID: String, statuses: [Product.SubscriptionInfo.Status])>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/statuses",
                            "title": "Product.SubscriptionInfo.Status.Statuses",
                            "type": "struct"
                          },
                          {
                            "title": "Getting subscription status information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                            "title": "let state: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/renewalinfo",
                            "title": "let renewalInfo: VerificationResult<Product.SubscriptionInfo.RenewalInfo>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/transaction",
                            "title": "let transaction: VerificationResult<Transaction>",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the environment",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environment",
                                "title": "let environment: AppStore.Environment",
                                "type": "property"
                              },
                              {
                                "title": "Getting the transaction ID",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/originaltransactionid",
                                "title": "let originalTransactionID: UInt64",
                                "type": "property"
                              },
                              {
                                "title": "Identifying the account",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/appaccounttoken",
                                "title": "var appAccountToken: UUID?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/apptransactionid",
                                "title": "var appTransactionID: String",
                                "type": "property"
                              },
                              {
                                "title": "Getting the product ID",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currentproductid",
                                "title": "let currentProductID: String",
                                "type": "property"
                              },
                              {
                                "title": "Getting subscription dates",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/recentsubscriptionstartdate",
                                "title": "var recentSubscriptionStartDate: Date",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewaldate",
                                "title": "var renewalDate: Date?",
                                "type": "property"
                              },
                              {
                                "title": "Getting the renewal or expiration state",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                                "title": "let state: Product.SubscriptionInfo.RenewalState",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/autorenewpreference",
                                "title": "let autoRenewPreference: String?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/willautorenew",
                                "title": "let willAutoRenew: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.property",
                                "title": "let expirationReason: Product.SubscriptionInfo.RenewalInfo.ExpirationReason?",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting the expiration reason",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/autorenewdisabled",
                                    "title": "static let autoRenewDisabled: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/billingerror",
                                    "title": "static let billingError: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/didnotconsenttopriceincrease",
                                    "title": "static let didNotConsentToPriceIncrease: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/productunavailable",
                                    "title": "static let productUnavailable: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/unknown",
                                    "title": "static let unknown: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Getting a localized description",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/localizeddescription",
                                    "title": "var localizedDescription: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct",
                                "title": "Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "struct"
                              },
                              {
                                "title": "Getting subscription offers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offer",
                                "title": "let offer: Transaction.Offer?",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting offer details",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                                    "title": "let id: String?",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                                    "title": "let type: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Getting offer types",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                                        "title": "static let introductory: Transaction.OfferType",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                                        "title": "static let promotional: Transaction.OfferType",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                                        "title": "static let code: Transaction.OfferType",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                                        "title": "static var winBack: Transaction.OfferType",
                                        "type": "property"
                                      },
                                      {
                                        "title": "Getting a localized description",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                                        "title": "var localizedDescription: String",
                                        "type": "property"
                                      }
                                    ],
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct",
                                    "title": "Transaction.OfferType",
                                    "type": "struct"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                                    "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                                    "type": "property"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Getting payment modes",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                                        "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                                        "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                                        "type": "property"
                                      },
                                      {
                                        "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                                        "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                                        "type": "property"
                                      }
                                    ],
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                                    "title": "Transaction.Offer.PaymentMode",
                                    "type": "struct"
                                  },
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                                    "title": "let period: Product.SubscriptionPeriod?",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/transaction/offer-swift.struct",
                                "title": "Transaction.Offer",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/eligiblewinbackofferids",
                                "title": "let eligibleWinBackOfferIDs: [String]",
                                "type": "property"
                              },
                              {
                                "title": "Getting the renewal price and currency",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewalprice",
                                "title": "var renewalPrice: Decimal?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currency",
                                "title": "var currency: Locale.Currency?",
                                "type": "property"
                              },
                              {
                                "title": "Getting billing status",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/isinbillingretry",
                                "title": "let isInBillingRetry: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/graceperiodexpirationdate",
                                "title": "let gracePeriodExpirationDate: Date?",
                                "type": "property"
                              },
                              {
                                "title": "Getting the price increase status",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/managing-price-increases-for-auto-renewable-subscriptions",
                                "title": "Managing Price Increases for Auto-Renewable Subscriptions",
                                "type": "article"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.property",
                                "title": "let priceIncreaseStatus: Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting Price Increase Status",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/noincreasepending",
                                    "title": "case noIncreasePending",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/agreed",
                                    "title": "case agreed",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/pending",
                                    "title": "case pending",
                                    "type": "case"
                                  },
                                  {
                                    "title": "Getting a Localized Description",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/localizeddescription",
                                    "title": "var localizedDescription: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum",
                                "title": "Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                                "type": "enum"
                              },
                              {
                                "title": "Verifying subscription renewal information",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverification",
                                "title": "let deviceVerification: Data",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverificationnonce",
                                "title": "let deviceVerificationNonce: UUID",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/signeddate",
                                "title": "let signedDate: Date",
                                "type": "property"
                              },
                              {
                                "title": "Getting subscription renewal info in JSON format",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/jsonrepresentation",
                                "title": "var jsonRepresentation: Data",
                                "type": "property"
                              },
                              {
                                "title": "Getting renewal information for Advanced Commerce API",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.property",
                                "title": "let advancedCommerceInfo: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo?",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "children": [
                                  {
                                    "title": "Structures",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "children": [
                                      {
                                        "title": "Instance Properties",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "beta": true,
                                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.property",
                                        "title": "let details: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                        "type": "property"
                                      },
                                      {
                                        "title": "Type Aliases",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "beta": true,
                                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.typealias",
                                        "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                        "type": "typealias"
                                      }
                                    ],
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item",
                                    "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item",
                                    "type": "struct"
                                  },
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/consistencytoken",
                                    "title": "let consistencyToken: String",
                                    "type": "property"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/description",
                                    "title": "let description: String",
                                    "type": "property"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/displayname",
                                    "title": "let displayName: String",
                                    "type": "property"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/items",
                                    "title": "let items: [Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item]",
                                    "type": "property"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/period",
                                    "title": "let period: SubscriptionPeriod",
                                    "type": "property"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/requestreferenceid",
                                    "title": "let requestReferenceID: String",
                                    "type": "property"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/taxcode",
                                    "title": "let taxCode: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct",
                                "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo",
                                "type": "struct"
                              },
                              {
                                "title": "Deprecated",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environmentstringrepresentation",
                                "title": "var environmentStringRepresentation: String",
                                "type": "property"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerid",
                                "title": "var offerID: String?",
                                "type": "property"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offertype",
                                "title": "var offerType: Transaction.OfferType?",
                                "type": "property"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currencycode",
                                "title": "var currencyCode: String?",
                                "type": "property"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerpaymentmodestringrepresentation",
                                "title": "var offerPaymentModeStringRepresentation: String?",
                                "type": "property"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerperiodstringrepresentation",
                                "title": "var offerPeriodStringRepresentation: String?",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo",
                            "title": "Product.SubscriptionInfo.RenewalInfo",
                            "type": "struct"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the renewal state",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/subscribed",
                                "title": "static let subscribed: Product.SubscriptionInfo.RenewalState",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/expired",
                                "title": "static let expired: Product.SubscriptionInfo.RenewalState",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/inbillingretryperiod",
                                "title": "static let inBillingRetryPeriod: Product.SubscriptionInfo.RenewalState",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/ingraceperiod",
                                "title": "static let inGracePeriod: Product.SubscriptionInfo.RenewalState",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/revoked",
                                "title": "static let revoked: Product.SubscriptionInfo.RenewalState",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate",
                            "title": "Product.SubscriptionInfo.RenewalState",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct",
                        "title": "Product.SubscriptionInfo.Status",
                        "type": "struct"
                      },
                      {
                        "title": "Identifying the subscription group",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/subscriptiongroupid",
                        "title": "let subscriptionGroupID: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/groupdisplayname",
                        "title": "var groupDisplayName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/grouplevel",
                        "title": "var groupLevel: Int",
                        "type": "property"
                      },
                      {
                        "title": "Getting the subscription period",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/subscriptionperiod",
                        "title": "let subscriptionPeriod: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the subscription period",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/value",
                            "title": "let value: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.property",
                            "title": "let unit: Product.SubscriptionPeriod.Unit",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the subscription period units",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/day",
                                "title": "case day",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/month",
                                "title": "case month",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/week",
                                "title": "case week",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/year",
                                "title": "case year",
                                "type": "case"
                              },
                              {
                                "title": "Getting localized and debug descriptions",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              },
                              {
                                "title": "Getting the formatted description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatted(_:)",
                                "title": "func formatted<S>(S) -> S.FormatOutput",
                                "type": "method"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Formatting subscription period units",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatstyle/format(_:)",
                                    "title": "func format(Product.SubscriptionPeriod.Unit) -> String",
                                    "type": "method"
                                  }
                                ],
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatstyle",
                                "title": "Product.SubscriptionPeriod.Unit.FormatStyle",
                                "type": "struct"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum",
                            "title": "Product.SubscriptionPeriod.Unit",
                            "type": "enum"
                          },
                          {
                            "title": "Getting the period date range",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/daterange(referencedate:)",
                            "title": "func dateRange(referenceDate: Date) -> Range<Date>",
                            "type": "method"
                          },
                          {
                            "title": "Getting subscription periods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/everysixmonths",
                            "title": "static var everySixMonths: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/everythreedays",
                            "title": "static var everyThreeDays: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/everythreemonths",
                            "title": "static var everyThreeMonths: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/everytwomonths",
                            "title": "static var everyTwoMonths: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/everytwoweeks",
                            "title": "static var everyTwoWeeks: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/monthly",
                            "title": "static var monthly: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/weekly",
                            "title": "static var weekly: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/yearly",
                            "title": "static var yearly: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "title": "Formatting the subscription period",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/formatted(_:referencedate:)-3t7wd",
                            "title": "func formatted<S>(S, referenceDate: Date) -> S.FormatOutput",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/formatted(_:referencedate:)-8s3ar",
                            "title": "func formatted<S>(S, referenceDate: Date) -> S.FormatOutput",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionperiod",
                        "title": "Product.SubscriptionPeriod",
                        "type": "struct"
                      },
                      {
                        "title": "Getting introductory offer details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/iseligibleforintrooffer",
                        "title": "var isEligibleForIntroOffer: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/iseligibleforintrooffer(for:)",
                        "title": "static func isEligibleForIntroOffer(for: String) async -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/introductoryoffer",
                        "title": "let introductoryOffer: Product.SubscriptionOffer?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the subscription offer identifier",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/id",
                            "title": "let id: String?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the subscription offer type",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/type",
                            "title": "let type: Product.SubscriptionOffer.OfferType",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting offer types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/offertype/introductory",
                                "title": "static let introductory: Product.SubscriptionOffer.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/offertype/promotional",
                                "title": "static let promotional: Product.SubscriptionOffer.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/offertype/winback",
                                "title": "static let winBack: Product.SubscriptionOffer.OfferType",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/offertype/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype",
                            "title": "Product.SubscriptionOffer.OfferType",
                            "type": "struct"
                          },
                          {
                            "title": "Getting price information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/displayprice",
                            "title": "let displayPrice: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/price",
                            "title": "let price: Decimal",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.property",
                            "title": "let paymentMode: Product.SubscriptionOffer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the payment modes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/freetrial",
                                "title": "static let freeTrial: Product.SubscriptionOffer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payasyougo",
                                "title": "static let payAsYouGo: Product.SubscriptionOffer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payupfront",
                                "title": "static let payUpFront: Product.SubscriptionOffer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct",
                            "title": "Product.SubscriptionOffer.PaymentMode",
                            "type": "struct"
                          },
                          {
                            "title": "Getting the subscription duration",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/period",
                            "title": "let period: Product.SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/periodcount",
                            "title": "let periodCount: Int",
                            "type": "property"
                          },
                          {
                            "title": "Creating a subscription offer signature",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating subscription offer signatures",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/signature/init(keyid:nonce:timestamp:signature:)",
                                "title": "init(keyID: String, nonce: UUID, timestamp: Int, signature: Data)",
                                "type": "init"
                              },
                              {
                                "title": "Getting signature elements",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/signature/keyid",
                                "title": "var keyID: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/signature/nonce",
                                "title": "var nonce: UUID",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/signature/signature",
                                "title": "var signature: Data",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionoffer/signature/timestamp",
                                "title": "var timestamp: Int",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptionoffer/signature",
                            "title": "Product.SubscriptionOffer.Signature",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionoffer",
                        "title": "Product.SubscriptionOffer",
                        "type": "struct"
                      },
                      {
                        "title": "Getting win-back offer details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/winbackoffers",
                        "title": "let winBackOffers: [Product.SubscriptionOffer]",
                        "type": "property"
                      },
                      {
                        "title": "Getting promotional offer details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/promotionaloffers",
                        "title": "let promotionalOffers: [Product.SubscriptionOffer]",
                        "type": "property"
                      },
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the environment",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environment",
                            "title": "let environment: AppStore.Environment",
                            "type": "property"
                          },
                          {
                            "title": "Getting the transaction ID",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/originaltransactionid",
                            "title": "let originalTransactionID: UInt64",
                            "type": "property"
                          },
                          {
                            "title": "Identifying the account",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/appaccounttoken",
                            "title": "var appAccountToken: UUID?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/apptransactionid",
                            "title": "var appTransactionID: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting the product ID",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currentproductid",
                            "title": "let currentProductID: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting subscription dates",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/recentsubscriptionstartdate",
                            "title": "var recentSubscriptionStartDate: Date",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewaldate",
                            "title": "var renewalDate: Date?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the renewal or expiration state",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                            "title": "let state: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/autorenewpreference",
                            "title": "let autoRenewPreference: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/willautorenew",
                            "title": "let willAutoRenew: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.property",
                            "title": "let expirationReason: Product.SubscriptionInfo.RenewalInfo.ExpirationReason?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the expiration reason",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/autorenewdisabled",
                                "title": "static let autoRenewDisabled: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/billingerror",
                                "title": "static let billingError: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/didnotconsenttopriceincrease",
                                "title": "static let didNotConsentToPriceIncrease: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/productunavailable",
                                "title": "static let productUnavailable: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/unknown",
                                "title": "static let unknown: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct",
                            "title": "Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "struct"
                          },
                          {
                            "title": "Getting subscription offers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offer",
                            "title": "let offer: Transaction.Offer?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting offer details",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                                "title": "let id: String?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                                "title": "let type: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting offer types",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                                    "title": "static let introductory: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                                    "title": "static let promotional: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                                    "title": "static let code: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                                    "title": "static var winBack: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Getting a localized description",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                                    "title": "var localizedDescription: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/transaction/offertype-swift.struct",
                                "title": "Transaction.OfferType",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                                "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting payment modes",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                                    "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                                    "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                                    "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                                "title": "Transaction.Offer.PaymentMode",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                                "title": "let period: Product.SubscriptionPeriod?",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offer-swift.struct",
                            "title": "Transaction.Offer",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/eligiblewinbackofferids",
                            "title": "let eligibleWinBackOfferIDs: [String]",
                            "type": "property"
                          },
                          {
                            "title": "Getting the renewal price and currency",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewalprice",
                            "title": "var renewalPrice: Decimal?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currency",
                            "title": "var currency: Locale.Currency?",
                            "type": "property"
                          },
                          {
                            "title": "Getting billing status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/isinbillingretry",
                            "title": "let isInBillingRetry: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/graceperiodexpirationdate",
                            "title": "let gracePeriodExpirationDate: Date?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the price increase status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/managing-price-increases-for-auto-renewable-subscriptions",
                            "title": "Managing Price Increases for Auto-Renewable Subscriptions",
                            "type": "article"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.property",
                            "title": "let priceIncreaseStatus: Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting Price Increase Status",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/noincreasepending",
                                "title": "case noIncreasePending",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/agreed",
                                "title": "case agreed",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/pending",
                                "title": "case pending",
                                "type": "case"
                              },
                              {
                                "title": "Getting a Localized Description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum",
                            "title": "Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                            "type": "enum"
                          },
                          {
                            "title": "Verifying subscription renewal information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverification",
                            "title": "let deviceVerification: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverificationnonce",
                            "title": "let deviceVerificationNonce: UUID",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/signeddate",
                            "title": "let signedDate: Date",
                            "type": "property"
                          },
                          {
                            "title": "Getting subscription renewal info in JSON format",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/jsonrepresentation",
                            "title": "var jsonRepresentation: Data",
                            "type": "property"
                          },
                          {
                            "title": "Getting renewal information for Advanced Commerce API",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.property",
                            "title": "let advancedCommerceInfo: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo?",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Structures",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.property",
                                    "title": "let details: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.typealias",
                                    "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                    "type": "typealias"
                                  }
                                ],
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item",
                                "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/consistencytoken",
                                "title": "let consistencyToken: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/description",
                                "title": "let description: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/displayname",
                                "title": "let displayName: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/items",
                                "title": "let items: [Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item]",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/period",
                                "title": "let period: SubscriptionPeriod",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/requestreferenceid",
                                "title": "let requestReferenceID: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/taxcode",
                                "title": "let taxCode: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct",
                            "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo",
                            "type": "struct"
                          },
                          {
                            "title": "Deprecated",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environmentstringrepresentation",
                            "title": "var environmentStringRepresentation: String",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerid",
                            "title": "var offerID: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offertype",
                            "title": "var offerType: Transaction.OfferType?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currencycode",
                            "title": "var currencyCode: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerpaymentmodestringrepresentation",
                            "title": "var offerPaymentModeStringRepresentation: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerperiodstringrepresentation",
                            "title": "var offerPeriodStringRepresentation: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo",
                        "title": "Product.SubscriptionInfo.RenewalInfo",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the renewal state",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/subscribed",
                            "title": "static let subscribed: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/expired",
                            "title": "static let expired: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/inbillingretryperiod",
                            "title": "static let inBillingRetryPeriod: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/ingraceperiod",
                            "title": "static let inGracePeriod: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/revoked",
                            "title": "static let revoked: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate",
                        "title": "Product.SubscriptionInfo.RenewalState",
                        "type": "struct"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/status(transactionid:)",
                        "title": "static func status(transactionID: UInt64) async throws -> SubscriptionStatus?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo",
                    "title": "Product.SubscriptionInfo",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the subscription period",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/value",
                        "title": "let value: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.property",
                        "title": "let unit: Product.SubscriptionPeriod.Unit",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the subscription period units",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/day",
                            "title": "case day",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/month",
                            "title": "case month",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/week",
                            "title": "case week",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/year",
                            "title": "case year",
                            "type": "case"
                          },
                          {
                            "title": "Getting localized and debug descriptions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting the formatted description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatted(_:)",
                            "title": "func formatted<S>(S) -> S.FormatOutput",
                            "type": "method"
                          },
                          {
                            "children": [
                              {
                                "title": "Formatting subscription period units",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatstyle/format(_:)",
                                "title": "func format(Product.SubscriptionPeriod.Unit) -> String",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatstyle",
                            "title": "Product.SubscriptionPeriod.Unit.FormatStyle",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum",
                        "title": "Product.SubscriptionPeriod.Unit",
                        "type": "enum"
                      },
                      {
                        "title": "Getting the period date range",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/daterange(referencedate:)",
                        "title": "func dateRange(referenceDate: Date) -> Range<Date>",
                        "type": "method"
                      },
                      {
                        "title": "Getting subscription periods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everysixmonths",
                        "title": "static var everySixMonths: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everythreedays",
                        "title": "static var everyThreeDays: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everythreemonths",
                        "title": "static var everyThreeMonths: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everytwomonths",
                        "title": "static var everyTwoMonths: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everytwoweeks",
                        "title": "static var everyTwoWeeks: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/monthly",
                        "title": "static var monthly: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/weekly",
                        "title": "static var weekly: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/yearly",
                        "title": "static var yearly: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "title": "Formatting the subscription period",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/formatted(_:referencedate:)-3t7wd",
                        "title": "func formatted<S>(S, referenceDate: Date) -> S.FormatOutput",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/formatted(_:referencedate:)-8s3ar",
                        "title": "func formatted<S>(S, referenceDate: Date) -> S.FormatOutput",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionperiod",
                    "title": "Product.SubscriptionPeriod",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the subscription offer identifier",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/id",
                        "title": "let id: String?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the subscription offer type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/type",
                        "title": "let type: Product.SubscriptionOffer.OfferType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting offer types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/introductory",
                            "title": "static let introductory: Product.SubscriptionOffer.OfferType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/promotional",
                            "title": "static let promotional: Product.SubscriptionOffer.OfferType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/winback",
                            "title": "static let winBack: Product.SubscriptionOffer.OfferType",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionoffer/offertype",
                        "title": "Product.SubscriptionOffer.OfferType",
                        "type": "struct"
                      },
                      {
                        "title": "Getting price information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/displayprice",
                        "title": "let displayPrice: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/price",
                        "title": "let price: Decimal",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.property",
                        "title": "let paymentMode: Product.SubscriptionOffer.PaymentMode",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the payment modes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/freetrial",
                            "title": "static let freeTrial: Product.SubscriptionOffer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payasyougo",
                            "title": "static let payAsYouGo: Product.SubscriptionOffer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payupfront",
                            "title": "static let payUpFront: Product.SubscriptionOffer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct",
                        "title": "Product.SubscriptionOffer.PaymentMode",
                        "type": "struct"
                      },
                      {
                        "title": "Getting the subscription duration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/period",
                        "title": "let period: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/periodcount",
                        "title": "let periodCount: Int",
                        "type": "property"
                      },
                      {
                        "title": "Creating a subscription offer signature",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating subscription offer signatures",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/init(keyid:nonce:timestamp:signature:)",
                            "title": "init(keyID: String, nonce: UUID, timestamp: Int, signature: Data)",
                            "type": "init"
                          },
                          {
                            "title": "Getting signature elements",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/keyid",
                            "title": "var keyID: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/nonce",
                            "title": "var nonce: UUID",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/signature",
                            "title": "var signature: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/timestamp",
                            "title": "var timestamp: Int",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionoffer/signature",
                        "title": "Product.SubscriptionOffer.Signature",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionoffer",
                    "title": "Product.SubscriptionOffer",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring subscription status changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/updates",
                        "title": "static var updates: Product.SubscriptionInfo.Status.Statuses",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/all",
                        "title": "static var all: AsyncStream<(groupID: String, statuses: [Product.SubscriptionInfo.Status])>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/statuses",
                        "title": "Product.SubscriptionInfo.Status.Statuses",
                        "type": "struct"
                      },
                      {
                        "title": "Getting subscription status information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                        "title": "let state: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/renewalinfo",
                        "title": "let renewalInfo: VerificationResult<Product.SubscriptionInfo.RenewalInfo>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/transaction",
                        "title": "let transaction: VerificationResult<Transaction>",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the environment",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environment",
                            "title": "let environment: AppStore.Environment",
                            "type": "property"
                          },
                          {
                            "title": "Getting the transaction ID",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/originaltransactionid",
                            "title": "let originalTransactionID: UInt64",
                            "type": "property"
                          },
                          {
                            "title": "Identifying the account",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/appaccounttoken",
                            "title": "var appAccountToken: UUID?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/apptransactionid",
                            "title": "var appTransactionID: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting the product ID",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currentproductid",
                            "title": "let currentProductID: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting subscription dates",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/recentsubscriptionstartdate",
                            "title": "var recentSubscriptionStartDate: Date",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewaldate",
                            "title": "var renewalDate: Date?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the renewal or expiration state",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                            "title": "let state: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/autorenewpreference",
                            "title": "let autoRenewPreference: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/willautorenew",
                            "title": "let willAutoRenew: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.property",
                            "title": "let expirationReason: Product.SubscriptionInfo.RenewalInfo.ExpirationReason?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the expiration reason",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/autorenewdisabled",
                                "title": "static let autoRenewDisabled: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/billingerror",
                                "title": "static let billingError: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/didnotconsenttopriceincrease",
                                "title": "static let didNotConsentToPriceIncrease: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/productunavailable",
                                "title": "static let productUnavailable: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/unknown",
                                "title": "static let unknown: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct",
                            "title": "Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "struct"
                          },
                          {
                            "title": "Getting subscription offers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offer",
                            "title": "let offer: Transaction.Offer?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting offer details",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                                "title": "let id: String?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                                "title": "let type: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting offer types",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                                    "title": "static let introductory: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                                    "title": "static let promotional: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                                    "title": "static let code: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                                    "title": "static var winBack: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Getting a localized description",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                                    "title": "var localizedDescription: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/transaction/offertype-swift.struct",
                                "title": "Transaction.OfferType",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                                "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting payment modes",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                                    "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                                    "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                                    "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                                "title": "Transaction.Offer.PaymentMode",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                                "title": "let period: Product.SubscriptionPeriod?",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offer-swift.struct",
                            "title": "Transaction.Offer",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/eligiblewinbackofferids",
                            "title": "let eligibleWinBackOfferIDs: [String]",
                            "type": "property"
                          },
                          {
                            "title": "Getting the renewal price and currency",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewalprice",
                            "title": "var renewalPrice: Decimal?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currency",
                            "title": "var currency: Locale.Currency?",
                            "type": "property"
                          },
                          {
                            "title": "Getting billing status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/isinbillingretry",
                            "title": "let isInBillingRetry: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/graceperiodexpirationdate",
                            "title": "let gracePeriodExpirationDate: Date?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the price increase status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/managing-price-increases-for-auto-renewable-subscriptions",
                            "title": "Managing Price Increases for Auto-Renewable Subscriptions",
                            "type": "article"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.property",
                            "title": "let priceIncreaseStatus: Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting Price Increase Status",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/noincreasepending",
                                "title": "case noIncreasePending",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/agreed",
                                "title": "case agreed",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/pending",
                                "title": "case pending",
                                "type": "case"
                              },
                              {
                                "title": "Getting a Localized Description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum",
                            "title": "Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                            "type": "enum"
                          },
                          {
                            "title": "Verifying subscription renewal information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverification",
                            "title": "let deviceVerification: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverificationnonce",
                            "title": "let deviceVerificationNonce: UUID",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/signeddate",
                            "title": "let signedDate: Date",
                            "type": "property"
                          },
                          {
                            "title": "Getting subscription renewal info in JSON format",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/jsonrepresentation",
                            "title": "var jsonRepresentation: Data",
                            "type": "property"
                          },
                          {
                            "title": "Getting renewal information for Advanced Commerce API",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.property",
                            "title": "let advancedCommerceInfo: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo?",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Structures",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.property",
                                    "title": "let details: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.typealias",
                                    "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                    "type": "typealias"
                                  }
                                ],
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item",
                                "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/consistencytoken",
                                "title": "let consistencyToken: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/description",
                                "title": "let description: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/displayname",
                                "title": "let displayName: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/items",
                                "title": "let items: [Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item]",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/period",
                                "title": "let period: SubscriptionPeriod",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/requestreferenceid",
                                "title": "let requestReferenceID: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/taxcode",
                                "title": "let taxCode: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct",
                            "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo",
                            "type": "struct"
                          },
                          {
                            "title": "Deprecated",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environmentstringrepresentation",
                            "title": "var environmentStringRepresentation: String",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerid",
                            "title": "var offerID: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offertype",
                            "title": "var offerType: Transaction.OfferType?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currencycode",
                            "title": "var currencyCode: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerpaymentmodestringrepresentation",
                            "title": "var offerPaymentModeStringRepresentation: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerperiodstringrepresentation",
                            "title": "var offerPeriodStringRepresentation: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo",
                        "title": "Product.SubscriptionInfo.RenewalInfo",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the renewal state",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/subscribed",
                            "title": "static let subscribed: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/expired",
                            "title": "static let expired: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/inbillingretryperiod",
                            "title": "static let inBillingRetryPeriod: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/ingraceperiod",
                            "title": "static let inGracePeriod: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/revoked",
                            "title": "static let revoked: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate",
                        "title": "Product.SubscriptionInfo.RenewalState",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct",
                    "title": "Product.SubscriptionInfo.Status",
                    "type": "struct"
                  },
                  {
                    "title": "Getting product identifiers and type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/id",
                    "title": "let id: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/type",
                    "title": "let type: Product.ProductType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Product Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/producttype/consumable",
                        "title": "static let consumable: Product.ProductType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/producttype/nonconsumable",
                        "title": "static let nonConsumable: Product.ProductType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/producttype/nonrenewable",
                        "title": "static let nonRenewable: Product.ProductType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/producttype/autorenewable",
                        "title": "static let autoRenewable: Product.ProductType",
                        "type": "property"
                      },
                      {
                        "title": "Getting a Localized Description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/producttype/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/producttype",
                    "title": "Product.ProductType",
                    "type": "struct"
                  },
                  {
                    "title": "Getting Family Sharing status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/isfamilyshareable",
                    "title": "let isFamilyShareable: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Managing promoted in-app purchases",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the product ID",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/productid",
                        "title": "let productID: Product.ID",
                        "type": "property"
                      },
                      {
                        "title": "Managing promotion order",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/updateproductorder(byid:)",
                        "title": "static func updateProductOrder(byID: some Collection<String>) async throws",
                        "type": "method"
                      },
                      {
                        "title": "Getting overridden order",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/currentorder",
                        "title": "static var currentOrder: [Product.PromotionInfo]",
                        "type": "property"
                      },
                      {
                        "title": "Managing promotion visibility",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/visibility-swift.property",
                        "title": "var visibility: Product.PromotionInfo.Visibility",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting visibility states",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum/appstoreconnectdefault",
                            "title": "case appStoreConnectDefault",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum/hidden",
                            "title": "case hidden",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum/visible",
                            "title": "case visible",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum",
                        "title": "Product.PromotionInfo.Visibility",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/updateproductvisibility(_:for:)",
                        "title": "static func updateProductVisibility(Product.PromotionInfo.Visibility, for: Product.ID) async throws",
                        "type": "method"
                      },
                      {
                        "title": "Updating order and visibility",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/update()",
                        "title": "func update() async throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/updateall(_:)",
                        "title": "static func updateAll(some Collection<Product.PromotionInfo>) async throws",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/product/promotioninfo",
                    "title": "Product.PromotionInfo",
                    "type": "struct"
                  },
                  {
                    "title": "Loading products",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Collection task states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/loading",
                        "title": "case loading",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/success(_:unavailable:)",
                        "title": "case success([Product], unavailable: [Product.ID])",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/failure(_:)",
                        "title": "case failure(any Error)",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/collectiontaskstate/products",
                        "title": "var products: [Product]?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/collectiontaskstate",
                    "title": "Product.CollectionTaskState",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Task states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/loading",
                        "title": "case loading",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/success(_:)",
                        "title": "case success(Product)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/unavailable",
                        "title": "case unavailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/failure(_:)",
                        "title": "case failure(any Error)",
                        "type": "case"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/taskstate/product",
                        "title": "var product: Product?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/taskstate",
                    "title": "Product.TaskState",
                    "type": "enum"
                  },
                  {
                    "title": "Getting product info in JSON format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/jsonrepresentation",
                    "title": "var jsonRepresentation: Data",
                    "type": "property"
                  },
                  {
                    "title": "Getting subscription relationship",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting subscription relationships",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionrelationship/all",
                        "title": "static let all: Product.SubscriptionRelationship",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionrelationship/crossgrade",
                        "title": "static let crossgrade: Product.SubscriptionRelationship",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionrelationship/current",
                        "title": "static let current: Product.SubscriptionRelationship",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionrelationship/downgrade",
                        "title": "static let downgrade: Product.SubscriptionRelationship",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionrelationship/upgrade",
                        "title": "static let upgrade: Product.SubscriptionRelationship",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionrelationship",
                    "title": "Product.SubscriptionRelationship",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/storekit/product",
                "title": "Product",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Determining the subscription status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.property",
                    "title": "var status: [Product.SubscriptionInfo.Status]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status(for:)",
                    "title": "static func status(for: String) async throws -> [Product.SubscriptionInfo.Status]",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Monitoring subscription status changes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/updates",
                        "title": "static var updates: Product.SubscriptionInfo.Status.Statuses",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/all",
                        "title": "static var all: AsyncStream<(groupID: String, statuses: [Product.SubscriptionInfo.Status])>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/statuses",
                        "title": "Product.SubscriptionInfo.Status.Statuses",
                        "type": "struct"
                      },
                      {
                        "title": "Getting subscription status information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                        "title": "let state: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/renewalinfo",
                        "title": "let renewalInfo: VerificationResult<Product.SubscriptionInfo.RenewalInfo>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/transaction",
                        "title": "let transaction: VerificationResult<Transaction>",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the environment",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environment",
                            "title": "let environment: AppStore.Environment",
                            "type": "property"
                          },
                          {
                            "title": "Getting the transaction ID",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/originaltransactionid",
                            "title": "let originalTransactionID: UInt64",
                            "type": "property"
                          },
                          {
                            "title": "Identifying the account",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/appaccounttoken",
                            "title": "var appAccountToken: UUID?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/apptransactionid",
                            "title": "var appTransactionID: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting the product ID",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currentproductid",
                            "title": "let currentProductID: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting subscription dates",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/recentsubscriptionstartdate",
                            "title": "var recentSubscriptionStartDate: Date",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewaldate",
                            "title": "var renewalDate: Date?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the renewal or expiration state",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                            "title": "let state: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/autorenewpreference",
                            "title": "let autoRenewPreference: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/willautorenew",
                            "title": "let willAutoRenew: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.property",
                            "title": "let expirationReason: Product.SubscriptionInfo.RenewalInfo.ExpirationReason?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the expiration reason",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/autorenewdisabled",
                                "title": "static let autoRenewDisabled: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/billingerror",
                                "title": "static let billingError: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/didnotconsenttopriceincrease",
                                "title": "static let didNotConsentToPriceIncrease: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/productunavailable",
                                "title": "static let productUnavailable: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/unknown",
                                "title": "static let unknown: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct",
                            "title": "Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "struct"
                          },
                          {
                            "title": "Getting subscription offers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offer",
                            "title": "let offer: Transaction.Offer?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting offer details",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                                "title": "let id: String?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                                "title": "let type: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting offer types",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                                    "title": "static let introductory: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                                    "title": "static let promotional: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                                    "title": "static let code: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                                    "title": "static var winBack: Transaction.OfferType",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Getting a localized description",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                                    "title": "var localizedDescription: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/transaction/offertype-swift.struct",
                                "title": "Transaction.OfferType",
                                "type": "struct"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                                "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Getting payment modes",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                                    "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                                    "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                                    "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                                "title": "Transaction.Offer.PaymentMode",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                                "title": "let period: Product.SubscriptionPeriod?",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offer-swift.struct",
                            "title": "Transaction.Offer",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/eligiblewinbackofferids",
                            "title": "let eligibleWinBackOfferIDs: [String]",
                            "type": "property"
                          },
                          {
                            "title": "Getting the renewal price and currency",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewalprice",
                            "title": "var renewalPrice: Decimal?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currency",
                            "title": "var currency: Locale.Currency?",
                            "type": "property"
                          },
                          {
                            "title": "Getting billing status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/isinbillingretry",
                            "title": "let isInBillingRetry: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/graceperiodexpirationdate",
                            "title": "let gracePeriodExpirationDate: Date?",
                            "type": "property"
                          },
                          {
                            "title": "Getting the price increase status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/managing-price-increases-for-auto-renewable-subscriptions",
                            "title": "Managing Price Increases for Auto-Renewable Subscriptions",
                            "type": "article"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.property",
                            "title": "let priceIncreaseStatus: Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting Price Increase Status",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/noincreasepending",
                                "title": "case noIncreasePending",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/agreed",
                                "title": "case agreed",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/pending",
                                "title": "case pending",
                                "type": "case"
                              },
                              {
                                "title": "Getting a Localized Description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum",
                            "title": "Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                            "type": "enum"
                          },
                          {
                            "title": "Verifying subscription renewal information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverification",
                            "title": "let deviceVerification: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverificationnonce",
                            "title": "let deviceVerificationNonce: UUID",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/signeddate",
                            "title": "let signedDate: Date",
                            "type": "property"
                          },
                          {
                            "title": "Getting subscription renewal info in JSON format",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/jsonrepresentation",
                            "title": "var jsonRepresentation: Data",
                            "type": "property"
                          },
                          {
                            "title": "Getting renewal information for Advanced Commerce API",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.property",
                            "title": "let advancedCommerceInfo: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo?",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Structures",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.property",
                                    "title": "let details: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "beta": true,
                                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.typealias",
                                    "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                    "type": "typealias"
                                  }
                                ],
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item",
                                "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/consistencytoken",
                                "title": "let consistencyToken: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/description",
                                "title": "let description: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/displayname",
                                "title": "let displayName: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/items",
                                "title": "let items: [Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item]",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/period",
                                "title": "let period: SubscriptionPeriod",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/requestreferenceid",
                                "title": "let requestReferenceID: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/taxcode",
                                "title": "let taxCode: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct",
                            "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo",
                            "type": "struct"
                          },
                          {
                            "title": "Deprecated",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environmentstringrepresentation",
                            "title": "var environmentStringRepresentation: String",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerid",
                            "title": "var offerID: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offertype",
                            "title": "var offerType: Transaction.OfferType?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currencycode",
                            "title": "var currencyCode: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerpaymentmodestringrepresentation",
                            "title": "var offerPaymentModeStringRepresentation: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerperiodstringrepresentation",
                            "title": "var offerPeriodStringRepresentation: String?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo",
                        "title": "Product.SubscriptionInfo.RenewalInfo",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the renewal state",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/subscribed",
                            "title": "static let subscribed: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/expired",
                            "title": "static let expired: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/inbillingretryperiod",
                            "title": "static let inBillingRetryPeriod: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/ingraceperiod",
                            "title": "static let inGracePeriod: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/revoked",
                            "title": "static let revoked: Product.SubscriptionInfo.RenewalState",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate",
                        "title": "Product.SubscriptionInfo.RenewalState",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct",
                    "title": "Product.SubscriptionInfo.Status",
                    "type": "struct"
                  },
                  {
                    "title": "Identifying the subscription group",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/subscriptiongroupid",
                    "title": "let subscriptionGroupID: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/groupdisplayname",
                    "title": "var groupDisplayName: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/grouplevel",
                    "title": "var groupLevel: Int",
                    "type": "property"
                  },
                  {
                    "title": "Getting the subscription period",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/subscriptionperiod",
                    "title": "let subscriptionPeriod: Product.SubscriptionPeriod",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the subscription period",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/value",
                        "title": "let value: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.property",
                        "title": "let unit: Product.SubscriptionPeriod.Unit",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the subscription period units",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/day",
                            "title": "case day",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/month",
                            "title": "case month",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/week",
                            "title": "case week",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/year",
                            "title": "case year",
                            "type": "case"
                          },
                          {
                            "title": "Getting localized and debug descriptions",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          },
                          {
                            "title": "Getting the formatted description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatted(_:)",
                            "title": "func formatted<S>(S) -> S.FormatOutput",
                            "type": "method"
                          },
                          {
                            "children": [
                              {
                                "title": "Formatting subscription period units",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatstyle/format(_:)",
                                "title": "func format(Product.SubscriptionPeriod.Unit) -> String",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum/formatstyle",
                            "title": "Product.SubscriptionPeriod.Unit.FormatStyle",
                            "type": "struct"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionperiod/unit-swift.enum",
                        "title": "Product.SubscriptionPeriod.Unit",
                        "type": "enum"
                      },
                      {
                        "title": "Getting the period date range",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/daterange(referencedate:)",
                        "title": "func dateRange(referenceDate: Date) -> Range<Date>",
                        "type": "method"
                      },
                      {
                        "title": "Getting subscription periods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everysixmonths",
                        "title": "static var everySixMonths: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everythreedays",
                        "title": "static var everyThreeDays: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everythreemonths",
                        "title": "static var everyThreeMonths: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everytwomonths",
                        "title": "static var everyTwoMonths: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/everytwoweeks",
                        "title": "static var everyTwoWeeks: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/monthly",
                        "title": "static var monthly: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/weekly",
                        "title": "static var weekly: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/yearly",
                        "title": "static var yearly: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "title": "Formatting the subscription period",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/formatted(_:referencedate:)-3t7wd",
                        "title": "func formatted<S>(S, referenceDate: Date) -> S.FormatOutput",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionperiod/formatted(_:referencedate:)-8s3ar",
                        "title": "func formatted<S>(S, referenceDate: Date) -> S.FormatOutput",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionperiod",
                    "title": "Product.SubscriptionPeriod",
                    "type": "struct"
                  },
                  {
                    "title": "Getting introductory offer details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/iseligibleforintrooffer",
                    "title": "var isEligibleForIntroOffer: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/iseligibleforintrooffer(for:)",
                    "title": "static func isEligibleForIntroOffer(for: String) async -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/introductoryoffer",
                    "title": "let introductoryOffer: Product.SubscriptionOffer?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the subscription offer identifier",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/id",
                        "title": "let id: String?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the subscription offer type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/type",
                        "title": "let type: Product.SubscriptionOffer.OfferType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting offer types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/introductory",
                            "title": "static let introductory: Product.SubscriptionOffer.OfferType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/promotional",
                            "title": "static let promotional: Product.SubscriptionOffer.OfferType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/winback",
                            "title": "static let winBack: Product.SubscriptionOffer.OfferType",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/offertype/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionoffer/offertype",
                        "title": "Product.SubscriptionOffer.OfferType",
                        "type": "struct"
                      },
                      {
                        "title": "Getting price information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/displayprice",
                        "title": "let displayPrice: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/price",
                        "title": "let price: Decimal",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.property",
                        "title": "let paymentMode: Product.SubscriptionOffer.PaymentMode",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the payment modes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/freetrial",
                            "title": "static let freeTrial: Product.SubscriptionOffer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payasyougo",
                            "title": "static let payAsYouGo: Product.SubscriptionOffer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payupfront",
                            "title": "static let payUpFront: Product.SubscriptionOffer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct",
                        "title": "Product.SubscriptionOffer.PaymentMode",
                        "type": "struct"
                      },
                      {
                        "title": "Getting the subscription duration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/period",
                        "title": "let period: Product.SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/periodcount",
                        "title": "let periodCount: Int",
                        "type": "property"
                      },
                      {
                        "title": "Creating a subscription offer signature",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating subscription offer signatures",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/init(keyid:nonce:timestamp:signature:)",
                            "title": "init(keyID: String, nonce: UUID, timestamp: Int, signature: Data)",
                            "type": "init"
                          },
                          {
                            "title": "Getting signature elements",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/keyid",
                            "title": "var keyID: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/nonce",
                            "title": "var nonce: UUID",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/signature",
                            "title": "var signature: Data",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptionoffer/signature/timestamp",
                            "title": "var timestamp: Int",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptionoffer/signature",
                        "title": "Product.SubscriptionOffer.Signature",
                        "type": "struct"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionoffer",
                    "title": "Product.SubscriptionOffer",
                    "type": "struct"
                  },
                  {
                    "title": "Getting win-back offer details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/winbackoffers",
                    "title": "let winBackOffers: [Product.SubscriptionOffer]",
                    "type": "property"
                  },
                  {
                    "title": "Getting promotional offer details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/promotionaloffers",
                    "title": "let promotionalOffers: [Product.SubscriptionOffer]",
                    "type": "property"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the environment",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environment",
                        "title": "let environment: AppStore.Environment",
                        "type": "property"
                      },
                      {
                        "title": "Getting the transaction ID",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/originaltransactionid",
                        "title": "let originalTransactionID: UInt64",
                        "type": "property"
                      },
                      {
                        "title": "Identifying the account",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/appaccounttoken",
                        "title": "var appAccountToken: UUID?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/apptransactionid",
                        "title": "var appTransactionID: String",
                        "type": "property"
                      },
                      {
                        "title": "Getting the product ID",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currentproductid",
                        "title": "let currentProductID: String",
                        "type": "property"
                      },
                      {
                        "title": "Getting subscription dates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/recentsubscriptionstartdate",
                        "title": "var recentSubscriptionStartDate: Date",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewaldate",
                        "title": "var renewalDate: Date?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the renewal or expiration state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                        "title": "let state: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/autorenewpreference",
                        "title": "let autoRenewPreference: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/willautorenew",
                        "title": "let willAutoRenew: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.property",
                        "title": "let expirationReason: Product.SubscriptionInfo.RenewalInfo.ExpirationReason?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the expiration reason",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/autorenewdisabled",
                            "title": "static let autoRenewDisabled: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/billingerror",
                            "title": "static let billingError: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/didnotconsenttopriceincrease",
                            "title": "static let didNotConsentToPriceIncrease: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/productunavailable",
                            "title": "static let productUnavailable: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/unknown",
                            "title": "static let unknown: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct",
                        "title": "Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                        "type": "struct"
                      },
                      {
                        "title": "Getting subscription offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offer",
                        "title": "let offer: Transaction.Offer?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting offer details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                            "title": "let id: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                            "title": "let type: Transaction.OfferType",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting offer types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                                "title": "static let introductory: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                                "title": "static let promotional: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                                "title": "static let code: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                                "title": "static var winBack: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offertype-swift.struct",
                            "title": "Transaction.OfferType",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                            "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting payment modes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                                "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                                "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                                "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                            "title": "Transaction.Offer.PaymentMode",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                            "title": "let period: Product.SubscriptionPeriod?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/offer-swift.struct",
                        "title": "Transaction.Offer",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/eligiblewinbackofferids",
                        "title": "let eligibleWinBackOfferIDs: [String]",
                        "type": "property"
                      },
                      {
                        "title": "Getting the renewal price and currency",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewalprice",
                        "title": "var renewalPrice: Decimal?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currency",
                        "title": "var currency: Locale.Currency?",
                        "type": "property"
                      },
                      {
                        "title": "Getting billing status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/isinbillingretry",
                        "title": "let isInBillingRetry: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/graceperiodexpirationdate",
                        "title": "let gracePeriodExpirationDate: Date?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the price increase status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/managing-price-increases-for-auto-renewable-subscriptions",
                        "title": "Managing Price Increases for Auto-Renewable Subscriptions",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.property",
                        "title": "let priceIncreaseStatus: Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Price Increase Status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/noincreasepending",
                            "title": "case noIncreasePending",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/agreed",
                            "title": "case agreed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/pending",
                            "title": "case pending",
                            "type": "case"
                          },
                          {
                            "title": "Getting a Localized Description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum",
                        "title": "Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                        "type": "enum"
                      },
                      {
                        "title": "Verifying subscription renewal information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverification",
                        "title": "let deviceVerification: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverificationnonce",
                        "title": "let deviceVerificationNonce: UUID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/signeddate",
                        "title": "let signedDate: Date",
                        "type": "property"
                      },
                      {
                        "title": "Getting subscription renewal info in JSON format",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/jsonrepresentation",
                        "title": "var jsonRepresentation: Data",
                        "type": "property"
                      },
                      {
                        "title": "Getting renewal information for Advanced Commerce API",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.property",
                        "title": "let advancedCommerceInfo: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo?",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "children": [
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.property",
                                "title": "let details: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                "type": "property"
                              },
                              {
                                "title": "Type Aliases",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.typealias",
                                "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                "type": "typealias"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item",
                            "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/consistencytoken",
                            "title": "let consistencyToken: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/description",
                            "title": "let description: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/displayname",
                            "title": "let displayName: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/items",
                            "title": "let items: [Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item]",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/period",
                            "title": "let period: SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/requestreferenceid",
                            "title": "let requestReferenceID: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/taxcode",
                            "title": "let taxCode: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct",
                        "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo",
                        "type": "struct"
                      },
                      {
                        "title": "Deprecated",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environmentstringrepresentation",
                        "title": "var environmentStringRepresentation: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerid",
                        "title": "var offerID: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offertype",
                        "title": "var offerType: Transaction.OfferType?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currencycode",
                        "title": "var currencyCode: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerpaymentmodestringrepresentation",
                        "title": "var offerPaymentModeStringRepresentation: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerperiodstringrepresentation",
                        "title": "var offerPeriodStringRepresentation: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo",
                    "title": "Product.SubscriptionInfo.RenewalInfo",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the renewal state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/subscribed",
                        "title": "static let subscribed: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/expired",
                        "title": "static let expired: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/inbillingretryperiod",
                        "title": "static let inBillingRetryPeriod: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/ingraceperiod",
                        "title": "static let inGracePeriod: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/revoked",
                        "title": "static let revoked: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "title": "Getting a localized description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate",
                    "title": "Product.SubscriptionInfo.RenewalState",
                    "type": "struct"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/status(transactionid:)",
                    "title": "static func status(transactionID: UInt64) async throws -> SubscriptionStatus?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/product/subscriptioninfo",
                "title": "Product.SubscriptionInfo",
                "type": "struct"
              },
              {
                "beta": true,
                "path": "/documentation/storekit/subscriptioninfo",
                "title": "SubscriptionInfo",
                "type": "typealias"
              },
              {
                "beta": true,
                "path": "/documentation/storekit/subscriptionstatus",
                "title": "SubscriptionStatus",
                "type": "typealias"
              },
              {
                "title": "Purchase requests and results",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Calling the action",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/purchaseaction/callasfunction(_:options:)",
                    "title": "func callAsFunction(Product, options: Set<Product.PurchaseOption>) async throws -> Product.PurchaseResult",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/purchaseaction",
                "title": "PurchaseAction",
                "type": "struct"
              },
              {
                "path": "/documentation/storekit/product/purchase(options:)",
                "title": "func purchase(options: Set<Product.PurchaseOption>) async throws -> Product.PurchaseResult",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Getting the Purchase Results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/purchaseresult/success(_:)",
                    "title": "case success(VerificationResult<Transaction>)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/product/purchaseresult/usercancelled",
                    "title": "case userCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/product/purchaseresult/pending",
                    "title": "case pending",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekit/product/purchaseresult",
                "title": "Product.PurchaseResult",
                "type": "enum"
              },
              {
                "title": "Transaction history and entitlements",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Transaction properties",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the environment and storefront",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/environment",
                        "title": "let environment: AppStore.Environment",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/storefront",
                        "title": "let storefront: Storefront",
                        "type": "property"
                      },
                      {
                        "title": "Getting the original transaction identifier",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/originalid",
                        "title": "let originalID: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/originalpurchasedate",
                        "title": "let originalPurchaseDate: Date",
                        "type": "property"
                      },
                      {
                        "title": "Identifying a transaction",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/id",
                        "title": "let id: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/weborderlineitemid",
                        "title": "let webOrderLineItemID: String?",
                        "type": "property"
                      },
                      {
                        "title": "Identifying the app and product",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/appbundleid",
                        "title": "let appBundleID: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/productid",
                        "title": "let productID: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/producttype",
                        "title": "let productType: Product.ProductType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/subscriptiongroupid",
                        "title": "let subscriptionGroupID: String?",
                        "type": "property"
                      },
                      {
                        "title": "Getting purchase and expiration dates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/purchasedate",
                        "title": "let purchaseDate: Date",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/expirationdate",
                        "title": "let expirationDate: Date?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the product price and currency",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/price",
                        "title": "var price: Decimal?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/currency",
                        "title": "var currency: Locale.Currency?",
                        "type": "property"
                      },
                      {
                        "title": "Getting purchase details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/isupgraded",
                        "title": "let isUpgraded: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/ownershiptype-swift.property",
                        "title": "let ownershipType: Transaction.OwnershipType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting ownership types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/ownershiptype-swift.struct/familyshared",
                            "title": "static let familyShared: Transaction.OwnershipType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/ownershiptype-swift.struct/purchased",
                            "title": "static let purchased: Transaction.OwnershipType",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/ownershiptype-swift.struct/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/ownershiptype-swift.struct",
                        "title": "Transaction.OwnershipType",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/transaction/purchasedquantity",
                        "title": "let purchasedQuantity: Int",
                        "type": "property"
                      },
                      {
                        "title": "Getting subscription status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/subscriptionstatus",
                        "title": "var subscriptionStatus: Product.SubscriptionInfo.Status?",
                        "type": "property"
                      },
                      {
                        "title": "Getting transaction reason",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/reason-swift.property",
                        "title": "let reason: Transaction.Reason",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Transaction reasons",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/reason-swift.struct/purchase",
                            "title": "static let purchase: Transaction.Reason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/reason-swift.struct/renewal",
                            "title": "static let renewal: Transaction.Reason",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/reason-swift.struct",
                        "title": "Transaction.Reason",
                        "type": "struct"
                      },
                      {
                        "title": "Identifying subscription offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offer-swift.property",
                        "title": "let offer: Transaction.Offer?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting offer details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                            "title": "let id: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                            "title": "let type: Transaction.OfferType",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting offer types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                                "title": "static let introductory: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                                "title": "static let promotional: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                                "title": "static let code: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                                "title": "static var winBack: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offertype-swift.struct",
                            "title": "Transaction.OfferType",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                            "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting payment modes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                                "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                                "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                                "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                            "title": "Transaction.Offer.PaymentMode",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                            "title": "let period: Product.SubscriptionPeriod?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/offer-swift.struct",
                        "title": "Transaction.Offer",
                        "type": "struct"
                      },
                      {
                        "title": "Getting revocation status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/revocationdate",
                        "title": "let revocationDate: Date?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/revocationreason-swift.property",
                        "title": "let revocationReason: Transaction.RevocationReason?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Revocation reasons",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/revocationreason-swift.struct/developerissue",
                            "title": "static let developerIssue: Transaction.RevocationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/revocationreason-swift.struct/other",
                            "title": "static let other: Transaction.RevocationReason",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/revocationreason-swift.struct/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/revocationreason-swift.struct",
                        "title": "Transaction.RevocationReason",
                        "type": "struct"
                      },
                      {
                        "title": "Correlating transactions with accounts",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/appaccounttoken",
                        "title": "let appAccountToken: UUID?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the transaction information in JSON format",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/jsonrepresentation",
                        "title": "var jsonRepresentation: Data",
                        "type": "property"
                      },
                      {
                        "title": "Deprecated",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/transaction/currencycode",
                        "title": "var currencyCode: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/transaction/environmentstringrepresentation",
                        "title": "var environmentStringRepresentation: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/transaction/offerid",
                        "title": "var offerID: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/transaction/offerpaymentmodestringrepresentation",
                        "title": "var offerPaymentModeStringRepresentation: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/transaction/offertype-swift.property",
                        "title": "var offerType: Transaction.OfferType?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/transaction/reasonstringrepresentation",
                        "title": "var reasonStringRepresentation: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/transaction/storefrontcountrycode",
                        "title": "var storefrontCountryCode: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/transaction-properties",
                    "title": "Transaction properties",
                    "type": "collection"
                  },
                  {
                    "path": "/documentation/storekit/transaction/apptransactionid",
                    "title": "var appTransactionID: String",
                    "type": "property"
                  },
                  {
                    "title": "Monitoring transaction-related changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/transaction/updates",
                    "title": "static var updates: Transaction.Transactions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/transaction/transactions",
                    "title": "Transaction.Transactions",
                    "type": "struct"
                  },
                  {
                    "title": "Getting transaction history",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/transaction/latest(for:)",
                    "title": "static func latest(for: String) async -> VerificationResult<Transaction>?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/transaction/all",
                    "title": "static var all: Transaction.Transactions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/transaction/unfinished",
                    "title": "static var unfinished: Transaction.Transactions",
                    "type": "property"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/skincludeconsumableinapppurchasehistory",
                    "title": "SKIncludeConsumableInAppPurchaseHistory",
                    "type": "typealias"
                  },
                  {
                    "title": "Getting current entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/transaction/currententitlements",
                    "title": "static var currentEntitlements: Transaction.Transactions",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/transaction/currententitlement(for:)",
                    "title": "static func currentEntitlement(for: String) async -> VerificationResult<Transaction>?",
                    "type": "method"
                  },
                  {
                    "title": "Finishing the transaction",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/transaction/finish()",
                    "title": "func finish() async",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/transaction/unfinished",
                    "title": "static var unfinished: Transaction.Transactions",
                    "type": "property"
                  },
                  {
                    "title": "Verifying transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/transaction/deviceverification",
                    "title": "let deviceVerification: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/transaction/deviceverificationnonce",
                    "title": "let deviceVerificationNonce: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/transaction/signeddate",
                    "title": "let signedDate: Date",
                    "type": "property"
                  },
                  {
                    "title": "Getting transaction info in JSON format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/transaction/jsonrepresentation",
                    "title": "var jsonRepresentation: Data",
                    "type": "property"
                  },
                  {
                    "title": "Requesting refunds",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-refund-requests",
                    "title": "Testing refund requests",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/transaction/beginrefundrequest(in:)-9k0pj",
                    "title": "func beginRefundRequest(in: UIWindowScene) async throws -> Transaction.RefundRequestStatus",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/transaction/beginrefundrequest(in:)-63bvd",
                    "title": "func beginRefundRequest(in: NSViewController) async throws -> Transaction.RefundRequestStatus",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/transaction/beginrefundrequest(for:in:)-65tph",
                    "title": "static func beginRefundRequest(for: UInt64, in: UIWindowScene) async throws -> Transaction.RefundRequestStatus",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/transaction/beginrefundrequest(for:in:)-9mscy",
                    "title": "static func beginRefundRequest(for: UInt64, in: NSViewController) async throws -> Transaction.RefundRequestStatus",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Enumeration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/refundrequesterror/duplicaterequest",
                        "title": "case duplicateRequest",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/transaction/refundrequesterror/failed",
                        "title": "case failed",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/transaction/refundrequesterror",
                    "title": "Transaction.RefundRequestError",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Refund Request Status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/refundrequeststatus/usercancelled",
                        "title": "case userCancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/transaction/refundrequeststatus/success",
                        "title": "case success",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/transaction/refundrequeststatus",
                    "title": "Transaction.RefundRequestStatus",
                    "type": "enum"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "children": [
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "children": [
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/details-swift.struct/description",
                                "title": "let description: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/details-swift.struct/displayname",
                                "title": "let displayName: String",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/details-swift.struct/offer",
                                "title": "let offer: Transaction.AdvancedCommerceInfo.Offer?",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/details-swift.struct/price",
                                "title": "let price: Decimal",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/details-swift.struct/sku",
                                "title": "let sku: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/details-swift.struct",
                            "title": "Transaction.AdvancedCommerceInfo.Item.Details",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/details-swift.property",
                            "title": "let details: Transaction.AdvancedCommerceInfo.Item.Details",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/refunds",
                            "title": "let refunds: [Transaction.AdvancedCommerceInfo.Refund]?",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item/revocationdate",
                            "title": "let revocationDate: Date?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/item",
                        "title": "Transaction.AdvancedCommerceInfo.Item",
                        "type": "struct"
                      },
                      {
                        "beta": true,
                        "children": [
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/reason-swift.struct/acquisition",
                                "title": "static let acquisition: Transaction.AdvancedCommerceInfo.Offer.Reason",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/reason-swift.struct/retention",
                                "title": "static let retention: Transaction.AdvancedCommerceInfo.Offer.Reason",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/reason-swift.struct/winback",
                                "title": "static let winBack: Transaction.AdvancedCommerceInfo.Offer.Reason",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/reason-swift.struct",
                            "title": "Transaction.AdvancedCommerceInfo.Offer.Reason",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/period",
                            "title": "let period: SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/periodcount",
                            "title": "let periodCount: Int",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/price",
                            "title": "let price: Decimal",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer/reason-swift.property",
                            "title": "let reason: Transaction.AdvancedCommerceInfo.Offer.Reason",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/offer",
                        "title": "Transaction.AdvancedCommerceInfo.Offer",
                        "type": "struct"
                      },
                      {
                        "beta": true,
                        "children": [
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.struct/legal",
                                "title": "static let legal: Transaction.AdvancedCommerceInfo.Refund.Reason",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.struct/modifyitems",
                                "title": "static let modifyItems: Transaction.AdvancedCommerceInfo.Refund.Reason",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.struct/other",
                                "title": "static let other: Transaction.AdvancedCommerceInfo.Refund.Reason",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.struct/unfulfilled",
                                "title": "static let unfulfilled: Transaction.AdvancedCommerceInfo.Refund.Reason",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.struct/unintended",
                                "title": "static let unintended: Transaction.AdvancedCommerceInfo.Refund.Reason",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.struct/unsatisfied",
                                "title": "static let unsatisfied: Transaction.AdvancedCommerceInfo.Refund.Reason",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.struct",
                            "title": "Transaction.AdvancedCommerceInfo.Refund.Reason",
                            "type": "struct"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/refundtype/custom",
                                "title": "static let custom: Transaction.AdvancedCommerceInfo.Refund.RefundType",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/refundtype/full",
                                "title": "static let full: Transaction.AdvancedCommerceInfo.Refund.RefundType",
                                "type": "property"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/refundtype/prorated",
                                "title": "static let proRated: Transaction.AdvancedCommerceInfo.Refund.RefundType",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/refundtype",
                            "title": "Transaction.AdvancedCommerceInfo.Refund.RefundType",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/amount",
                            "title": "let amount: Decimal",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/date",
                            "title": "let date: Date",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/reason-swift.property",
                            "title": "let reason: Transaction.AdvancedCommerceInfo.Refund.Reason",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund/type",
                            "title": "let type: Transaction.AdvancedCommerceInfo.Refund.RefundType",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/refund",
                        "title": "Transaction.AdvancedCommerceInfo.Refund",
                        "type": "struct"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/description",
                        "title": "let description: String?",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/displayname",
                        "title": "let displayName: String?",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/estimatedtax",
                        "title": "let estimatedTax: Decimal",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/items",
                        "title": "let items: [Transaction.AdvancedCommerceInfo.Item]",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/period",
                        "title": "let period: SubscriptionPeriod?",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/requestreferenceid",
                        "title": "let requestReferenceID: String",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/taxcode",
                        "title": "let taxCode: String",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/taxexclusiveprice",
                        "title": "let taxExclusivePrice: Decimal",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct/taxrate",
                        "title": "let taxRate: Decimal",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.struct",
                    "title": "Transaction.AdvancedCommerceInfo",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting offer types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                        "title": "static let introductory: Transaction.OfferType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                        "title": "static let promotional: Transaction.OfferType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                        "title": "static let code: Transaction.OfferType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                        "title": "static var winBack: Transaction.OfferType",
                        "type": "property"
                      },
                      {
                        "title": "Getting a localized description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/transaction/offertype-swift.struct",
                    "title": "Transaction.OfferType",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/transaction/advancedcommerceinfo-swift.property",
                    "title": "let advancedCommerceInfo: Transaction.AdvancedCommerceInfo?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/transaction/offerperiodstringrepresentation",
                    "title": "var offerPeriodStringRepresentation: String?",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/transaction/all(for:)",
                    "title": "static func all(for: String) -> Transaction.Transactions",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/transaction/currententitlements(for:)",
                    "title": "static func currentEntitlements(for: String) -> Transaction.Transactions",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/transaction",
                "title": "Transaction",
                "type": "struct"
              },
              {
                "path": "/documentation/storekit/transaction/updates",
                "title": "static var updates: Transaction.Transactions",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/transaction/all",
                "title": "static var all: Transaction.Transactions",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/transaction/currententitlements",
                "title": "static var currentEntitlements: Transaction.Transactions",
                "type": "property"
              },
              {
                "title": "JWS verification",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the verification results",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/verified(_:)",
                    "title": "case verified(SignedType)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/unverified(_:_:)",
                    "title": "case unverified(SignedType, VerificationResult<SignedType>.VerificationError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/payloadvalue",
                    "title": "var payloadValue: SignedType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/unsafepayloadvalue",
                    "title": "var unsafePayloadValue: SignedType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/verificationresult/verificationerror/invalidcertificatechain",
                        "title": "case invalidCertificateChain",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/verificationresult/verificationerror/invaliddeviceverification",
                        "title": "case invalidDeviceVerification",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/verificationresult/verificationerror/invalidencoding",
                        "title": "case invalidEncoding",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/verificationresult/verificationerror/invalidsignature",
                        "title": "case invalidSignature",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/verificationresult/verificationerror/missingrequiredproperties",
                        "title": "case missingRequiredProperties",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/verificationresult/verificationerror/revokedcertificate",
                        "title": "case revokedCertificate",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/verificationresult/verificationerror",
                    "title": "VerificationResult.VerificationError",
                    "type": "enum"
                  },
                  {
                    "title": "Getting properties for transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/jwsrepresentation-21vgo",
                    "title": "var jwsRepresentation: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/deviceverification-69lvx",
                    "title": "var deviceVerification: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/deviceverificationnonce-9dfrn",
                    "title": "var deviceVerificationNonce: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signeddate-8x9bg",
                    "title": "var signedDate: Date",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/headerdata-9egfp",
                    "title": "var headerData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/payloaddata-uyle",
                    "title": "var payloadData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signeddata-56usp",
                    "title": "var signedData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signaturedata-4pyv8",
                    "title": "var signatureData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signature-7t1ne",
                    "title": "var signature: P256.Signing.ECDSASignature",
                    "type": "property"
                  },
                  {
                    "title": "Getting properties for subscription renewal information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/jwsrepresentation-178oj",
                    "title": "var jwsRepresentation: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/deviceverification-5hvi9",
                    "title": "var deviceVerification: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/deviceverificationnonce-6mzfc",
                    "title": "var deviceVerificationNonce: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signeddate-3tvo5",
                    "title": "var signedDate: Date",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/headerdata-3be0o",
                    "title": "var headerData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/payloaddata-abfv",
                    "title": "var payloadData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signeddata-1t80n",
                    "title": "var signedData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signaturedata-9uw8c",
                    "title": "var signatureData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signature-95r7x",
                    "title": "var signature: P256.Signing.ECDSASignature",
                    "type": "property"
                  },
                  {
                    "title": "Getting properties for app transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/jwsrepresentation-6ma59",
                    "title": "var jwsRepresentation: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/deviceverification-6c8xu",
                    "title": "var deviceVerification: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/deviceverificationnonce-6082b",
                    "title": "var deviceVerificationNonce: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signeddate-24zch",
                    "title": "var signedDate: Date",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/headerdata-3drrl",
                    "title": "var headerData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/payloaddata-97acz",
                    "title": "var payloadData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signeddata-99fyo",
                    "title": "var signedData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signaturedata-4pvv0",
                    "title": "var signatureData: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/signature-6d5ue",
                    "title": "var signature: P256.Signing.ECDSASignature",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/verificationresult",
                "title": "VerificationResult",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/verificationerror/invalidcertificatechain",
                    "title": "case invalidCertificateChain",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/verificationerror/invaliddeviceverification",
                    "title": "case invalidDeviceVerification",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/verificationerror/invalidencoding",
                    "title": "case invalidEncoding",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/verificationerror/invalidsignature",
                    "title": "case invalidSignature",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/verificationerror/missingrequiredproperties",
                    "title": "case missingRequiredProperties",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/verificationresult/verificationerror/revokedcertificate",
                    "title": "case revokedCertificate",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekit/verificationresult/verificationerror",
                "title": "VerificationResult.VerificationError",
                "type": "enum"
              },
              {
                "title": "Subscription status and renewal information",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Monitoring subscription status changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/updates",
                    "title": "static var updates: Product.SubscriptionInfo.Status.Statuses",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/all",
                    "title": "static var all: AsyncStream<(groupID: String, statuses: [Product.SubscriptionInfo.Status])>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/statuses",
                    "title": "Product.SubscriptionInfo.Status.Statuses",
                    "type": "struct"
                  },
                  {
                    "title": "Getting subscription status information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                    "title": "let state: Product.SubscriptionInfo.RenewalState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/renewalinfo",
                    "title": "let renewalInfo: VerificationResult<Product.SubscriptionInfo.RenewalInfo>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/transaction",
                    "title": "let transaction: VerificationResult<Transaction>",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the environment",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environment",
                        "title": "let environment: AppStore.Environment",
                        "type": "property"
                      },
                      {
                        "title": "Getting the transaction ID",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/originaltransactionid",
                        "title": "let originalTransactionID: UInt64",
                        "type": "property"
                      },
                      {
                        "title": "Identifying the account",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/appaccounttoken",
                        "title": "var appAccountToken: UUID?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/apptransactionid",
                        "title": "var appTransactionID: String",
                        "type": "property"
                      },
                      {
                        "title": "Getting the product ID",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currentproductid",
                        "title": "let currentProductID: String",
                        "type": "property"
                      },
                      {
                        "title": "Getting subscription dates",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/recentsubscriptionstartdate",
                        "title": "var recentSubscriptionStartDate: Date",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewaldate",
                        "title": "var renewalDate: Date?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the renewal or expiration state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                        "title": "let state: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/autorenewpreference",
                        "title": "let autoRenewPreference: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/willautorenew",
                        "title": "let willAutoRenew: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.property",
                        "title": "let expirationReason: Product.SubscriptionInfo.RenewalInfo.ExpirationReason?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting the expiration reason",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/autorenewdisabled",
                            "title": "static let autoRenewDisabled: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/billingerror",
                            "title": "static let billingError: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/didnotconsenttopriceincrease",
                            "title": "static let didNotConsentToPriceIncrease: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/productunavailable",
                            "title": "static let productUnavailable: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/unknown",
                            "title": "static let unknown: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct",
                        "title": "Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                        "type": "struct"
                      },
                      {
                        "title": "Getting subscription offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offer",
                        "title": "let offer: Transaction.Offer?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting offer details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                            "title": "let id: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                            "title": "let type: Transaction.OfferType",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting offer types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                                "title": "static let introductory: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                                "title": "static let promotional: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                                "title": "static let code: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                                "title": "static var winBack: Transaction.OfferType",
                                "type": "property"
                              },
                              {
                                "title": "Getting a localized description",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                                "title": "var localizedDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offertype-swift.struct",
                            "title": "Transaction.OfferType",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                            "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting payment modes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                                "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                                "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                                "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                            "title": "Transaction.Offer.PaymentMode",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                            "title": "let period: Product.SubscriptionPeriod?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/offer-swift.struct",
                        "title": "Transaction.Offer",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/eligiblewinbackofferids",
                        "title": "let eligibleWinBackOfferIDs: [String]",
                        "type": "property"
                      },
                      {
                        "title": "Getting the renewal price and currency",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewalprice",
                        "title": "var renewalPrice: Decimal?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currency",
                        "title": "var currency: Locale.Currency?",
                        "type": "property"
                      },
                      {
                        "title": "Getting billing status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/isinbillingretry",
                        "title": "let isInBillingRetry: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/graceperiodexpirationdate",
                        "title": "let gracePeriodExpirationDate: Date?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the price increase status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/managing-price-increases-for-auto-renewable-subscriptions",
                        "title": "Managing Price Increases for Auto-Renewable Subscriptions",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.property",
                        "title": "let priceIncreaseStatus: Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Price Increase Status",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/noincreasepending",
                            "title": "case noIncreasePending",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/agreed",
                            "title": "case agreed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/pending",
                            "title": "case pending",
                            "type": "case"
                          },
                          {
                            "title": "Getting a Localized Description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum",
                        "title": "Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                        "type": "enum"
                      },
                      {
                        "title": "Verifying subscription renewal information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverification",
                        "title": "let deviceVerification: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverificationnonce",
                        "title": "let deviceVerificationNonce: UUID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/signeddate",
                        "title": "let signedDate: Date",
                        "type": "property"
                      },
                      {
                        "title": "Getting subscription renewal info in JSON format",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/jsonrepresentation",
                        "title": "var jsonRepresentation: Data",
                        "type": "property"
                      },
                      {
                        "title": "Getting renewal information for Advanced Commerce API",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.property",
                        "title": "let advancedCommerceInfo: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo?",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "children": [
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.property",
                                "title": "let details: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                "type": "property"
                              },
                              {
                                "title": "Type Aliases",
                                "type": "groupMarker"
                              },
                              {
                                "beta": true,
                                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.typealias",
                                "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                                "type": "typealias"
                              }
                            ],
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item",
                            "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/consistencytoken",
                            "title": "let consistencyToken: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/description",
                            "title": "let description: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/displayname",
                            "title": "let displayName: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/items",
                            "title": "let items: [Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item]",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/period",
                            "title": "let period: SubscriptionPeriod",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/requestreferenceid",
                            "title": "let requestReferenceID: String",
                            "type": "property"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/taxcode",
                            "title": "let taxCode: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct",
                        "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo",
                        "type": "struct"
                      },
                      {
                        "title": "Deprecated",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environmentstringrepresentation",
                        "title": "var environmentStringRepresentation: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerid",
                        "title": "var offerID: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offertype",
                        "title": "var offerType: Transaction.OfferType?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currencycode",
                        "title": "var currencyCode: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerpaymentmodestringrepresentation",
                        "title": "var offerPaymentModeStringRepresentation: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerperiodstringrepresentation",
                        "title": "var offerPeriodStringRepresentation: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo",
                    "title": "Product.SubscriptionInfo.RenewalInfo",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the renewal state",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/subscribed",
                        "title": "static let subscribed: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/expired",
                        "title": "static let expired: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/inbillingretryperiod",
                        "title": "static let inBillingRetryPeriod: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/ingraceperiod",
                        "title": "static let inGracePeriod: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/revoked",
                        "title": "static let revoked: Product.SubscriptionInfo.RenewalState",
                        "type": "property"
                      },
                      {
                        "title": "Getting a localized description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate",
                    "title": "Product.SubscriptionInfo.RenewalState",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct",
                "title": "Product.SubscriptionInfo.Status",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the environment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environment",
                    "title": "let environment: AppStore.Environment",
                    "type": "property"
                  },
                  {
                    "title": "Getting the transaction ID",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/originaltransactionid",
                    "title": "let originalTransactionID: UInt64",
                    "type": "property"
                  },
                  {
                    "title": "Identifying the account",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/appaccounttoken",
                    "title": "var appAccountToken: UUID?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/apptransactionid",
                    "title": "var appTransactionID: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting the product ID",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currentproductid",
                    "title": "let currentProductID: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting subscription dates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/recentsubscriptionstartdate",
                    "title": "var recentSubscriptionStartDate: Date",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewaldate",
                    "title": "var renewalDate: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the renewal or expiration state",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/status-swift.struct/state",
                    "title": "let state: Product.SubscriptionInfo.RenewalState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/autorenewpreference",
                    "title": "let autoRenewPreference: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/willautorenew",
                    "title": "let willAutoRenew: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.property",
                    "title": "let expirationReason: Product.SubscriptionInfo.RenewalInfo.ExpirationReason?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the expiration reason",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/autorenewdisabled",
                        "title": "static let autoRenewDisabled: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/billingerror",
                        "title": "static let billingError: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/didnotconsenttopriceincrease",
                        "title": "static let didNotConsentToPriceIncrease: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/productunavailable",
                        "title": "static let productUnavailable: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/unknown",
                        "title": "static let unknown: Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                        "type": "property"
                      },
                      {
                        "title": "Getting a localized description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/expirationreason-swift.struct",
                    "title": "Product.SubscriptionInfo.RenewalInfo.ExpirationReason",
                    "type": "struct"
                  },
                  {
                    "title": "Getting subscription offers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offer",
                    "title": "let offer: Transaction.Offer?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting offer details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offer-swift.struct/id",
                        "title": "let id: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offer-swift.struct/type",
                        "title": "let type: Transaction.OfferType",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting offer types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offertype-swift.struct/introductory",
                            "title": "static let introductory: Transaction.OfferType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offertype-swift.struct/promotional",
                            "title": "static let promotional: Transaction.OfferType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offertype-swift.struct/code",
                            "title": "static let code: Transaction.OfferType",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offertype-swift.struct/winback",
                            "title": "static var winBack: Transaction.OfferType",
                            "type": "property"
                          },
                          {
                            "title": "Getting a localized description",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offertype-swift.struct/localizeddescription",
                            "title": "var localizedDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/offertype-swift.struct",
                        "title": "Transaction.OfferType",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.property",
                        "title": "let paymentMode: Transaction.Offer.PaymentMode?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting payment modes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/freetrial",
                            "title": "static let freeTrial: Transaction.Offer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payasyougo",
                            "title": "static let payAsYouGo: Transaction.Offer.PaymentMode",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct/payupfront",
                            "title": "static let payUpFront: Transaction.Offer.PaymentMode",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/storekit/transaction/offer-swift.struct/paymentmode-swift.struct",
                        "title": "Transaction.Offer.PaymentMode",
                        "type": "struct"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/transaction/offer-swift.struct/period",
                        "title": "let period: Product.SubscriptionPeriod?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/transaction/offer-swift.struct",
                    "title": "Transaction.Offer",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/eligiblewinbackofferids",
                    "title": "let eligibleWinBackOfferIDs: [String]",
                    "type": "property"
                  },
                  {
                    "title": "Getting the renewal price and currency",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/renewalprice",
                    "title": "var renewalPrice: Decimal?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currency",
                    "title": "var currency: Locale.Currency?",
                    "type": "property"
                  },
                  {
                    "title": "Getting billing status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/isinbillingretry",
                    "title": "let isInBillingRetry: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/graceperiodexpirationdate",
                    "title": "let gracePeriodExpirationDate: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the price increase status",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/managing-price-increases-for-auto-renewable-subscriptions",
                    "title": "Managing Price Increases for Auto-Renewable Subscriptions",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.property",
                    "title": "let priceIncreaseStatus: Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Price Increase Status",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/noincreasepending",
                        "title": "case noIncreasePending",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/agreed",
                        "title": "case agreed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/pending",
                        "title": "case pending",
                        "type": "case"
                      },
                      {
                        "title": "Getting a Localized Description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/priceincreasestatus-swift.enum",
                    "title": "Product.SubscriptionInfo.RenewalInfo.PriceIncreaseStatus",
                    "type": "enum"
                  },
                  {
                    "title": "Verifying subscription renewal information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverification",
                    "title": "let deviceVerification: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/deviceverificationnonce",
                    "title": "let deviceVerificationNonce: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/signeddate",
                    "title": "let signedDate: Date",
                    "type": "property"
                  },
                  {
                    "title": "Getting subscription renewal info in JSON format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/jsonrepresentation",
                    "title": "var jsonRepresentation: Data",
                    "type": "property"
                  },
                  {
                    "title": "Getting renewal information for Advanced Commerce API",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.property",
                    "title": "let advancedCommerceInfo: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo?",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "children": [
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.property",
                            "title": "let details: Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                            "type": "property"
                          },
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "beta": true,
                            "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item/details-swift.typealias",
                            "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item.Details",
                            "type": "typealias"
                          }
                        ],
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/item",
                        "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item",
                        "type": "struct"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/consistencytoken",
                        "title": "let consistencyToken: String",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/description",
                        "title": "let description: String",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/displayname",
                        "title": "let displayName: String",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/items",
                        "title": "let items: [Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo.Item]",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/period",
                        "title": "let period: SubscriptionPeriod",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/requestreferenceid",
                        "title": "let requestReferenceID: String",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct/taxcode",
                        "title": "let taxCode: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/advancedcommerceinfo-swift.struct",
                    "title": "Product.SubscriptionInfo.RenewalInfo.AdvancedCommerceInfo",
                    "type": "struct"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/environmentstringrepresentation",
                    "title": "var environmentStringRepresentation: String",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerid",
                    "title": "var offerID: String?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offertype",
                    "title": "var offerType: Transaction.OfferType?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/currencycode",
                    "title": "var currencyCode: String?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerpaymentmodestringrepresentation",
                    "title": "var offerPaymentModeStringRepresentation: String?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo/offerperiodstringrepresentation",
                    "title": "var offerPeriodStringRepresentation: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/product/subscriptioninfo/renewalinfo",
                "title": "Product.SubscriptionInfo.RenewalInfo",
                "type": "struct"
              },
              {
                "beta": true,
                "path": "/documentation/storekit/subscriptionrenewalinfo",
                "title": "SubscriptionRenewalInfo",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Getting the renewal state",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/subscribed",
                    "title": "static let subscribed: Product.SubscriptionInfo.RenewalState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/expired",
                    "title": "static let expired: Product.SubscriptionInfo.RenewalState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/inbillingretryperiod",
                    "title": "static let inBillingRetryPeriod: Product.SubscriptionInfo.RenewalState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/ingraceperiod",
                    "title": "static let inGracePeriod: Product.SubscriptionInfo.RenewalState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/revoked",
                    "title": "static let revoked: Product.SubscriptionInfo.RenewalState",
                    "type": "property"
                  },
                  {
                    "title": "Getting a localized description",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptioninfo/renewalstate/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/product/subscriptioninfo/renewalstate",
                "title": "Product.SubscriptionInfo.RenewalState",
                "type": "struct"
              },
              {
                "beta": true,
                "path": "/documentation/storekit/subscriptionrenewalstate",
                "title": "SubscriptionRenewalState",
                "type": "typealias"
              },
              {
                "beta": true,
                "path": "/documentation/storekit/subscriptionperiod",
                "title": "SubscriptionPeriod",
                "type": "typealias"
              },
              {
                "title": "Subscription offers and offer codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/supporting-win-back-offers-in-your-app",
                "title": "Supporting win-back offers in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/merchandising-win-back-offers-in-your-app",
                "title": "Merchandising win-back offers in your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/supporting-subscription-offer-codes-in-your-app",
                "title": "Supporting subscription offer codes in your app",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Getting the subscription offer identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/id",
                    "title": "let id: String?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the subscription offer type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/type",
                    "title": "let type: Product.SubscriptionOffer.OfferType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting offer types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/offertype/introductory",
                        "title": "static let introductory: Product.SubscriptionOffer.OfferType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/offertype/promotional",
                        "title": "static let promotional: Product.SubscriptionOffer.OfferType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/offertype/winback",
                        "title": "static let winBack: Product.SubscriptionOffer.OfferType",
                        "type": "property"
                      },
                      {
                        "title": "Getting a localized description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/offertype/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionoffer/offertype",
                    "title": "Product.SubscriptionOffer.OfferType",
                    "type": "struct"
                  },
                  {
                    "title": "Getting price information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/displayprice",
                    "title": "let displayPrice: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/price",
                    "title": "let price: Decimal",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.property",
                    "title": "let paymentMode: Product.SubscriptionOffer.PaymentMode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the payment modes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/freetrial",
                        "title": "static let freeTrial: Product.SubscriptionOffer.PaymentMode",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payasyougo",
                        "title": "static let payAsYouGo: Product.SubscriptionOffer.PaymentMode",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/payupfront",
                        "title": "static let payUpFront: Product.SubscriptionOffer.PaymentMode",
                        "type": "property"
                      },
                      {
                        "title": "Getting a localized description",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionoffer/paymentmode-swift.struct",
                    "title": "Product.SubscriptionOffer.PaymentMode",
                    "type": "struct"
                  },
                  {
                    "title": "Getting the subscription duration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/period",
                    "title": "let period: Product.SubscriptionPeriod",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/periodcount",
                    "title": "let periodCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Creating a subscription offer signature",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating subscription offer signatures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/signature/init(keyid:nonce:timestamp:signature:)",
                        "title": "init(keyID: String, nonce: UUID, timestamp: Int, signature: Data)",
                        "type": "init"
                      },
                      {
                        "title": "Getting signature elements",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/signature/keyid",
                        "title": "var keyID: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/signature/nonce",
                        "title": "var nonce: UUID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/signature/signature",
                        "title": "var signature: Data",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/product/subscriptionoffer/signature/timestamp",
                        "title": "var timestamp: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/product/subscriptionoffer/signature",
                    "title": "Product.SubscriptionOffer.Signature",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/storekit/product/subscriptionoffer",
                "title": "Product.SubscriptionOffer",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting offer types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/offertype/introductory",
                    "title": "static let introductory: Product.SubscriptionOffer.OfferType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/offertype/promotional",
                    "title": "static let promotional: Product.SubscriptionOffer.OfferType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/offertype/winback",
                    "title": "static let winBack: Product.SubscriptionOffer.OfferType",
                    "type": "property"
                  },
                  {
                    "title": "Getting a localized description",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/subscriptionoffer/offertype/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/product/subscriptionoffer/offertype",
                "title": "Product.SubscriptionOffer.OfferType",
                "type": "struct"
              },
              {
                "title": "Promoted In-App Purchases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/supporting-promoted-in-app-purchases-in-your-app",
                "title": "Supporting promoted In-App Purchases in your app",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Identifying the product",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/purchaseintent/id",
                    "title": "var id: Product.ID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/purchaseintent/product",
                    "title": "let product: Product",
                    "type": "property"
                  },
                  {
                    "title": "Getting purchase intents",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/purchaseintent/intents",
                    "title": "static var intents: PurchaseIntent.PurchaseIntents",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/purchaseintent/purchaseintents",
                    "title": "PurchaseIntent.PurchaseIntents",
                    "type": "struct"
                  },
                  {
                    "title": "Identifying the offer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/purchaseintent/offer",
                    "title": "let offer: Product.SubscriptionOffer?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/purchaseintent",
                "title": "PurchaseIntent",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the product ID",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/promotioninfo/productid",
                    "title": "let productID: Product.ID",
                    "type": "property"
                  },
                  {
                    "title": "Managing promotion order",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/promotioninfo/updateproductorder(byid:)",
                    "title": "static func updateProductOrder(byID: some Collection<String>) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Getting overridden order",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/promotioninfo/currentorder",
                    "title": "static var currentOrder: [Product.PromotionInfo]",
                    "type": "property"
                  },
                  {
                    "title": "Managing promotion visibility",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/promotioninfo/visibility-swift.property",
                    "title": "var visibility: Product.PromotionInfo.Visibility",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting visibility states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum/appstoreconnectdefault",
                        "title": "case appStoreConnectDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum/hidden",
                        "title": "case hidden",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum/visible",
                        "title": "case visible",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/product/promotioninfo/visibility-swift.enum",
                    "title": "Product.PromotionInfo.Visibility",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/storekit/product/promotioninfo/updateproductvisibility(_:for:)",
                    "title": "static func updateProductVisibility(Product.PromotionInfo.Visibility, for: Product.ID) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Updating order and visibility",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/product/promotioninfo/update()",
                    "title": "func update() async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/product/promotioninfo/updateall(_:)",
                    "title": "static func updateAll(some Collection<Product.PromotionInfo>) async throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/product/promotioninfo",
                "title": "Product.PromotionInfo",
                "type": "struct"
              },
              {
                "path": "/documentation/storekit/testing-promoted-in-app-purchases",
                "title": "Testing promoted In-App Purchases",
                "type": "article"
              },
              {
                "title": "App Store interactions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Checking the environment",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the environment value",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/appstore/environment/production",
                        "title": "static let production: AppStore.Environment",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/appstore/environment/sandbox",
                        "title": "static let sandbox: AppStore.Environment",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/appstore/environment/xcode",
                        "title": "static let xcode: AppStore.Environment",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/appstore/environment",
                    "title": "AppStore.Environment",
                    "type": "struct"
                  },
                  {
                    "title": "Checking payment setup",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/appstore/canmakepayments",
                    "title": "static var canMakePayments: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Verifying devices",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/appstore/deviceverificationid",
                    "title": "static var deviceVerificationID: UUID?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the platform",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "children": [
                      {
                        "title": "Getting platform values",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/ios",
                        "title": "static let iOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/macos",
                        "title": "static let macOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/tvos",
                        "title": "static let tvOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/visionos",
                        "title": "static let visionOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/watchos",
                        "title": "static let watchOS: AppStore.Platform",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/appstore/platform",
                    "title": "AppStore.Platform",
                    "type": "struct"
                  },
                  {
                    "title": "Managing subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/appstore/showmanagesubscriptions(in:)",
                    "title": "static func showManageSubscriptions(in: UIWindowScene) async throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/appstore/showmanagesubscriptions(in:subscriptiongroupid:)",
                    "title": "static func showManageSubscriptions(in: UIWindowScene, subscriptionGroupID: String) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Requesting reviews",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Call as function",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/requestreviewaction/callasfunction()",
                        "title": "func callAsFunction()",
                        "type": "method"
                      },
                      {
                        "title": "Environment value",
                        "type": "groupMarker"
                      },
                      {
                        "external": true,
                        "path": "/documentation/swiftui/environmentvalues/requestreview",
                        "title": "var requestReview: RequestReviewAction",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/requestreviewaction",
                    "title": "RequestReviewAction",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/storekit/appstore/requestreview(in:)-1q8qs",
                    "title": "static func requestReview(in: UIWindowScene)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/appstore/requestreview(in:)-4r0y9",
                    "title": "static func requestReview(in: NSViewController)",
                    "type": "method"
                  },
                  {
                    "title": "Presenting the offer code redemption sheet",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/supporting-subscription-offer-codes-in-your-app",
                    "title": "Supporting subscription offer codes in your app",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/appstore/presentoffercoderedeemsheet(in:)",
                    "title": "static func presentOfferCodeRedeemSheet(in: UIWindowScene) async throws",
                    "type": "method"
                  },
                  {
                    "external": true,
                    "path": "/documentation/swiftui/view/offercoderedemption(ispresented:oncompletion:)",
                    "title": "func offerCodeRedemption(isPresented: Binding<Bool>, onCompletion: (Result<Void, any Error>) -> Void) -> some View",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/appstore/presentoffercoderedeemsheet(from:)",
                    "title": "static func presentOfferCodeRedeemSheet(from: NSViewController) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Restoring purchases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/appstore/sync()",
                    "title": "static func sync() async throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/appstore",
                "title": "AppStore",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Getting the signed app transaction",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/shared",
                    "title": "static var shared: VerificationResult<AppTransaction>",
                    "type": "property"
                  },
                  {
                    "title": "Getting the app transaction identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/apptransactionid",
                    "title": "var appTransactionID: String",
                    "type": "property"
                  },
                  {
                    "title": "Getting the environment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/environment",
                    "title": "let environment: AppStore.Environment",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the environment value",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/appstore/environment/production",
                        "title": "static let production: AppStore.Environment",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/appstore/environment/sandbox",
                        "title": "static let sandbox: AppStore.Environment",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/appstore/environment/xcode",
                        "title": "static let xcode: AppStore.Environment",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/appstore/environment",
                    "title": "AppStore.Environment",
                    "type": "struct"
                  },
                  {
                    "title": "Getting app and version information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/bundleid",
                    "title": "let bundleID: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/appversion",
                    "title": "let appVersion: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/originalappversion",
                    "title": "let originalAppVersion: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/appid",
                    "title": "let appID: UInt64?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/appversionid",
                    "title": "let appVersionID: UInt64?",
                    "type": "property"
                  },
                  {
                    "title": "Getting the original platform",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/apptransaction/originalplatform",
                    "title": "let originalPlatform: AppStore.Platform",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "children": [
                      {
                        "title": "Getting platform values",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/ios",
                        "title": "static let iOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/macos",
                        "title": "static let macOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/tvos",
                        "title": "static let tvOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/visionos",
                        "title": "static let visionOS: AppStore.Platform",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/appstore/platform/watchos",
                        "title": "static let watchOS: AppStore.Platform",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/appstore/platform",
                    "title": "AppStore.Platform",
                    "type": "struct"
                  },
                  {
                    "title": "Getting purchase dates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/originalpurchasedate",
                    "title": "let originalPurchaseDate: Date",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/preorderdate",
                    "title": "let preorderDate: Date?",
                    "type": "property"
                  },
                  {
                    "title": "Verifying the app transaction",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/deviceverification",
                    "title": "let deviceVerification: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/deviceverificationnonce",
                    "title": "let deviceVerificationNonce: UUID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/signeddate",
                    "title": "let signedDate: Date",
                    "type": "property"
                  },
                  {
                    "title": "Getting app transaction information in JSON format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/jsonrepresentation",
                    "title": "var jsonRepresentation: Data",
                    "type": "property"
                  },
                  {
                    "title": "Getting app transaction from the server",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/apptransaction/refresh()",
                    "title": "static func refresh() async throws -> VerificationResult<AppTransaction>",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/apptransaction/originalplatformstringrepresentation",
                    "title": "var originalPlatformStringRepresentation: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/apptransaction",
                "title": "AppTransaction",
                "type": "struct"
              },
              {
                "title": "Storefront information",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the storefront",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/storefront/current",
                    "title": "static var current: Storefront?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/storefront/countrycode",
                    "title": "let countryCode: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/storefront/id",
                    "title": "let id: String",
                    "type": "property"
                  },
                  {
                    "title": "Listening for storefront changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/storefront/updates",
                    "title": "static var updates: Storefront.Storefronts",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/storefront/storefronts",
                    "title": "Storefront.Storefronts",
                    "type": "struct"
                  },
                  {
                    "title": "Getting the currency for the storefront",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/storefront/currency",
                    "title": "var currency: Locale.Currency?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/storefront",
                "title": "Storefront",
                "type": "struct"
              },
              {
                "path": "/documentation/storekit/storefront/current",
                "title": "static var current: Storefront?",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/storefront/updates",
                "title": "static var updates: Storefront.Storefronts",
                "type": "property"
              },
              {
                "title": "In-App Purchase Testing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/testing-at-all-stages-of-development-with-xcode-and-the-sandbox",
                "title": "Testing at all stages of development with Xcode and the sandbox",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Product identifiers and requests",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-fetching-product-identifiers",
                    "title": "Testing fetching product identifiers",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-invalid-product-identifier-handling",
                    "title": "Testing invalid product identifier handling",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-product-request",
                    "title": "Testing a product request",
                    "type": "article"
                  },
                  {
                    "title": "Payment transactions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-purchases-made-outside-your-app",
                    "title": "Testing purchases made outside your app",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-win-back-offers-in-the-sandbox-environment",
                    "title": "Testing win-back offers in the sandbox environment",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-an-interrupted-purchase",
                    "title": "Testing an interrupted purchase",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-failing-subscription-renewals-and-in-app-purchases",
                    "title": "Testing failing subscription renewals and In-App Purchases",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-payment-request",
                    "title": "Testing a payment request",
                    "type": "article"
                  },
                  {
                    "title": "Subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-an-auto-renewable-subscription",
                    "title": "Testing an auto-renewable subscription",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-resubscribing-from-the-subscriptions-page",
                    "title": "Testing resubscribing from the subscriptions page",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-disabling-auto-renew",
                    "title": "Testing disabling auto-renew",
                    "type": "article"
                  },
                  {
                    "title": "Family Sharing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-family-sharing",
                    "title": "Testing Family Sharing",
                    "type": "article"
                  },
                  {
                    "title": "Refunds",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-refund-requests",
                    "title": "Testing refund requests",
                    "type": "article"
                  },
                  {
                    "title": "Server notifications",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-app-store-server-notifications",
                    "title": "Testing App Store server notifications",
                    "type": "article"
                  },
                  {
                    "title": "Transaction observer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-transaction-observer-code",
                    "title": "Testing transaction observer code",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-a-successful-transaction",
                    "title": "Testing a successful transaction",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-complete-transactions",
                    "title": "Testing complete transactions",
                    "type": "article"
                  }
                ],
                "path": "/documentation/storekit/testing-in-app-purchases-with-sandbox",
                "title": "Testing In-App Purchases with sandbox",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-refund-requests",
                "title": "Testing refund requests",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/testing-win-back-offers-in-xcode",
                "title": "Testing win-back offers in Xcode",
                "type": "article"
              },
              {
                "title": "Advanced Commerce API interactions",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "children": [
                  {
                    "title": "Getting the product ID and type",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/producttype",
                    "title": "AdvancedCommerceProduct.ProductType",
                    "type": "typealias"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/type",
                    "title": "let type: AdvancedCommerceProduct.ProductType",
                    "type": "property"
                  },
                  {
                    "title": "Initiating purchases",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "children": [
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/advancedcommerceproduct/purchaseoption/onstorefrontchange(shouldcontinuepurchase:)",
                        "title": "static func onStorefrontChange(shouldContinuePurchase: (Storefront) -> Bool) -> AdvancedCommerceProduct.PurchaseOption",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/storekit/advancedcommerceproduct/purchaseoption",
                    "title": "AdvancedCommerceProduct.PurchaseOption",
                    "type": "struct"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/purchase(compactjws:confirmin:options:)-7x4bh",
                    "title": "func purchase(compactJWS: String, confirmIn: NSWindow, options: Set<AdvancedCommerceProduct.PurchaseOption>) async throws -> AdvancedCommerceProduct.PurchaseResult",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/purchase(compactjws:confirmin:options:)-54lkw",
                    "title": "func purchase(compactJWS: String, confirmIn: UIViewController, options: Set<AdvancedCommerceProduct.PurchaseOption>) async throws -> AdvancedCommerceProduct.PurchaseResult",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/purchase(compactjws:options:)",
                    "title": "func purchase(compactJWS: String, options: Set<AdvancedCommerceProduct.PurchaseOption>) async throws -> AdvancedCommerceProduct.PurchaseResult",
                    "type": "method"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/purchaseresult",
                    "title": "AdvancedCommerceProduct.PurchaseResult",
                    "type": "typealias"
                  },
                  {
                    "title": "Getting transactions and entitlements",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/alltransactions",
                    "title": "var allTransactions: Transaction.Transactions",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/currententitlements",
                    "title": "var currentEntitlements: Transaction.Transactions",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/latesttransaction",
                    "title": "var latestTransaction: VerificationResult<Transaction>?",
                    "type": "property"
                  },
                  {
                    "title": "Initializing an instance",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/advancedcommerceproduct/init(id:)",
                    "title": "init(id: AdvancedCommerceProduct.ID) async throws",
                    "type": "init"
                  },
                  {
                    "title": "Handling errors",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/invalidrequesterror/code",
                        "title": "let code: Int64",
                        "type": "property"
                      },
                      {
                        "beta": true,
                        "path": "/documentation/storekit/invalidrequesterror/message",
                        "title": "let message: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/invalidrequesterror",
                    "title": "InvalidRequestError",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/storekit/advancedcommerceproduct",
                "title": "AdvancedCommerceProduct",
                "type": "struct"
              },
              {
                "path": "/documentation/storekit/sending-advanced-commerce-api-requests-from-your-app",
                "title": "Sending Advanced Commerce API requests from your app",
                "type": "article"
              },
              {
                "path": "/documentation/storekit/generating-jws-to-sign-app-store-requests",
                "title": "Generating JWS to sign App Store requests",
                "type": "article"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "StoreKit Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/storekiterror/networkerror(_:)",
                    "title": "case networkError(URLError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/storekiterror/systemerror(_:)",
                    "title": "case systemError(any Error)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/storekiterror/usercancelled",
                    "title": "case userCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/storekiterror/notavailableinstorefront",
                    "title": "case notAvailableInStorefront",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/storekiterror/notentitled",
                    "title": "case notEntitled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/storekiterror/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/storekiterror/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekit/storekiterror",
                "title": "StoreKitError",
                "type": "enum"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/choosing-a-storekit-api-for-in-app-purchases",
                "title": "Choosing a StoreKit API for In-App Purchases",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/setting-up-the-transaction-observer-for-the-payment-queue",
                    "title": "Setting up the transaction observer for the payment queue",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/offering-completing-and-restoring-in-app-purchases",
                    "title": "Offering, completing, and restoring in-app purchases",
                    "type": "sampleCode"
                  },
                  {
                    "children": [
                      {
                        "title": "Determining Whether the User Can Make Payments",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/canmakepayments()",
                        "title": "class func canMakePayments() -> Bool",
                        "type": "method"
                      },
                      {
                        "title": "Determining Store Content",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/storefront",
                        "title": "var storefront: SKStorefront?",
                        "type": "property"
                      },
                      {
                        "title": "Getting the Queue",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/default()",
                        "title": "class func `default`() -> Self",
                        "type": "method"
                      },
                      {
                        "title": "Adding, Getting, and Removing Observers",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/add(_:)-5ciz2",
                        "title": "func add(any SKPaymentTransactionObserver)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/transactionobservers",
                        "title": "var transactionObservers: [any SKPaymentTransactionObserver]",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/remove(_:)",
                        "title": "func remove(any SKPaymentTransactionObserver)",
                        "type": "method"
                      },
                      {
                        "title": "Managing Transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/delegate",
                        "title": "var delegate: (any SKPaymentQueueDelegate)?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/transactions",
                        "title": "var transactions: [SKPaymentTransaction]",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/add(_:)-4vct1",
                        "title": "func add(SKPayment)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/finishtransaction(_:)",
                        "title": "func finishTransaction(SKPaymentTransaction)",
                        "type": "method"
                      },
                      {
                        "title": "Restoring Purchases",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/restorecompletedtransactions()",
                        "title": "func restoreCompletedTransactions()",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/restorecompletedtransactions(withapplicationusername:)",
                        "title": "func restoreCompletedTransactions(withApplicationUsername: String?)",
                        "type": "method"
                      },
                      {
                        "title": "Showing Price Consent",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/showpriceconsentifneeded()",
                        "title": "func showPriceConsentIfNeeded()",
                        "type": "method"
                      },
                      {
                        "title": "Redeeming Codes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/presentcoderedemptionsheet()",
                        "title": "func presentCodeRedemptionSheet()",
                        "type": "method"
                      },
                      {
                        "title": "Downloading Content",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/start(_:)",
                        "title": "func start([SKDownload])",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/cancel(_:)",
                        "title": "func cancel([SKDownload])",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/pause(_:)",
                        "title": "func pause([SKDownload])",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueue/resume(_:)",
                        "title": "func resume([SKDownload])",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymentqueue",
                    "title": "SKPaymentQueue",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Handling transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:updatedtransactions:)",
                        "title": "func paymentQueue(SKPaymentQueue, updatedTransactions: [SKPaymentTransaction])",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:removedtransactions:)",
                        "title": "func paymentQueue(SKPaymentQueue, removedTransactions: [SKPaymentTransaction])",
                        "type": "method"
                      },
                      {
                        "title": "Restoring transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:restorecompletedtransactionsfailedwitherror:)",
                        "title": "func paymentQueue(SKPaymentQueue, restoreCompletedTransactionsFailedWithError: any Error)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueuerestorecompletedtransactionsfinished(_:)",
                        "title": "func paymentQueueRestoreCompletedTransactionsFinished(SKPaymentQueue)",
                        "type": "method"
                      },
                      {
                        "title": "Handling promoted in-app purchases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/promoting-in-app-purchases",
                        "title": "Promoting In-App Purchases",
                        "type": "article"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:shouldaddstorepayment:for:)",
                        "title": "func paymentQueue(SKPaymentQueue, shouldAddStorePayment: SKPayment, for: SKProduct) -> Bool",
                        "type": "method"
                      },
                      {
                        "title": "Revoking entitlements",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:didrevokeentitlementsforproductidentifiers:)",
                        "title": "func paymentQueue(SKPaymentQueue, didRevokeEntitlementsForProductIdentifiers: [String])",
                        "type": "method"
                      },
                      {
                        "title": "Changing the storefront",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueuedidchangestorefront(_:)",
                        "title": "func paymentQueueDidChangeStorefront(SKPaymentQueue)",
                        "type": "method"
                      },
                      {
                        "title": "Handling download actions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:updateddownloads:)",
                        "title": "func paymentQueue(SKPaymentQueue, updatedDownloads: [SKDownload])",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransactionobserver",
                    "title": "SKPaymentTransactionObserver",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Continuing transactions",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueuedelegate/paymentqueue(_:shouldcontinue:in:)",
                        "title": "func paymentQueue(SKPaymentQueue, shouldContinue: SKPaymentTransaction, in: SKStorefront) -> Bool",
                        "type": "method"
                      },
                      {
                        "title": "Showing price consent",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentqueuedelegate/paymentqueueshouldshowpriceconsent(_:)",
                        "title": "func paymentQueueShouldShowPriceConsent(SKPaymentQueue) -> Bool",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymentqueuedelegate",
                    "title": "SKPaymentQueueDelegate",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Controlling the Request",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/start()",
                        "title": "func start()",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the Delegate",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/delegate",
                        "title": "var delegate: (any SKRequestDelegate)?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Completing Requests",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/requestdidfinish(_:)",
                            "title": "func requestDidFinish(SKRequest)",
                            "type": "method"
                          },
                          {
                            "title": "Handling Errors",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/request(_:didfailwitherror:)",
                            "title": "func request(SKRequest, didFailWithError: any Error)",
                            "type": "method"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequestdelegate",
                        "title": "SKRequestDelegate",
                        "type": "protocol"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skrequest",
                    "title": "SKRequest",
                    "type": "class"
                  },
                  {
                    "title": "Product information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/loading-in-app-product-identifiers",
                    "title": "Loading in-app product identifiers",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/fetching-product-information-from-the-app-store",
                    "title": "Fetching product information from the App Store",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing a Products Request",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsrequest/init(productidentifiers:)",
                        "title": "init(productIdentifiers: Set<String>)",
                        "type": "init"
                      },
                      {
                        "title": "Setting the Delegate",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsrequest/delegate",
                        "title": "var delegate: (any SKProductsRequestDelegate)?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Receiving the Response",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductsrequestdelegate/productsrequest(_:didreceive:)",
                            "title": "func productsRequest(SKProductsRequest, didReceive: SKProductsResponse)",
                            "type": "method"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsrequestdelegate",
                        "title": "SKProductsRequestDelegate",
                        "type": "protocol"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproductsrequest",
                    "title": "SKProductsRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Response Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsresponse/products",
                        "title": "var products: [SKProduct]",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsresponse/invalidproductidentifiers",
                        "title": "var invalidProductIdentifiers: [String]",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproductsresponse",
                    "title": "SKProductsResponse",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the Product Identifier",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/productidentifier",
                        "title": "var productIdentifier: String",
                        "type": "property"
                      },
                      {
                        "title": "Getting Product Attributes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/localizeddescription",
                        "title": "var localizedDescription: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/localizedtitle",
                        "title": "var localizedTitle: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/contentversion",
                        "title": "var contentVersion: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/isfamilyshareable",
                        "title": "var isFamilyShareable: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/contentlengths",
                        "title": "var contentLengths: [NSNumber]",
                        "type": "property"
                      },
                      {
                        "title": "Getting Pricing Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/price",
                        "title": "var price: NSDecimalNumber",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/pricelocale",
                        "title": "var priceLocale: Locale",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/introductoryprice",
                        "title": "var introductoryPrice: SKProductDiscount?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/discounts",
                        "title": "var discounts: [SKProductDiscount]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/identifier",
                            "title": "var identifier: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.property",
                            "title": "var type: SKProductDiscount.Type",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Types of Offers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/introductory",
                                "title": "case introductory",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/subscription",
                                "title": "case subscription",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/init(rawvalue:)",
                                "title": "init?(rawValue: UInt)",
                                "type": "init"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.enum",
                            "title": "SKProductDiscount.Type",
                            "type": "enum"
                          },
                          {
                            "title": "Getting Price and Payment Mode",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/price",
                            "title": "var price: NSDecimalNumber",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/pricelocale",
                            "title": "var priceLocale: Locale",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.property",
                            "title": "var paymentMode: SKProductDiscount.PaymentMode",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Discount Price Payment Modes",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payasyougo",
                                "title": "case payAsYouGo",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payupfront",
                                "title": "case payUpFront",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/freetrial",
                                "title": "case freeTrial",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/init(rawvalue:)",
                                "title": "init?(rawValue: UInt)",
                                "type": "init"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum",
                            "title": "SKProductDiscount.PaymentMode",
                            "type": "enum"
                          },
                          {
                            "title": "Getting the Discount Duration",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/numberofperiods",
                            "title": "var numberOfPeriods: Int",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/subscriptionperiod",
                            "title": "var subscriptionPeriod: SKProductSubscriptionPeriod",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductdiscount",
                        "title": "SKProductDiscount",
                        "type": "class"
                      },
                      {
                        "title": "Getting Subscription Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/subscriptiongroupidentifier",
                        "title": "var subscriptionGroupIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/subscriptionperiod",
                        "title": "var subscriptionPeriod: SKProductSubscriptionPeriod?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting Subscription Period Details",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductsubscriptionperiod/numberofunits",
                            "title": "var numberOfUnits: Int",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductsubscriptionperiod/unit",
                            "title": "var unit: SKProduct.PeriodUnit",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Period Units",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/day",
                                "title": "case day",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/month",
                                "title": "case month",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/week",
                                "title": "case week",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/year",
                                "title": "case year",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproduct/periodunit/init(rawvalue:)",
                                "title": "init?(rawValue: UInt)",
                                "type": "init"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit",
                            "title": "SKProduct.PeriodUnit",
                            "type": "enum"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductsubscriptionperiod",
                        "title": "SKProductSubscriptionPeriod",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Period Units",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/day",
                            "title": "case day",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/month",
                            "title": "case month",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/week",
                            "title": "case week",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/year",
                            "title": "case year",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproduct/periodunit/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/periodunit",
                        "title": "SKProduct.PeriodUnit",
                        "type": "enum"
                      },
                      {
                        "title": "Getting Downloadable Content Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/isdownloadable",
                        "title": "var isDownloadable: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/downloadcontentlengths",
                        "title": "var downloadContentLengths: [NSNumber]",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/downloadcontentversion",
                        "title": "var downloadContentVersion: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproduct/downloadable",
                        "title": "var downloadable: Bool",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproduct",
                    "title": "SKProduct",
                    "type": "class"
                  },
                  {
                    "title": "Storefronts",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifying the Storefront",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skstorefront/countrycode",
                        "title": "var countryCode: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skstorefront/identifier",
                        "title": "var identifier: String",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skstorefront",
                    "title": "SKStorefront",
                    "type": "class"
                  },
                  {
                    "title": "Purchases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/requesting-a-payment-from-the-app-store",
                    "title": "Requesting a payment from the App Store",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/processing-a-transaction",
                    "title": "Processing a transaction",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Payments",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/init(product:)",
                        "title": "convenience init(product: SKProduct)",
                        "type": "init"
                      },
                      {
                        "title": "Getting Payment Details",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/productidentifier",
                        "title": "var productIdentifier: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/quantity",
                        "title": "var quantity: Int",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/requestdata",
                        "title": "var requestData: Data?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/applicationusername",
                        "title": "var applicationUsername: String?",
                        "type": "property"
                      },
                      {
                        "title": "Simulating Purchases for Testing",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/simulatesasktobuyinsandbox",
                        "title": "var simulatesAskToBuyInSandbox: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Getting Discount Details",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpayment/paymentdiscount",
                        "title": "var paymentDiscount: SKPaymentDiscount?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Payment Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/init(identifier:keyidentifier:nonce:signature:timestamp:)",
                            "title": "init(identifier: String, keyIdentifier: String, nonce: UUID, signature: String, timestamp: NSNumber)",
                            "type": "init"
                          },
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/identifier",
                            "title": "var identifier: String",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/keyidentifier",
                            "title": "var keyIdentifier: String",
                            "type": "property"
                          },
                          {
                            "title": "Validating the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/nonce",
                            "title": "var nonce: UUID",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/signature",
                            "title": "var signature: String",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/timestamp",
                            "title": "var timestamp: NSNumber",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentdiscount",
                        "title": "SKPaymentDiscount",
                        "type": "class"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpayment",
                    "title": "SKPayment",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting and Setting Attributes",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/productidentifier",
                        "title": "var productIdentifier: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/quantity",
                        "title": "var quantity: Int",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/requestdata",
                        "title": "var requestData: Data?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/applicationusername",
                        "title": "var applicationUsername: String?",
                        "type": "property"
                      },
                      {
                        "title": "Simulating Buy for Testing",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/simulatesasktobuyinsandbox",
                        "title": "var simulatesAskToBuyInSandbox: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Getting and Setting Discount Details",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skmutablepayment/paymentdiscount",
                        "title": "var paymentDiscount: SKPaymentDiscount?",
                        "type": "property"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skmutablepayment",
                    "title": "SKMutablePayment",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Transaction Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/payment",
                        "title": "var payment: SKPayment",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionidentifier",
                        "title": "var transactionIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactiondate",
                        "title": "var transactionDate: Date?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/original",
                        "title": "var original: SKPaymentTransaction?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/error",
                        "title": "var error: (any Error)?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionreceipt",
                        "title": "var transactionReceipt: Data?",
                        "type": "property"
                      },
                      {
                        "title": "Getting Downloads",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/downloads",
                        "title": "var downloads: [SKDownload]",
                        "type": "property"
                      },
                      {
                        "title": "Getting Transaction State",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionstate",
                        "title": "var transactionState: SKPaymentTransactionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Constants",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchasing",
                            "title": "case purchasing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchased",
                            "title": "case purchased",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/failed",
                            "title": "case failed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/restored",
                            "title": "case restored",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/deferred",
                            "title": "case deferred",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionstate",
                        "title": "SKPaymentTransactionState",
                        "type": "enum"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransaction",
                    "title": "SKPaymentTransaction",
                    "type": "class"
                  },
                  {
                    "title": "Purchase validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/choosing-a-receipt-validation-technique",
                    "title": "Choosing a receipt validation technique",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/validating-receipts-with-the-app-store",
                    "title": "Validating receipts with the App Store",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/bundle/1407276-appstorereceipturl",
                    "title": "var appStoreReceiptURL: URL?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Receipt Refresh Requests",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/init(receiptproperties:)",
                        "title": "init(receiptProperties: [String : Any]?)",
                        "type": "init"
                      },
                      {
                        "title": "Receipt Properties and Keys",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/receiptproperties",
                        "title": "var receiptProperties: [String : Any]?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisexpired",
                        "title": "let SKReceiptPropertyIsExpired: String",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisrevoked",
                        "title": "let SKReceiptPropertyIsRevoked: String",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisvolumepurchase",
                        "title": "let SKReceiptPropertyIsVolumePurchase: String",
                        "type": "var"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skreceiptrefreshrequest",
                    "title": "SKReceiptRefreshRequest",
                    "type": "class"
                  },
                  {
                    "title": "Content delivery",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/unlocking-purchased-content",
                    "title": "Unlocking purchased content",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/persisting-a-purchase",
                    "title": "Persisting a purchase",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/finishing-a-transaction",
                    "title": "Finishing a transaction",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Content Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/expectedcontentlength",
                        "title": "var expectedContentLength: Int64",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contentidentifier",
                        "title": "var contentIdentifier: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contentversion",
                        "title": "var contentVersion: String",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/transaction",
                        "title": "var transaction: SKPaymentTransaction",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contentlength",
                        "title": "var contentLength: Int64",
                        "type": "property"
                      },
                      {
                        "title": "Getting State Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/state",
                        "title": "var state: SKDownloadState",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/progress",
                        "title": "var progress: Float",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/timeremaining",
                        "title": "var timeRemaining: TimeInterval",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownloadtimeremainingunknown",
                        "title": "var SKDownloadTimeRemainingUnknown: TimeInterval",
                        "type": "var"
                      },
                      {
                        "children": [
                          {
                            "title": "Constants",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/waiting",
                            "title": "case waiting",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/active",
                            "title": "case active",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/paused",
                            "title": "case paused",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/finished",
                            "title": "case finished",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/failed",
                            "title": "case failed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/cancelled",
                            "title": "case cancelled",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skdownloadstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownloadstate",
                        "title": "SKDownloadState",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/downloadstate",
                        "title": "var downloadState: SKDownloadState",
                        "type": "property"
                      },
                      {
                        "title": "Accessing a Completed Download",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/error",
                        "title": "var error: (any Error)?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contenturl",
                        "title": "var contentURL: URL?",
                        "type": "property"
                      },
                      {
                        "title": "Managing Downloaded Content",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/contenturl(forproductid:)",
                        "title": "class func contentURL(forProductID: String) -> URL?",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skdownload/deletecontent(forproductid:)",
                        "title": "class func deleteContent(forProductID: String)",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skdownload",
                    "title": "SKDownload",
                    "type": "class"
                  },
                  {
                    "title": "Refunds",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/handling-refund-notifications",
                    "title": "Handling refund notifications",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-refund-requests",
                    "title": "Testing refund requests",
                    "type": "article"
                  },
                  {
                    "title": "Providing access to previously purchased products",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/restoring-purchased-products",
                    "title": "Restoring purchased products",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Receipt Refresh Requests",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/init(receiptproperties:)",
                        "title": "init(receiptProperties: [String : Any]?)",
                        "type": "init"
                      },
                      {
                        "title": "Receipt Properties and Keys",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptrefreshrequest/receiptproperties",
                        "title": "var receiptProperties: [String : Any]?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisexpired",
                        "title": "let SKReceiptPropertyIsExpired: String",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisrevoked",
                        "title": "let SKReceiptPropertyIsRevoked: String",
                        "type": "var"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skreceiptpropertyisvolumepurchase",
                        "title": "let SKReceiptPropertyIsVolumePurchase: String",
                        "type": "var"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skreceiptrefreshrequest",
                    "title": "SKReceiptRefreshRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Controlling the Request",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/start()",
                        "title": "func start()",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/cancel()",
                        "title": "func cancel()",
                        "type": "method"
                      },
                      {
                        "title": "Accessing the Delegate",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequest/delegate",
                        "title": "var delegate: (any SKRequestDelegate)?",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Completing Requests",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/requestdidfinish(_:)",
                            "title": "func requestDidFinish(SKRequest)",
                            "type": "method"
                          },
                          {
                            "title": "Handling Errors",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skrequestdelegate/request(_:didfailwitherror:)",
                            "title": "func request(SKRequest, didFailWithError: any Error)",
                            "type": "method"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skrequestdelegate",
                        "title": "SKRequestDelegate",
                        "type": "protocol"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skrequest",
                    "title": "SKRequest",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting Transaction Information",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/payment",
                        "title": "var payment: SKPayment",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionidentifier",
                        "title": "var transactionIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactiondate",
                        "title": "var transactionDate: Date?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/original",
                        "title": "var original: SKPaymentTransaction?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/error",
                        "title": "var error: (any Error)?",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionreceipt",
                        "title": "var transactionReceipt: Data?",
                        "type": "property"
                      },
                      {
                        "title": "Getting Downloads",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/downloads",
                        "title": "var downloads: [SKDownload]",
                        "type": "property"
                      },
                      {
                        "title": "Getting Transaction State",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransaction/transactionstate",
                        "title": "var transactionState: SKPaymentTransactionState",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Constants",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchasing",
                            "title": "case purchasing",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/purchased",
                            "title": "case purchased",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/failed",
                            "title": "case failed",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/restored",
                            "title": "case restored",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/deferred",
                            "title": "case deferred",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymenttransactionstate/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymenttransactionstate",
                        "title": "SKPaymentTransactionState",
                        "type": "enum"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransaction",
                    "title": "SKPaymentTransaction",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/storekit/skterminateforinvalidreceipt()",
                    "title": "func SKTerminateForInvalidReceipt()",
                    "type": "func"
                  },
                  {
                    "title": "Family Sharing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/supporting-family-sharing-in-your-app",
                    "title": "Supporting Family Sharing in your app",
                    "type": "article"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skproduct/isfamilyshareable",
                    "title": "var isFamilyShareable: Bool",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skpaymenttransactionobserver/paymentqueue(_:didrevokeentitlementsforproductidentifiers:)",
                    "title": "func paymentQueue(SKPaymentQueue, didRevokeEntitlementsForProductIdentifiers: [String])",
                    "type": "method"
                  },
                  {
                    "title": "Subscriptions",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Essentials",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/handling-subscriptions-billing",
                        "title": "Handling Subscriptions Billing",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/enabling-app-store-server-notifications",
                        "title": "Enabling App Store Server Notifications",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/offering-a-subscription-across-multiple-apps",
                        "title": "Offering a Subscription Across Multiple Apps",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/reducing-involuntary-subscriber-churn",
                        "title": "Reducing Involuntary Subscriber Churn",
                        "type": "article"
                      },
                      {
                        "title": "Introductory offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/implementing-introductory-offers-in-your-app",
                        "title": "Implementing introductory offers in your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-introductory-offers",
                        "title": "Testing introductory offers",
                        "type": "article"
                      },
                      {
                        "children": [
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/identifier",
                            "title": "var identifier: String?",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.property",
                            "title": "var type: SKProductDiscount.Type",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Types of Offers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/introductory",
                                "title": "case introductory",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/subscription",
                                "title": "case subscription",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/type-swift.enum/init(rawvalue:)",
                                "title": "init?(rawValue: UInt)",
                                "type": "init"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/type-swift.enum",
                            "title": "SKProductDiscount.Type",
                            "type": "enum"
                          },
                          {
                            "title": "Getting Price and Payment Mode",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/price",
                            "title": "var price: NSDecimalNumber",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/pricelocale",
                            "title": "var priceLocale: Locale",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.property",
                            "title": "var paymentMode: SKProductDiscount.PaymentMode",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Discount Price Payment Modes",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payasyougo",
                                "title": "case payAsYouGo",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/payupfront",
                                "title": "case payUpFront",
                                "type": "case"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/freetrial",
                                "title": "case freeTrial",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "deprecated": true,
                                "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum/init(rawvalue:)",
                                "title": "init?(rawValue: UInt)",
                                "type": "init"
                              }
                            ],
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/paymentmode-swift.enum",
                            "title": "SKProductDiscount.PaymentMode",
                            "type": "enum"
                          },
                          {
                            "title": "Getting the Discount Duration",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/numberofperiods",
                            "title": "var numberOfPeriods: Int",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductdiscount/subscriptionperiod",
                            "title": "var subscriptionPeriod: SKProductSubscriptionPeriod",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductdiscount",
                        "title": "SKProductDiscount",
                        "type": "class"
                      },
                      {
                        "title": "Promotional offers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/setting-up-promotional-offers",
                        "title": "Setting up promotional offers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/implementing-promotional-offers-in-your-app",
                        "title": "Implementing promotional offers in your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/generating-a-signature-for-promotional-offers",
                        "title": "Generating a signature for promotional offers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/generating-a-promotional-offer-signature-on-the-server",
                        "title": "Generating a Promotional Offer Signature on the Server",
                        "type": "sampleCode"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializing a Payment Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/init(identifier:keyidentifier:nonce:signature:timestamp:)",
                            "title": "init(identifier: String, keyIdentifier: String, nonce: UUID, signature: String, timestamp: NSNumber)",
                            "type": "init"
                          },
                          {
                            "title": "Identifying the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/identifier",
                            "title": "var identifier: String",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/keyidentifier",
                            "title": "var keyIdentifier: String",
                            "type": "property"
                          },
                          {
                            "title": "Validating the Discount",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/nonce",
                            "title": "var nonce: UUID",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/signature",
                            "title": "var signature: String",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skpaymentdiscount/timestamp",
                            "title": "var timestamp: NSNumber",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skpaymentdiscount",
                        "title": "SKPaymentDiscount",
                        "type": "class"
                      },
                      {
                        "title": "Subscription offer codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/implementing-offer-codes-in-your-app",
                        "title": "Implementing offer codes in your app",
                        "type": "article"
                      },
                      {
                        "title": "Subscription service entitlement",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/determining-service-entitlement-on-the-server",
                        "title": "Determining service entitlement on the server",
                        "type": "sampleCode"
                      }
                    ],
                    "path": "/documentation/storekit/subscriptions-and-offers",
                    "title": "Subscriptions and offers",
                    "type": "collection"
                  },
                  {
                    "title": "Promotions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/promoting-in-app-purchases",
                    "title": "Promoting In-App Purchases",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-promoted-in-app-purchases",
                    "title": "Testing promoted In-App Purchases",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Managing promoted product order",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/fetchstorepromotionorder(completionhandler:)",
                        "title": "func fetchStorePromotionOrder(completionHandler: (([SKProduct], (any Error)?) -> Void)?)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/update(storepromotionorder:completionhandler:)",
                        "title": "func update(storePromotionOrder: [SKProduct], completionHandler: (((any Error)?) -> Void)?)",
                        "type": "method"
                      },
                      {
                        "title": "Managing promoted product visibility",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/fetchstorepromotionvisibility(for:completionhandler:)",
                        "title": "func fetchStorePromotionVisibility(for: SKProduct, completionHandler: ((SKProductStorePromotionVisibility, (any Error)?) -> Void)?)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/update(storepromotionvisibility:for:completionhandler:)",
                        "title": "func update(storePromotionVisibility: SKProductStorePromotionVisibility, for: SKProduct, completionHandler: (((any Error)?) -> Void)?)",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration cases",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductstorepromotionvisibility/default",
                            "title": "case `default`",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductstorepromotionvisibility/hide",
                            "title": "case hide",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductstorepromotionvisibility/show",
                            "title": "case show",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/storekit/skproductstorepromotionvisibility/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotionvisibility",
                        "title": "SKProductStorePromotionVisibility",
                        "type": "enum"
                      },
                      {
                        "title": "Getting the controller",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skproductstorepromotioncontroller/default()",
                        "title": "class func `default`() -> Self",
                        "type": "method"
                      }
                    ],
                    "deprecated": true,
                    "path": "/documentation/storekit/skproductstorepromotioncontroller",
                    "title": "SKProductStorePromotionController",
                    "type": "class"
                  },
                  {
                    "title": "Testing In-App Purchases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-at-all-stages-of-development-with-xcode-and-the-sandbox",
                    "title": "Testing at all stages of development with Xcode and the sandbox",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/xcode/setting-up-storekit-testing-in-xcode",
                    "title": "Setting up StoreKit Testing in Xcode",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/testing-in-app-purchases-in-xcode",
                    "title": "Testing In-App Purchases in Xcode",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Product identifiers and requests",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-fetching-product-identifiers",
                        "title": "Testing fetching product identifiers",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-invalid-product-identifier-handling",
                        "title": "Testing invalid product identifier handling",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-product-request",
                        "title": "Testing a product request",
                        "type": "article"
                      },
                      {
                        "title": "Payment transactions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-purchases-made-outside-your-app",
                        "title": "Testing purchases made outside your app",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-win-back-offers-in-the-sandbox-environment",
                        "title": "Testing win-back offers in the sandbox environment",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-an-interrupted-purchase",
                        "title": "Testing an interrupted purchase",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-failing-subscription-renewals-and-in-app-purchases",
                        "title": "Testing failing subscription renewals and In-App Purchases",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-payment-request",
                        "title": "Testing a payment request",
                        "type": "article"
                      },
                      {
                        "title": "Subscriptions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-an-auto-renewable-subscription",
                        "title": "Testing an auto-renewable subscription",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-resubscribing-from-the-subscriptions-page",
                        "title": "Testing resubscribing from the subscriptions page",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-disabling-auto-renew",
                        "title": "Testing disabling auto-renew",
                        "type": "article"
                      },
                      {
                        "title": "Family Sharing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-family-sharing",
                        "title": "Testing Family Sharing",
                        "type": "article"
                      },
                      {
                        "title": "Refunds",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-refund-requests",
                        "title": "Testing refund requests",
                        "type": "article"
                      },
                      {
                        "title": "Server notifications",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-app-store-server-notifications",
                        "title": "Testing App Store server notifications",
                        "type": "article"
                      },
                      {
                        "title": "Transaction observer",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/testing-transaction-observer-code",
                        "title": "Testing transaction observer code",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-a-successful-transaction",
                        "title": "Testing a successful transaction",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/testing-complete-transactions",
                        "title": "Testing complete transactions",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/testing-in-app-purchases-with-sandbox",
                    "title": "Testing In-App Purchases with sandbox",
                    "type": "article"
                  },
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/handling-errors",
                    "title": "Handling errors",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/clientinvalid",
                        "title": "case clientInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/paymentcancelled",
                        "title": "case paymentCancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/paymentinvalid",
                        "title": "case paymentInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/paymentnotallowed",
                        "title": "case paymentNotAllowed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/storeproductnotavailable",
                        "title": "case storeProductNotAvailable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/cloudservicepermissiondenied",
                        "title": "case cloudServicePermissionDenied",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/cloudservicenetworkconnectionfailed",
                        "title": "case cloudServiceNetworkConnectionFailed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/cloudservicerevoked",
                        "title": "case cloudServiceRevoked",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/privacyacknowledgementrequired",
                        "title": "case privacyAcknowledgementRequired",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/unauthorizedrequestdata",
                        "title": "case unauthorizedRequestData",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/invalidofferidentifier",
                        "title": "case invalidOfferIdentifier",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/invalidofferprice",
                        "title": "case invalidOfferPrice",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/invalidsignature",
                        "title": "case invalidSignature",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/missingofferparams",
                        "title": "case missingOfferParams",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/ineligibleforoffer",
                        "title": "case ineligibleForOffer",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlaycancelled",
                        "title": "case overlayCancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlayinvalidconfiguration",
                        "title": "case overlayInvalidConfiguration",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlaypresentedinbackgroundscene",
                        "title": "case overlayPresentedInBackgroundScene",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/overlaytimeout",
                        "title": "case overlayTimeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/unsupportedplatform",
                        "title": "case unsupportedPlatform",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skerror/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/storekit/skerror/code",
                    "title": "SKError.Code",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Error codes",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/unknown",
                            "title": "case unknown",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/clientinvalid",
                            "title": "case clientInvalid",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/paymentcancelled",
                            "title": "case paymentCancelled",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/paymentinvalid",
                            "title": "case paymentInvalid",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/paymentnotallowed",
                            "title": "case paymentNotAllowed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/storeproductnotavailable",
                            "title": "case storeProductNotAvailable",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/cloudservicepermissiondenied",
                            "title": "case cloudServicePermissionDenied",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/cloudservicenetworkconnectionfailed",
                            "title": "case cloudServiceNetworkConnectionFailed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/cloudservicerevoked",
                            "title": "case cloudServiceRevoked",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/privacyacknowledgementrequired",
                            "title": "case privacyAcknowledgementRequired",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/unauthorizedrequestdata",
                            "title": "case unauthorizedRequestData",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/invalidofferidentifier",
                            "title": "case invalidOfferIdentifier",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/invalidofferprice",
                            "title": "case invalidOfferPrice",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/invalidsignature",
                            "title": "case invalidSignature",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/missingofferparams",
                            "title": "case missingOfferParams",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/ineligibleforoffer",
                            "title": "case ineligibleForOffer",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/overlaycancelled",
                            "title": "case overlayCancelled",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/overlayinvalidconfiguration",
                            "title": "case overlayInvalidConfiguration",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/overlaypresentedinbackgroundscene",
                            "title": "case overlayPresentedInBackgroundScene",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/overlaytimeout",
                            "title": "case overlayTimeout",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/unsupportedplatform",
                            "title": "case unsupportedPlatform",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/storekit/skerror/code/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/storekit/skerror/code",
                        "title": "SKError.Code",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/storekit/skerror/unknown",
                        "title": "static var unknown: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/clientinvalid",
                        "title": "static var clientInvalid: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/paymentcancelled",
                        "title": "static var paymentCancelled: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/paymentinvalid",
                        "title": "static var paymentInvalid: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/paymentnotallowed",
                        "title": "static var paymentNotAllowed: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/storeproductnotavailable",
                        "title": "static var storeProductNotAvailable: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/cloudservicepermissiondenied",
                        "title": "static var cloudServicePermissionDenied: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/cloudservicenetworkconnectionfailed",
                        "title": "static var cloudServiceNetworkConnectionFailed: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/cloudservicerevoked",
                        "title": "static var cloudServiceRevoked: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/privacyacknowledgementrequired",
                        "title": "static var privacyAcknowledgementRequired: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/unauthorizedrequestdata",
                        "title": "static var unauthorizedRequestData: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/invalidofferidentifier",
                        "title": "static var invalidOfferIdentifier: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/invalidofferprice",
                        "title": "static var invalidOfferPrice: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/invalidsignature",
                        "title": "static var invalidSignature: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/missingofferparams",
                        "title": "static var missingOfferParams: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/ineligibleforoffer",
                        "title": "static var ineligibleForOffer: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/overlaycancelled",
                        "title": "static var overlayCancelled: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/overlayinvalidconfiguration",
                        "title": "static var overlayInvalidConfiguration: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/overlaypresentedinbackgroundscene",
                        "title": "static var overlayPresentedInBackgroundScene: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/overlaytimeout",
                        "title": "static var overlayTimeout: SKError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skerror/unsupportedplatform",
                        "title": "static var unsupportedPlatform: SKError.Code",
                        "type": "property"
                      },
                      {
                        "title": "Error domain",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skerrordomain",
                        "title": "let SKErrorDomain: String",
                        "type": "var"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skerror/errordomain",
                        "title": "static var errorDomain: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/skerror",
                    "title": "SKError",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/storekit/skerrordomain",
                    "title": "let SKErrorDomain: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/storekit/original-api-for-in-app-purchase",
                "title": "Original API for In-App Purchase",
                "type": "collection"
              }
            ],
            "path": "/documentation/storekit/in-app-purchase",
            "title": "In-App Purchase",
            "type": "collection"
          },
          {
            "title": "App transaction",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/supporting-business-model-changes-by-using-the-app-transaction",
            "title": "Supporting business model changes by using the app transaction",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Getting the signed app transaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/shared",
                "title": "static var shared: VerificationResult<AppTransaction>",
                "type": "property"
              },
              {
                "title": "Getting the app transaction identifier",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/apptransactionid",
                "title": "var appTransactionID: String",
                "type": "property"
              },
              {
                "title": "Getting the environment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/environment",
                "title": "let environment: AppStore.Environment",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Getting the environment value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/appstore/environment/production",
                    "title": "static let production: AppStore.Environment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/appstore/environment/sandbox",
                    "title": "static let sandbox: AppStore.Environment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/appstore/environment/xcode",
                    "title": "static let xcode: AppStore.Environment",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/appstore/environment",
                "title": "AppStore.Environment",
                "type": "struct"
              },
              {
                "title": "Getting app and version information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/bundleid",
                "title": "let bundleID: String",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/apptransaction/appversion",
                "title": "let appVersion: String",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/apptransaction/originalappversion",
                "title": "let originalAppVersion: String",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/apptransaction/appid",
                "title": "let appID: UInt64?",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/apptransaction/appversionid",
                "title": "let appVersionID: UInt64?",
                "type": "property"
              },
              {
                "title": "Getting the original platform",
                "type": "groupMarker"
              },
              {
                "beta": true,
                "path": "/documentation/storekit/apptransaction/originalplatform",
                "title": "let originalPlatform: AppStore.Platform",
                "type": "property"
              },
              {
                "beta": true,
                "children": [
                  {
                    "title": "Getting platform values",
                    "type": "groupMarker"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/appstore/platform/ios",
                    "title": "static let iOS: AppStore.Platform",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/appstore/platform/macos",
                    "title": "static let macOS: AppStore.Platform",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/appstore/platform/tvos",
                    "title": "static let tvOS: AppStore.Platform",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/appstore/platform/visionos",
                    "title": "static let visionOS: AppStore.Platform",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/storekit/appstore/platform/watchos",
                    "title": "static let watchOS: AppStore.Platform",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/appstore/platform",
                "title": "AppStore.Platform",
                "type": "struct"
              },
              {
                "title": "Getting purchase dates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/originalpurchasedate",
                "title": "let originalPurchaseDate: Date",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/apptransaction/preorderdate",
                "title": "let preorderDate: Date?",
                "type": "property"
              },
              {
                "title": "Verifying the app transaction",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/deviceverification",
                "title": "let deviceVerification: Data",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/apptransaction/deviceverificationnonce",
                "title": "let deviceVerificationNonce: UUID",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/apptransaction/signeddate",
                "title": "let signedDate: Date",
                "type": "property"
              },
              {
                "title": "Getting app transaction information in JSON format",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/jsonrepresentation",
                "title": "var jsonRepresentation: Data",
                "type": "property"
              },
              {
                "title": "Getting app transaction from the server",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/apptransaction/refresh()",
                "title": "static func refresh() async throws -> VerificationResult<AppTransaction>",
                "type": "method"
              },
              {
                "title": "Deprecated",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/apptransaction/originalplatformstringrepresentation",
                "title": "var originalPlatformStringRepresentation: String",
                "type": "property"
              }
            ],
            "path": "/documentation/storekit/apptransaction",
            "title": "AppTransaction",
            "type": "struct"
          },
          {
            "title": "Messages",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Getting messages and message reasons",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/message/messages-swift.type.property",
                "title": "static var messages: Message.Messages",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/message/reason-swift.property",
                "title": "let reason: Message.Reason",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/message/messages-swift.struct",
                "title": "Message.Messages",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting the message reasons",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/message/reason-swift.struct/billingissue",
                    "title": "static let billingIssue: Message.Reason",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/message/reason-swift.struct/generic",
                    "title": "static let generic: Message.Reason",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/message/reason-swift.struct/priceincreaseconsent",
                    "title": "static let priceIncreaseConsent: Message.Reason",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/message/reason-swift.struct/winbackoffer",
                    "title": "static let winBackOffer: Message.Reason",
                    "type": "property"
                  },
                  {
                    "title": "Getting the localized description",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/message/reason-swift.struct/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/message/reason-swift.struct",
                "title": "Message.Reason",
                "type": "struct"
              },
              {
                "title": "Displaying messages",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/message/display(in:)",
                "title": "func display(in: UIWindowScene) throws",
                "type": "method"
              }
            ],
            "path": "/documentation/storekit/message",
            "title": "Message",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting the message reasons",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/message/reason-swift.struct/billingissue",
                "title": "static let billingIssue: Message.Reason",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/message/reason-swift.struct/generic",
                "title": "static let generic: Message.Reason",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/message/reason-swift.struct/priceincreaseconsent",
                "title": "static let priceIncreaseConsent: Message.Reason",
                "type": "property"
              },
              {
                "path": "/documentation/storekit/message/reason-swift.struct/winbackoffer",
                "title": "static let winBackOffer: Message.Reason",
                "type": "property"
              },
              {
                "title": "Getting the localized description",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/message/reason-swift.struct/localizeddescription",
                "title": "var localizedDescription: String",
                "type": "property"
              }
            ],
            "path": "/documentation/storekit/message/reason-swift.struct",
            "title": "Message.Reason",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Displaying the message",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/displaymessageaction/callasfunction(_:)",
                "title": "func callAsFunction(Message) throws",
                "type": "method"
              }
            ],
            "path": "/documentation/storekit/displaymessageaction",
            "title": "DisplayMessageAction",
            "type": "struct"
          },
          {
            "title": "Reviews",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/requesting-app-store-reviews",
            "title": "Requesting App Store reviews",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Call as function",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/requestreviewaction/callasfunction()",
                "title": "func callAsFunction()",
                "type": "method"
              },
              {
                "title": "Environment value",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/swiftui/environmentvalues/requestreview",
                "title": "var requestReview: RequestReviewAction",
                "type": "property"
              }
            ],
            "path": "/documentation/storekit/requestreviewaction",
            "title": "RequestReviewAction",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Indicating an appropriate time for a review",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skstorereviewcontroller/requestreview(in:)",
                "title": "class func requestReview(in: UIWindowScene)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skstorereviewcontroller/requestreview()",
                "title": "class func requestReview()",
                "type": "method"
              }
            ],
            "deprecated": true,
            "path": "/documentation/storekit/skstorereviewcontroller",
            "title": "SKStoreReviewController",
            "type": "class"
          },
          {
            "title": "Recommendations",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekit/offering-media-for-sale-in-your-app",
            "title": "Offering media for sale in your app",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Setting a delegate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/delegate",
                "title": "var delegate: (any SKStoreProductViewControllerDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Responding to a Dismiss Action",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductviewcontrollerdelegate/productviewcontrollerdidfinish(_:)",
                    "title": "func productViewControllerDidFinish(SKStoreProductViewController)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skstoreproductviewcontrollerdelegate",
                "title": "SKStoreProductViewControllerDelegate",
                "type": "protocol"
              },
              {
                "title": "Loading a new product screen",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/offering-media-for-sale-in-your-app",
                "title": "Offering media for sale in your app",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/loadproduct(withparameters:completionblock:)",
                "title": "func loadProduct(withParameters: [String : Any], completionBlock: ((Bool, (any Error)?) -> Void)?)",
                "type": "method"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/loadproduct(withparameters:impression:completionblock:)",
                "title": "func loadProduct(withParameters: [String : Any], impression: SKAdImpression, completionBlock: ((Bool, (any Error)?) -> Void)?)",
                "type": "method"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/loadproduct(parameters:impression:)",
                "title": "func loadProduct(parameters: [String : Any], impression: AppImpression) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekit/skstoreproductviewcontroller/loadproduct(parameters:impression:reengagementurl:)",
                "title": "func loadProduct(parameters: [String : Any], impression: AppImpression, reengagementURL: URL) async throws",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Required Key",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameteritunesitemidentifier",
                    "title": "let SKStoreProductParameterITunesItemIdentifier: String",
                    "type": "var"
                  },
                  {
                    "title": "Affiliate and Analytics Keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameterproductidentifier",
                    "title": "let SKStoreProductParameterProductIdentifier: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameteradvertisingpartnertoken",
                    "title": "let SKStoreProductParameterAdvertisingPartnerToken: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameteraffiliatetoken",
                    "title": "let SKStoreProductParameterAffiliateToken: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparametercampaigntoken",
                    "title": "let SKStoreProductParameterCampaignToken: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparameterprovidertoken",
                    "title": "let SKStoreProductParameterProviderToken: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/storekit/skstoreproductparametercustomproductpageidentifier",
                    "title": "let SKStoreProductParameterCustomProductPageIdentifier: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/storekit/product-dictionary-keys",
                "title": "Product Dictionary Keys",
                "type": "collection"
              }
            ],
            "path": "/documentation/storekit/skstoreproductviewcontroller",
            "title": "SKStoreProductViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an overlay",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/init(configuration:)",
                "title": "init(configuration: SKOverlay.Configuration)",
                "type": "init"
              },
              {
                "path": "/documentation/storekit/skoverlay/configuration-swift.property",
                "title": "var configuration: SKOverlay.Configuration",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an App Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/init(appidentifier:position:)",
                    "title": "init(appIdentifier: String, position: SKOverlay.Position)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/appidentifier",
                    "title": "var appIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/position",
                    "title": "var position: SKOverlay.Position",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the Overlay’s Position",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottom",
                        "title": "case bottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottomraised",
                        "title": "case bottomRaised",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/storekit/skoverlay/position",
                    "title": "SKOverlay.Position",
                    "type": "enum"
                  },
                  {
                    "title": "Dismissing the Overlay",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/userdismissible",
                    "title": "var userDismissible: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Verifying Advertising Campaigns",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/campaigntoken",
                    "title": "var campaignToken: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/providertoken",
                    "title": "var providerToken: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/setadditionalvalue(_:forkey:)",
                    "title": "func setAdditionalValue(Any?, forKey: String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/additionalvalue(forkey:)",
                    "title": "func additionalValue(forKey: String) -> Any?",
                    "type": "method"
                  },
                  {
                    "title": "Promoting the Latest App Version",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/latestreleaseid",
                    "title": "var latestReleaseID: String?",
                    "type": "property"
                  },
                  {
                    "title": "Advertising Another App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/customproductpageidentifier",
                    "title": "var customProductPageIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "title": "Setting an Ad Impression",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/setadimpression(_:)",
                    "title": "func setAdImpression(SKAdImpression)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/adattributionreengagementurl",
                    "title": "var adAttributionReengagementURL: URL?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appconfiguration/appimpression",
                    "title": "var appImpression: AppImpression?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/skoverlay/appconfiguration",
                "title": "SKOverlay.AppConfiguration",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an App Clip Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/init(position:)",
                    "title": "init(position: SKOverlay.Position)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/position",
                    "title": "var position: SKOverlay.Position",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the Overlay’s Position",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottom",
                        "title": "case bottom",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/bottomraised",
                        "title": "case bottomRaised",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/position/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/storekit/skoverlay/position",
                    "title": "SKOverlay.Position",
                    "type": "enum"
                  },
                  {
                    "title": "Verifying Advertising Campaigns",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/campaigntoken",
                    "title": "var campaignToken: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/providertoken",
                    "title": "var providerToken: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/setadditionalvalue(_:forkey:)",
                    "title": "func setAdditionalValue(Any?, forKey: String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/additionalvalue(forkey:)",
                    "title": "func additionalValue(forKey: String) -> Any?",
                    "type": "method"
                  },
                  {
                    "title": "Promoting the Latest App Version",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/latestreleaseid",
                    "title": "var latestReleaseID: String?",
                    "type": "property"
                  },
                  {
                    "title": "Advertising Another App",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlay/appclipconfiguration/customproductpageidentifier",
                    "title": "var customProductPageIdentifier: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/skoverlay/appclipconfiguration",
                "title": "SKOverlay.AppClipConfiguration",
                "type": "class"
              },
              {
                "path": "/documentation/storekit/skoverlay/configuration-swift.class",
                "title": "SKOverlay.Configuration",
                "type": "class"
              },
              {
                "title": "Presenting an overlay",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/present(in:)",
                "title": "func present(in: UIWindowScene)",
                "type": "method"
              },
              {
                "title": "Dismissing an overlay",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/dismiss(in:)",
                "title": "class func dismiss(in: UIWindowScene)",
                "type": "method"
              },
              {
                "title": "Setting a delegate",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skoverlay/delegate",
                "title": "var delegate: (any SKOverlayDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Responding to the Overlay’s Appearance and Disappearance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaywillstartpresentation(_:transitioncontext:)",
                    "title": "func storeOverlayWillStartPresentation(SKOverlay, transitionContext: SKOverlay.TransitionContext)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaydidfinishpresentation(_:transitioncontext:)",
                    "title": "func storeOverlayDidFinishPresentation(SKOverlay, transitionContext: SKOverlay.TransitionContext)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaywillstartdismissal(_:transitioncontext:)",
                    "title": "func storeOverlayWillStartDismissal(SKOverlay, transitionContext: SKOverlay.TransitionContext)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaydidfinishdismissal(_:transitioncontext:)",
                    "title": "func storeOverlayDidFinishDismissal(SKOverlay, transitionContext: SKOverlay.TransitionContext)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Adding an Animation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/transitioncontext/addanimation(_:)",
                        "title": "func addAnimation(() -> Void)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/transitioncontext/startframe",
                        "title": "var startFrame: CGRect",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skoverlay/transitioncontext/endframe",
                        "title": "var endFrame: CGRect",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/skoverlay/transitioncontext",
                    "title": "SKOverlay.TransitionContext",
                    "type": "class"
                  },
                  {
                    "title": "Responding to Failures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skoverlaydelegate/storeoverlaydidfailtoload(_:error:)",
                    "title": "func storeOverlayDidFailToLoad(SKOverlay, error: any Error)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skoverlaydelegate",
                "title": "SKOverlayDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/storekit/skoverlay",
            "title": "SKOverlay",
            "type": "class"
          },
          {
            "title": "Ad network attribution",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Ad impressions and installation validations",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/adattributionkit/adattributionkit-skadnetwork-interoperability",
                "title": "Understanding AdAttributionKit and SKAdNetwork interoperability",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Essentials",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/signing-and-providing-ads",
                    "title": "Signing and providing ads",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/receiving-ad-attributions-and-postbacks",
                    "title": "Receiving ad attributions and postbacks",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/receiving-postbacks-in-multiple-conversion-windows",
                    "title": "Receiving postbacks in multiple conversion windows",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "SKAdNetwork versions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-4-release-notes",
                        "title": "SKAdNetwork 4 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-3-release-notes",
                        "title": "SKAdNetwork 3 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-2-2-release-notes",
                        "title": "SKAdNetwork 2.2 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-2-1-release-notes",
                        "title": "SKAdNetwork 2.1 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-2-release-notes",
                        "title": "SKAdNetwork 2 release notes",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork-1-release-notes",
                        "title": "SKAdNetwork 1 release notes",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/skadnetwork-release-notes",
                    "title": "SKAdNetwork release notes",
                    "type": "collection"
                  },
                  {
                    "title": "Registering ad networks and configuring apps",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/registering-an-ad-network",
                    "title": "Registering an ad network",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/configuring-a-source-app",
                    "title": "Configuring a source app",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/configuring-an-advertised-app",
                    "title": "Configuring an advertised app",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/skadnetworkitems",
                    "title": "SKAdNetworkItems",
                    "type": "dictionary"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/nsadvertisingattributionreportendpoint",
                    "title": "NSAdvertisingAttributionReportEndpoint",
                    "type": "typealias"
                  },
                  {
                    "title": "Signing StoreKit-rendered ads",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Signatures for SKAdNetwork 1, 2, and 2.2–3",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-to-generate-signatures-for-skadnetwork-2-2-and-3",
                        "title": "Combining parameters to generate signatures for SKAdNetwork 2.2 and 3",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-to-generate-a-signature-for-skadnetwork-2",
                        "title": "Combining parameters to generate a signature for SKAdNetwork 2",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-to-generate-a-signature-for-skadnetwork-1",
                        "title": "Combining parameters to generate a signature for SKAdNetwork 1",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/generating-the-signature-to-validate-storekit-rendered-ads",
                    "title": "Generating the signature to validate StoreKit-rendered ads",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Required keys for SKAdNetwork 4 and later",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworksourceidentifier",
                        "title": "let SKStoreProductParameterAdNetworkSourceIdentifier: String",
                        "type": "var"
                      },
                      {
                        "title": "Required keys for SKAdNetwork 2 and later",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkversion",
                        "title": "let SKStoreProductParameterAdNetworkVersion: String",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworksourceappstoreidentifier",
                        "title": "let SKStoreProductParameterAdNetworkSourceAppStoreIdentifier: String",
                        "type": "var"
                      },
                      {
                        "title": "Required keys",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkidentifier",
                        "title": "let SKStoreProductParameterAdNetworkIdentifier: String",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkcampaignidentifier",
                        "title": "let SKStoreProductParameterAdNetworkCampaignIdentifier: String",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworktimestamp",
                        "title": "let SKStoreProductParameterAdNetworkTimestamp: String",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworknonce",
                        "title": "let SKStoreProductParameterAdNetworkNonce: String",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/storekit/skstoreproductparameteradnetworkattributionsignature",
                        "title": "let SKStoreProductParameterAdNetworkAttributionSignature: String",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/storekit/ad-network-install-validation-keys",
                    "title": "Ad network install-validation keys",
                    "type": "collection"
                  },
                  {
                    "title": "Signing view-through ads",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/generating-the-signature-to-validate-view-through-ads",
                    "title": "Generating the signature to validate view-through ads",
                    "type": "article"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing a signature",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/signature",
                        "title": "var signature: String",
                        "type": "property"
                      },
                      {
                        "title": "Creating a signature",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/init(sourceappstoreitemidentifier:advertisedappstoreitemidentifier:adnetworkidentifier:adcampaignidentifier:adimpressionidentifier:timestamp:signature:version:)",
                        "title": "init(sourceAppStoreItemIdentifier: NSNumber, advertisedAppStoreItemIdentifier: NSNumber, adNetworkIdentifier: String, adCampaignIdentifier: NSNumber, adImpressionIdentifier: String, timestamp: NSNumber, signature: String, version: String)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/version",
                        "title": "var version: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adnetworkidentifier",
                        "title": "var adNetworkIdentifier: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/sourceidentifier",
                        "title": "var sourceIdentifier: NSNumber",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adcampaignidentifier",
                        "title": "var adCampaignIdentifier: NSNumber",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/advertisedappstoreitemidentifier",
                        "title": "var advertisedAppStoreItemIdentifier: NSNumber",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adimpressionidentifier",
                        "title": "var adImpressionIdentifier: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/sourceappstoreitemidentifier",
                        "title": "var sourceAppStoreItemIdentifier: NSNumber",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/timestamp",
                        "title": "var timestamp: NSNumber",
                        "type": "property"
                      },
                      {
                        "title": "Describing ads",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adtype",
                        "title": "var adType: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/addescription",
                        "title": "var adDescription: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadimpression/adpurchasername",
                        "title": "var adPurchaserName: String?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/skadimpression",
                    "title": "SKAdImpression",
                    "type": "class"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/startimpression(_:completionhandler:)",
                    "title": "class func startImpression(SKAdImpression, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/endimpression(_:completionhandler:)",
                    "title": "class func endImpression(SKAdImpression, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Providing conversion information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/updatepostbackconversionvalue(_:coarsevalue:lockwindow:completionhandler:)",
                    "title": "class func updatePostbackConversionValue(Int, coarseValue: SKAdNetwork.CoarseConversionValue, lockWindow: Bool, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/updatepostbackconversionvalue(_:coarsevalue:completionhandler:)",
                    "title": "class func updatePostbackConversionValue(Int, coarseValue: SKAdNetwork.CoarseConversionValue, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Providing coarse conversion values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork/coarseconversionvalue/high",
                        "title": "static let high: SKAdNetwork.CoarseConversionValue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork/coarseconversionvalue/low",
                        "title": "static let low: SKAdNetwork.CoarseConversionValue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork/coarseconversionvalue/medium",
                        "title": "static let medium: SKAdNetwork.CoarseConversionValue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/storekit/skadnetwork/coarseconversionvalue/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/storekit/skadnetwork/coarseconversionvalue",
                    "title": "SKAdNetwork.CoarseConversionValue",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/storekit/skadnetwork/updatepostbackconversionvalue(_:completionhandler:)",
                    "title": "class func updatePostbackConversionValue(Int, completionHandler: (((any Error)?) -> Void)?)",
                    "type": "method"
                  },
                  {
                    "title": "Verifying postbacks",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "SKAdNetworks 3 and earlier postbacks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-for-skadnetwork-3-postbacks",
                        "title": "Combining parameters for SKAdNetwork 3 postbacks",
                        "type": "article"
                      },
                      {
                        "path": "/documentation/storekit/combining-parameters-for-previous-skadnetwork-postback-versions",
                        "title": "Combining parameters for previous SKAdNetwork postback versions",
                        "type": "article"
                      }
                    ],
                    "path": "/documentation/storekit/verifying-an-install-validation-postback",
                    "title": "Verifying an install-validation postback",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/storekit/identifying-the-parameters-in-install-validation-postbacks",
                    "title": "Identifying the parameters in install-validation postbacks",
                    "type": "article"
                  },
                  {
                    "title": "Testing ad attributions and postbacks",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/testing-ad-attributions-with-a-downloaded-profile",
                    "title": "Testing ad attributions with a downloaded profile",
                    "type": "article"
                  },
                  {
                    "external": true,
                    "path": "/documentation/storekittest/testing-and-validating-ad-impression-signatures-and-postbacks-for-skadnetwork",
                    "title": "Testing and validating ad impression signatures and postbacks for SKAdNetwork",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skadnetwork/registerappforadnetworkattribution()",
                    "title": "class func registerAppForAdNetworkAttribution()",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skadnetwork/updateconversionvalue(_:)",
                    "title": "class func updateConversionValue(Int)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skadnetwork",
                "title": "SKAdNetwork",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Providing a signature",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/signature",
                    "title": "var signature: String",
                    "type": "property"
                  },
                  {
                    "title": "Creating a signature",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/init(sourceappstoreitemidentifier:advertisedappstoreitemidentifier:adnetworkidentifier:adcampaignidentifier:adimpressionidentifier:timestamp:signature:version:)",
                    "title": "init(sourceAppStoreItemIdentifier: NSNumber, advertisedAppStoreItemIdentifier: NSNumber, adNetworkIdentifier: String, adCampaignIdentifier: NSNumber, adImpressionIdentifier: String, timestamp: NSNumber, signature: String, version: String)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/version",
                    "title": "var version: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adnetworkidentifier",
                    "title": "var adNetworkIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/sourceidentifier",
                    "title": "var sourceIdentifier: NSNumber",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adcampaignidentifier",
                    "title": "var adCampaignIdentifier: NSNumber",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/advertisedappstoreitemidentifier",
                    "title": "var advertisedAppStoreItemIdentifier: NSNumber",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adimpressionidentifier",
                    "title": "var adImpressionIdentifier: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/sourceappstoreitemidentifier",
                    "title": "var sourceAppStoreItemIdentifier: NSNumber",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/timestamp",
                    "title": "var timestamp: NSNumber",
                    "type": "property"
                  },
                  {
                    "title": "Describing ads",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adtype",
                    "title": "var adType: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/addescription",
                    "title": "var adDescription: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skadimpression/adpurchasername",
                    "title": "var adPurchaserName: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/skadimpression",
                "title": "SKAdImpression",
                "type": "class"
              },
              {
                "title": "Error handling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/skanerrordomain",
                "title": "let SKANErrorDomain: String",
                "type": "var"
              },
              {
                "children": [
                  {
                    "title": "Getting Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/adnetworkidmissing",
                    "title": "static var adNetworkIdMissing: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/impressionmissingrequiredvalue",
                    "title": "static var impressionMissingRequiredValue: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/impressionnotfound",
                    "title": "static var impressionNotFound: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/impressiontooshort",
                    "title": "static var impressionTooShort: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/invalidadvertisedappid",
                    "title": "static var invalidAdvertisedAppId: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/invalidcampaignid",
                    "title": "static var invalidCampaignId: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/invalidconversionvalue",
                    "title": "static var invalidConversionValue: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/invalidsourceappid",
                    "title": "static var invalidSourceAppId: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/invalidversion",
                    "title": "static var invalidVersion: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/mismatchedsourceappid",
                    "title": "static var mismatchedSourceAppId: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/unknown",
                    "title": "static var unknown: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/unsupported",
                    "title": "static var unsupported: SKANError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/adnetworkidmissing",
                        "title": "case adNetworkIdMissing",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/impressionmissingrequiredvalue",
                        "title": "case impressionMissingRequiredValue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/impressionnotfound",
                        "title": "case impressionNotFound",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/impressiontooshort",
                        "title": "case impressionTooShort",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/invalidadvertisedappid",
                        "title": "case invalidAdvertisedAppId",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/invalidcampaignid",
                        "title": "case invalidCampaignId",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/invalidconversionvalue",
                        "title": "case invalidConversionValue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/invalidsourceappid",
                        "title": "case invalidSourceAppId",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/invalidversion",
                        "title": "case invalidVersion",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/mismatchedsourceappid",
                        "title": "case mismatchedSourceAppId",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/unknown",
                        "title": "case unknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/unsupported",
                        "title": "case unsupported",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skanerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/storekit/skanerror-swift.struct/code",
                    "title": "SKANError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/skanerror-swift.struct",
                "title": "SKANError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/adnetworkidmissing",
                    "title": "case adNetworkIdMissing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/impressionmissingrequiredvalue",
                    "title": "case impressionMissingRequiredValue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/impressionnotfound",
                    "title": "case impressionNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/impressiontooshort",
                    "title": "case impressionTooShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidadvertisedappid",
                    "title": "case invalidAdvertisedAppId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidcampaignid",
                    "title": "case invalidCampaignId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidconversionvalue",
                    "title": "case invalidConversionValue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidsourceappid",
                    "title": "case invalidSourceAppId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/invalidversion",
                    "title": "case invalidVersion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/mismatchedsourceappid",
                    "title": "case mismatchedSourceAppId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skanerror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/storekit/skanerror-swift.struct/code",
                "title": "SKANError.Code",
                "type": "enum"
              }
            ],
            "path": "/documentation/storekit/ad-network-attribution",
            "title": "Ad network attribution",
            "type": "collection"
          },
          {
            "title": "External Purchase",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Offering external purchases",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Offering an external purchase",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchase/canpresent",
                    "title": "static var canPresent: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchase/presentnoticesheet()",
                    "title": "static func presentNoticeSheet() async throws -> ExternalPurchase.NoticeResult",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting notice sheet results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/externalpurchase/noticeresult/cancelled",
                        "title": "case cancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/externalpurchase/noticeresult/continuedwithexternalpurchasetoken(token:)",
                        "title": "case continuedWithExternalPurchaseToken(token: String)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/externalpurchase/noticeresult",
                    "title": "ExternalPurchase.NoticeResult",
                    "type": "enum"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/skexternalpurchase",
                    "title": "SKExternalPurchase",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/storekit/externalpurchase",
                "title": "ExternalPurchase",
                "type": "enum"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-purchase",
                "title": "com.apple.developer.storekit.external-purchase",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchase",
                "title": "SKExternalPurchase",
                "type": "typealias"
              },
              {
                "title": "Offering external purchases with custom links",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Checking eligibility",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchasecustomlink/iseligible",
                    "title": "static var isEligible: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Getting external purchase tokens",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchasecustomlink/token(for:)",
                    "title": "static func token(for: String) async throws -> ExternalPurchaseCustomLink.Token?",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting the token value",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/externalpurchasecustomlink/token/value",
                        "title": "let value: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/externalpurchasecustomlink/token",
                    "title": "ExternalPurchaseCustomLink.Token",
                    "type": "struct"
                  },
                  {
                    "title": "Displaying the disclosure sheet",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchasecustomlink/shownotice(type:)",
                    "title": "static func showNotice(type: ExternalPurchaseCustomLink.NoticeType) async throws -> ExternalPurchaseCustomLink.NoticeResult",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting notice types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/externalpurchasecustomlink/noticetype/browser",
                        "title": "case browser",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/externalpurchasecustomlink/noticetype/withinapp",
                        "title": "case withinApp",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/externalpurchasecustomlink/noticetype",
                    "title": "ExternalPurchaseCustomLink.NoticeType",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting notice results",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/externalpurchasecustomlink/noticeresult/cancelled",
                        "title": "case cancelled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/storekit/externalpurchasecustomlink/noticeresult/continued",
                        "title": "case continued",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/storekit/externalpurchasecustomlink/noticeresult",
                    "title": "ExternalPurchaseCustomLink.NoticeResult",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/storekit/externalpurchasecustomlink",
                "title": "ExternalPurchaseCustomLink",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Getting the token value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchasecustomlink/token/value",
                    "title": "let value: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/storekit/externalpurchasecustomlink/token",
                "title": "ExternalPurchaseCustomLink.Token",
                "type": "struct"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-purchase-link",
                "title": "com.apple.developer.storekit.external-purchase-link",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchasecustomlinkregions",
                "title": "SKExternalPurchaseCustomLinkRegions",
                "type": "typealias"
              },
              {
                "title": "Offering external purchase links",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting multiple external purchase links",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/skexternalpurchasemultilink",
                    "title": "SKExternalPurchaseMultiLink",
                    "type": "dictionary"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchaselink/eligibleurls",
                    "title": "static var eligibleURLs: [URL]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchaselink/open(url:)",
                    "title": "static func open(url: URL) async throws",
                    "type": "method"
                  },
                  {
                    "title": "Getting a single external purchase link",
                    "type": "groupMarker"
                  },
                  {
                    "external": true,
                    "path": "/documentation/bundleresources/information-property-list/skexternalpurchaselink",
                    "title": "SKExternalPurchaseLink",
                    "type": "dictionary"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchaselink/canopen",
                    "title": "static var canOpen: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/externalpurchaselink/open()",
                    "title": "static func open() async throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/externalpurchaselink",
                "title": "ExternalPurchaseLink",
                "type": "enum"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-purchase-link",
                "title": "com.apple.developer.storekit.external-purchase-link",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchasemultilink",
                "title": "SKExternalPurchaseMultiLink",
                "type": "dictionary"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternalpurchaselink",
                "title": "SKExternalPurchaseLink",
                "type": "dictionary"
              },
              {
                "title": "Managing external purchase tokens",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/receiving-and-decoding-external-purchase-tokens",
                "title": "Receiving and decoding external purchase tokens",
                "type": "article"
              }
            ],
            "path": "/documentation/storekit/external-purchase",
            "title": "External Purchase",
            "type": "collection"
          },
          {
            "title": "External link account",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "External accounts",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/entitlements/com.apple.developer.storekit.external-link.account",
                "title": "com.apple.developer.storekit.external-link.account",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/bundleresources/information-property-list/skexternallinkaccount",
                "title": "SKExternalLinkAccount",
                "type": "dictionary"
              },
              {
                "children": [
                  {
                    "title": "Linking to external accounts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/externallinkaccount/canopen",
                    "title": "static var canOpen: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/storekit/externallinkaccount/open()",
                    "title": "static func open() async throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/externallinkaccount",
                "title": "ExternalLinkAccount",
                "type": "enum"
              }
            ],
            "path": "/documentation/storekit/external-link-account",
            "title": "External link account",
            "type": "collection"
          },
          {
            "title": "Payment method binding",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Determining eligiblity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/paymentmethodbinding/init(id:)",
                "title": "init(id: String) async throws",
                "type": "init"
              },
              {
                "title": "Creating and identifying bindings",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/paymentmethodbinding/id",
                "title": "let id: String",
                "type": "property"
              },
              {
                "title": "Binding payment methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/paymentmethodbinding/bind()",
                "title": "func bind() async throws",
                "type": "method"
              },
              {
                "title": "Reading errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting error codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/paymentmethodbinding/paymentmethodbindingerror/failed",
                    "title": "case failed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/paymentmethodbinding/paymentmethodbindingerror/invalidpinningid",
                    "title": "case invalidPinningID",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekit/paymentmethodbinding/paymentmethodbindingerror/noteligible",
                    "title": "case notEligible",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekit/paymentmethodbinding/paymentmethodbindingerror",
                "title": "PaymentMethodBinding.PaymentMethodBindingError",
                "type": "enum"
              }
            ],
            "path": "/documentation/storekit/paymentmethodbinding",
            "title": "PaymentMethodBinding",
            "type": "struct"
          },
          {
            "title": "Deprecated",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Setting a delegate",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicesetupviewcontroller/delegate",
                "title": "var delegate: (any SKCloudServiceSetupViewControllerDelegate)?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Receiving Notification of Dismissal",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupviewcontrollerdelegate/cloudservicesetupviewcontrollerdiddismiss(_:)",
                    "title": "func cloudServiceSetupViewControllerDidDismiss(SKCloudServiceSetupViewController)",
                    "type": "method"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicesetupviewcontrollerdelegate",
                "title": "SKCloudServiceSetupViewControllerDelegate",
                "type": "protocol"
              },
              {
                "title": "Loading the setup view",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/offering-apple-music-subscription-in-your-app",
                "title": "Offering Apple Music Subscription in Your App",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Initializing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Indicating Setup Options",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/action",
                    "title": "static let action: SKCloudServiceSetupOptionsKey",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skcloudservicesetupaction/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupaction/subscribe",
                        "title": "static let subscribe: SKCloudServiceSetupAction",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/skcloudservicesetupaction",
                    "title": "SKCloudServiceSetupAction",
                    "type": "struct"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/itunesitemidentifier",
                    "title": "static let iTunesItemIdentifier: SKCloudServiceSetupOptionsKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/affiliatetoken",
                    "title": "static let affiliateToken: SKCloudServiceSetupOptionsKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/campaigntoken",
                    "title": "static let campaignToken: SKCloudServiceSetupOptionsKey",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicesetupoptionskey/messageidentifier",
                    "title": "static let messageIdentifier: SKCloudServiceSetupOptionsKey",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializing Identifiers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      },
                      {
                        "title": "Message Identifiers",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/addmusic",
                        "title": "static let addMusic: SKCloudServiceSetupMessageIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/connect",
                        "title": "static let connect: SKCloudServiceSetupMessageIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/join",
                        "title": "static let join: SKCloudServiceSetupMessageIdentifier",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/storekit/skcloudservicesetupmessageidentifier/playmusic",
                        "title": "static let playMusic: SKCloudServiceSetupMessageIdentifier",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/storekit/skcloudservicesetupmessageidentifier",
                    "title": "SKCloudServiceSetupMessageIdentifier",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/storekit/skcloudservicesetupoptionskey",
                "title": "SKCloudServiceSetupOptionsKey",
                "type": "struct"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicesetupviewcontroller/load(options:completionhandler:)",
                "title": "func load(options: [SKCloudServiceSetupOptionsKey : Any], completionHandler: ((Bool, (any Error)?) -> Void)?)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekit/skarcadeservice/arcadesubscriptionstatus(withnonce:resulthandler:)",
                    "title": "class func arcadeSubscriptionStatus(withNonce: UInt64, resultHandler: (Data?, UInt32, Data?, UInt32, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skarcadeservice/registerarcadeappwithrandom(fromlib:randomfromliblength:resulthandler:)",
                    "title": "class func registerArcadeAppWithRandom(fromLib: Data, randomFromLibLength: UInt32, resultHandler: (Data?, UInt32, Data?, UInt32, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/storekit/skarcadeservice/repairarcadeapp()",
                    "title": "class func repairArcadeApp()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/storekit/skarcadeservice",
                "title": "SKArcadeService",
                "type": "class"
              }
            ],
            "deprecated": true,
            "path": "/documentation/storekit/skcloudservicesetupviewcontroller",
            "title": "SKCloudServiceSetupViewController",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting authorization to access the Music library",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/requesting-access-to-apple-music-library",
                "title": "Requesting Access to Apple Music Library",
                "type": "article"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/authorizationstatus()",
                "title": "class func authorizationStatus() -> SKCloudServiceAuthorizationStatus",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestauthorization(_:)",
                "title": "class func requestAuthorization((SKCloudServiceAuthorizationStatus) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/notdetermined",
                    "title": "case notDetermined",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/denied",
                    "title": "case denied",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/restricted",
                    "title": "case restricted",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/authorized",
                    "title": "case authorized",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudserviceauthorizationstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/storekit/skcloudserviceauthorizationstatus",
                "title": "SKCloudServiceAuthorizationStatus",
                "type": "enum"
              },
              {
                "title": "Determining capabilities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekit/determining-a-person-s-apple-music-capabilities",
                "title": "Determining a person’s Apple Music capabilities",
                "type": "article"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestusertoken(fordevelopertoken:completionhandler:)",
                "title": "func requestUserToken(forDeveloperToken: String, completionHandler: (String?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requeststorefrontcountrycode(completionhandler:)",
                "title": "func requestStorefrontCountryCode(completionHandler: (String?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestcapabilities(completionhandler:)",
                "title": "func requestCapabilities(completionHandler: (SKCloudServiceCapability, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Initializing",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying Cloud Service Capabilities",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/musiccatalogplayback",
                    "title": "static var musicCatalogPlayback: SKCloudServiceCapability",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/musiccatalogsubscriptioneligible",
                    "title": "static var musicCatalogSubscriptionEligible: SKCloudServiceCapability",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekit/skcloudservicecapability/addtocloudmusiclibrary",
                    "title": "static var addToCloudMusicLibrary: SKCloudServiceCapability",
                    "type": "property"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecapability",
                "title": "SKCloudServiceCapability",
                "type": "struct"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requeststorefrontidentifier(completionhandler:)",
                "title": "func requestStorefrontIdentifier(completionHandler: (String?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekit/skcloudservicecontroller/requestpersonalizationtoken(forclienttoken:withcompletionhandler:)",
                "title": "func requestPersonalizationToken(forClientToken: String, withCompletionHandler: (String?, (any Error)?) -> Void)",
                "type": "method"
              },
              {
                "title": "Notifications",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/foundation/nsnotification/name/1620636-skstorefrontidentifierdidchange",
                "title": "static let SKStorefrontIdentifierDidChange: NSNotification.Name",
                "type": "property"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/foundation/nsnotification/name/1620626-skcloudservicecapabilitiesdidcha",
                "title": "static let SKCloudServiceCapabilitiesDidChange: NSNotification.Name",
                "type": "property"
              },
              {
                "deprecated": true,
                "external": true,
                "path": "/documentation/foundation/nsnotification/name/2909077-skstorefrontcountrycodedidchange",
                "title": "static let SKStorefrontCountryCodeDidChange: NSNotification.Name",
                "type": "property"
              }
            ],
            "deprecated": true,
            "path": "/documentation/storekit/skcloudservicecontroller",
            "title": "SKCloudServiceController",
            "type": "class"
          }
        ],
        "path": "/documentation/storekit",
        "title": "StoreKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
