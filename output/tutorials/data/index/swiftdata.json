{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/preserving-your-apps-model-data-across-launches",
            "title": "Preserving your app’s model data across launches",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/adding-and-editing-persistent-data-in-your-app",
            "title": "Adding and editing persistent data in your app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/coredata/adopting-swiftdata-for-a-core-data-app",
            "title": "Adopting SwiftData for a Core Data app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/updates/swiftdata",
            "title": "SwiftData updates",
            "type": "article"
          },
          {
            "title": "Model definition",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/defining-data-relationships-with-enumerations-and-model-classes",
            "title": "Defining data relationships with enumerations and model classes",
            "type": "sampleCode"
          },
          {
            "title": "Model life cycle",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/fetching-and-filtering-time-based-model-changes",
            "title": "Fetching and filtering time-based model changes",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/deleting-persistent-data-from-your-app",
            "title": "Deleting persistent data from your app",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/swiftdata/reverting-data-changes-using-the-undo-manager",
            "title": "Reverting data changes using the undo manager",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/syncing-model-data-across-a-persons-devices",
            "title": "Syncing model data across a person’s devices",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Model actors",
                "type": "groupMarker"
              },
              {
                "title": "Model executors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/swiftdata/concurrencysupport",
            "title": "Concurrency support",
            "type": "collection"
          },
          {
            "title": "Model fetch",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/filtering-and-sorting-persistent-data",
            "title": "Filtering and sorting persistent data",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Basic queries",
                "type": "groupMarker"
              },
              {
                "title": "Predicate-based queries",
                "type": "groupMarker"
              },
              {
                "title": "Descriptor-based queries",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/swiftdata/additionalquerymacros",
            "title": "Additional query macros",
            "type": "collection"
          },
          {
            "title": "Model storage",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/maintaining-a-local-copy-of-server-data",
            "title": "Maintaining a local copy of server data",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/swiftui/building-a-document-based-app-using-swiftdata",
            "title": "Building a document-based app using SwiftData",
            "type": "sampleCode"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/swiftdata",
        "title": "SwiftData",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/preserving-your-apps-model-data-across-launches",
            "title": "Preserving your app’s model data across launches",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/adding-and-editing-persistent-data-in-your-app",
            "title": "Adding and editing persistent data in your app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/coredata/adopting-swiftdata-for-a-core-data-app",
            "title": "Adopting SwiftData for a Core Data app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/updates/swiftdata",
            "title": "SwiftData updates",
            "type": "article"
          },
          {
            "title": "Model definition",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/defining-data-relationships-with-enumerations-and-model-classes",
            "title": "Defining data relationships with enumerations and model classes",
            "type": "sampleCode"
          },
          {
            "title": "Model life cycle",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/fetching-and-filtering-time-based-model-changes",
            "title": "Fetching and filtering time-based model changes",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/deleting-persistent-data-from-your-app",
            "title": "Deleting persistent data from your app",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/swiftdata/reverting-data-changes-using-the-undo-manager",
            "title": "Reverting data changes using the undo manager",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/syncing-model-data-across-a-persons-devices",
            "title": "Syncing model data across a person’s devices",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Model actors",
                "type": "groupMarker"
              },
              {
                "title": "Model executors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/swiftdata/concurrencysupport",
            "title": "Concurrency support",
            "type": "collection"
          },
          {
            "title": "Model fetch",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/filtering-and-sorting-persistent-data",
            "title": "Filtering and sorting persistent data",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Basic queries",
                "type": "groupMarker"
              },
              {
                "title": "Predicate-based queries",
                "type": "groupMarker"
              },
              {
                "title": "Descriptor-based queries",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/swiftdata/additionalquerymacros",
            "title": "Additional query macros",
            "type": "collection"
          },
          {
            "title": "Model storage",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/maintaining-a-local-copy-of-server-data",
            "title": "Maintaining a local copy of server data",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/swiftui/building-a-document-based-app-using-swiftdata",
            "title": "Building a document-based app using SwiftData",
            "type": "sampleCode"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/swiftdata",
        "title": "SwiftData",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/preserving-your-apps-model-data-across-launches",
            "title": "Preserving your app’s model data across launches",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/adding-and-editing-persistent-data-in-your-app",
            "title": "Adding and editing persistent data in your app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/coredata/adopting-swiftdata-for-a-core-data-app",
            "title": "Adopting SwiftData for a Core Data app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/updates/swiftdata",
            "title": "SwiftData updates",
            "type": "article"
          },
          {
            "title": "Model definition",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/model()",
            "title": "macro Model()",
            "type": "macro"
          },
          {
            "path": "/documentation/swiftdata/attribute(_:originalname:hashmodifier:)",
            "title": "macro Attribute(Schema.Attribute.Option..., originalName: String?, hashModifier: String?)",
            "type": "macro"
          },
          {
            "path": "/documentation/swiftdata/unique(_:)",
            "title": "macro Unique<T>([PartialKeyPath<T>]...)",
            "type": "macro"
          },
          {
            "path": "/documentation/swiftdata/index(_:)-74ia2",
            "title": "macro Index<T>([PartialKeyPath<T>]...)",
            "type": "macro"
          },
          {
            "path": "/documentation/swiftdata/index(_:)-7d4z0",
            "title": "macro Index<T>(Schema.Index<T>.Types<T>...)",
            "type": "macro"
          },
          {
            "path": "/documentation/swiftdata/defining-data-relationships-with-enumerations-and-model-classes",
            "title": "Defining data relationships with enumerations and model classes",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/swiftdata/relationship(_:deleterule:minimummodelcount:maximummodelcount:originalname:inverse:hashmodifier:)",
            "title": "macro Relationship(Schema.Relationship.Option..., deleteRule: Schema.Relationship.DeleteRule, minimumModelCount: Int?, maximumModelCount: Int?, originalName: String?, inverse: AnyKeyPath?, hashModifier: String?)",
            "type": "macro"
          },
          {
            "path": "/documentation/swiftdata/transient()",
            "title": "macro Transient()",
            "type": "macro"
          },
          {
            "title": "Model life cycle",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a model container",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/init(for:migrationplan:configurations:)-1czix",
                "title": "init(for: Schema, migrationPlan: (any SchemaMigrationPlan.Type)?, configurations: [ModelConfiguration]) throws",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/init(for:migrationplan:configurations:)-8s4ts",
                "title": "convenience init(for: any PersistentModel.Type..., migrationPlan: (any SchemaMigrationPlan.Type)?, configurations: ModelConfiguration...) throws",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/init(for:migrationplan:configurations:)-qof9",
                "title": "convenience init(for: Schema, migrationPlan: (any SchemaMigrationPlan.Type)?, configurations: ModelConfiguration...) throws",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Creating a persistent model",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/init(backingdata:)",
                    "title": "init(backingData: any BackingData<Self>)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying the model instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/persistentmodelid",
                    "title": "var persistentModelID: PersistentIdentifier",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing identity information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/id-swift.property",
                        "title": "let id: PersistentIdentifier.ID",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Comparing IDs",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/==(_:_:)",
                            "title": "static func == (PersistentIdentifier.ID, PersistentIdentifier.ID) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct",
                        "title": "PersistentIdentifier.ID",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/storeidentifier",
                        "title": "var storeIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/entityname",
                        "title": "var entityName: String",
                        "type": "property"
                      },
                      {
                        "title": "Encoding and decoding",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Hashing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Comparing identifiers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/==(_:_:)",
                        "title": "static func == (PersistentIdentifier, PersistentIdentifier) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/_(_:_:)",
                        "title": "static func < (PersistentIdentifier, PersistentIdentifier) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentidentifier/identifier(for:entityname:primarykey:)",
                        "title": "static func identifier<T>(for: String, entityName: String, primaryKey: T) throws -> PersistentIdentifier",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/'...(_:)-403wm",
                            "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/'...(_:)-d67x",
                            "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/'...(_:_:)",
                            "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/'.._(_:)",
                            "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/'.._(_:_:)",
                            "title": "static func ..< (Self, Self) -> Range<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/_(_:_:)-4ouuo",
                            "title": "static func > (Self, Self) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/_=(_:_:)-6gf5",
                            "title": "static func <= (Self, Self) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/_=(_:_:)-759nj",
                            "title": "static func >= (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/persistentidentifier/comparable-implementations",
                        "title": "Comparable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/persistentidentifier/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/persistentidentifier",
                    "title": "PersistentIdentifier",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/modelcontext",
                    "title": "var modelContext: ModelContext?",
                    "type": "property"
                  },
                  {
                    "title": "Accessing a value by key path",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-299oe",
                    "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self, Value>) -> Value",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-3o59k",
                    "title": "func getValue<Value>(forKey: KeyPath<Self, Value>) -> Value",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-4cs0c",
                    "title": "func getValue<Value>(forKey: KeyPath<Self, Value>) -> Value",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-5m792",
                    "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self, Value>) -> Value",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-998oq",
                    "title": "func getValue<Value>(forKey: KeyPath<Self, Value?>) -> Value?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/gettransformablevalue(forkey:)",
                    "title": "func getTransformableValue<Value>(forKey: KeyPath<Self, Value>) -> Value",
                    "type": "method"
                  },
                  {
                    "title": "Modifying a value by key path",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-18176",
                    "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self, Value>, to: Value)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-3mmp2",
                    "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self, Value>, to: Value)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-3uqwc",
                    "title": "func setValue<Value>(forKey: KeyPath<Self, Value?>, to: Value?)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-8wepb",
                    "title": "func setValue<Value>(forKey: KeyPath<Self, Value>, to: Value)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-xt24",
                    "title": "func setValue<Value>(forKey: KeyPath<Self, Value>, to: Value)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/settransformablevalue(forkey:to:)",
                    "title": "func setTransformableValue<Value>(forKey: KeyPath<Self, Value>, to: Value)",
                    "type": "method"
                  },
                  {
                    "title": "Accessing supplementary information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/schemametadata",
                    "title": "static var schemaMetadata: [Schema.PropertyMetadata]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/persistentbackingdata",
                    "title": "var persistentBackingData: any BackingData<Self>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/haschanges",
                    "title": "var hasChanges: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/isdeleted",
                    "title": "var isDeleted: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Internal",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Storage",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Associated Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/model",
                            "title": "Model",
                            "type": "associatedtype"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/init(for:)",
                            "title": "init(for: Self.Model.Type)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/metadata",
                            "title": "var metadata: Any",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/persistentmodelid",
                            "title": "var persistentModelID: PersistentIdentifier?",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/gettransformablevalue(forkey:)",
                            "title": "func getTransformableValue<Value>(forKey: KeyPath<Self.Model, Value>) -> Value",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-1pric",
                            "title": "func getValue<Value>(forKey: KeyPath<Self.Model, Value>) -> Value",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-209t6",
                            "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>) -> Value",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-5fis7",
                            "title": "func getValue<Value>(forKey: KeyPath<Self.Model, Value>) -> Value",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-5fo8",
                            "title": "func getValue<Value>(forKey: KeyPath<Self.Model, Value?>) -> Value?",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-8xj5n",
                            "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>) -> Value",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/settransformablevalue(forkey:to:)",
                            "title": "func setTransformableValue<Value>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-1mr4x",
                            "title": "func setValue<Value>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-2idfg",
                            "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-4d7yr",
                            "title": "func setValue<Value>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-992es",
                            "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-rzi4",
                            "title": "func setValue<Value>(forKey: KeyPath<Self.Model, Value?>, to: Value?)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/swiftdata/backingdata",
                        "title": "BackingData",
                        "type": "protocol"
                      }
                    ],
                    "path": "/documentation/swiftdata/persistentmodelinternal",
                    "title": "Internal symbols",
                    "type": "collection"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/persistentmodel/createbackingdata()",
                    "title": "static func createBackingData<P>() -> some BackingData<P>\n",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/==(_:_:)",
                        "title": "static func == (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/swiftdata/persistentmodel/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/swiftdata/persistentmodel/hashable-implementations",
                    "title": "Hashable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/swiftdata/persistentmodel",
                "title": "PersistentModel",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating a model configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/init(isstoredinmemoryonly:)",
                    "title": "init(isStoredInMemoryOnly: Bool)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/init(for:isstoredinmemoryonly:)",
                    "title": "init(for: any PersistentModel.Type..., isStoredInMemoryOnly: Bool)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/init(_:schema:isstoredinmemoryonly:allowssave:groupcontainer:cloudkitdatabase:)",
                    "title": "init(String?, schema: Schema?, isStoredInMemoryOnly: Bool, allowsSave: Bool, groupContainer: ModelConfiguration.GroupContainer, cloudKitDatabase: ModelConfiguration.CloudKitDatabase)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/init(_:schema:url:allowssave:cloudkitdatabase:)",
                    "title": "init(String?, schema: Schema?, url: URL, allowsSave: Bool, cloudKitDatabase: ModelConfiguration.CloudKitDatabase)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing configuration details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/url",
                    "title": "let url: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/name",
                    "title": "let name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/allowssave",
                    "title": "let allowsSave: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/isstoredinmemoryonly",
                    "title": "let isStoredInMemoryOnly: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Managing schema information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/schema",
                    "title": "var schema: Schema?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/id-swift.property",
                    "title": "var id: URL",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/id-swift.typealias",
                    "title": "ModelConfiguration.ID",
                    "type": "typealias"
                  },
                  {
                    "title": "Sharing and syncing the model store",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/cloudkitcontaineridentifier",
                    "title": "let cloudKitContainerIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.property",
                    "title": "let cloudKitDatabase: ModelConfiguration.CloudKitDatabase",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting discovery options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct/automatic",
                        "title": "static var automatic: ModelConfiguration.CloudKitDatabase",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct/private(_:)",
                        "title": "static func `private`(String) -> ModelConfiguration.CloudKitDatabase",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct/none",
                        "title": "static var none: ModelConfiguration.CloudKitDatabase",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct",
                    "title": "ModelConfiguration.CloudKitDatabase",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/groupappcontaineridentifier",
                    "title": "let groupAppContainerIdentifier: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.property",
                    "title": "let groupContainer: ModelConfiguration.GroupContainer",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Getting discovery options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct/automatic",
                        "title": "static var automatic: ModelConfiguration.GroupContainer",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct/identifier(_:)",
                        "title": "static func identifier(String) -> ModelConfiguration.GroupContainer",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct/none",
                        "title": "static var none: ModelConfiguration.GroupContainer",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct",
                    "title": "ModelConfiguration.GroupContainer",
                    "type": "struct"
                  },
                  {
                    "title": "Hashing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Comparing model configurations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelconfiguration/==(_:_:)",
                    "title": "static func == (ModelConfiguration, ModelConfiguration) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelconfiguration/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/validate()",
                        "title": "func validate() throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/validate()-850zs",
                        "title": "func validate() throws",
                        "type": "method"
                      },
                      {
                        "title": "Type Aliases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/store",
                        "title": "ModelConfiguration.Store",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelconfiguration/datastoreconfiguration-implementations",
                    "title": "DataStoreConfiguration Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelconfiguration/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/swiftdata/modelconfiguration",
                "title": "ModelConfiguration",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a schema",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/init(_:version:)-8el78",
                    "title": "init(Schema.Entity..., version: Schema.Version)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/init(_:version:)-8jo9o",
                    "title": "init([any PersistentModel.Type], version: Schema.Version)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/init(versionedschema:)",
                    "title": "convenience init(versionedSchema: any VersionedSchema.Type)",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the version",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/versionedschema/versionidentifier",
                        "title": "static var versionIdentifier: Schema.Version",
                        "type": "property"
                      },
                      {
                        "title": "Specifying the included models",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/versionedschema/models",
                        "title": "static var models: [any PersistentModel.Type]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/swiftdata/versionedschema",
                    "title": "VersionedSchema",
                    "type": "protocol"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Entities",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an entity",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(_:properties:)",
                            "title": "init(String, properties: any SchemaProperty...)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(_:subentities:properties:)",
                            "title": "init(String, subentities: Schema.Entity..., properties: any SchemaProperty...)",
                            "type": "init"
                          },
                          {
                            "title": "Assigning identity",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/name",
                            "title": "var name: String",
                            "type": "property"
                          },
                          {
                            "title": "Managing attributes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/attributes",
                            "title": "var attributes: Set<Schema.Attribute>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/attributesbyname",
                            "title": "var attributesByName: [String : Schema.Attribute]",
                            "type": "property"
                          },
                          {
                            "title": "Defining relationships",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/relationships",
                            "title": "var relationships: Set<Schema.Relationship>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/relationshipsbyname",
                            "title": "var relationshipsByName: [String : Schema.Relationship]",
                            "type": "property"
                          },
                          {
                            "title": "Managing properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/properties",
                            "title": "var properties: [any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/inheritedproperties",
                            "title": "var inheritedProperties: [any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/inheritedpropertiesbyname",
                            "title": "var inheritedPropertiesByName: [String : any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/storedproperties",
                            "title": "var storedProperties: [any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/storedpropertiesbyname",
                            "title": "var storedPropertiesByName: [String : any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "title": "Applying constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/uniquenessconstraints",
                            "title": "var uniquenessConstraints: [[String]]",
                            "type": "property"
                          },
                          {
                            "title": "Configuring the inheritance chain",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/superentity",
                            "title": "var superentity: Schema.Entity?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/superentityname",
                            "title": "var superentityName: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/subentities",
                            "title": "var subentities: Set<Schema.Entity>",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Comparing entities",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/==(_:_:)",
                            "title": "static func == (Schema.Entity, Schema.Entity) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/indices",
                            "title": "var indices: [[String]]",
                            "type": "property"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/entity/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/entity",
                        "title": "Schema.Entity",
                        "type": "class"
                      },
                      {
                        "title": "Attributes",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an attribute",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/init(_:originalname:hashmodifier:)",
                            "title": "init(Schema.Attribute.Option..., originalName: String?, hashModifier: String?)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/init(name:originalname:options:valuetype:defaultvalue:hashmodifier:)",
                            "title": "init(name: String, originalName: String?, options: [Schema.Attribute.Option], valueType: any Any.Type, defaultValue: Any?, hashModifier: String?)",
                            "type": "init"
                          },
                          {
                            "title": "Specifying value information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/defaultvalue",
                            "title": "var defaultValue: Any?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/valuetype",
                            "title": "var valueType: any Any.Type",
                            "type": "property"
                          },
                          {
                            "title": "Managing identity",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/name",
                            "title": "var name: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/originalname",
                            "title": "var originalName: String",
                            "type": "property"
                          },
                          {
                            "title": "Determining behavior",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/options",
                            "title": "var options: [Schema.Attribute.Option]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/isattribute",
                            "title": "var isAttribute: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/istransformable",
                            "title": "var isTransformable: Bool",
                            "type": "property"
                          },
                          {
                            "title": "Versioning",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/hashmodifier",
                            "title": "var hashModifier: String?",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Comparing attributes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/==(_:_:)",
                            "title": "static func == (Schema.Attribute, Schema.Attribute) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Debugging",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          },
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Accessing property options",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/allowscloudencryption",
                                "title": "static var allowsCloudEncryption: Schema.Attribute.Option",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/externalstorage",
                                "title": "static var externalStorage: Schema.Attribute.Option",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/preservevalueondeletion",
                                "title": "static var preserveValueOnDeletion: Schema.Attribute.Option",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/spotlight",
                                "title": "static var spotlight: Schema.Attribute.Option",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/unique",
                                "title": "static var unique: Schema.Attribute.Option",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/transformable(by:)-9d4xh",
                                "title": "static func transformable(by: ValueTransformer.Type) -> Schema.Attribute.Option",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/transformable(by:)-lunz",
                                "title": "static func transformable(by: String) -> Schema.Attribute.Option",
                                "type": "method"
                              },
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/option/ephemeral",
                                "title": "static var ephemeral: Schema.Attribute.Option",
                                "type": "property"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/debugdescription",
                                    "title": "var debugDescription: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/attribute/option/customdebugstringconvertible-implementations",
                                "title": "CustomDebugStringConvertible Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Initializers",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/init(from:)",
                                    "title": "init(from: any Decoder) throws",
                                    "type": "init"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/attribute/option/decodable-implementations",
                                "title": "Decodable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Methods",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/encode(to:)",
                                    "title": "func encode(to: any Encoder) throws",
                                    "type": "method"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/attribute/option/encodable-implementations",
                                "title": "Encodable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/==(_:_:)",
                                    "title": "static func == (Schema.Attribute.Option, Schema.Attribute.Option) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/attribute/option/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/hashvalue",
                                    "title": "var hashValue: Int",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Instance Methods",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/hash(into:)",
                                    "title": "func hash(into: inout Hasher)",
                                    "type": "method"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/attribute/option/hashable-implementations",
                                "title": "Hashable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/attribute/option",
                            "title": "Schema.Attribute.Option",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/isoptional",
                            "title": "var isOptional: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/isrelationship",
                            "title": "var isRelationship: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/istransient",
                            "title": "var isTransient: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/attribute/isunique",
                            "title": "var isUnique: Bool",
                            "type": "property"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/attribute/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/attribute",
                        "title": "Schema.Attribute",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a composite attribute",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/compositeattribute/init(name:originalname:options:valuetype:defaultvalue:hashmodifier:)",
                            "title": "init(name: String, originalName: String?, options: [Schema.Attribute.Option], valueType: any Any.Type, defaultValue: Any?, hashModifier: String?)",
                            "type": "init"
                          },
                          {
                            "title": "Composing attributes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/compositeattribute/properties",
                            "title": "var properties: [Schema.Attribute]",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/compositeattribute/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/compositeattribute/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Debugging",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/compositeattribute/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/compositeattribute",
                        "title": "Schema.CompositeAttribute",
                        "type": "class"
                      },
                      {
                        "title": "Relationships",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a relationship",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/init(_:deleterule:minimummodelcount:maximummodelcount:originalname:inverse:hashmodifier:)",
                            "title": "init(Schema.Relationship.Option..., deleteRule: Schema.Relationship.DeleteRule, minimumModelCount: Int?, maximumModelCount: Int?, originalName: String?, inverse: AnyKeyPath?, hashModifier: String?)",
                            "type": "init"
                          },
                          {
                            "title": "Managing the configuration",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/keypath",
                            "title": "var keypath: AnyKeyPath?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/destination",
                            "title": "var destination: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/inversename",
                            "title": "var inverseName: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/inversekeypath",
                            "title": "var inverseKeyPath: AnyKeyPath?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.property",
                            "title": "var deleteRule: Schema.Relationship.DeleteRule",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Accessing delete rules",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/cascade",
                                "title": "case cascade",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/deny",
                                "title": "case deny",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/noaction",
                                "title": "case noAction",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/nullify",
                                "title": "case nullify",
                                "type": "case"
                              },
                              {
                                "title": "Creating a relationship delete rule",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/init(rawvalue:)",
                                "title": "init?(rawValue: String)",
                                "type": "init"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/rawvalue-swift.property",
                                "title": "var rawValue: String",
                                "type": "property"
                              },
                              {
                                "title": "Type Aliases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/rawvalue-swift.typealias",
                                "title": "Schema.Relationship.DeleteRule.RawValue",
                                "type": "typealias"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Initializers",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/init(from:)",
                                    "title": "init(from: any Decoder) throws",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/hashvalue",
                                    "title": "var hashValue: Int",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Instance Methods",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/encode(to:)",
                                    "title": "func encode(to: any Encoder) throws",
                                    "type": "method"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/hash(into:)",
                                    "title": "func hash(into: inout Hasher)",
                                    "type": "method"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/rawrepresentable-implementations",
                                "title": "RawRepresentable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum",
                            "title": "Schema.Relationship.DeleteRule",
                            "type": "enum"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/istoonerelationship",
                            "title": "var isToOneRelationship: Bool",
                            "type": "property"
                          },
                          {
                            "title": "Specifying value information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/valuetype",
                            "title": "var valueType: any Any.Type",
                            "type": "property"
                          },
                          {
                            "title": "Managing identity",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/name",
                            "title": "var name: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/originalname",
                            "title": "var originalName: String",
                            "type": "property"
                          },
                          {
                            "title": "Determining behavior",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/options",
                            "title": "var options: [Schema.Relationship.Option]",
                            "type": "property"
                          },
                          {
                            "title": "Versioning",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/hashmodifier",
                            "title": "var hashModifier: String?",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Comparing attributes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/==(_:_:)",
                            "title": "static func == (Schema.Relationship, Schema.Relationship) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Debugging",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          },
                          {
                            "title": "Structures",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/option/==(_:_:)",
                                "title": "static func == (Schema.Relationship.Option, Schema.Relationship.Option) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/option/init(from:)",
                                "title": "init(from: any Decoder) throws",
                                "type": "init"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/option/debugdescription",
                                "title": "var debugDescription: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/option/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/option/encode(to:)",
                                "title": "func encode(to: any Encoder) throws",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/option/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Type Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/option/unique",
                                "title": "static var unique: Schema.Relationship.Option",
                                "type": "property"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/relationship/option/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/relationship/option",
                            "title": "Schema.Relationship.Option",
                            "type": "struct"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/isattribute",
                            "title": "var isAttribute: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/istransient",
                            "title": "var isTransient: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/isunique",
                            "title": "var isUnique: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/maximummodelcount",
                            "title": "var maximumModelCount: Int?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/relationship/minimummodelcount",
                            "title": "var minimumModelCount: Int?",
                            "type": "property"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/relationship/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/isoptional",
                                "title": "var isOptional: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/isrelationship",
                                "title": "var isRelationship: Bool",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/relationship/schemaproperty-implementations",
                            "title": "SchemaProperty Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/relationship",
                        "title": "Schema.Relationship",
                        "type": "class"
                      },
                      {
                        "title": "Internal",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Properties",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/isattribute",
                                "title": "var isAttribute: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/isoptional",
                                "title": "var isOptional: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/isrelationship",
                                "title": "var isRelationship: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/istransient",
                                "title": "var isTransient: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/isunique",
                                "title": "var isUnique: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/name",
                                "title": "var name: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/originalname",
                                "title": "var originalName: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schemaproperty/valuetype",
                                "title": "var valueType: any Any.Type",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/swiftdata/schemaproperty",
                            "title": "SchemaProperty",
                            "type": "protocol"
                          },
                          {
                            "children": [
                              {
                                "title": "Associated Types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/relationshipcollection/persistentelement",
                                "title": "PersistentElement",
                                "type": "associatedtype"
                              }
                            ],
                            "path": "/documentation/swiftdata/relationshipcollection",
                            "title": "RelationshipCollection",
                            "type": "protocol"
                          }
                        ],
                        "path": "/documentation/swiftdata/schemacomponentsinternal",
                        "title": "Internal symbols",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/schemacomponents",
                    "title": "Schema components",
                    "type": "collection"
                  },
                  {
                    "title": "Accessing entities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/entities",
                    "title": "let entities: [Schema.Entity]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/entitiesbyname",
                    "title": "let entitiesByName: [String : Schema.Entity]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating an entity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/init(_:)",
                        "title": "init(String)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/init(_:properties:)",
                        "title": "init(String, properties: any SchemaProperty...)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/init(_:subentities:properties:)",
                        "title": "init(String, subentities: Schema.Entity..., properties: any SchemaProperty...)",
                        "type": "init"
                      },
                      {
                        "title": "Assigning identity",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "title": "Managing attributes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/attributes",
                        "title": "var attributes: Set<Schema.Attribute>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/attributesbyname",
                        "title": "var attributesByName: [String : Schema.Attribute]",
                        "type": "property"
                      },
                      {
                        "title": "Defining relationships",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/relationships",
                        "title": "var relationships: Set<Schema.Relationship>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/relationshipsbyname",
                        "title": "var relationshipsByName: [String : Schema.Relationship]",
                        "type": "property"
                      },
                      {
                        "title": "Managing properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/properties",
                        "title": "var properties: [any SchemaProperty]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/inheritedproperties",
                        "title": "var inheritedProperties: [any SchemaProperty]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/inheritedpropertiesbyname",
                        "title": "var inheritedPropertiesByName: [String : any SchemaProperty]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/storedproperties",
                        "title": "var storedProperties: [any SchemaProperty]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/storedpropertiesbyname",
                        "title": "var storedPropertiesByName: [String : any SchemaProperty]",
                        "type": "property"
                      },
                      {
                        "title": "Applying constraints",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/uniquenessconstraints",
                        "title": "var uniquenessConstraints: [[String]]",
                        "type": "property"
                      },
                      {
                        "title": "Configuring the inheritance chain",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/superentity",
                        "title": "var superentity: Schema.Entity?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/superentityname",
                        "title": "var superentityName: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/subentities",
                        "title": "var subentities: Set<Schema.Entity>",
                        "type": "property"
                      },
                      {
                        "title": "Encoding and decoding",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Hashing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Comparing entities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/==(_:_:)",
                        "title": "static func == (Schema.Entity, Schema.Entity) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity/indices",
                        "title": "var indices: [[String]]",
                        "type": "property"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/entity/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema/entity",
                    "title": "Schema.Entity",
                    "type": "class"
                  },
                  {
                    "title": "Accessing version details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/schemaencodingversion",
                    "title": "static let schemaEncodingVersion: Schema.Version",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/encodingversion",
                    "title": "let encodingVersion: Schema.Version",
                    "type": "property"
                  },
                  {
                    "title": "Saving and loading",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/save(to:)",
                    "title": "func save(to: URL) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/load(from:)",
                    "title": "static func load(from: URL) throws -> Schema",
                    "type": "method"
                  },
                  {
                    "title": "Encoding and decoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Hashing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  },
                  {
                    "title": "Comparing schemas",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/==(_:_:)",
                    "title": "static func == (Schema, Schema) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Classes",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/==(_:_:)",
                        "title": "static func == (Schema.Index<T>, Schema.Index<T>) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/init(_:)-4i37e",
                        "title": "init(Schema.Index<T>.Types<T>...)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/init(_:)-527in",
                        "title": "init([PartialKeyPath<T>]...)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/indices",
                        "title": "let indices: [Schema.Index<T>.Types<T>]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/isunique",
                        "title": "var isUnique: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/originalname",
                        "title": "var originalName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/valuetype",
                        "title": "var valueType: any Any.Type",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/index/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/==(_:_:)",
                            "title": "static func == (Schema.Index<T>.CodingKeys, Schema.Index<T>.CodingKeys) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/indices",
                            "title": "case indices",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/init(intvalue:)",
                            "title": "init?(intValue: Int)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/init(stringvalue:)",
                            "title": "init?(stringValue: String)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/intvalue",
                            "title": "var intValue: Int?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/stringvalue",
                            "title": "var stringValue: String",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/codingkeys/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/debugdescription",
                                "title": "var debugDescription: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/description",
                                "title": "var description: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/index/codingkeys/codingkey-implementations",
                            "title": "CodingKey Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/index/codingkeys/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/index/codingkeys",
                        "title": "Schema.Index.CodingKeys",
                        "type": "enum"
                      },
                      {
                        "children": [
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/types/binary(_:)",
                            "title": "case binary([PartialKeyPath<P>])",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/types/rtree(_:)",
                            "title": "case rtree([PartialKeyPath<P>])",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/index/types",
                        "title": "Schema.Index.Types",
                        "type": "enum"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/index/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/isattribute",
                            "title": "var isAttribute: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/isoptional",
                            "title": "var isOptional: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/isrelationship",
                            "title": "var isRelationship: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/istransient",
                            "title": "var isTransient: Bool",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/index/schemaproperty-implementations",
                        "title": "SchemaProperty Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema/index",
                    "title": "Schema.Index",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/==(_:_:)",
                        "title": "static func == (Schema.Unique<T>, Schema.Unique<T>) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/init(_:)",
                        "title": "init([PartialKeyPath<T>]...)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/constraints",
                        "title": "let constraints: [[PartialKeyPath<T>]]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/isunique",
                        "title": "var isUnique: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/originalname",
                        "title": "var originalName: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/valuetype",
                        "title": "var valueType: any Any.Type",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/unique/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Enumerations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/==(_:_:)",
                            "title": "static func == (Schema.Unique<T>.CodingKeys, Schema.Unique<T>.CodingKeys) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/constraints",
                            "title": "case constraints",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/init(intvalue:)",
                            "title": "init?(intValue: Int)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/init(stringvalue:)",
                            "title": "init?(stringValue: String)",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/intvalue",
                            "title": "var intValue: Int?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/stringvalue",
                            "title": "var stringValue: String",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/debugdescription",
                                "title": "var debugDescription: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/description",
                                "title": "var description: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/codingkey-implementations",
                            "title": "CodingKey Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/unique/codingkeys/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/unique/codingkeys",
                        "title": "Schema.Unique.CodingKeys",
                        "type": "enum"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/unique/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/isattribute",
                            "title": "var isAttribute: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/isoptional",
                            "title": "var isOptional: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/isrelationship",
                            "title": "var isRelationship: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/istransient",
                            "title": "var isTransient: Bool",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/unique/schemaproperty-implementations",
                        "title": "SchemaProperty Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema/unique",
                    "title": "Schema.Unique",
                    "type": "class"
                  },
                  {
                    "title": "Structures",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/propertymetadata/init(name:keypath:defaultvalue:metadata:)",
                        "title": "init(name: String, keypath: AnyKeyPath, defaultValue: Any?, metadata: (any SchemaProperty)?)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema/propertymetadata",
                    "title": "Schema.PropertyMetadata",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/==(_:_:)",
                        "title": "static func == (Schema.Version, Schema.Version) -> Bool",
                        "type": "op"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/_(_:_:)",
                        "title": "static func < (Schema.Version, Schema.Version) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/init(_:_:_:)",
                        "title": "init(Int, Int, Int)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/description",
                        "title": "var description: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/major",
                        "title": "let major: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/minor",
                        "title": "let minor: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/patch",
                        "title": "let patch: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.struct/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/'...(_:)-1hasx",
                            "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/'...(_:)-7idu6",
                            "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/'...(_:_:)",
                            "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/'.._(_:)",
                            "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/'.._(_:_:)",
                            "title": "static func ..< (Self, Self) -> Range<Self>",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/_(_:_:)-1xq7t",
                            "title": "static func > (Self, Self) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/_=(_:_:)-3f007",
                            "title": "static func <= (Self, Self) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/_=(_:_:)-58hat",
                            "title": "static func >= (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/version-swift.struct/comparable-implementations",
                        "title": "Comparable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/version-swift.struct/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema/version-swift.struct",
                    "title": "Schema.Version",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/version-swift.property",
                    "title": "let version: Schema.Version",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/entity(for:)",
                    "title": "func entity<T>(for: T.Type) -> Schema.Entity?",
                    "type": "method"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schema/entityname(for:)",
                    "title": "static func entityName<T>(for: T.Type) -> String",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/debugdescription",
                        "title": "var debugDescription: String",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema/customdebugstringconvertible-implementations",
                    "title": "CustomDebugStringConvertible Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/swiftdata/schema",
                "title": "Schema",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Managing versioned schemas",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schemamigrationplan/schemas",
                    "title": "static var schemas: [any VersionedSchema.Type]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing the version",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/versionedschema/versionidentifier",
                        "title": "static var versionIdentifier: Schema.Version",
                        "type": "property"
                      },
                      {
                        "title": "Specifying the included models",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/versionedschema/models",
                        "title": "static var models: [any PersistentModel.Type]",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/swiftdata/versionedschema",
                    "title": "VersionedSchema",
                    "type": "protocol"
                  },
                  {
                    "title": "Managing migration stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/schemamigrationplan/stages",
                    "title": "static var stages: [MigrationStage]",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Migration stages",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/migrationstage/lightweight(fromversion:toversion:)",
                        "title": "case lightweight(fromVersion: any VersionedSchema.Type, toVersion: any VersionedSchema.Type)",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/swiftdata/migrationstage/custom(fromversion:toversion:willmigrate:didmigrate:)",
                        "title": "case custom(fromVersion: any VersionedSchema.Type, toVersion: any VersionedSchema.Type, willMigrate: ((ModelContext) throws -> Void)?, didMigrate: ((ModelContext) throws -> Void)?)",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/swiftdata/migrationstage",
                    "title": "MigrationStage",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/swiftdata/schemamigrationplan",
                "title": "SchemaMigrationPlan",
                "type": "protocol"
              },
              {
                "title": "Managing schema and configuration details",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/schema",
                "title": "let schema: Schema",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/configurations",
                "title": "var configurations: Set<ModelConfiguration>",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/migrationplan",
                "title": "let migrationPlan: (any SchemaMigrationPlan.Type)?",
                "type": "property"
              },
              {
                "title": "Accessing the context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/maincontext",
                "title": "var mainContext: ModelContext",
                "type": "property"
              },
              {
                "title": "Deleting the container",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/deletealldata()",
                "title": "func deleteAllData()",
                "type": "method"
              },
              {
                "title": "Comparing model containers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/==(_:_:)",
                "title": "static func == (ModelContainer, ModelContainer) -> Bool",
                "type": "op"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/init(for:configurations:)-621ei",
                "title": "convenience init(for: any PersistentModel.Type..., configurations: any DataStoreConfiguration...) throws",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/init(for:configurations:)-93ifi",
                "title": "init(for: Schema, configurations: [any DataStoreConfiguration]) throws",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontainer/erase()",
                "title": "func erase() throws",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/swiftdata/modelcontainer/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/modelcontainer",
            "title": "ModelContainer",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a model context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/init(_:)",
                "title": "init(ModelContainer)",
                "type": "init"
              },
              {
                "children": [
                  {
                    "title": "Creating a model container",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/init(for:migrationplan:configurations:)-1czix",
                    "title": "init(for: Schema, migrationPlan: (any SchemaMigrationPlan.Type)?, configurations: [ModelConfiguration]) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/init(for:migrationplan:configurations:)-8s4ts",
                    "title": "convenience init(for: any PersistentModel.Type..., migrationPlan: (any SchemaMigrationPlan.Type)?, configurations: ModelConfiguration...) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/init(for:migrationplan:configurations:)-qof9",
                    "title": "convenience init(for: Schema, migrationPlan: (any SchemaMigrationPlan.Type)?, configurations: ModelConfiguration...) throws",
                    "type": "init"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a persistent model",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/init(backingdata:)",
                        "title": "init(backingData: any BackingData<Self>)",
                        "type": "init"
                      },
                      {
                        "title": "Identifying the model instance",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/persistentmodelid",
                        "title": "var persistentModelID: PersistentIdentifier",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing identity information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/id-swift.property",
                            "title": "let id: PersistentIdentifier.ID",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Hashing",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Comparing IDs",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/==(_:_:)",
                                "title": "static func == (PersistentIdentifier.ID, PersistentIdentifier.ID) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/persistentidentifier/id-swift.struct",
                            "title": "PersistentIdentifier.ID",
                            "type": "struct"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/storeidentifier",
                            "title": "var storeIdentifier: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/entityname",
                            "title": "var entityName: String",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Comparing identifiers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/==(_:_:)",
                            "title": "static func == (PersistentIdentifier, PersistentIdentifier) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/_(_:_:)",
                            "title": "static func < (PersistentIdentifier, PersistentIdentifier) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Type Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentidentifier/identifier(for:entityname:primarykey:)",
                            "title": "static func identifier<T>(for: String, entityName: String, primaryKey: T) throws -> PersistentIdentifier",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/'...(_:)-403wm",
                                "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/'...(_:)-d67x",
                                "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/'...(_:_:)",
                                "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/'.._(_:)",
                                "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/'.._(_:_:)",
                                "title": "static func ..< (Self, Self) -> Range<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/_(_:_:)-4ouuo",
                                "title": "static func > (Self, Self) -> Bool",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/_=(_:_:)-6gf5",
                                "title": "static func <= (Self, Self) -> Bool",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/_=(_:_:)-759nj",
                                "title": "static func >= (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/persistentidentifier/comparable-implementations",
                            "title": "Comparable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/persistentidentifier/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/persistentidentifier/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/persistentidentifier",
                        "title": "PersistentIdentifier",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/modelcontext",
                        "title": "var modelContext: ModelContext?",
                        "type": "property"
                      },
                      {
                        "title": "Accessing a value by key path",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-299oe",
                        "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self, Value>) -> Value",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-3o59k",
                        "title": "func getValue<Value>(forKey: KeyPath<Self, Value>) -> Value",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-4cs0c",
                        "title": "func getValue<Value>(forKey: KeyPath<Self, Value>) -> Value",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-5m792",
                        "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self, Value>) -> Value",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/getvalue(forkey:)-998oq",
                        "title": "func getValue<Value>(forKey: KeyPath<Self, Value?>) -> Value?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/gettransformablevalue(forkey:)",
                        "title": "func getTransformableValue<Value>(forKey: KeyPath<Self, Value>) -> Value",
                        "type": "method"
                      },
                      {
                        "title": "Modifying a value by key path",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-18176",
                        "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self, Value>, to: Value)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-3mmp2",
                        "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self, Value>, to: Value)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-3uqwc",
                        "title": "func setValue<Value>(forKey: KeyPath<Self, Value?>, to: Value?)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-8wepb",
                        "title": "func setValue<Value>(forKey: KeyPath<Self, Value>, to: Value)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/setvalue(forkey:to:)-xt24",
                        "title": "func setValue<Value>(forKey: KeyPath<Self, Value>, to: Value)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/settransformablevalue(forkey:to:)",
                        "title": "func setTransformableValue<Value>(forKey: KeyPath<Self, Value>, to: Value)",
                        "type": "method"
                      },
                      {
                        "title": "Accessing supplementary information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/schemametadata",
                        "title": "static var schemaMetadata: [Schema.PropertyMetadata]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/persistentbackingdata",
                        "title": "var persistentBackingData: any BackingData<Self>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/haschanges",
                        "title": "var hasChanges: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/isdeleted",
                        "title": "var isDeleted: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Internal",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Storage",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Associated Types",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/model",
                                "title": "Model",
                                "type": "associatedtype"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/init(for:)",
                                "title": "init(for: Self.Model.Type)",
                                "type": "init"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/metadata",
                                "title": "var metadata: Any",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/persistentmodelid",
                                "title": "var persistentModelID: PersistentIdentifier?",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/gettransformablevalue(forkey:)",
                                "title": "func getTransformableValue<Value>(forKey: KeyPath<Self.Model, Value>) -> Value",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-1pric",
                                "title": "func getValue<Value>(forKey: KeyPath<Self.Model, Value>) -> Value",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-209t6",
                                "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>) -> Value",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-5fis7",
                                "title": "func getValue<Value>(forKey: KeyPath<Self.Model, Value>) -> Value",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-5fo8",
                                "title": "func getValue<Value>(forKey: KeyPath<Self.Model, Value?>) -> Value?",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/getvalue(forkey:)-8xj5n",
                                "title": "func getValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>) -> Value",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/settransformablevalue(forkey:to:)",
                                "title": "func setTransformableValue<Value>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-1mr4x",
                                "title": "func setValue<Value>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-2idfg",
                                "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-4d7yr",
                                "title": "func setValue<Value>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-992es",
                                "title": "func setValue<Value, OtherModel>(forKey: KeyPath<Self.Model, Value>, to: Value)",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/backingdata/setvalue(forkey:to:)-rzi4",
                                "title": "func setValue<Value>(forKey: KeyPath<Self.Model, Value?>, to: Value?)",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/swiftdata/backingdata",
                            "title": "BackingData",
                            "type": "protocol"
                          }
                        ],
                        "path": "/documentation/swiftdata/persistentmodelinternal",
                        "title": "Internal symbols",
                        "type": "collection"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/persistentmodel/createbackingdata()",
                        "title": "static func createBackingData<P>() -> some BackingData<P>\n",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentmodel/==(_:_:)",
                            "title": "static func == (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/persistentmodel/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/persistentmodel/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/swiftdata/persistentmodel/hashable-implementations",
                        "title": "Hashable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/persistentmodel",
                    "title": "PersistentModel",
                    "type": "protocol"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a model configuration",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/init(isstoredinmemoryonly:)",
                        "title": "init(isStoredInMemoryOnly: Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/init(for:isstoredinmemoryonly:)",
                        "title": "init(for: any PersistentModel.Type..., isStoredInMemoryOnly: Bool)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/init(_:schema:isstoredinmemoryonly:allowssave:groupcontainer:cloudkitdatabase:)",
                        "title": "init(String?, schema: Schema?, isStoredInMemoryOnly: Bool, allowsSave: Bool, groupContainer: ModelConfiguration.GroupContainer, cloudKitDatabase: ModelConfiguration.CloudKitDatabase)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/init(_:schema:url:allowssave:cloudkitdatabase:)",
                        "title": "init(String?, schema: Schema?, url: URL, allowsSave: Bool, cloudKitDatabase: ModelConfiguration.CloudKitDatabase)",
                        "type": "init"
                      },
                      {
                        "title": "Accessing configuration details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/url",
                        "title": "let url: URL",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/name",
                        "title": "let name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/allowssave",
                        "title": "let allowsSave: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/isstoredinmemoryonly",
                        "title": "let isStoredInMemoryOnly: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Managing schema information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/schema",
                        "title": "var schema: Schema?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/id-swift.property",
                        "title": "var id: URL",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/id-swift.typealias",
                        "title": "ModelConfiguration.ID",
                        "type": "typealias"
                      },
                      {
                        "title": "Sharing and syncing the model store",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/cloudkitcontaineridentifier",
                        "title": "let cloudKitContainerIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.property",
                        "title": "let cloudKitDatabase: ModelConfiguration.CloudKitDatabase",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting discovery options",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct/automatic",
                            "title": "static var automatic: ModelConfiguration.CloudKitDatabase",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct/private(_:)",
                            "title": "static func `private`(String) -> ModelConfiguration.CloudKitDatabase",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct/none",
                            "title": "static var none: ModelConfiguration.CloudKitDatabase",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/modelconfiguration/cloudkitdatabase-swift.struct",
                        "title": "ModelConfiguration.CloudKitDatabase",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/groupappcontaineridentifier",
                        "title": "let groupAppContainerIdentifier: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.property",
                        "title": "let groupContainer: ModelConfiguration.GroupContainer",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Getting discovery options",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct/automatic",
                            "title": "static var automatic: ModelConfiguration.GroupContainer",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct/identifier(_:)",
                            "title": "static func identifier(String) -> ModelConfiguration.GroupContainer",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct/none",
                            "title": "static var none: ModelConfiguration.GroupContainer",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/modelconfiguration/groupcontainer-swift.struct",
                        "title": "ModelConfiguration.GroupContainer",
                        "type": "struct"
                      },
                      {
                        "title": "Hashing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Comparing model configurations",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelconfiguration/==(_:_:)",
                        "title": "static func == (ModelConfiguration, ModelConfiguration) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/modelconfiguration/customdebugstringconvertible-implementations",
                        "title": "CustomDebugStringConvertible Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/validate()",
                            "title": "func validate() throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/validate()-850zs",
                            "title": "func validate() throws",
                            "type": "method"
                          },
                          {
                            "title": "Type Aliases",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/store",
                            "title": "ModelConfiguration.Store",
                            "type": "typealias"
                          }
                        ],
                        "path": "/documentation/swiftdata/modelconfiguration/datastoreconfiguration-implementations",
                        "title": "DataStoreConfiguration Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/modelconfiguration/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/modelconfiguration/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelconfiguration",
                    "title": "ModelConfiguration",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a schema",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/init(_:version:)-8el78",
                        "title": "init(Schema.Entity..., version: Schema.Version)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/init(_:version:)-8jo9o",
                        "title": "init([any PersistentModel.Type], version: Schema.Version)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/init(versionedschema:)",
                        "title": "convenience init(versionedSchema: any VersionedSchema.Type)",
                        "type": "init"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing the version",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/versionedschema/versionidentifier",
                            "title": "static var versionIdentifier: Schema.Version",
                            "type": "property"
                          },
                          {
                            "title": "Specifying the included models",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/versionedschema/models",
                            "title": "static var models: [any PersistentModel.Type]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/versionedschema",
                        "title": "VersionedSchema",
                        "type": "protocol"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "children": [
                          {
                            "title": "Entities",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating an entity",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/init(_:)",
                                "title": "init(String)",
                                "type": "init"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/init(_:properties:)",
                                "title": "init(String, properties: any SchemaProperty...)",
                                "type": "init"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/init(_:subentities:properties:)",
                                "title": "init(String, subentities: Schema.Entity..., properties: any SchemaProperty...)",
                                "type": "init"
                              },
                              {
                                "title": "Assigning identity",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/name",
                                "title": "var name: String",
                                "type": "property"
                              },
                              {
                                "title": "Managing attributes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/attributes",
                                "title": "var attributes: Set<Schema.Attribute>",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/attributesbyname",
                                "title": "var attributesByName: [String : Schema.Attribute]",
                                "type": "property"
                              },
                              {
                                "title": "Defining relationships",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/relationships",
                                "title": "var relationships: Set<Schema.Relationship>",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/relationshipsbyname",
                                "title": "var relationshipsByName: [String : Schema.Relationship]",
                                "type": "property"
                              },
                              {
                                "title": "Managing properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/properties",
                                "title": "var properties: [any SchemaProperty]",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/inheritedproperties",
                                "title": "var inheritedProperties: [any SchemaProperty]",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/inheritedpropertiesbyname",
                                "title": "var inheritedPropertiesByName: [String : any SchemaProperty]",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/storedproperties",
                                "title": "var storedProperties: [any SchemaProperty]",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/storedpropertiesbyname",
                                "title": "var storedPropertiesByName: [String : any SchemaProperty]",
                                "type": "property"
                              },
                              {
                                "title": "Applying constraints",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/uniquenessconstraints",
                                "title": "var uniquenessConstraints: [[String]]",
                                "type": "property"
                              },
                              {
                                "title": "Configuring the inheritance chain",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/superentity",
                                "title": "var superentity: Schema.Entity?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/superentityname",
                                "title": "var superentityName: String?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/subentities",
                                "title": "var subentities: Set<Schema.Entity>",
                                "type": "property"
                              },
                              {
                                "title": "Encoding and decoding",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/encode(to:)",
                                "title": "func encode(to: any Encoder) throws",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/init(from:)",
                                "title": "init(from: any Decoder) throws",
                                "type": "init"
                              },
                              {
                                "title": "Hashing",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Comparing entities",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/==(_:_:)",
                                "title": "static func == (Schema.Entity, Schema.Entity) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/debugdescription",
                                "title": "var debugDescription: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/indices",
                                "title": "var indices: [[String]]",
                                "type": "property"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/entity/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/entity/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/entity",
                            "title": "Schema.Entity",
                            "type": "class"
                          },
                          {
                            "title": "Attributes",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating an attribute",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/init(_:originalname:hashmodifier:)",
                                "title": "init(Schema.Attribute.Option..., originalName: String?, hashModifier: String?)",
                                "type": "init"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/init(name:originalname:options:valuetype:defaultvalue:hashmodifier:)",
                                "title": "init(name: String, originalName: String?, options: [Schema.Attribute.Option], valueType: any Any.Type, defaultValue: Any?, hashModifier: String?)",
                                "type": "init"
                              },
                              {
                                "title": "Specifying value information",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/defaultvalue",
                                "title": "var defaultValue: Any?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/valuetype",
                                "title": "var valueType: any Any.Type",
                                "type": "property"
                              },
                              {
                                "title": "Managing identity",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/name",
                                "title": "var name: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/originalname",
                                "title": "var originalName: String",
                                "type": "property"
                              },
                              {
                                "title": "Determining behavior",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/options",
                                "title": "var options: [Schema.Attribute.Option]",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/isattribute",
                                "title": "var isAttribute: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/istransformable",
                                "title": "var isTransformable: Bool",
                                "type": "property"
                              },
                              {
                                "title": "Versioning",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/hashmodifier",
                                "title": "var hashModifier: String?",
                                "type": "property"
                              },
                              {
                                "title": "Encoding and decoding",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/encode(to:)",
                                "title": "func encode(to: any Encoder) throws",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/init(from:)",
                                "title": "init(from: any Decoder) throws",
                                "type": "init"
                              },
                              {
                                "title": "Hashing",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Comparing attributes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/==(_:_:)",
                                "title": "static func == (Schema.Attribute, Schema.Attribute) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Debugging",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/debugdescription",
                                "title": "var debugDescription: String",
                                "type": "property"
                              },
                              {
                                "title": "Structures",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Accessing property options",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/allowscloudencryption",
                                    "title": "static var allowsCloudEncryption: Schema.Attribute.Option",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/externalstorage",
                                    "title": "static var externalStorage: Schema.Attribute.Option",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/preservevalueondeletion",
                                    "title": "static var preserveValueOnDeletion: Schema.Attribute.Option",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/spotlight",
                                    "title": "static var spotlight: Schema.Attribute.Option",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/unique",
                                    "title": "static var unique: Schema.Attribute.Option",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/transformable(by:)-9d4xh",
                                    "title": "static func transformable(by: ValueTransformer.Type) -> Schema.Attribute.Option",
                                    "type": "method"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/transformable(by:)-lunz",
                                    "title": "static func transformable(by: String) -> Schema.Attribute.Option",
                                    "type": "method"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/option/ephemeral",
                                    "title": "static var ephemeral: Schema.Attribute.Option",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Default Implementations",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Instance Properties",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/attribute/option/debugdescription",
                                        "title": "var debugDescription: String",
                                        "type": "property"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/attribute/option/customdebugstringconvertible-implementations",
                                    "title": "CustomDebugStringConvertible Implementations",
                                    "type": "collection"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Initializers",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/attribute/option/init(from:)",
                                        "title": "init(from: any Decoder) throws",
                                        "type": "init"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/attribute/option/decodable-implementations",
                                    "title": "Decodable Implementations",
                                    "type": "collection"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Instance Methods",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/attribute/option/encode(to:)",
                                        "title": "func encode(to: any Encoder) throws",
                                        "type": "method"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/attribute/option/encodable-implementations",
                                    "title": "Encodable Implementations",
                                    "type": "collection"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Operators",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/attribute/option/!=(_:_:)",
                                        "title": "static func != (Self, Self) -> Bool",
                                        "type": "op"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/attribute/option/==(_:_:)",
                                        "title": "static func == (Schema.Attribute.Option, Schema.Attribute.Option) -> Bool",
                                        "type": "op"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/attribute/option/equatable-implementations",
                                    "title": "Equatable Implementations",
                                    "type": "collection"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Instance Properties",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/attribute/option/hashvalue",
                                        "title": "var hashValue: Int",
                                        "type": "property"
                                      },
                                      {
                                        "title": "Instance Methods",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/attribute/option/hash(into:)",
                                        "title": "func hash(into: inout Hasher)",
                                        "type": "method"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/attribute/option/hashable-implementations",
                                    "title": "Hashable Implementations",
                                    "type": "collection"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/attribute/option",
                                "title": "Schema.Attribute.Option",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/isoptional",
                                "title": "var isOptional: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/isrelationship",
                                "title": "var isRelationship: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/istransient",
                                "title": "var isTransient: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/attribute/isunique",
                                "title": "var isUnique: Bool",
                                "type": "property"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/attribute/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/attribute/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/attribute",
                            "title": "Schema.Attribute",
                            "type": "class"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating a composite attribute",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/compositeattribute/init(name:originalname:options:valuetype:defaultvalue:hashmodifier:)",
                                "title": "init(name: String, originalName: String?, options: [Schema.Attribute.Option], valueType: any Any.Type, defaultValue: Any?, hashModifier: String?)",
                                "type": "init"
                              },
                              {
                                "title": "Composing attributes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/compositeattribute/properties",
                                "title": "var properties: [Schema.Attribute]",
                                "type": "property"
                              },
                              {
                                "title": "Encoding and decoding",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/compositeattribute/encode(to:)",
                                "title": "func encode(to: any Encoder) throws",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/compositeattribute/init(from:)",
                                "title": "init(from: any Decoder) throws",
                                "type": "init"
                              },
                              {
                                "title": "Debugging",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/compositeattribute/debugdescription",
                                "title": "var debugDescription: String",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/compositeattribute",
                            "title": "Schema.CompositeAttribute",
                            "type": "class"
                          },
                          {
                            "title": "Relationships",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Creating a relationship",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/init(_:deleterule:minimummodelcount:maximummodelcount:originalname:inverse:hashmodifier:)",
                                "title": "init(Schema.Relationship.Option..., deleteRule: Schema.Relationship.DeleteRule, minimumModelCount: Int?, maximumModelCount: Int?, originalName: String?, inverse: AnyKeyPath?, hashModifier: String?)",
                                "type": "init"
                              },
                              {
                                "title": "Managing the configuration",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/keypath",
                                "title": "var keypath: AnyKeyPath?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/destination",
                                "title": "var destination: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/inversename",
                                "title": "var inverseName: String?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/inversekeypath",
                                "title": "var inverseKeyPath: AnyKeyPath?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.property",
                                "title": "var deleteRule: Schema.Relationship.DeleteRule",
                                "type": "property"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Accessing delete rules",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/cascade",
                                    "title": "case cascade",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/deny",
                                    "title": "case deny",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/noaction",
                                    "title": "case noAction",
                                    "type": "case"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/nullify",
                                    "title": "case nullify",
                                    "type": "case"
                                  },
                                  {
                                    "title": "Creating a relationship delete rule",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/init(rawvalue:)",
                                    "title": "init?(rawValue: String)",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/rawvalue-swift.property",
                                    "title": "var rawValue: String",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Type Aliases",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/rawvalue-swift.typealias",
                                    "title": "Schema.Relationship.DeleteRule.RawValue",
                                    "type": "typealias"
                                  },
                                  {
                                    "title": "Default Implementations",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Operators",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/!=(_:_:)",
                                        "title": "static func != (Self, Self) -> Bool",
                                        "type": "op"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/equatable-implementations",
                                    "title": "Equatable Implementations",
                                    "type": "collection"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Initializers",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/init(from:)",
                                        "title": "init(from: any Decoder) throws",
                                        "type": "init"
                                      },
                                      {
                                        "title": "Instance Properties",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/hashvalue",
                                        "title": "var hashValue: Int",
                                        "type": "property"
                                      },
                                      {
                                        "title": "Instance Methods",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/encode(to:)",
                                        "title": "func encode(to: any Encoder) throws",
                                        "type": "method"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/hash(into:)",
                                        "title": "func hash(into: inout Hasher)",
                                        "type": "method"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum/rawrepresentable-implementations",
                                    "title": "RawRepresentable Implementations",
                                    "type": "collection"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/relationship/deleterule-swift.enum",
                                "title": "Schema.Relationship.DeleteRule",
                                "type": "enum"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/istoonerelationship",
                                "title": "var isToOneRelationship: Bool",
                                "type": "property"
                              },
                              {
                                "title": "Specifying value information",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/valuetype",
                                "title": "var valueType: any Any.Type",
                                "type": "property"
                              },
                              {
                                "title": "Managing identity",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/name",
                                "title": "var name: String",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/originalname",
                                "title": "var originalName: String",
                                "type": "property"
                              },
                              {
                                "title": "Determining behavior",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/options",
                                "title": "var options: [Schema.Relationship.Option]",
                                "type": "property"
                              },
                              {
                                "title": "Versioning",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/hashmodifier",
                                "title": "var hashModifier: String?",
                                "type": "property"
                              },
                              {
                                "title": "Encoding and decoding",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/encode(to:)",
                                "title": "func encode(to: any Encoder) throws",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/init(from:)",
                                "title": "init(from: any Decoder) throws",
                                "type": "init"
                              },
                              {
                                "title": "Hashing",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Comparing attributes",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/==(_:_:)",
                                "title": "static func == (Schema.Relationship, Schema.Relationship) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Debugging",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/debugdescription",
                                "title": "var debugDescription: String",
                                "type": "property"
                              },
                              {
                                "title": "Structures",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/==(_:_:)",
                                    "title": "static func == (Schema.Relationship.Option, Schema.Relationship.Option) -> Bool",
                                    "type": "op"
                                  },
                                  {
                                    "title": "Initializers",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/init(from:)",
                                    "title": "init(from: any Decoder) throws",
                                    "type": "init"
                                  },
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/debugdescription",
                                    "title": "var debugDescription: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/hashvalue",
                                    "title": "var hashValue: Int",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Instance Methods",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/encode(to:)",
                                    "title": "func encode(to: any Encoder) throws",
                                    "type": "method"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/hash(into:)",
                                    "title": "func hash(into: inout Hasher)",
                                    "type": "method"
                                  },
                                  {
                                    "title": "Type Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/option/unique",
                                    "title": "static var unique: Schema.Relationship.Option",
                                    "type": "property"
                                  },
                                  {
                                    "title": "Default Implementations",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "children": [
                                      {
                                        "title": "Operators",
                                        "type": "groupMarker"
                                      },
                                      {
                                        "path": "/documentation/swiftdata/schema/relationship/option/!=(_:_:)",
                                        "title": "static func != (Self, Self) -> Bool",
                                        "type": "op"
                                      }
                                    ],
                                    "path": "/documentation/swiftdata/schema/relationship/option/equatable-implementations",
                                    "title": "Equatable Implementations",
                                    "type": "collection"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/relationship/option",
                                "title": "Schema.Relationship.Option",
                                "type": "struct"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/isattribute",
                                "title": "var isAttribute: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/istransient",
                                "title": "var isTransient: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/isunique",
                                "title": "var isUnique: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/maximummodelcount",
                                "title": "var maximumModelCount: Int?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/relationship/minimummodelcount",
                                "title": "var minimumModelCount: Int?",
                                "type": "property"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/relationship/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/isoptional",
                                    "title": "var isOptional: Bool",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/relationship/isrelationship",
                                    "title": "var isRelationship: Bool",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/relationship/schemaproperty-implementations",
                                "title": "SchemaProperty Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/relationship",
                            "title": "Schema.Relationship",
                            "type": "class"
                          },
                          {
                            "title": "Internal",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Properties",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/isattribute",
                                    "title": "var isAttribute: Bool",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/isoptional",
                                    "title": "var isOptional: Bool",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/isrelationship",
                                    "title": "var isRelationship: Bool",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/istransient",
                                    "title": "var isTransient: Bool",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/isunique",
                                    "title": "var isUnique: Bool",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/name",
                                    "title": "var name: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/originalname",
                                    "title": "var originalName: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schemaproperty/valuetype",
                                    "title": "var valueType: any Any.Type",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schemaproperty",
                                "title": "SchemaProperty",
                                "type": "protocol"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Associated Types",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/relationshipcollection/persistentelement",
                                    "title": "PersistentElement",
                                    "type": "associatedtype"
                                  }
                                ],
                                "path": "/documentation/swiftdata/relationshipcollection",
                                "title": "RelationshipCollection",
                                "type": "protocol"
                              }
                            ],
                            "path": "/documentation/swiftdata/schemacomponentsinternal",
                            "title": "Internal symbols",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schemacomponents",
                        "title": "Schema components",
                        "type": "collection"
                      },
                      {
                        "title": "Accessing entities",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entities",
                        "title": "let entities: [Schema.Entity]",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entitiesbyname",
                        "title": "let entitiesByName: [String : Schema.Entity]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating an entity",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(_:)",
                            "title": "init(String)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(_:properties:)",
                            "title": "init(String, properties: any SchemaProperty...)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(_:subentities:properties:)",
                            "title": "init(String, subentities: Schema.Entity..., properties: any SchemaProperty...)",
                            "type": "init"
                          },
                          {
                            "title": "Assigning identity",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/name",
                            "title": "var name: String",
                            "type": "property"
                          },
                          {
                            "title": "Managing attributes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/attributes",
                            "title": "var attributes: Set<Schema.Attribute>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/attributesbyname",
                            "title": "var attributesByName: [String : Schema.Attribute]",
                            "type": "property"
                          },
                          {
                            "title": "Defining relationships",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/relationships",
                            "title": "var relationships: Set<Schema.Relationship>",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/relationshipsbyname",
                            "title": "var relationshipsByName: [String : Schema.Relationship]",
                            "type": "property"
                          },
                          {
                            "title": "Managing properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/properties",
                            "title": "var properties: [any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/inheritedproperties",
                            "title": "var inheritedProperties: [any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/inheritedpropertiesbyname",
                            "title": "var inheritedPropertiesByName: [String : any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/storedproperties",
                            "title": "var storedProperties: [any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/storedpropertiesbyname",
                            "title": "var storedPropertiesByName: [String : any SchemaProperty]",
                            "type": "property"
                          },
                          {
                            "title": "Applying constraints",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/uniquenessconstraints",
                            "title": "var uniquenessConstraints: [[String]]",
                            "type": "property"
                          },
                          {
                            "title": "Configuring the inheritance chain",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/superentity",
                            "title": "var superentity: Schema.Entity?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/superentityname",
                            "title": "var superentityName: String?",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/subentities",
                            "title": "var subentities: Set<Schema.Entity>",
                            "type": "property"
                          },
                          {
                            "title": "Encoding and decoding",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Hashing",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Comparing entities",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/==(_:_:)",
                            "title": "static func == (Schema.Entity, Schema.Entity) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/entity/indices",
                            "title": "var indices: [[String]]",
                            "type": "property"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/entity/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/entity/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/entity",
                        "title": "Schema.Entity",
                        "type": "class"
                      },
                      {
                        "title": "Accessing version details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/schemaencodingversion",
                        "title": "static let schemaEncodingVersion: Schema.Version",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/encodingversion",
                        "title": "let encodingVersion: Schema.Version",
                        "type": "property"
                      },
                      {
                        "title": "Saving and loading",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/save(to:)",
                        "title": "func save(to: URL) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/load(from:)",
                        "title": "static func load(from: URL) throws -> Schema",
                        "type": "method"
                      },
                      {
                        "title": "Encoding and decoding",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/encode(to:)",
                        "title": "func encode(to: any Encoder) throws",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/init(from:)",
                        "title": "init(from: any Decoder) throws",
                        "type": "init"
                      },
                      {
                        "title": "Hashing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      },
                      {
                        "title": "Comparing schemas",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/==(_:_:)",
                        "title": "static func == (Schema, Schema) -> Bool",
                        "type": "op"
                      },
                      {
                        "title": "Classes",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/==(_:_:)",
                            "title": "static func == (Schema.Index<T>, Schema.Index<T>) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/init(_:)-4i37e",
                            "title": "init(Schema.Index<T>.Types<T>...)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/init(_:)-527in",
                            "title": "init([PartialKeyPath<T>]...)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/indices",
                            "title": "let indices: [Schema.Index<T>.Types<T>]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/isunique",
                            "title": "var isUnique: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/name",
                            "title": "var name: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/originalname",
                            "title": "var originalName: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/valuetype",
                            "title": "var valueType: any Any.Type",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/index/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Enumerations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/==(_:_:)",
                                "title": "static func == (Schema.Index<T>.CodingKeys, Schema.Index<T>.CodingKeys) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/indices",
                                "title": "case indices",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/init(intvalue:)",
                                "title": "init?(intValue: Int)",
                                "type": "init"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/init(stringvalue:)",
                                "title": "init?(stringValue: String)",
                                "type": "init"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/intvalue",
                                "title": "var intValue: Int?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/stringvalue",
                                "title": "var stringValue: String",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/codingkeys/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/index/codingkeys/debugdescription",
                                    "title": "var debugDescription: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/index/codingkeys/description",
                                    "title": "var description: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/index/codingkeys/codingkey-implementations",
                                "title": "CodingKey Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/index/codingkeys/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/index/codingkeys/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/index/codingkeys",
                            "title": "Schema.Index.CodingKeys",
                            "type": "enum"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/types/binary(_:)",
                                "title": "case binary([PartialKeyPath<P>])",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/types/rtree(_:)",
                                "title": "case rtree([PartialKeyPath<P>])",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/index/types",
                            "title": "Schema.Index.Types",
                            "type": "enum"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/index/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/isattribute",
                                "title": "var isAttribute: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/isoptional",
                                "title": "var isOptional: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/isrelationship",
                                "title": "var isRelationship: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/index/istransient",
                                "title": "var isTransient: Bool",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/index/schemaproperty-implementations",
                            "title": "SchemaProperty Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/index",
                        "title": "Schema.Index",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/==(_:_:)",
                            "title": "static func == (Schema.Unique<T>, Schema.Unique<T>) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/init(_:)",
                            "title": "init([PartialKeyPath<T>]...)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/constraints",
                            "title": "let constraints: [[PartialKeyPath<T>]]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/isunique",
                            "title": "var isUnique: Bool",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/name",
                            "title": "var name: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/originalname",
                            "title": "var originalName: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/valuetype",
                            "title": "var valueType: any Any.Type",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/unique/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Enumerations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/==(_:_:)",
                                "title": "static func == (Schema.Unique<T>.CodingKeys, Schema.Unique<T>.CodingKeys) -> Bool",
                                "type": "op"
                              },
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/constraints",
                                "title": "case constraints",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/init(intvalue:)",
                                "title": "init?(intValue: Int)",
                                "type": "init"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/init(stringvalue:)",
                                "title": "init?(stringValue: String)",
                                "type": "init"
                              },
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/hashvalue",
                                "title": "var hashValue: Int",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/intvalue",
                                "title": "var intValue: Int?",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/stringvalue",
                                "title": "var stringValue: String",
                                "type": "property"
                              },
                              {
                                "title": "Instance Methods",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/hash(into:)",
                                "title": "func hash(into: inout Hasher)",
                                "type": "method"
                              },
                              {
                                "title": "Default Implementations",
                                "type": "groupMarker"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Instance Properties",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/unique/codingkeys/debugdescription",
                                    "title": "var debugDescription: String",
                                    "type": "property"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/unique/codingkeys/description",
                                    "title": "var description: String",
                                    "type": "property"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/codingkey-implementations",
                                "title": "CodingKey Implementations",
                                "type": "collection"
                              },
                              {
                                "children": [
                                  {
                                    "title": "Operators",
                                    "type": "groupMarker"
                                  },
                                  {
                                    "path": "/documentation/swiftdata/schema/unique/codingkeys/!=(_:_:)",
                                    "title": "static func != (Self, Self) -> Bool",
                                    "type": "op"
                                  }
                                ],
                                "path": "/documentation/swiftdata/schema/unique/codingkeys/equatable-implementations",
                                "title": "Equatable Implementations",
                                "type": "collection"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/unique/codingkeys",
                            "title": "Schema.Unique.CodingKeys",
                            "type": "enum"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/unique/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Instance Properties",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/isattribute",
                                "title": "var isAttribute: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/isoptional",
                                "title": "var isOptional: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/isrelationship",
                                "title": "var isRelationship: Bool",
                                "type": "property"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/unique/istransient",
                                "title": "var isTransient: Bool",
                                "type": "property"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/unique/schemaproperty-implementations",
                            "title": "SchemaProperty Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/unique",
                        "title": "Schema.Unique",
                        "type": "class"
                      },
                      {
                        "title": "Structures",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/propertymetadata/init(name:keypath:defaultvalue:metadata:)",
                            "title": "init(name: String, keypath: AnyKeyPath, defaultValue: Any?, metadata: (any SchemaProperty)?)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/propertymetadata",
                        "title": "Schema.PropertyMetadata",
                        "type": "struct"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/==(_:_:)",
                            "title": "static func == (Schema.Version, Schema.Version) -> Bool",
                            "type": "op"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/_(_:_:)",
                            "title": "static func < (Schema.Version, Schema.Version) -> Bool",
                            "type": "op"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/init(_:_:_:)",
                            "title": "init(Int, Int, Int)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/init(from:)",
                            "title": "init(from: any Decoder) throws",
                            "type": "init"
                          },
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/description",
                            "title": "var description: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/major",
                            "title": "let major: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/minor",
                            "title": "let minor: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/patch",
                            "title": "let patch: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/encode(to:)",
                            "title": "func encode(to: any Encoder) throws",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/version-swift.struct/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          },
                          {
                            "title": "Default Implementations",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/'...(_:)-1hasx",
                                "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/'...(_:)-7idu6",
                                "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/'...(_:_:)",
                                "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/'.._(_:)",
                                "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/'.._(_:_:)",
                                "title": "static func ..< (Self, Self) -> Range<Self>",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/_(_:_:)-1xq7t",
                                "title": "static func > (Self, Self) -> Bool",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/_=(_:_:)-3f007",
                                "title": "static func <= (Self, Self) -> Bool",
                                "type": "op"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/_=(_:_:)-58hat",
                                "title": "static func >= (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/version-swift.struct/comparable-implementations",
                            "title": "Comparable Implementations",
                            "type": "collection"
                          },
                          {
                            "children": [
                              {
                                "title": "Operators",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/swiftdata/schema/version-swift.struct/!=(_:_:)",
                                "title": "static func != (Self, Self) -> Bool",
                                "type": "op"
                              }
                            ],
                            "path": "/documentation/swiftdata/schema/version-swift.struct/equatable-implementations",
                            "title": "Equatable Implementations",
                            "type": "collection"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/version-swift.struct",
                        "title": "Schema.Version",
                        "type": "struct"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/version-swift.property",
                        "title": "let version: Schema.Version",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entity(for:)",
                        "title": "func entity<T>(for: T.Type) -> Schema.Entity?",
                        "type": "method"
                      },
                      {
                        "title": "Type Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schema/entityname(for:)",
                        "title": "static func entityName<T>(for: T.Type) -> String",
                        "type": "method"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/debugdescription",
                            "title": "var debugDescription: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/customdebugstringconvertible-implementations",
                        "title": "CustomDebugStringConvertible Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/schema/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/swiftdata/schema/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/swiftdata/schema",
                    "title": "Schema",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Managing versioned schemas",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schemamigrationplan/schemas",
                        "title": "static var schemas: [any VersionedSchema.Type]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Describing the version",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/versionedschema/versionidentifier",
                            "title": "static var versionIdentifier: Schema.Version",
                            "type": "property"
                          },
                          {
                            "title": "Specifying the included models",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/versionedschema/models",
                            "title": "static var models: [any PersistentModel.Type]",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/swiftdata/versionedschema",
                        "title": "VersionedSchema",
                        "type": "protocol"
                      },
                      {
                        "title": "Managing migration stages",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/schemamigrationplan/stages",
                        "title": "static var stages: [MigrationStage]",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Migration stages",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/swiftdata/migrationstage/lightweight(fromversion:toversion:)",
                            "title": "case lightweight(fromVersion: any VersionedSchema.Type, toVersion: any VersionedSchema.Type)",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/swiftdata/migrationstage/custom(fromversion:toversion:willmigrate:didmigrate:)",
                            "title": "case custom(fromVersion: any VersionedSchema.Type, toVersion: any VersionedSchema.Type, willMigrate: ((ModelContext) throws -> Void)?, didMigrate: ((ModelContext) throws -> Void)?)",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/swiftdata/migrationstage",
                        "title": "MigrationStage",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/swiftdata/schemamigrationplan",
                    "title": "SchemaMigrationPlan",
                    "type": "protocol"
                  },
                  {
                    "title": "Managing schema and configuration details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/schema",
                    "title": "let schema: Schema",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/configurations",
                    "title": "var configurations: Set<ModelConfiguration>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/migrationplan",
                    "title": "let migrationPlan: (any SchemaMigrationPlan.Type)?",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/maincontext",
                    "title": "var mainContext: ModelContext",
                    "type": "property"
                  },
                  {
                    "title": "Deleting the container",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/deletealldata()",
                    "title": "func deleteAllData()",
                    "type": "method"
                  },
                  {
                    "title": "Comparing model containers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/==(_:_:)",
                    "title": "static func == (ModelContainer, ModelContainer) -> Bool",
                    "type": "op"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/init(for:configurations:)-621ei",
                    "title": "convenience init(for: any PersistentModel.Type..., configurations: any DataStoreConfiguration...) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/init(for:configurations:)-93ifi",
                    "title": "init(for: Schema, configurations: [any DataStoreConfiguration]) throws",
                    "type": "init"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontainer/erase()",
                    "title": "func erase() throws",
                    "type": "method"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelcontainer/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelcontainer/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/swiftdata/modelcontainer",
                "title": "ModelContainer",
                "type": "class"
              },
              {
                "title": "Fetching models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/fetch(_:)",
                "title": "func fetch<T>(FetchDescriptor<T>) throws -> [T]",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/fetch(_:batchsize:)",
                "title": "func fetch<T>(FetchDescriptor<T>, batchSize: Int) throws -> FetchResultsCollection<T>",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/fetchcount(_:)",
                "title": "func fetchCount<T>(FetchDescriptor<T>) throws -> Int",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating a fetch descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/init(predicate:sortby:)",
                    "title": "init(predicate: Predicate<T>?, sortBy: [SortDescriptor<T>])",
                    "type": "init"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/predicate",
                    "title": "Predicate",
                    "type": "struct"
                  },
                  {
                    "external": true,
                    "path": "/documentation/foundation/sortdescriptor",
                    "title": "SortDescriptor",
                    "type": "struct"
                  },
                  {
                    "title": "Constraining the fetch",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/predicate",
                    "title": "var predicate: Predicate<T>?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/sortby",
                    "title": "var sortBy: [SortDescriptor<T>]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/fetchlimit",
                    "title": "var fetchLimit: Int?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/fetchoffset",
                    "title": "var fetchOffset: Int?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/includependingchanges",
                    "title": "var includePendingChanges: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the fetched attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/relationshipkeypathsforprefetching",
                    "title": "var relationshipKeyPathsForPrefetching: [PartialKeyPath<T>]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchdescriptor/propertiestofetch",
                    "title": "var propertiesToFetch: [PartialKeyPath<T>]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/fetchdescriptor",
                "title": "FetchDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Accessing a specific result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchresultscollection/subscript(_:)",
                    "title": "subscript(Int) -> Element",
                    "type": "subscript"
                  },
                  {
                    "title": "Accessing indices",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchresultscollection/startindex",
                    "title": "var startIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchresultscollection/endindex",
                    "title": "var endIndex: Int",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchresultscollection/index",
                    "title": "FetchResultsCollection.Index",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchresultscollection/indices",
                    "title": "FetchResultsCollection.Indices",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchresultscollection/iterator",
                    "title": "FetchResultsCollection.Iterator",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/swiftdata/fetchresultscollection/subsequence",
                    "title": "FetchResultsCollection.SubSequence",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/last",
                        "title": "var last: Self.Element?",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/difference(from:)",
                        "title": "func difference<C>(from: C) -> CollectionDifference<Self.Element>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/difference(from:by:)",
                        "title": "func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/droplast(_:)",
                        "title": "func dropLast(Int) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/firstrange(of:)-6588p",
                        "title": "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/formindex(before:)",
                        "title": "func formIndex(before: inout Self.Index)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/joined(separator:)-2z3ab",
                        "title": "func joined(separator: String) -> String",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/last(where:)",
                        "title": "func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/lastindex(of:)",
                        "title": "func lastIndex(of: Self.Element) -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/lastindex(where:)",
                        "title": "func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/reversed()",
                        "title": "func reversed() -> ReversedCollection<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/suffix(_:)",
                        "title": "func suffix(Int) -> Self.SubSequence",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/swiftdata/fetchresultscollection/bidirectionalcollection-implementations",
                    "title": "BidirectionalCollection Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/count",
                        "title": "var count: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/first",
                        "title": "var first: Self.Element?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/underestimatedcount",
                        "title": "var underestimatedCount: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/contains(_:)-6lxw8",
                        "title": "func contains<C>(C) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/drop(while:)",
                        "title": "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/dropfirst(_:)",
                        "title": "func dropFirst(Int) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/firstindex(of:)",
                        "title": "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/firstindex(where:)",
                        "title": "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/firstrange(of:)-8te4i",
                        "title": "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/formindex(_:offsetby:)",
                        "title": "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/formindex(_:offsetby:limitedby:)",
                        "title": "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/formindex(after:)",
                        "title": "func formIndex(after: inout Self.Index)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/index(of:)",
                        "title": "func index(of: Self.Element) -> Self.Index?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/indices(of:)",
                        "title": "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/indices(where:)",
                        "title": "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/makeiterator()",
                        "title": "func makeIterator() -> IndexingIterator<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/map(_:)-1zaqc",
                        "title": "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/prefix(_:)",
                        "title": "func prefix(Int) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/prefix(through:)",
                        "title": "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/prefix(upto:)",
                        "title": "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/prefix(while:)",
                        "title": "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/randomelement()",
                        "title": "func randomElement() -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/randomelement(using:)",
                        "title": "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/ranges(of:)",
                        "title": "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/removingsubranges(_:)",
                        "title": "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title": "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/split(separator:maxsplits:omittingemptysubsequences:)-2z2n1",
                        "title": "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/split(separator:maxsplits:omittingemptysubsequences:)-8moan",
                        "title": "func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/suffix(from:)",
                        "title": "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/trimmingprefix(_:)",
                        "title": "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/trimmingprefix(while:)",
                        "title": "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/swiftdata/fetchresultscollection/collection-implementations",
                    "title": "Collection Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/index(_:offsetby:limitedby:)",
                        "title": "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/swiftdata/fetchresultscollection/randomaccesscollection-implementations",
                    "title": "RandomAccessCollection Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/lazy",
                        "title": "var lazy: LazySequence<Self>",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/publisher",
                        "title": "var publisher: Publishers.Sequence<Self, Never>",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/allsatisfy(_:)",
                        "title": "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/compactmap(_:)",
                        "title": "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/compare(_:_:)",
                        "title": "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/contains(_:)-12nlj",
                        "title": "func contains(Self.Element) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/contains(where:)",
                        "title": "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/count(where:)",
                        "title": "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/elementsequal(_:)",
                        "title": "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/elementsequal(_:by:)",
                        "title": "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/enumerated()",
                        "title": "func enumerated() -> EnumeratedSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/filter(_:)",
                        "title": "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/first(where:)",
                        "title": "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/flatmap(_:)-6tleg",
                        "title": "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/flatmap(_:)-7f7wt",
                        "title": "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/foreach(_:)",
                        "title": "func forEach((Self.Element) throws -> Void) rethrows",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/formatted()",
                        "title": "func formatted() -> String",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/formatted(_:)",
                        "title": "func formatted<S>(S) -> S.FormatOutput",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/joined()",
                        "title": "func joined() -> FlattenSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/joined(separator:)-50kni",
                        "title": "func joined(separator: String) -> String",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/joined(separator:)-8ubfx",
                        "title": "func joined<Separator>(separator: Separator) -> JoinedSequence<Self>",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/lexicographicallyprecedes(_:)",
                        "title": "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/lexicographicallyprecedes(_:by:)",
                        "title": "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/map(_:)-8822u",
                        "title": "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/max()",
                        "title": "func max() -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/max(by:)",
                        "title": "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/min()",
                        "title": "func min() -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/min(by:)",
                        "title": "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/reduce(_:_:)",
                        "title": "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/reduce(into:_:)",
                        "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/shuffled()",
                        "title": "func shuffled() -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/shuffled(using:)",
                        "title": "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/sorted()",
                        "title": "func sorted() -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/sorted(by:)",
                        "title": "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/sorted(using:)-32qyr",
                        "title": "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/sorted(using:)-8nzif",
                        "title": "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/split(separator:maxsplits:omittingemptysubsequences:)-64guz",
                        "title": "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/starts(with:)",
                        "title": "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/starts(with:by:)",
                        "title": "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/fetchresultscollection/withcontiguousstorageifavailable(_:)",
                        "title": "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/swiftdata/fetchresultscollection/sequence-implementations",
                    "title": "Sequence Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/swiftdata/fetchresultscollection",
                "title": "FetchResultsCollection",
                "type": "struct"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/enumerate(_:batchsize:allowescapingmutations:block:)",
                "title": "func enumerate<T>(FetchDescriptor<T>, batchSize: Int, allowEscapingMutations: Bool, block: (T) throws -> Void) throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/model(for:)",
                "title": "func model(for: PersistentIdentifier) -> any PersistentModel",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/registeredmodel(for:)",
                "title": "func registeredModel<T>(for: PersistentIdentifier) -> T?",
                "type": "method"
              },
              {
                "title": "Inserting models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/insertedmodelsarray",
                "title": "var insertedModelsArray: [any PersistentModel]",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/insert(_:)",
                "title": "func insert<T>(T)",
                "type": "method"
              },
              {
                "title": "Modifying models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/haschanges",
                "title": "var hasChanges: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/changedmodelsarray",
                "title": "var changedModelsArray: [any PersistentModel]",
                "type": "property"
              },
              {
                "title": "Deleting models",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/deletedmodelsarray",
                "title": "var deletedModelsArray: [any PersistentModel]",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/delete(_:)",
                "title": "func delete<T>(T)",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/delete(model:where:includesubclasses:)",
                "title": "func delete<T>(model: T.Type, where: Predicate<T>?, includeSubclasses: Bool) throws",
                "type": "method"
              },
              {
                "title": "Persisting unsaved changes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/autosaveenabled",
                "title": "var autosaveEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/save()",
                "title": "func save() throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/transaction(block:)",
                "title": "func transaction(block: () throws -> Void) throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/rollback()",
                "title": "func rollback()",
                "type": "method"
              },
              {
                "title": "Fetching only persistent identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/fetchidentifiers(_:)",
                "title": "func fetchIdentifiers<T>(FetchDescriptor<T>) throws -> [PersistentIdentifier]",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/fetchidentifiers(_:batchsize:)",
                "title": "func fetchIdentifiers<T>(FetchDescriptor<T>, batchSize: Int) throws -> FetchResultsCollection<PersistentIdentifier>",
                "type": "method"
              },
              {
                "title": "Accessing the container",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/container",
                "title": "var container: ModelContainer",
                "type": "property"
              },
              {
                "title": "Performing undo and redo",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/processpendingchanges()",
                "title": "func processPendingChanges()",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/undomanager",
                "title": "var undoManager: UndoManager?",
                "type": "property"
              },
              {
                "title": "Registering for notifications",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/willsave",
                "title": "static let willSave: Notification.Name",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/didsave",
                "title": "static let didSave: Notification.Name",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessing notification keys",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/deletedidentifiers",
                    "title": "case deletedIdentifiers",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/insertedidentifiers",
                    "title": "case insertedIdentifiers",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/invalidatedallidentifiers",
                    "title": "case invalidatedAllIdentifiers",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/updatedidentifiers",
                    "title": "case updatedIdentifiers",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/querygeneration",
                    "title": "case queryGeneration",
                    "type": "case"
                  },
                  {
                    "title": "Creating a notification key",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/init(rawvalue:)",
                    "title": "init?(rawValue: String)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/rawvalue-swift.property",
                    "title": "var rawValue: String",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/rawvalue-swift.typealias",
                    "title": "ModelContext.NotificationKey.RawValue",
                    "type": "typealias"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelcontext/notificationkey/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelcontext/notificationkey/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/modelcontext/notificationkey/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/swiftdata/modelcontext/notificationkey/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/swiftdata/modelcontext/notificationkey",
                "title": "ModelContext.NotificationKey",
                "type": "enum"
              },
              {
                "title": "Comparing contexts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/==(_:_:)",
                "title": "static func == (ModelContext, ModelContext) -> Bool",
                "type": "op"
              },
              {
                "title": "Debugging contexts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/debugdescription",
                "title": "var debugDescription: String",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/author",
                "title": "var author: String?",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/editingstate",
                "title": "var editingState: EditingState",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/deletehistory(_:)",
                "title": "func deleteHistory<T>(HistoryDescriptor<T>) throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/modelcontext/fetchhistory(_:)",
                "title": "func fetchHistory<T>(HistoryDescriptor<T>) throws -> [T]",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelcontext/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/swiftdata/modelcontext/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/modelcontext",
            "title": "ModelContext",
            "type": "class"
          },
          {
            "path": "/documentation/swiftdata/fetching-and-filtering-time-based-model-changes",
            "title": "Fetching and filtering time-based model changes",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/deleting-persistent-data-from-your-app",
            "title": "Deleting persistent data from your app",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/swiftdata/reverting-data-changes-using-the-undo-manager",
            "title": "Reverting data changes using the undo manager",
            "type": "article"
          },
          {
            "path": "/documentation/swiftdata/syncing-model-data-across-a-persons-devices",
            "title": "Syncing model data across a person’s devices",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Model actors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/modelactor()",
                "title": "macro ModelActor()",
                "type": "macro"
              },
              {
                "children": [
                  {
                    "title": "Accessing the container and context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelactor/modelcontainer",
                    "title": "var modelContainer: ModelContainer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelactor/modelcontext",
                    "title": "var modelContext: ModelContext",
                    "type": "property"
                  },
                  {
                    "title": "Accessing the executors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelactor/modelexecutor",
                    "title": "var modelExecutor: any ModelExecutor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/modelactor/unownedexecutor",
                    "title": "var unownedExecutor: UnownedSerialExecutor",
                    "type": "property"
                  },
                  {
                    "title": "Accessing specific models",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelactor/subscript(_:as:)",
                    "title": "subscript<T>(PersistentIdentifier, as _: T.Type) -> T?",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/swiftdata/modelactor",
                "title": "ModelActor",
                "type": "protocol"
              },
              {
                "title": "Model executors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a model executor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultserialmodelexecutor/init(modelcontext:)",
                    "title": "init(modelContext: ModelContext)",
                    "type": "init"
                  },
                  {
                    "title": "Accessing the context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultserialmodelexecutor/modelcontext",
                    "title": "let modelContext: ModelContext",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/swiftdata/defaultserialmodelexecutor/asunownedserialexecutor()",
                        "title": "func asUnownedSerialExecutor() -> UnownedSerialExecutor",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/defaultserialmodelexecutor/assertisolated(_:file:line:)",
                        "title": "func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/defaultserialmodelexecutor/checkisolated()",
                        "title": "func checkIsolated()",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/defaultserialmodelexecutor/enqueue(_:)",
                        "title": "func enqueue(ExecutorJob)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/defaultserialmodelexecutor/issameexclusiveexecutioncontext(other:)",
                        "title": "func isSameExclusiveExecutionContext(other: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/swiftdata/defaultserialmodelexecutor/preconditionisolated(_:file:line:)",
                        "title": "func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/swiftdata/defaultserialmodelexecutor/serialexecutor-implementations",
                    "title": "SerialExecutor Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/swiftdata/defaultserialmodelexecutor",
                "title": "DefaultSerialModelExecutor",
                "type": "class"
              },
              {
                "path": "/documentation/swiftdata/serialmodelexecutor",
                "title": "SerialModelExecutor",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Accessing the context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/modelexecutor/modelcontext",
                    "title": "var modelContext: ModelContext",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/modelexecutor",
                "title": "ModelExecutor",
                "type": "protocol"
              }
            ],
            "path": "/documentation/swiftdata/concurrencysupport",
            "title": "Concurrency support",
            "type": "collection"
          },
          {
            "title": "Model fetch",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/filtering-and-sorting-persistent-data",
            "title": "Filtering and sorting persistent data",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/swiftdata/query()",
            "title": "macro Query()",
            "type": "macro"
          },
          {
            "children": [
              {
                "title": "Basic queries",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/query(animation:)",
                "title": "macro Query(animation: Animation)",
                "type": "macro"
              },
              {
                "path": "/documentation/swiftdata/query(transaction:)",
                "title": "macro Query(transaction: Transaction)",
                "type": "macro"
              },
              {
                "title": "Predicate-based queries",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/query(filter:sort:animation:)",
                "title": "macro Query<Element>(filter: Predicate<Element>?, sort: [SortDescriptor<Element>], animation: Animation)",
                "type": "macro"
              },
              {
                "path": "/documentation/swiftdata/query(filter:sort:order:animation:)-80h6f",
                "title": "macro Query<Value, Element>(filter: Predicate<Element>?, sort: KeyPath<Element, Value>, order: SortOrder, animation: Animation)",
                "type": "macro"
              },
              {
                "path": "/documentation/swiftdata/query(filter:sort:order:animation:)-pb15",
                "title": "macro Query<Value, Element>(filter: Predicate<Element>?, sort: KeyPath<Element, Value?>, order: SortOrder, animation: Animation)",
                "type": "macro"
              },
              {
                "path": "/documentation/swiftdata/query(filter:sort:transaction:)",
                "title": "macro Query<Element>(filter: Predicate<Element>?, sort: [SortDescriptor<Element>], transaction: Transaction?)",
                "type": "macro"
              },
              {
                "path": "/documentation/swiftdata/query(filter:sort:order:transaction:)-6kkiu",
                "title": "macro Query<Value, Element>(filter: Predicate<Element>?, sort: KeyPath<Element, Value>, order: SortOrder, transaction: Transaction?)",
                "type": "macro"
              },
              {
                "path": "/documentation/swiftdata/query(filter:sort:order:transaction:)-8tk8u",
                "title": "macro Query<Value, Element>(filter: Predicate<Element>?, sort: KeyPath<Element, Value?>, order: SortOrder, transaction: Transaction?)",
                "type": "macro"
              },
              {
                "title": "Descriptor-based queries",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/query(_:animation:)",
                "title": "macro Query<Element>(FetchDescriptor<Element>, animation: Animation)",
                "type": "macro"
              },
              {
                "path": "/documentation/swiftdata/query(_:transaction:)",
                "title": "macro Query<Element>(FetchDescriptor<Element>, transaction: Transaction?)",
                "type": "macro"
              }
            ],
            "path": "/documentation/swiftdata/additionalquerymacros",
            "title": "Additional query macros",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Creating a query",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/query/init(_:animation:)",
                "title": "init(FetchDescriptor<Element>, animation: Animation)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/query/init(filter:sort:animation:)",
                "title": "init(filter: Predicate<Element>?, sort: [SortDescriptor<Element>], animation: Animation)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/query/init(filter:sort:order:animation:)-1qfoj",
                "title": "init<Value>(filter: Predicate<Element>?, sort: KeyPath<Element, Value?>, order: SortOrder, animation: Animation)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/query/init(filter:sort:order:animation:)-3qovd",
                "title": "init<Value>(filter: Predicate<Element>?, sort: KeyPath<Element, Value>, order: SortOrder, animation: Animation)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/query/init(_:transaction:)",
                "title": "init(FetchDescriptor<Element>, transaction: Transaction?)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/query/init(filter:sort:transaction:)",
                "title": "init(filter: Predicate<Element>?, sort: [SortDescriptor<Element>], transaction: Transaction?)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/query/init(filter:sort:order:transaction:)-2bx9a",
                "title": "init<Value>(filter: Predicate<Element>?, sort: KeyPath<Element, Value>, order: SortOrder, transaction: Transaction?)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/query/init(filter:sort:order:transaction:)-8q7vs",
                "title": "init<Value>(filter: Predicate<Element>?, sort: KeyPath<Element, Value?>, order: SortOrder, transaction: Transaction?)",
                "type": "init"
              },
              {
                "title": "Getting query configuration",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/query/modelcontext",
                "title": "var modelContext: ModelContext",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/query/fetcherror",
                "title": "var fetchError: (any Error)?",
                "type": "property"
              },
              {
                "title": "Accessing the value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/query/wrappedvalue",
                "title": "var wrappedValue: Result",
                "type": "property"
              },
              {
                "title": "Updating the value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/query/update()",
                "title": "func update()",
                "type": "method"
              }
            ],
            "path": "/documentation/swiftdata/query",
            "title": "Query",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating a fetch descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/init(predicate:sortby:)",
                "title": "init(predicate: Predicate<T>?, sortBy: [SortDescriptor<T>])",
                "type": "init"
              },
              {
                "external": true,
                "path": "/documentation/foundation/predicate",
                "title": "Predicate",
                "type": "struct"
              },
              {
                "external": true,
                "path": "/documentation/foundation/sortdescriptor",
                "title": "SortDescriptor",
                "type": "struct"
              },
              {
                "title": "Constraining the fetch",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/predicate",
                "title": "var predicate: Predicate<T>?",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/sortby",
                "title": "var sortBy: [SortDescriptor<T>]",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/fetchlimit",
                "title": "var fetchLimit: Int?",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/fetchoffset",
                "title": "var fetchOffset: Int?",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/includependingchanges",
                "title": "var includePendingChanges: Bool",
                "type": "property"
              },
              {
                "title": "Specifying the fetched attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/relationshipkeypathsforprefetching",
                "title": "var relationshipKeyPathsForPrefetching: [PartialKeyPath<T>]",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/fetchdescriptor/propertiestofetch",
                "title": "var propertiesToFetch: [PartialKeyPath<T>]",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/fetchdescriptor",
            "title": "FetchDescriptor",
            "type": "struct"
          },
          {
            "title": "Model storage",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/swiftdata/maintaining-a-local-copy-of-server-data",
            "title": "Maintaining a local copy of server data",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Creating a data store",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/init(_:migrationplan:)",
                "title": "convenience init(ModelConfiguration, migrationPlan: (any SchemaMigrationPlan.Type)?) throws",
                "type": "init"
              },
              {
                "title": "Accessing store information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/configuration-swift.property",
                "title": "let configuration: ModelConfiguration",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/configuration-swift.typealias",
                "title": "DefaultStore.Configuration",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/identifier",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/name",
                "title": "let name: String",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/schema",
                "title": "let schema: Schema",
                "type": "property"
              },
              {
                "title": "Processing fetch requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/fetch(_:)",
                "title": "func fetch<T>(DataStoreFetchRequest<T>) throws -> DataStoreFetchResult<T, DefaultStore.Snapshot>",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/snapshot",
                "title": "DefaultStore.Snapshot",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultsnapshot/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultsnapshot/init(from:relatedbackingdatas:)",
                    "title": "init(from: any BackingData, relatedBackingDatas: inout [PersistentIdentifier : any BackingData])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultsnapshot/persistentidentifier",
                    "title": "let persistentIdentifier: PersistentIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultsnapshot/copy(persistentidentifier:remappedidentifiers:)",
                    "title": "func copy(persistentIdentifier: PersistentIdentifier, remappedIdentifiers: [PersistentIdentifier : PersistentIdentifier]?) -> DefaultSnapshot",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultsnapshot/encode(to:)",
                    "title": "func encode(to: any Encoder) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/swiftdata/defaultsnapshot",
                "title": "DefaultSnapshot",
                "type": "struct"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/fetchcount(_:)",
                "title": "func fetchCount<T>(DataStoreFetchRequest<T>) throws -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/fetchidentifiers(_:)",
                "title": "func fetchIdentifiers<T>(DataStoreFetchRequest<T>) throws -> [PersistentIdentifier]",
                "type": "method"
              },
              {
                "title": "Persisting model data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/save(_:)",
                "title": "func save(DataStoreSaveChangesRequest<DefaultStore.Snapshot>) throws -> DataStoreSaveChangesResult<DefaultStore.Snapshot>",
                "type": "method"
              },
              {
                "title": "Deleting persisted model data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/delete(_:)",
                "title": "func delete<T>(DataStoreBatchDeleteRequest<T>) throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/erase()",
                "title": "func erase() throws",
                "type": "method"
              },
              {
                "title": "Sharing cached data between model contexts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/initializestate(for:)",
                "title": "func initializeState(for: EditingState)",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/cachedsnapshots(for:editingstate:)",
                "title": "func cachedSnapshots(for: [PersistentIdentifier], editingState: EditingState) throws -> [PersistentIdentifier : DefaultStore.Snapshot]",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/invalidatestate(for:)",
                "title": "func invalidateState(for: EditingState)",
                "type": "method"
              },
              {
                "title": "Managing model change history",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/fetchhistory(_:)",
                "title": "func fetchHistory(HistoryDescriptor<DefaultHistoryTransaction>) throws -> [DefaultHistoryTransaction]",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/deletehistory(_:)",
                "title": "func deleteHistory(HistoryDescriptor<DefaultHistoryTransaction>) throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/historytype-swift.typealias",
                "title": "DefaultStore.HistoryType",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaultstore/tokentype",
                "title": "DefaultStore.TokenType",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultstore/fetchcount(_:)-10kqg",
                    "title": "func fetchCount<T>(DataStoreFetchRequest<T>) throws -> Int",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultstore/fetchidentifiers(_:)-7hajh",
                    "title": "func fetchIdentifiers<T>(DataStoreFetchRequest<T>) throws -> [PersistentIdentifier]",
                    "type": "method"
                  }
                ],
                "path": "/documentation/swiftdata/defaultstore/datastore-implementations",
                "title": "DataStore Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultstore/deletehistory(_:)",
                    "title": "func deleteHistory(HistoryDescriptor<DefaultHistoryTransaction>) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultstore/fetchhistory(_:)",
                    "title": "func fetchHistory(HistoryDescriptor<DefaultHistoryTransaction>) throws -> [DefaultHistoryTransaction]",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultstore/historytype-swift.typealias",
                    "title": "DefaultStore.HistoryType",
                    "type": "typealias"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaultstore/historytype-swift.type.property",
                    "title": "static var historyType: DefaultHistoryTransaction.Type",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/defaultstore/historyproviding-implementations",
                "title": "HistoryProviding Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/defaultstore",
            "title": "DefaultStore",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a data store",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastore/init(_:migrationplan:)",
                "title": "init(Self.Configuration, migrationPlan: (any SchemaMigrationPlan.Type)?) throws",
                "type": "init"
              },
              {
                "title": "Accessing store information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastore/configuration-swift.property",
                "title": "var configuration: Self.Configuration",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/datastore/configuration-swift.associatedtype",
                "title": "Configuration",
                "type": "associatedtype"
              },
              {
                "children": [
                  {
                    "title": "Associated Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoreconfiguration/store",
                    "title": "Store",
                    "type": "associatedtype"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoreconfiguration/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoreconfiguration/schema",
                    "title": "var schema: Schema?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoreconfiguration/validate()",
                    "title": "func validate() throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/swiftdata/datastoreconfiguration",
                "title": "DataStoreConfiguration",
                "type": "protocol"
              },
              {
                "path": "/documentation/swiftdata/datastore/identifier",
                "title": "var identifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/datastore/schema",
                "title": "var schema: Schema",
                "type": "property"
              },
              {
                "title": "Processing fetch requests",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastore/fetch(_:)",
                "title": "func fetch<T>(DataStoreFetchRequest<T>) throws -> DataStoreFetchResult<T, Self.Snapshot>",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorefetchrequest/descriptor",
                    "title": "let descriptor: FetchDescriptor<T>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorefetchrequest/editingstate",
                    "title": "let editingState: EditingState",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/datastorefetchrequest",
                "title": "DataStoreFetchRequest",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorefetchresult/init(descriptor:fetchedsnapshots:relatedsnapshots:)",
                    "title": "init(descriptor: FetchDescriptor<ModelType>, fetchedSnapshots: [SnapshotType], relatedSnapshots: [PersistentIdentifier : SnapshotType])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorefetchresult/descriptor",
                    "title": "let descriptor: FetchDescriptor<ModelType>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorefetchresult/fetchedsnapshots",
                    "title": "let fetchedSnapshots: [SnapshotType]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorefetchresult/relatedsnapshots",
                    "title": "let relatedSnapshots: [PersistentIdentifier : SnapshotType]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/datastorefetchresult",
                "title": "DataStoreFetchResult",
                "type": "struct"
              },
              {
                "path": "/documentation/swiftdata/datastore/snapshot",
                "title": "Snapshot",
                "type": "associatedtype"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresnapshot/init(from:relatedbackingdatas:)",
                    "title": "init(from: any BackingData, relatedBackingDatas: inout [PersistentIdentifier : any BackingData])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresnapshot/persistentidentifier",
                    "title": "var persistentIdentifier: PersistentIdentifier",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresnapshot/copy(persistentidentifier:remappedidentifiers:)",
                    "title": "func copy(persistentIdentifier: PersistentIdentifier, remappedIdentifiers: [PersistentIdentifier : PersistentIdentifier]?) -> Self",
                    "type": "method"
                  }
                ],
                "path": "/documentation/swiftdata/datastoresnapshot",
                "title": "DataStoreSnapshot",
                "type": "protocol"
              },
              {
                "path": "/documentation/swiftdata/datastoresnapshotvalue",
                "title": "DataStoreSnapshotValue",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/datastore/fetchcount(_:)",
                "title": "func fetchCount<T>(DataStoreFetchRequest<T>) throws -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/datastore/fetchidentifiers(_:)",
                "title": "func fetchIdentifiers<T>(DataStoreFetchRequest<T>) throws -> [PersistentIdentifier]",
                "type": "method"
              },
              {
                "title": "Persisting model data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastore/save(_:)",
                "title": "func save(DataStoreSaveChangesRequest<Self.Snapshot>) throws -> DataStoreSaveChangesResult<Self.Snapshot>",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesrequest/deleted",
                    "title": "let deleted: [SnapshotType]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesrequest/editingstate",
                    "title": "let editingState: EditingState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesrequest/inserted",
                    "title": "let inserted: [SnapshotType]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesrequest/updated",
                    "title": "let updated: [SnapshotType]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/datastoresavechangesrequest",
                "title": "DataStoreSaveChangesRequest",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesresult/init(for:remappedidentifiers:snapshotstoreregister:)",
                    "title": "init(for: String, remappedIdentifiers: [PersistentIdentifier : PersistentIdentifier], snapshotsToReregister: [PersistentIdentifier : T])",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesresult/remappedidentifiers",
                    "title": "let remappedIdentifiers: [PersistentIdentifier : PersistentIdentifier]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesresult/snapshotstoreregister",
                    "title": "let snapshotsToReregister: [PersistentIdentifier : T]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresavechangesresult/storeidentifier",
                    "title": "let storeIdentifier: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/datastoresavechangesresult",
                "title": "DataStoreSaveChangesResult",
                "type": "class"
              },
              {
                "title": "Removing all persisted model data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastore/erase()",
                "title": "func erase() throws",
                "type": "method"
              },
              {
                "title": "Sharing cached data between model contexts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastore/initializestate(for:)",
                "title": "func initializeState(for: EditingState)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/editingstate/author",
                    "title": "var author: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/editingstate/id-swift.property",
                    "title": "let id: UUID",
                    "type": "property"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/editingstate/id-swift.typealias",
                    "title": "EditingState.ID",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/swiftdata/editingstate",
                "title": "EditingState",
                "type": "struct"
              },
              {
                "path": "/documentation/swiftdata/datastore/cachedsnapshots(for:editingstate:)",
                "title": "func cachedSnapshots(for: [PersistentIdentifier], editingState: EditingState) throws -> [PersistentIdentifier : Self.Snapshot]",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/datastore/invalidatestate(for:)",
                "title": "func invalidateState(for: EditingState)",
                "type": "method"
              }
            ],
            "path": "/documentation/swiftdata/datastore",
            "title": "DataStore",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Deleting persisted model data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastorebatching/delete(_:)",
                "title": "func delete<T>(DataStoreBatchDeleteRequest<T>) throws",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorebatchdeleterequest/editingstate",
                    "title": "let editingState: EditingState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastorebatchdeleterequest/predicate",
                    "title": "let predicate: Predicate<T>?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/datastorebatchdeleterequest",
                "title": "DataStoreBatchDeleteRequest",
                "type": "struct"
              }
            ],
            "path": "/documentation/swiftdata/datastorebatching",
            "title": "DataStoreBatching",
            "type": "protocol"
          },
          {
            "external": true,
            "path": "/documentation/swiftui/building-a-document-based-app-using-swiftdata",
            "title": "Building a document-based app using SwiftData",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/swiftdata/modeldocument",
            "title": "ModelDocument",
            "type": "struct"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Fetch errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/includependingchangeswithbatchsize",
                "title": "static let includePendingChangesWithBatchSize: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/sortingpendingchangeswithidentifiers",
                "title": "static let sortingPendingChangesWithIdentifiers: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/unsupportedkeypath",
                "title": "static let unsupportedKeyPath: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/unsupportedpredicate",
                "title": "static let unsupportedPredicate: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/unsupportedsortdescriptor",
                "title": "static let unsupportedSortDescriptor: SwiftDataError",
                "type": "property"
              },
              {
                "title": "Configuration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/configurationfilenamecontainsinvalidcharacters",
                "title": "static let configurationFileNameContainsInvalidCharacters: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/configurationfilenametoolong",
                "title": "static let configurationFileNameTooLong: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/configurationschemanotfoundincontainerschema",
                "title": "static let configurationSchemaNotFoundInContainerSchema: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/duplicateconfiguration",
                "title": "static let duplicateConfiguration: SwiftDataError",
                "type": "property"
              },
              {
                "title": "Container errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/loadissuemodelcontainer",
                "title": "static let loadIssueModelContainer: SwiftDataError",
                "type": "property"
              },
              {
                "title": "Context errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/modelvalidationfailure",
                "title": "static let modelValidationFailure: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/missingmodelcontext",
                "title": "static let missingModelContext: SwiftDataError",
                "type": "property"
              },
              {
                "title": "Migration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/backwardmigration",
                "title": "static let backwardMigration: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/unknownschema",
                "title": "static let unknownSchema: SwiftDataError",
                "type": "property"
              },
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/==(_:_:)",
                "title": "static func == (SwiftDataError, SwiftDataError) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/~=(_:_:)",
                "title": "static func ~= (SwiftDataError, any Error) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/historytokenexpired",
                "title": "static let historyTokenExpired: SwiftDataError",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/swiftdataerror/invalidtransactionfetchrequest",
                "title": "static let invalidTransactionFetchRequest: SwiftDataError",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/swiftdataerror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/swiftdata/swiftdataerror/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/swiftdataerror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/swiftdataerror/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/swiftdataerror",
            "title": "SwiftDataError",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Getting error codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastoreerror/invalidpredicate",
                "title": "case invalidPredicate",
                "type": "case"
              },
              {
                "path": "/documentation/swiftdata/datastoreerror/preferinmemoryfilter",
                "title": "case preferInMemoryFilter",
                "type": "case"
              },
              {
                "path": "/documentation/swiftdata/datastoreerror/preferinmemorysort",
                "title": "case preferInMemorySort",
                "type": "case"
              },
              {
                "path": "/documentation/swiftdata/datastoreerror/unsupportedfeature",
                "title": "case unsupportedFeature",
                "type": "case"
              },
              {
                "title": "Comparing errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastoreerror/==(_:_:)",
                "title": "static func == (DataStoreError, DataStoreError) -> Bool",
                "type": "op"
              },
              {
                "title": "Hashing errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastoreerror/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/datastoreerror/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoreerror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/swiftdata/datastoreerror/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoreerror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/datastoreerror/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/datastoreerror",
            "title": "DataStoreError",
            "type": "enum"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historydelete/changeidentifier-swift.associatedtype",
                "title": "ChangeIdentifier",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/swiftdata/historydelete/model",
                "title": "Model",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/swiftdata/historydelete/transactionidentifier-swift.associatedtype",
                "title": "TransactionIdentifier",
                "type": "associatedtype"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historydelete/changeidentifier-swift.property",
                "title": "var changeIdentifier: Self.ChangeIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historydelete/changedpersistentidentifier",
                "title": "var changedPersistentIdentifier: PersistentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historydelete/tombstone",
                "title": "var tombstone: HistoryTombstone<Self.Model>",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historydelete/transactionidentifier-swift.property",
                "title": "var transactionIdentifier: Self.TransactionIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/historydelete",
            "title": "HistoryDelete",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyinsert/changeidentifier-swift.associatedtype",
                "title": "ChangeIdentifier",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/swiftdata/historyinsert/model",
                "title": "Model",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/swiftdata/historyinsert/transactionidentifier-swift.associatedtype",
                "title": "TransactionIdentifier",
                "type": "associatedtype"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyinsert/changeidentifier-swift.property",
                "title": "var changeIdentifier: Self.ChangeIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historyinsert/changedpersistentidentifier",
                "title": "var changedPersistentIdentifier: PersistentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historyinsert/transactionidentifier-swift.property",
                "title": "var transactionIdentifier: Self.TransactionIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/historyinsert",
            "title": "HistoryInsert",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyproviding/historytype-swift.associatedtype",
                "title": "HistoryType",
                "type": "associatedtype"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyproviding/deletehistory(_:)",
                "title": "func deleteHistory(HistoryDescriptor<Self.HistoryType>) throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/historyproviding/fetchhistory(_:)",
                "title": "func fetchHistory(HistoryDescriptor<Self.HistoryType>) throws -> [Self.HistoryType]",
                "type": "method"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyproviding/historytype-swift.type.property",
                "title": "static var historyType: Self.HistoryType.Type",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/historyproviding",
            "title": "HistoryProviding",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historytoken/tokentype",
                "title": "TokenType",
                "type": "associatedtype"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historytoken/tokenvalue",
                "title": "var tokenValue: Self.TokenType?",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/historytoken",
            "title": "HistoryToken",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/tokentype",
                "title": "TokenType",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/transactionidentifier-swift.associatedtype",
                "title": "TransactionIdentifier",
                "type": "associatedtype"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/author",
                "title": "var author: String?",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/changes",
                "title": "var changes: [HistoryChange]",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/storeidentifier",
                "title": "var storeIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/timestamp",
                "title": "var timestamp: Date",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/token",
                "title": "var token: Self.TokenType",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historytransaction/transactionidentifier-swift.property",
                "title": "var transactionIdentifier: Self.TransactionIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/historytransaction",
            "title": "HistoryTransaction",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/changeidentifier-swift.associatedtype",
                "title": "ChangeIdentifier",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/model",
                "title": "Model",
                "type": "associatedtype"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/transactionidentifier-swift.associatedtype",
                "title": "TransactionIdentifier",
                "type": "associatedtype"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/changeidentifier-swift.property",
                "title": "var changeIdentifier: Self.ChangeIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/changedpersistentidentifier",
                "title": "var changedPersistentIdentifier: PersistentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/transactionidentifier-swift.property",
                "title": "var transactionIdentifier: Self.TransactionIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/updatedattributes",
                "title": "var updatedAttributes: [any PartialKeyPath<Self.Model> & Sendable]",
                "type": "property"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historyupdate/propertyupdate",
                "title": "HistoryUpdate.PropertyUpdate",
                "type": "typealias"
              }
            ],
            "path": "/documentation/swiftdata/historyupdate",
            "title": "HistoryUpdate",
            "type": "protocol"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/==(_:_:)",
                "title": "static func == (DefaultHistoryDelete<Model>, DefaultHistoryDelete<Model>) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/changeidentifier-swift.property",
                "title": "let changeIdentifier: DefaultHistoryDelete<Model>.ChangeIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/changedpersistentidentifier",
                "title": "let changedPersistentIdentifier: PersistentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/tombstone",
                "title": "let tombstone: HistoryTombstone<Model>",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/transactionidentifier-swift.property",
                "title": "let transactionIdentifier: DefaultHistoryDelete<Model>.TransactionIdentifier",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/changeidentifier-swift.typealias",
                "title": "DefaultHistoryDelete.ChangeIdentifier",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorydelete/transactionidentifier-swift.typealias",
                "title": "DefaultHistoryDelete.TransactionIdentifier",
                "type": "typealias"
              }
            ],
            "path": "/documentation/swiftdata/defaulthistorydelete",
            "title": "DefaultHistoryDelete",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryinsert/==(_:_:)",
                "title": "static func == (DefaultHistoryInsert<Model>, DefaultHistoryInsert<Model>) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryinsert/changeidentifier-swift.property",
                "title": "let changeIdentifier: DefaultHistoryInsert<Model>.ChangeIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryinsert/changedpersistentidentifier",
                "title": "let changedPersistentIdentifier: PersistentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryinsert/transactionidentifier-swift.property",
                "title": "let transactionIdentifier: DefaultHistoryInsert<Model>.TransactionIdentifier",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryinsert/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryinsert/changeidentifier-swift.typealias",
                "title": "DefaultHistoryInsert.ChangeIdentifier",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryinsert/transactionidentifier-swift.typealias",
                "title": "DefaultHistoryInsert.TransactionIdentifier",
                "type": "typealias"
              }
            ],
            "path": "/documentation/swiftdata/defaulthistoryinsert",
            "title": "DefaultHistoryInsert",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/==(_:_:)",
                "title": "static func == (DefaultHistoryToken, DefaultHistoryToken) -> Bool",
                "type": "op"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/_(_:_:)",
                "title": "static func < (DefaultHistoryToken, DefaultHistoryToken) -> Bool",
                "type": "op"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/id-swift.property",
                "title": "var id: Int",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/tokenvalue",
                "title": "var tokenValue: DefaultHistoryToken.TokenType?",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/encode(to:)",
                "title": "func encode(to: any Encoder) throws",
                "type": "method"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/id-swift.typealias",
                "title": "DefaultHistoryToken.ID",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytoken/tokentype",
                "title": "DefaultHistoryToken.TokenType",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/'...(_:)-2yntd",
                    "title": "static func ... (Self) -> PartialRangeThrough<Self>",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/'...(_:)-xp7q",
                    "title": "static func ... (Self) -> PartialRangeFrom<Self>",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/'...(_:_:)",
                    "title": "static func ... (Self, Self) -> ClosedRange<Self>",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/'.._(_:)",
                    "title": "static func ..< (Self) -> PartialRangeUpTo<Self>",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/'.._(_:_:)",
                    "title": "static func ..< (Self, Self) -> Range<Self>",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/_(_:_:)-7jp3",
                    "title": "static func > (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/_=(_:_:)-1qvp8",
                    "title": "static func <= (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/_=(_:_:)-5mubf",
                    "title": "static func >= (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/swiftdata/defaulthistorytoken/comparable-implementations",
                "title": "Comparable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytoken/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/swiftdata/defaulthistorytoken/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/defaulthistorytoken",
            "title": "DefaultHistoryToken",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/==(_:_:)",
                "title": "static func == (DefaultHistoryTransaction, DefaultHistoryTransaction) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/author",
                "title": "let author: String?",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/bundleidentifier",
                "title": "let bundleIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/changes",
                "title": "let changes: [HistoryChange]",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/hashvalue",
                "title": "var hashValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/id-swift.property",
                "title": "var id: Int64",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/processidentifier",
                "title": "let processIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/storeidentifier",
                "title": "let storeIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/timestamp",
                "title": "let timestamp: Date",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/token",
                "title": "let token: DefaultHistoryTransaction.TokenType",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/transactionidentifier-swift.property",
                "title": "let transactionIdentifier: DefaultHistoryTransaction.TransactionIdentifier",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/id-swift.typealias",
                "title": "DefaultHistoryTransaction.ID",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/tokentype",
                "title": "DefaultHistoryTransaction.TokenType",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaulthistorytransaction/transactionidentifier-swift.typealias",
                "title": "DefaultHistoryTransaction.TransactionIdentifier",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/defaulthistorytransaction/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/swiftdata/defaulthistorytransaction/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/defaulthistorytransaction",
            "title": "DefaultHistoryTransaction",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Operators",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/==(_:_:)",
                "title": "static func == (DefaultHistoryUpdate<Model>, DefaultHistoryUpdate<Model>) -> Bool",
                "type": "op"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/changeidentifier-swift.property",
                "title": "let changeIdentifier: DefaultHistoryUpdate<Model>.ChangeIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/changedpersistentidentifier",
                "title": "let changedPersistentIdentifier: PersistentIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/transactionidentifier-swift.property",
                "title": "let transactionIdentifier: DefaultHistoryUpdate<Model>.TransactionIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/updatedattributes",
                "title": "let updatedAttributes: [any PartialKeyPath<Model> & Sendable]",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/hash(into:)",
                "title": "func hash(into: inout Hasher)",
                "type": "method"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/changeidentifier-swift.typealias",
                "title": "DefaultHistoryUpdate.ChangeIdentifier",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/propertyupdate",
                "title": "DefaultHistoryUpdate.PropertyUpdate",
                "type": "typealias"
              },
              {
                "path": "/documentation/swiftdata/defaulthistoryupdate/transactionidentifier-swift.typealias",
                "title": "DefaultHistoryUpdate.TransactionIdentifier",
                "type": "typealias"
              }
            ],
            "path": "/documentation/swiftdata/defaulthistoryupdate",
            "title": "DefaultHistoryUpdate",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historydescriptor/init(predicate:)",
                "title": "init(predicate: Predicate<TransactionType>?)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historydescriptor/fetchlimit",
                "title": "var fetchLimit: UInt64",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/historydescriptor/predicate",
                "title": "var predicate: Predicate<TransactionType>?",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/historydescriptor",
            "title": "HistoryDescriptor",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/iterator/next()",
                    "title": "func next() -> Any?",
                    "type": "method"
                  },
                  {
                    "title": "Type Aliases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/iterator/element",
                    "title": "HistoryTombstone.Iterator.Element",
                    "type": "typealias"
                  }
                ],
                "path": "/documentation/swiftdata/historytombstone/iterator",
                "title": "HistoryTombstone.Iterator",
                "type": "struct"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historytombstone/makeiterator()",
                "title": "func makeIterator() -> HistoryTombstone<Model>.Iterator",
                "type": "method"
              },
              {
                "title": "Subscripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historytombstone/subscript(_:)",
                "title": "subscript(PartialKeyPath<Model>) -> (any Sendable)?",
                "type": "subscript"
              },
              {
                "title": "Type Aliases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historytombstone/element",
                "title": "HistoryTombstone.Element",
                "type": "typealias"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/lazy",
                    "title": "var lazy: LazySequence<Self>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/publisher",
                    "title": "var publisher: Publishers.Sequence<Self, Never>",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/underestimatedcount",
                    "title": "var underestimatedCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/allsatisfy(_:)",
                    "title": "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/compactmap(_:)",
                    "title": "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/compare(_:_:)",
                    "title": "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/contains(where:)",
                    "title": "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/count(where:)",
                    "title": "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/drop(while:)",
                    "title": "func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/dropfirst(_:)",
                    "title": "func dropFirst(Int) -> DropFirstSequence<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/droplast(_:)",
                    "title": "func dropLast(Int) -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/elementsequal(_:by:)",
                    "title": "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/enumerated()",
                    "title": "func enumerated() -> EnumeratedSequence<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/filter(_:)",
                    "title": "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/first(where:)",
                    "title": "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/flatmap(_:)-2m3wx",
                    "title": "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/flatmap(_:)-5e0q5",
                    "title": "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/foreach(_:)",
                    "title": "func forEach((Self.Element) throws -> Void) rethrows",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/formatted(_:)",
                    "title": "func formatted<S>(S) -> S.FormatOutput",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/lexicographicallyprecedes(_:by:)",
                    "title": "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/map(_:)",
                    "title": "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/max(by:)",
                    "title": "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/min(by:)",
                    "title": "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/prefix(_:)",
                    "title": "func prefix(Int) -> PrefixSequence<Self>",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/prefix(while:)",
                    "title": "func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/reduce(_:_:)",
                    "title": "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/reduce(into:_:)",
                    "title": "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/reversed()",
                    "title": "func reversed() -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/shuffled()",
                    "title": "func shuffled() -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/shuffled(using:)",
                    "title": "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/sorted(by:)",
                    "title": "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/sorted(using:)-49chl",
                    "title": "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/sorted(using:)-65ro1",
                    "title": "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title": "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/starts(with:by:)",
                    "title": "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/suffix(_:)",
                    "title": "func suffix(Int) -> [Self.Element]",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/swiftdata/historytombstone/withcontiguousstorageifavailable(_:)",
                    "title": "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/swiftdata/historytombstone/sequence-implementations",
                "title": "Sequence Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/historytombstone",
            "title": "HistoryTombstone",
            "type": "struct"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastoresnapshotcodingkey/modeledproperty(_:)",
                "title": "case modeledProperty(String)",
                "type": "case"
              },
              {
                "path": "/documentation/swiftdata/datastoresnapshotcodingkey/persistentidentifier",
                "title": "case persistentIdentifier",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastoresnapshotcodingkey/init(intvalue:)",
                "title": "init?(intValue: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/swiftdata/datastoresnapshotcodingkey/init(stringvalue:)",
                "title": "init?(stringValue: String)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/datastoresnapshotcodingkey/intvalue",
                "title": "var intValue: Int?",
                "type": "property"
              },
              {
                "path": "/documentation/swiftdata/datastoresnapshotcodingkey/stringvalue",
                "title": "var stringValue: String",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresnapshotcodingkey/debugdescription",
                    "title": "var debugDescription: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/swiftdata/datastoresnapshotcodingkey/description",
                    "title": "var description: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/swiftdata/datastoresnapshotcodingkey/codingkey-implementations",
                "title": "CodingKey Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/swiftdata/datastoresnapshotcodingkey",
            "title": "DataStoreSnapshotCodingKey",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historychange/delete(_:)",
                "title": "case delete(any HistoryDelete)",
                "type": "case"
              },
              {
                "path": "/documentation/swiftdata/historychange/insert(_:)",
                "title": "case insert(any HistoryInsert)",
                "type": "case"
              },
              {
                "path": "/documentation/swiftdata/historychange/update(_:)",
                "title": "case update(any HistoryUpdate)",
                "type": "case"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/swiftdata/historychange/changedpersistentidentifier",
                "title": "var changedPersistentIdentifier: PersistentIdentifier",
                "type": "property"
              }
            ],
            "path": "/documentation/swiftdata/historychange",
            "title": "HistoryChange",
            "type": "enum"
          }
        ],
        "path": "/documentation/swiftdata",
        "title": "SwiftData",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
