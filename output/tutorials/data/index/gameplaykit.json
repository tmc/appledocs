{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Entities and Components",
            "type": "groupMarker"
          },
          {
            "title": "State Machines",
            "type": "groupMarker"
          },
          {
            "title": "Spatial Partitioning",
            "type": "groupMarker"
          },
          {
            "title": "Strategists",
            "type": "groupMarker"
          },
          {
            "title": "Decision Trees",
            "type": "groupMarker"
          },
          {
            "title": "Pathfinding",
            "type": "groupMarker"
          },
          {
            "title": "Agents, Goals, and Behaviors",
            "type": "groupMarker"
          },
          {
            "title": "Obstacles",
            "type": "groupMarker"
          },
          {
            "title": "Procedural Noise",
            "type": "groupMarker"
          },
          {
            "title": "Randomization",
            "type": "groupMarker"
          },
          {
            "title": "Rule Systems",
            "type": "groupMarker"
          },
          {
            "title": "Xcode and SpriteKit Integration",
            "type": "groupMarker"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "title": "Macros",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-constants",
            "title": "GameplayKit Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-structures",
            "title": "GameplayKit Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-enumerations",
            "title": "GameplayKit Enumerations",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/gameplaykit",
        "title": "GameplayKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Entities and Components",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating an Entity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/entity",
                "title": "+ entity",
                "type": "method"
              },
              {
                "title": "Managing an Entityâ€™s List of Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/components",
                "title": "components",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/componentforclass:",
                "title": "- componentForClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/addcomponent(_:)",
                "title": "- addComponent:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/removecomponentforclass:",
                "title": "- removeComponentForClass:",
                "type": "method"
              },
              {
                "title": "Performing Periodic Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/update(deltatime:)",
                "title": "- updateWithDeltaTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkentity",
            "title": "GKEntity",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Performing Periodic Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/update(deltatime:)",
                "title": "- updateWithDeltaTime:",
                "type": "method"
              },
              {
                "title": "Working with Entities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/entity",
                "title": "entity",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/didaddtoentity()",
                "title": "- didAddToEntity",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/willremovefromentity()",
                "title": "- willRemoveFromEntity",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkcomponent",
            "title": "GKComponent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Component System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/init(componentclass:)",
                "title": "- initWithComponentClass:",
                "type": "method"
              },
              {
                "title": "Managing a List of Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/componentclass",
                "title": "componentClass",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/components",
                "title": "components",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/addcomponent(_:)",
                "title": "- addComponent:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/addcomponent(foundin:)",
                "title": "- addComponentWithEntity:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/removecomponent(_:)",
                "title": "- removeComponent:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/removecomponent(foundin:)",
                "title": "- removeComponentWithEntity:",
                "type": "method"
              },
              {
                "title": "Performing Periodic Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/update(deltatime:)",
                "title": "- updateWithDeltaTime:",
                "type": "method"
              },
              {
                "title": "Accessing Components With Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/subscript(_:)",
                "title": "- objectAtIndexedSubscript:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/classforgenericargument(at:)",
                "title": "- classForGenericArgumentAtIndex:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkcomponentsystem",
            "title": "GKComponentSystem",
            "type": "class"
          },
          {
            "title": "State Machines",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/state",
                "title": "+ state",
                "type": "method"
              },
              {
                "title": "Working with State Machines",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/statemachine",
                "title": "stateMachine",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/isvalidnextstate(_:)",
                "title": "- isValidNextState:",
                "type": "method"
              },
              {
                "title": "Handling State Transitions and Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/didenter(from:)",
                "title": "- didEnterWithPreviousState:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/update(deltatime:)",
                "title": "- updateWithDeltaTime:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/willexit(to:)",
                "title": "- willExitWithNextState:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkstate",
            "title": "GKState",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a State Machine",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/init(states:)",
                "title": "- initWithStates:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/statemachinewithstates:",
                "title": "+ stateMachineWithStates:",
                "type": "method"
              },
              {
                "title": "Working with States",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/currentstate",
                "title": "currentState",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/canenterstate(_:)",
                "title": "- canEnterState:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/enter(_:)",
                "title": "- enterState:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/stateforclass:",
                "title": "- stateForClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/update(deltatime:)",
                "title": "- updateWithDeltaTime:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkstatemachine",
            "title": "GKStateMachine",
            "type": "class"
          },
          {
            "title": "Spatial Partitioning",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Quadtree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/init(boundingquad:minimumcellsize:)",
                "title": "- initWithBoundingQuad:minimumCellSize:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/quadtreewithboundingquad:minimumcellsize:",
                "title": "+ quadtreeWithBoundingQuad:minimumCellSize:",
                "type": "method"
              },
              {
                "title": "Adding and Removing Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/add(_:at:)",
                "title": "- addElement:withPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/add(_:in:)",
                "title": "- addElement:withQuad:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/remove(_:using:)",
                "title": "- removeElement:withNode:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/remove(_:)",
                "title": "- removeElement:",
                "type": "method"
              },
              {
                "title": "Searching for Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/elements(at:)",
                "title": "- elementsAtPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/elements(in:)",
                "title": "- elementsInQuad:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmax",
                    "title": "quadMax",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmin",
                    "title": "quadMin",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkquad",
                "title": "GKQuad",
                "type": "struct"
              }
            ],
            "path": "/documentation/gameplaykit/gkquadtree",
            "title": "GKQuadtree",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Examining a Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtreenode/quad",
                "title": "quad",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkquadtreenode",
            "title": "GKQuadtreeNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an Octree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/init(boundingbox:minimumcellsize:)",
                "title": "- initWithBoundingBox:minimumCellSize:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/octreewithboundingbox:minimumcellsize:",
                "title": "+ octreeWithBoundingBox:minimumCellSize:",
                "type": "method"
              },
              {
                "title": "Adding and Removing Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/add(_:at:)",
                "title": "- addElement:withPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/add(_:in:)",
                "title": "- addElement:withBox:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/remove(_:using:)",
                "title": "- removeElement:withNode:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/remove(_:)",
                "title": "- removeElement:",
                "type": "method"
              },
              {
                "title": "Searching for Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/elements(at:)",
                "title": "- elementsAtPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/elements(in:)",
                "title": "- elementsInBox:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmax",
                    "title": "boxMax",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmin",
                    "title": "boxMin",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkbox",
                "title": "GKBox",
                "type": "struct"
              }
            ],
            "path": "/documentation/gameplaykit/gkoctree",
            "title": "GKOctree",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Examining a Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctreenode/box",
                "title": "box",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkoctreenode",
            "title": "GKOctreeNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an R-Tree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/init(maxnumberofchildren:)",
                "title": "- initWithMaxNumberOfChildren:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/treewithmaxnumberofchildren:",
                "title": "+ treeWithMaxNumberOfChildren:",
                "type": "method"
              },
              {
                "title": "Adding and Removing Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/addelement(_:boundingrectmin:boundingrectmax:splitstrategy:)",
                "title": "- addElement:boundingRectMin:boundingRectMax:splitStrategy:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/removeelement(_:boundingrectmin:boundingrectmax:)",
                "title": "- removeElement:boundingRectMin:boundingRectMax:",
                "type": "method"
              },
              {
                "title": "Searching for Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/elements(inboundingrectmin:rectmax:)",
                "title": "- elementsInBoundingRectMin:rectMax:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/queryreserve",
                "title": "queryReserve",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/halve",
                    "title": "GKRTreeSplitStrategyHalve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/linear",
                    "title": "GKRTreeSplitStrategyLinear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/quadratic",
                    "title": "GKRTreeSplitStrategyQuadratic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/reduceoverlap",
                    "title": "GKRTreeSplitStrategyReduceOverlap",
                    "type": "case"
                  }
                ],
                "path": "/documentation/gameplaykit/gkrtreesplitstrategy",
                "title": "GKRTreeSplitStrategy",
                "type": "enum"
              }
            ],
            "path": "/documentation/gameplaykit/gkrtree",
            "title": "GKRTree",
            "type": "class"
          },
          {
            "title": "Strategists",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Specifying the Game Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstrategist/gamemodel",
                "title": "gameModel",
                "type": "property"
              },
              {
                "title": "Configuring a Strategist",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstrategist/randomsource",
                "title": "randomSource",
                "type": "property"
              },
              {
                "title": "Planning Game Moves",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstrategist/bestmoveforactiveplayer()",
                "title": "- bestMoveForActivePlayer",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkstrategist",
            "title": "GKStrategist",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Configuring a Strategist",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkminmaxstrategist/maxlookaheaddepth",
                "title": "maxLookAheadDepth",
                "type": "property"
              },
              {
                "title": "Planning Game Moves",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkminmaxstrategist/bestmove(for:)",
                "title": "- bestMoveForPlayer:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkminmaxstrategist/randommove(for:fromnumberofbestmoves:)",
                "title": "- randomMoveForPlayer:fromNumberOfBestMoves:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkminmaxstrategist",
            "title": "GKMinmaxStrategist",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring a Strategist",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmontecarlostrategist/budget",
                "title": "budget",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkmontecarlostrategist/explorationparameter",
                "title": "explorationParameter",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkmontecarlostrategist",
            "title": "GKMonteCarloStrategist",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Keeping Track of Players",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/players",
                "title": "players",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/activeplayer",
                "title": "activePlayer",
                "type": "property"
              },
              {
                "title": "Evaluating a Game Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/gamemodelupdates(for:)",
                "title": "- gameModelUpdatesForPlayer:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/score(for:)",
                "title": "- scoreForPlayer:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/isloss(for:)",
                "title": "- isLossForPlayer:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/iswin(for:)",
                "title": "- isWinForPlayer:",
                "type": "method"
              },
              {
                "title": "Modifying a Game Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/apply(_:)",
                "title": "- applyGameModelUpdate:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/unapplygamemodelupdate(_:)",
                "title": "- unapplyGameModelUpdate:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/setgamemodel(_:)",
                "title": "- setGameModel:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkgamemodelmaxscore",
                    "title": "GKGameModelMaxScore",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkgamemodelminscore",
                    "title": "GKGameModelMinScore",
                    "type": "var"
                  }
                ],
                "path": "/documentation/gameplaykit/game-model-score-limits",
                "title": "Game Model Score Limits",
                "type": "collection"
              }
            ],
            "path": "/documentation/gameplaykit/gkgamemodel",
            "title": "GKGameModel",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Identifying a Player",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelplayer/playerid",
                "title": "playerId",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgamemodelplayer",
            "title": "GKGameModelPlayer",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Storing a Move Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelupdate/value",
                "title": "value",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgamemodelupdate",
            "title": "GKGameModelUpdate",
            "type": "protocol"
          },
          {
            "title": "Decision Trees",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Manually Defined Decision Tree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/init(attribute:)",
                "title": "- initWithAttribute:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/rootnode",
                "title": "rootNode",
                "type": "property"
              },
              {
                "title": "Creating a Learned Decision Tree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/init(examples:actions:attributes:)",
                "title": "- initWithExamples:actions:attributes:",
                "type": "method"
              },
              {
                "title": "Evaluating a Tree to Make Decisions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/findaction(foranswers:)",
                "title": "- findActionForAnswers:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/randomsource",
                "title": "randomSource",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/init(url:error:)",
                "title": "- initWithURL:error:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/export(to:error:)",
                "title": "- exportToURL:error:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkdecisiontree",
            "title": "GKDecisionTree",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Child Nodes for Decision Branches",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisionnode/createbranch(value:attribute:)",
                "title": "- createBranchWithValue:attribute:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisionnode/createbranch(predicate:attribute:)",
                "title": "- createBranchWithPredicate:attribute:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisionnode/createbranch(weight:attribute:)",
                "title": "- createBranchWithWeight:attribute:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkdecisionnode",
            "title": "GKDecisionNode",
            "type": "class"
          },
          {
            "title": "Pathfinding",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/init(_:)",
                "title": "- initWithNodes:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/graphwithnodes:",
                "title": "+ graphWithNodes:",
                "type": "method"
              },
              {
                "title": "Working with Nodes in a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/add(_:)",
                "title": "- addNodes:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/connecttolowestcostnode(node:bidirectional:)",
                "title": "- connectNodeToLowestCostNode:bidirectional:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/remove(_:)",
                "title": "- removeNodes:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/nodes",
                "title": "nodes",
                "type": "property"
              },
              {
                "title": "Pathfinding with a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/findpath(from:to:)",
                "title": "- findPathFromNode:toNode:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraph",
            "title": "GKGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/init(obstacles:bufferradius:nodeclass:)",
                "title": "- initWithObstacles:bufferRadius:nodeClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/graphwithobstacles:bufferradius:nodeclass:",
                "title": "+ graphWithObstacles:bufferRadius:nodeClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/init(obstacles:bufferradius:)",
                "title": "- initWithObstacles:bufferRadius:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/graphwithobstacles:bufferradius:",
                "title": "+ graphWithObstacles:bufferRadius:",
                "type": "method"
              },
              {
                "title": "Working with Obstacles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/obstacles",
                "title": "obstacles",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/addobstacles(_:)",
                "title": "- addObstacles:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/removeobstacles(_:)",
                "title": "- removeObstacles:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/removeallobstacles()",
                "title": "- removeAllObstacles",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/nodes(for:)",
                "title": "- nodesForObstacle:",
                "type": "method"
              },
              {
                "title": "Working with Nodes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/connectusingobstacles(node:)",
                "title": "- connectNodeUsingObstacles:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/connectusingobstacles(node:ignoring:)",
                "title": "- connectNodeUsingObstacles:ignoringObstacles:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/connectusingobstacles(node:ignoringbufferradiusof:)",
                "title": "- connectNodeUsingObstacles:ignoringBufferRadiusOfObstacles:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/bufferradius",
                "title": "bufferRadius",
                "type": "property"
              },
              {
                "title": "Locking Node Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/lockconnection(from:to:)",
                "title": "- lockConnectionFromNode:toNode:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/unlockconnection(from:to:)",
                "title": "- unlockConnectionFromNode:toNode:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/isconnectionlocked(from:to:)",
                "title": "- isConnectionLockedFromNode:toNode:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/classforgenericargument(at:)",
                "title": "- classForGenericArgumentAtIndex:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkobstaclegraph",
            "title": "GKObstacleGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/init(bufferradius:mincoordinate:maxcoordinate:nodeclass:)",
                "title": "- initWithBufferRadius:minCoordinate:maxCoordinate:nodeClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/graphwithbufferradius:mincoordinate:maxcoordinate:nodeclass:",
                "title": "+ graphWithBufferRadius:minCoordinate:maxCoordinate:nodeClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/init(bufferradius:mincoordinate:maxcoordinate:)",
                "title": "- initWithBufferRadius:minCoordinate:maxCoordinate:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/graphwithbufferradius:mincoordinate:maxcoordinate:",
                "title": "+ graphWithBufferRadius:minCoordinate:maxCoordinate:",
                "type": "method"
              },
              {
                "title": "Working with Obstacles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/obstacles",
                "title": "obstacles",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/addobstacles(_:)",
                "title": "- addObstacles:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/removeobstacles(_:)",
                "title": "- removeObstacles:",
                "type": "method"
              },
              {
                "title": "Working with Nodes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/connectusingobstacles(node:)",
                "title": "- connectNodeUsingObstacles:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/bufferradius",
                "title": "bufferRadius",
                "type": "property"
              },
              {
                "title": "Managing the Mesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/triangulate()",
                "title": "- triangulate",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/triangulationmode",
                "title": "triangulationMode",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/triangle(at:)",
                "title": "- triangleAtIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/trianglecount",
                "title": "triangleCount",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/vertices",
                    "title": "GKMeshGraphTriangulationModeVertices",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/centers",
                    "title": "GKMeshGraphTriangulationModeCenters",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/edgemidpoints",
                    "title": "GKMeshGraphTriangulationModeEdgeMidpoints",
                    "type": "case"
                  }
                ],
                "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode",
                "title": "GKMeshGraphTriangulationMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/points",
                    "title": "points",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gktriangle",
                "title": "GKTriangle",
                "type": "struct"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/classforgenericargument(at:)",
                "title": "- classForGenericArgumentAtIndex:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkmeshgraph",
            "title": "GKMeshGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/init(fromgridstartingat:width:height:diagonalsallowed:nodeclass:)",
                "title": "- initFromGridStartingAt:width:height:diagonalsAllowed:nodeClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/graphfromgridstartingat:width:height:diagonalsallowed:nodeclass:",
                "title": "+ graphFromGridStartingAt:width:height:diagonalsAllowed:nodeClass:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/init(fromgridstartingat:width:height:diagonalsallowed:)",
                "title": "- initFromGridStartingAt:width:height:diagonalsAllowed:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/graphfromgridstartingat:width:height:diagonalsallowed:",
                "title": "+ graphFromGridStartingAt:width:height:diagonalsAllowed:",
                "type": "method"
              },
              {
                "title": "Working with Nodes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/node(atgridposition:)",
                "title": "- nodeAtGridPosition:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/connecttoadjacentnodes(node:)",
                "title": "- connectNodeToAdjacentNodes:",
                "type": "method"
              },
              {
                "title": "Inspecting a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/diagonalsallowed",
                "title": "diagonalsAllowed",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/gridorigin",
                "title": "gridOrigin",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/gridwidth",
                "title": "gridWidth",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/gridheight",
                "title": "gridHeight",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/classforgenericargument(at:)",
                "title": "- classForGenericArgumentAtIndex:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkgridgraph",
            "title": "GKGridGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/connectednodes",
                "title": "connectedNodes",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/addconnections(to:bidirectional:)",
                "title": "- addConnectionsToNodes:bidirectional:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/removeconnections(to:bidirectional:)",
                "title": "- removeConnectionsToNodes:bidirectional:",
                "type": "method"
              },
              {
                "title": "Computing Traversal Costs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/cost(to:)",
                "title": "- costToNode:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/estimatedcost(to:)",
                "title": "- estimatedCostToNode:",
                "type": "method"
              },
              {
                "title": "Finding Paths",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/findpath(to:)",
                "title": "- findPathToNode:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/findpath(from:)",
                "title": "- findPathFromNode:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraphnode",
            "title": "GKGraphNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode2d/init(point:)",
                "title": "- initWithPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode2d/node(withpoint:)",
                "title": "+ nodeWithPoint:",
                "type": "method"
              },
              {
                "title": "Inspecting a Nodeâ€™s Position",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode2d/position",
                "title": "position",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraphnode2d",
            "title": "GKGraphNode2D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode3d/init(point:)",
                "title": "- initWithPoint:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode3d/node(withpoint:)",
                "title": "+ nodeWithPoint:",
                "type": "method"
              },
              {
                "title": "Inspecting a Nodeâ€™s Position",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode3d/position",
                "title": "position",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraphnode3d",
            "title": "GKGraphNode3D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraphnode/init(gridposition:)",
                "title": "- initWithGridPosition:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraphnode/nodewithgridposition:",
                "title": "+ nodeWithGridPosition:",
                "type": "method"
              },
              {
                "title": "Inspecting a Nodeâ€™s Position",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraphnode/gridposition",
                "title": "gridPosition",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgridgraphnode",
            "title": "GKGridGraphNode",
            "type": "class"
          },
          {
            "title": "Agents, Goals, and Behaviors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Defining an Agentâ€™s Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/behavior",
                "title": "behavior",
                "type": "property"
              },
              {
                "title": "Constraining an Agentâ€™s Movement",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/mass",
                "title": "mass",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/maxacceleration",
                "title": "maxAcceleration",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/maxspeed",
                "title": "maxSpeed",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/radius",
                "title": "radius",
                "type": "property"
              },
              {
                "title": "Synchronizing an Agentâ€™s Visual Representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/delegate",
                "title": "delegate",
                "type": "property"
              },
              {
                "title": "Managing an Agentâ€™s Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/speed",
                "title": "speed",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkagent",
            "title": "GKAgent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing an Agentâ€™s Position and Orientation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/position",
                "title": "position",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/rotation",
                "title": "rotation",
                "type": "property"
              },
              {
                "title": "Running the Agent Simulation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/update(deltatime:)",
                "title": "- updateWithDeltaTime:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/velocity",
                "title": "velocity",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkagent2d",
            "title": "GKAgent2D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing an Agentâ€™s Position and Orientation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/position",
                "title": "position",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/rotation",
                "title": "rotation",
                "type": "property"
              },
              {
                "title": "Running the Agent Simulation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/update(deltatime:)",
                "title": "- updateWithDeltaTime:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/velocity",
                "title": "velocity",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/righthanded",
                "title": "rightHanded",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkagent3d",
            "title": "GKAgent3D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Goals for General Movement Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toseekagent:)",
                "title": "+ goalToSeekAgent:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tofleeagent:)",
                "title": "+ goalToFleeAgent:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toreachtargetspeed:)",
                "title": "+ goalToReachTargetSpeed:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(towander:)",
                "title": "+ goalToWander:",
                "type": "method"
              },
              {
                "title": "Creating Goals for Avoidance and Interception Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toavoid:maxpredictiontime:)-96a0i",
                "title": "+ goalToAvoidAgents:maxPredictionTime:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toavoid:maxpredictiontime:)-7oslq",
                "title": "+ goalToAvoidObstacles:maxPredictionTime:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tointerceptagent:maxpredictiontime:)",
                "title": "+ goalToInterceptAgent:maxPredictionTime:",
                "type": "method"
              },
              {
                "title": "Creating Goals for Flocking Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toseparatefrom:maxdistance:maxangle:)",
                "title": "+ goalToSeparateFromAgents:maxDistance:maxAngle:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toalignwith:maxdistance:maxangle:)",
                "title": "+ goalToAlignWithAgents:maxDistance:maxAngle:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tocoherewith:maxdistance:maxangle:)",
                "title": "+ goalToCohereWithAgents:maxDistance:maxAngle:",
                "type": "method"
              },
              {
                "title": "Creating Goals for Path-Following Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tostayon:maxpredictiontime:)",
                "title": "+ goalToStayOnPath:maxPredictionTime:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tofollow:maxpredictiontime:forward:)",
                "title": "+ goalToFollowPath:maxPredictionTime:forward:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkgoal",
            "title": "GKGoal",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(goal:weight:)",
                "title": "+ behaviorWithGoal:weight:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(goals:)",
                "title": "+ behaviorWithGoals:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(goals:andweights:)",
                "title": "+ behaviorWithGoals:andWeights:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(weightedgoals:)",
                "title": "+ behaviorWithWeightedGoals:",
                "type": "method"
              },
              {
                "title": "Managing a Behaviorâ€™s Set of Goals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/setweight(_:for:)",
                "title": "- setWeight:forGoal:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/weight(for:)",
                "title": "- weightForGoal:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/remove(_:)",
                "title": "- removeGoal:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/removeallgoals()",
                "title": "- removeAllGoals",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/goalcount",
                "title": "goalCount",
                "type": "property"
              },
              {
                "title": "Working with Goals Using Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/subscript(_:)-2yvko",
                "title": "- objectForKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/setobject:forkeyedsubscript:",
                "title": "- setObject:forKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/subscript(_:)-997a9",
                "title": "- objectAtIndexedSubscript:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkbehavior",
            "title": "GKBehavior",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Composite Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/init(behaviors:)",
                "title": "+ behaviorWithBehaviors:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/init(behaviors:andweights:)",
                "title": "+ behaviorWithBehaviors:andWeights:",
                "type": "method"
              },
              {
                "title": "Managing the Individual Behaviors in a Composite Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/setweight(_:for:)",
                "title": "- setWeight:forBehavior:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/weight(for:)",
                "title": "- weightForBehavior:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/remove(_:)",
                "title": "- removeBehavior:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/removeallbehaviors()",
                "title": "- removeAllBehaviors",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/behaviorcount",
                "title": "behaviorCount",
                "type": "property"
              },
              {
                "title": "Working with Behaviors Using Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/subscript(_:)-6jng9",
                "title": "- objectForKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/setobject:forkeyedsubscript:",
                "title": "- setObject:forKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/subscript(_:)-6krdg",
                "title": "- objectAtIndexedSubscript:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkcompositebehavior",
            "title": "GKCompositeBehavior",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Path",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/initwithpoints:count:radius:cyclical:",
                "title": "- initWithPoints:count:radius:cyclical:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/pathwithpoints:count:radius:cyclical:",
                "title": "+ pathWithPoints:count:radius:cyclical:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/initwithfloat3points:count:radius:cyclical:",
                "title": "- initWithFloat3Points:count:radius:cyclical:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/pathwithfloat3points:count:radius:cyclical:",
                "title": "+ pathWithFloat3Points:count:radius:cyclical:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/init(graphnodes:radius:)",
                "title": "- initWithGraphNodes:radius:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/pathwithgraphnodes:radius:",
                "title": "+ pathWithGraphNodes:radius:",
                "type": "method"
              },
              {
                "title": "Managing a Pathâ€™s Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/radius",
                "title": "radius",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/iscyclical",
                "title": "cyclical",
                "type": "property"
              },
              {
                "title": "Inspecting a Pathâ€™s Shape",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/numpoints",
                "title": "numPoints",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/float2(at:)",
                "title": "- float2AtIndex:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/float3(at:)",
                "title": "- float3AtIndex:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/gameplaykit/gkpath/point(at:)",
                "title": "- pointAtIndex:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkpath",
            "title": "GKPath",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Synchronizing with Agents",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagentdelegate/agentwillupdate(_:)",
                "title": "- agentWillUpdate:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkagentdelegate/agentdidupdate(_:)",
                "title": "- agentDidUpdate:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkagentdelegate",
            "title": "GKAgentDelegate",
            "type": "protocol"
          },
          {
            "title": "Obstacles",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/gameplaykit/gkobstacle",
            "title": "GKObstacle",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcircleobstacle/init(radius:)",
                "title": "- initWithRadius:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcircleobstacle/obstaclewithradius:",
                "title": "+ obstacleWithRadius:",
                "type": "method"
              },
              {
                "title": "Placing an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcircleobstacle/position",
                "title": "position",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcircleobstacle/radius",
                "title": "radius",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcircleobstacle",
            "title": "GKCircleObstacle",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksphereobstacle/init(radius:)",
                "title": "- initWithRadius:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gksphereobstacle/obstaclewithradius:",
                "title": "+ obstacleWithRadius:",
                "type": "method"
              },
              {
                "title": "Placing an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksphereobstacle/position",
                "title": "position",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gksphereobstacle/radius",
                "title": "radius",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gksphereobstacle",
            "title": "GKSphereObstacle",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Polygon Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpolygonobstacle/initwithpoints:count:",
                "title": "- initWithPoints:count:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpolygonobstacle/obstaclewithpoints:count:",
                "title": "+ obstacleWithPoints:count:",
                "type": "method"
              },
              {
                "title": "Inspecting Vertices",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpolygonobstacle/vertexcount",
                "title": "vertexCount",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkpolygonobstacle/vertex(at:)",
                "title": "- vertexAtIndex:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkpolygonobstacle",
            "title": "GKPolygonObstacle",
            "type": "class"
          },
          {
            "title": "Procedural Noise",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/gameplaykit/gknoisesource",
            "title": "GKNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(_:)",
                "title": "- initWithNoiseSource:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(_:gradientcolors:)",
                "title": "- initWithNoiseSource:gradientColors:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/noisewithnoisesource:",
                "title": "+ noiseWithNoiseSource:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/noisewithnoisesource:gradientcolors:",
                "title": "+ noiseWithNoiseSource:gradientColors:",
                "type": "method"
              },
              {
                "title": "Creating Noise by Combining Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(componentnoises:selectionnoise:)",
                "title": "+ noiseWithComponentNoises:selectionNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(componentnoises:selectionnoise:componentboundaries:boundaryblenddistances:)",
                "title": "+ noiseWithComponentNoises:selectionNoise:componentBoundaries:boundaryBlendDistances:",
                "type": "method"
              },
              {
                "title": "Colorizing Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/gradientcolors",
                "title": "gradientColors",
                "type": "property"
              },
              {
                "title": "Applying Operations to Noise Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/applyabsolutevalue()",
                "title": "- applyAbsoluteValue",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/invert()",
                "title": "- invert",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/raisetopower(_:)-14715",
                "title": "- raiseToPower:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/clamp(lowerbound:upperbound:)",
                "title": "- clampWithLowerBound:upperBound:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/remapvalues(tocurvewithcontrolpoints:)",
                "title": "- remapValuesToCurveWithControlPoints:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/remapvalues(toterraceswithpeaks:terracesinverted:)",
                "title": "- remapValuesToTerracesWithPeaks:terracesInverted:",
                "type": "method"
              },
              {
                "title": "Applying Operations that Combine Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/add(_:)",
                "title": "- addWithNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/multiply(_:)",
                "title": "- multiplyWithNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/raisetopower(_:)-zm5g",
                "title": "- raiseToPowerWithNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/maximum(_:)",
                "title": "- maximumWithNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/minimum(_:)",
                "title": "- minimumWithNoise:",
                "type": "method"
              },
              {
                "title": "Applying Operations that Distort Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/displacewithnoises(x:y:z:)",
                "title": "- displaceXWithNoise:yWithNoise:zWithNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/applyturbulence(frequency:power:roughness:seed:)",
                "title": "- applyTurbulenceWithFrequency:power:roughness:seed:",
                "type": "method"
              },
              {
                "title": "Applying Geometric Transformations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/move(by:)",
                "title": "- moveBy:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/rotate(by:)",
                "title": "- rotateBy:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/scale(by:)",
                "title": "- scaleBy:",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/value(atposition:)",
                "title": "- valueAtPosition:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gknoise",
            "title": "GKNoise",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/init(_:)",
                "title": "- initWithNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/init(_:size:origin:samplecount:seamless:)",
                "title": "- initWithNoise:size:origin:sampleCount:seamless:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/noisemapwithnoise:",
                "title": "+ noiseMapWithNoise:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/noisemapwithnoise:size:origin:samplecount:seamless:",
                "title": "+ noiseMapWithNoise:size:origin:sampleCount:seamless:",
                "type": "method"
              },
              {
                "title": "Accessing Noise Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/value(at:)",
                "title": "- valueAtPosition:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/interpolatedvalue(at:)",
                "title": "- interpolatedValueAtPosition:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/setvalue(_:at:)",
                "title": "- setValue:atPosition:",
                "type": "method"
              },
              {
                "title": "Inspecting a Noise Map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/size",
                "title": "size",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/origin",
                "title": "origin",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/samplecount",
                "title": "sampleCount",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/isseamless",
                "title": "seamless",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gknoisemap",
            "title": "GKNoiseMap",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/frequency",
                "title": "frequency",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/octavecount",
                "title": "octaveCount",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/lacunarity",
                "title": "lacunarity",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/seed",
                "title": "seed",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcoherentnoisesource",
            "title": "GKCoherentNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbillownoisesource/billownoisesourcewithfrequency:octavecount:persistence:lacunarity:seed:",
                "title": "+ billowNoiseSourceWithFrequency:octaveCount:persistence:lacunarity:seed:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbillownoisesource/init(frequency:octavecount:persistence:lacunarity:seed:)",
                "title": "- initWithFrequency:octaveCount:persistence:lacunarity:seed:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbillownoisesource/persistence",
                "title": "persistence",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkbillownoisesource",
            "title": "GKBillowNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkperlinnoisesource/init(frequency:octavecount:persistence:lacunarity:seed:)",
                "title": "- initWithFrequency:octaveCount:persistence:lacunarity:seed:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkperlinnoisesource/perlinnoisesourcewithfrequency:octavecount:persistence:lacunarity:seed:",
                "title": "+ perlinNoiseSourceWithFrequency:octaveCount:persistence:lacunarity:seed:",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkperlinnoisesource/persistence",
                "title": "persistence",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkperlinnoisesource",
            "title": "GKPerlinNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkridgednoisesource/init(frequency:octavecount:lacunarity:seed:)",
                "title": "- initWithFrequency:octaveCount:lacunarity:seed:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkridgednoisesource/ridgednoisesourcewithfrequency:octavecount:lacunarity:seed:",
                "title": "+ ridgedNoiseSourceWithFrequency:octaveCount:lacunarity:seed:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkridgednoisesource",
            "title": "GKRidgedNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/init(frequency:displacement:distanceenabled:seed:)",
                "title": "- initWithFrequency:displacement:distanceEnabled:seed:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/voronoinoise(withfrequency:displacement:distanceenabled:seed:)",
                "title": "+ voronoiNoiseWithFrequency:displacement:distanceEnabled:seed:",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/frequency",
                "title": "frequency",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/displacement",
                "title": "displacement",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/isdistanceenabled",
                "title": "distanceEnabled",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/seed",
                "title": "seed",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkvoronoinoisesource",
            "title": "GKVoronoiNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcylindersnoisesource/init(frequency:)",
                "title": "- initWithFrequency:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcylindersnoisesource/cylindersnoise(withfrequency:)",
                "title": "+ cylindersNoiseWithFrequency:",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcylindersnoisesource/frequency",
                "title": "frequency",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcylindersnoisesource",
            "title": "GKCylindersNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkspheresnoisesource/init(frequency:)",
                "title": "- initWithFrequency:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkspheresnoisesource/spheresnoise(withfrequency:)",
                "title": "+ spheresNoiseWithFrequency:",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkspheresnoisesource/frequency",
                "title": "frequency",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkspheresnoisesource",
            "title": "GKSpheresNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcheckerboardnoisesource/init(squaresize:)",
                "title": "- initWithSquareSize:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcheckerboardnoisesource/checkerboardnoise(withsquaresize:)",
                "title": "+ checkerboardNoiseWithSquareSize:",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcheckerboardnoisesource/squaresize",
                "title": "squareSize",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcheckerboardnoisesource",
            "title": "GKCheckerboardNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkconstantnoisesource/init(value:)",
                "title": "- initWithValue:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkconstantnoisesource/constantnoise(withvalue:)",
                "title": "+ constantNoiseWithValue:",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkconstantnoisesource/value",
                "title": "value",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkconstantnoisesource",
            "title": "GKConstantNoiseSource",
            "type": "class"
          },
          {
            "title": "Randomization",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Generating Random Numbers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextint()",
                "title": "- nextInt",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextint(upperbound:)",
                "title": "- nextIntWithUpperBound:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextuniform()",
                "title": "- nextUniform",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextbool()",
                "title": "- nextBool",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkrandom",
            "title": "GKRandom",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating an Independent Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "title": "Randomly Shuffling an Array",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/arraybyshufflingobjects(in:)",
                "title": "- arrayByShufflingObjectsInArray:",
                "type": "method"
              },
              {
                "title": "Using a Shared Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/sharedrandom()",
                "title": "+ sharedRandom",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/init(coder:)",
                "title": "- initWithCoder:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkrandomsource",
            "title": "GKRandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/init(seed:)",
                "title": "- initWithSeed:",
                "type": "method"
              },
              {
                "title": "Replicating Random Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/seed",
                "title": "seed",
                "type": "property"
              },
              {
                "title": "Avoiding Predictable Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/dropvalues(_:)",
                "title": "- dropValuesWithCount:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkarc4randomsource",
            "title": "GKARC4RandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource/init(seed:)",
                "title": "- initWithSeed:",
                "type": "method"
              },
              {
                "title": "Replicating Random Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource/seed",
                "title": "seed",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource",
            "title": "GKLinearCongruentialRandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource/init(seed:)",
                "title": "- initWithSeed:",
                "type": "method"
              },
              {
                "title": "Replicating Random Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource/seed",
                "title": "seed",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource",
            "title": "GKMersenneTwisterRandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/init(randomsource:lowestvalue:highestvalue:)",
                "title": "- initWithRandomSource:lowestValue:highestValue:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/init(lowestvalue:highestvalue:)",
                "title": "+ distributionWithLowestValue:highestValue:",
                "type": "method"
              },
              {
                "title": "Creating Specific Random Distributions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/d6()",
                "title": "+ d6",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/d20()",
                "title": "+ d20",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/init(fordiewithsidecount:)",
                "title": "+ distributionForDieWithSideCount:",
                "type": "method"
              },
              {
                "title": "Generating Random Numbers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextint()",
                "title": "- nextInt",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextint(upperbound:)",
                "title": "- nextIntWithUpperBound:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextuniform()",
                "title": "- nextUniform",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextbool()",
                "title": "- nextBool",
                "type": "method"
              },
              {
                "title": "Working with Characteristics of a Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/lowestvalue",
                "title": "lowestValue",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/highestvalue",
                "title": "highestValue",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/numberofpossibleoutcomes",
                "title": "numberOfPossibleOutcomes",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkrandomdistribution",
            "title": "GKRandomDistribution",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/init(randomsource:lowestvalue:highestvalue:)",
                "title": "- initWithRandomSource:lowestValue:highestValue:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/init(randomsource:mean:deviation:)",
                "title": "- initWithRandomSource:mean:deviation:",
                "type": "method"
              },
              {
                "title": "Working with Characteristics of a Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/mean",
                "title": "mean",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/deviation",
                "title": "deviation",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgaussiandistribution",
            "title": "GKGaussianDistribution",
            "type": "class"
          },
          {
            "path": "/documentation/gameplaykit/gkshuffleddistribution",
            "title": "GKShuffledDistribution",
            "type": "class"
          },
          {
            "title": "Rule Systems",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating Data-Driven Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/init(predicate:assertingfact:grade:)",
                "title": "+ ruleWithPredicate:assertingFact:grade:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/init(predicate:retractingfact:grade:)",
                "title": "+ ruleWithPredicate:retractingFact:grade:",
                "type": "method"
              },
              {
                "title": "Creating Block-Based Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/init(blockpredicate:action:)",
                "title": "+ ruleWithBlockPredicate:action:",
                "type": "method"
              },
              {
                "title": "Setting the Order of Rules in a Rule System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/salience",
                "title": "salience",
                "type": "property"
              },
              {
                "title": "Evaluating a Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/evaluatepredicate(in:)",
                "title": "- evaluatePredicateWithSystem:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/performaction(in:)",
                "title": "- performActionWithSystem:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkrule",
            "title": "GKRule",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Predicate-Based Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknspredicaterule/init(predicate:)",
                "title": "- initWithPredicate:",
                "type": "method"
              },
              {
                "title": "Evaluating a Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknspredicaterule/predicate",
                "title": "predicate",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknspredicaterule/evaluatepredicate(in:)",
                "title": "- evaluatePredicateWithSystem:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gknspredicaterule",
            "title": "GKNSPredicateRule",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Rule System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "title": "Managing State Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/state",
                "title": "state",
                "type": "property"
              },
              {
                "title": "Managing a Systemâ€™s List of Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/rules",
                "title": "rules",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/add(_:)-76jb5",
                "title": "- addRule:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/add(_:)-7u5zw",
                "title": "- addRulesFromArray:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/removeallrules()",
                "title": "- removeAllRules",
                "type": "method"
              },
              {
                "title": "Evaluating a Rule System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/evaluate()",
                "title": "- evaluate",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/agenda",
                "title": "agenda",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/executed",
                "title": "executed",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/reset()",
                "title": "- reset",
                "type": "method"
              },
              {
                "title": "Asserting and Retracting Facts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/facts",
                "title": "facts",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/assertfact(_:)",
                "title": "- assertFact:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/assertfact(_:grade:)",
                "title": "- assertFact:grade:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/retractfact(_:)",
                "title": "- retractFact:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/retractfact(_:grade:)",
                "title": "- retractFact:grade:",
                "type": "method"
              },
              {
                "title": "Drawing Conclusions from Facts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/grade(forfact:)",
                "title": "- gradeForFact:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/minimumgrade(forfacts:)",
                "title": "- minimumGradeForFacts:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/maximumgrade(forfacts:)",
                "title": "- maximumGradeForFacts:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkrulesystem",
            "title": "GKRuleSystem",
            "type": "class"
          },
          {
            "title": "Xcode and SpriteKit Integration",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Loading a Scene File",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/init(filenamed:)",
                "title": "+ sceneWithFileNamed:",
                "type": "method"
              },
              {
                "title": "Accessing the SpriteKit Scene",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/rootnode",
                "title": "rootNode",
                "type": "property"
              },
              {
                "title": "Managing Entities and Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/entities",
                "title": "entities",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/addentity(_:)",
                "title": "- addEntity:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/removeentity(_:)",
                "title": "- removeEntity:",
                "type": "method"
              },
              {
                "title": "Managing Pathfinding Graphs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/graphs",
                "title": "graphs",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/removegraph(_:)",
                "title": "- removeGraph:",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/init(filenamed:rootnode:)",
                "title": "+ sceneWithFileNamed:rootNode:",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/addgraph(_:name:)",
                "title": "- addGraph:name:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkscene",
            "title": "GKScene",
            "type": "class"
          },
          {
            "path": "/documentation/gameplaykit/gkscenerootnodetype",
            "title": "GKSceneRootNodeType",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a SpriteKit Component",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksknodecomponent/componentwithnode:",
                "title": "+ componentWithNode:",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gksknodecomponent/init(node:)",
                "title": "- initWithNode:",
                "type": "method"
              },
              {
                "title": "Accessing the Componentâ€™s SpriteKit Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksknodecomponent/node",
                "title": "node",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gksknodecomponent",
            "title": "GKSKNodeComponent",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelmaxscore",
                "title": "GKGameModelMaxScore",
                "type": "var"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelminscore",
                "title": "GKGameModelMinScore",
                "type": "var"
              },
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gk_version",
                "title": "GK_VERSION",
                "type": "macro"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-constants",
            "title": "GameplayKit Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmax",
                    "title": "boxMax",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmin",
                    "title": "boxMin",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkbox",
                "title": "GKBox",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/vertices",
                    "title": "GKMeshGraphTriangulationModeVertices",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/centers",
                    "title": "GKMeshGraphTriangulationModeCenters",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/edgemidpoints",
                    "title": "GKMeshGraphTriangulationModeEdgeMidpoints",
                    "type": "case"
                  }
                ],
                "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode",
                "title": "GKMeshGraphTriangulationMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmax",
                    "title": "quadMax",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmin",
                    "title": "quadMin",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkquad",
                "title": "GKQuad",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/points",
                    "title": "points",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gktriangle",
                "title": "GKTriangle",
                "type": "struct"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-structures",
            "title": "GameplayKit Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/vertices",
                    "title": "GKMeshGraphTriangulationModeVertices",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/centers",
                    "title": "GKMeshGraphTriangulationModeCenters",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/edgemidpoints",
                    "title": "GKMeshGraphTriangulationModeEdgeMidpoints",
                    "type": "case"
                  }
                ],
                "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode",
                "title": "GKMeshGraphTriangulationMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/halve",
                    "title": "GKRTreeSplitStrategyHalve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/linear",
                    "title": "GKRTreeSplitStrategyLinear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/quadratic",
                    "title": "GKRTreeSplitStrategyQuadratic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/reduceoverlap",
                    "title": "GKRTreeSplitStrategyReduceOverlap",
                    "type": "case"
                  }
                ],
                "path": "/documentation/gameplaykit/gkrtreesplitstrategy",
                "title": "GKRTreeSplitStrategy",
                "type": "enum"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-enumerations",
            "title": "GameplayKit Enumerations",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscnnodecomponent/init(node:)",
                "title": "- initWithNode:",
                "type": "method"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscnnodecomponent/node",
                "title": "node",
                "type": "property"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscnnodecomponent/componentwithnode:",
                "title": "+ componentWithNode:",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkscnnodecomponent",
            "title": "GKSCNNodeComponent",
            "type": "class"
          }
        ],
        "path": "/documentation/gameplaykit",
        "title": "GameplayKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Entities and Components",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating an Entity",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Managing an Entityâ€™s List of Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/components",
                "title": "var components: [GKComponent]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/addcomponent(_:)",
                "title": "func addComponent(GKComponent)",
                "type": "method"
              },
              {
                "title": "Performing Periodic Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/update(deltatime:)",
                "title": "func update(deltaTime: TimeInterval)",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/component(oftype:)",
                "title": "func component<ComponentType>(ofType: ComponentType.Type) -> ComponentType?",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkentity/removecomponent(oftype:)",
                "title": "func removeComponent<ComponentType>(ofType: ComponentType.Type)",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkentity",
            "title": "GKEntity",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Performing Periodic Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/update(deltatime:)",
                "title": "func update(deltaTime: TimeInterval)",
                "type": "method"
              },
              {
                "title": "Working with Entities",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/entity",
                "title": "var entity: GKEntity?",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/didaddtoentity()",
                "title": "func didAddToEntity()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponent/willremovefromentity()",
                "title": "func willRemoveFromEntity()",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkcomponent",
            "title": "GKComponent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Component System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/init(componentclass:)",
                "title": "init(componentClass: AnyClass)",
                "type": "init"
              },
              {
                "title": "Managing a List of Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/componentclass",
                "title": "var componentClass: AnyClass",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/components",
                "title": "var components: [ComponentType]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/addcomponent(_:)",
                "title": "func addComponent(ComponentType)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/addcomponent(foundin:)",
                "title": "func addComponent(foundIn: GKEntity)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/removecomponent(_:)",
                "title": "func removeComponent(ComponentType)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/removecomponent(foundin:)",
                "title": "func removeComponent(foundIn: GKEntity)",
                "type": "method"
              },
              {
                "title": "Performing Periodic Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/update(deltatime:)",
                "title": "func update(deltaTime: TimeInterval)",
                "type": "method"
              },
              {
                "title": "Accessing Components With Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/subscript(_:)",
                "title": "subscript(Int) -> ComponentType",
                "type": "subscript"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcomponentsystem/classforgenericargument(at:)",
                "title": "func classForGenericArgument(at: Int) -> AnyClass",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkcomponentsystem",
            "title": "GKComponentSystem",
            "type": "class"
          },
          {
            "title": "State Machines",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a State",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Working with State Machines",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/statemachine",
                "title": "var stateMachine: GKStateMachine?",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/isvalidnextstate(_:)",
                "title": "func isValidNextState(AnyClass) -> Bool",
                "type": "method"
              },
              {
                "title": "Handling State Transitions and Updates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/didenter(from:)",
                "title": "func didEnter(from: GKState?)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/update(deltatime:)",
                "title": "func update(deltaTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstate/willexit(to:)",
                "title": "func willExit(to: GKState)",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkstate",
            "title": "GKState",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a State Machine",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/init(states:)",
                "title": "init(states: [GKState])",
                "type": "init"
              },
              {
                "title": "Working with States",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/currentstate",
                "title": "var currentState: GKState?",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/canenterstate(_:)",
                "title": "func canEnterState(AnyClass) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/enter(_:)",
                "title": "func enter(AnyClass) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/update(deltatime:)",
                "title": "func update(deltaTime: TimeInterval)",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstatemachine/state(forclass:)",
                "title": "func state<StateType>(forClass: StateType.Type) -> StateType?",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkstatemachine",
            "title": "GKStateMachine",
            "type": "class"
          },
          {
            "title": "Spatial Partitioning",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Quadtree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/init(boundingquad:minimumcellsize:)",
                "title": "init(boundingQuad: GKQuad, minimumCellSize: Float)",
                "type": "init"
              },
              {
                "title": "Adding and Removing Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/add(_:at:)",
                "title": "func add(ElementType, at: vector_float2) -> GKQuadtreeNode",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/add(_:in:)",
                "title": "func add(ElementType, in: GKQuad) -> GKQuadtreeNode",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/remove(_:using:)",
                "title": "func remove(ElementType, using: GKQuadtreeNode) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/remove(_:)",
                "title": "func remove(ElementType) -> Bool",
                "type": "method"
              },
              {
                "title": "Searching for Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/elements(at:)",
                "title": "func elements(at: vector_float2) -> [ElementType]",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtree/elements(in:)",
                "title": "func elements(in: GKQuad) -> [ElementType]",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/init(quadmin:quadmax:)",
                    "title": "init(quadMin: vector_float2, quadMax: vector_float2)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmax",
                    "title": "var quadMax: vector_float2",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmin",
                    "title": "var quadMin: vector_float2",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkquad",
                "title": "GKQuad",
                "type": "struct"
              }
            ],
            "path": "/documentation/gameplaykit/gkquadtree",
            "title": "GKQuadtree",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Examining a Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkquadtreenode/quad",
                "title": "var quad: GKQuad",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkquadtreenode",
            "title": "GKQuadtreeNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an Octree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/init(boundingbox:minimumcellsize:)",
                "title": "init(boundingBox: GKBox, minimumCellSize: Float)",
                "type": "init"
              },
              {
                "title": "Adding and Removing Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/add(_:at:)",
                "title": "func add(ElementType, at: vector_float3) -> GKOctreeNode",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/add(_:in:)",
                "title": "func add(ElementType, in: GKBox) -> GKOctreeNode",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/remove(_:using:)",
                "title": "func remove(ElementType, using: GKOctreeNode) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/remove(_:)",
                "title": "func remove(ElementType) -> Bool",
                "type": "method"
              },
              {
                "title": "Searching for Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/elements(at:)",
                "title": "func elements(at: vector_float3) -> [ElementType]",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkoctree/elements(in:)",
                "title": "func elements(in: GKBox) -> [ElementType]",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/init(boxmin:boxmax:)",
                    "title": "init(boxMin: vector_float3, boxMax: vector_float3)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmax",
                    "title": "var boxMax: vector_float3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmin",
                    "title": "var boxMin: vector_float3",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkbox",
                "title": "GKBox",
                "type": "struct"
              }
            ],
            "path": "/documentation/gameplaykit/gkoctree",
            "title": "GKOctree",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Examining a Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkoctreenode/box",
                "title": "var box: GKBox",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkoctreenode",
            "title": "GKOctreeNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an R-Tree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/init(maxnumberofchildren:)",
                "title": "init(maxNumberOfChildren: Int)",
                "type": "init"
              },
              {
                "title": "Adding and Removing Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/addelement(_:boundingrectmin:boundingrectmax:splitstrategy:)",
                "title": "func addElement(ElementType, boundingRectMin: vector_float2, boundingRectMax: vector_float2, splitStrategy: GKRTreeSplitStrategy)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/removeelement(_:boundingrectmin:boundingrectmax:)",
                "title": "func removeElement(ElementType, boundingRectMin: vector_float2, boundingRectMax: vector_float2)",
                "type": "method"
              },
              {
                "title": "Searching for Elements",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/elements(inboundingrectmin:rectmax:)",
                "title": "func elements(inBoundingRectMin: vector_float2, rectMax: vector_float2) -> [ElementType]",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrtree/queryreserve",
                "title": "var queryReserve: Int",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/halve",
                    "title": "case halve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/quadratic",
                    "title": "case quadratic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/reduceoverlap",
                    "title": "case reduceOverlap",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/gameplaykit/gkrtreesplitstrategy",
                "title": "GKRTreeSplitStrategy",
                "type": "enum"
              }
            ],
            "path": "/documentation/gameplaykit/gkrtree",
            "title": "GKRTree",
            "type": "class"
          },
          {
            "title": "Strategists",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Specifying the Game Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstrategist/gamemodel",
                "title": "var gameModel: (any GKGameModel)?",
                "type": "property"
              },
              {
                "title": "Configuring a Strategist",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstrategist/randomsource",
                "title": "var randomSource: (any GKRandom)?",
                "type": "property"
              },
              {
                "title": "Planning Game Moves",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkstrategist/bestmoveforactiveplayer()",
                "title": "func bestMoveForActivePlayer() -> (any GKGameModelUpdate)?",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkstrategist",
            "title": "GKStrategist",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Configuring a Strategist",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkminmaxstrategist/maxlookaheaddepth",
                "title": "var maxLookAheadDepth: Int",
                "type": "property"
              },
              {
                "title": "Planning Game Moves",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkminmaxstrategist/bestmove(for:)",
                "title": "func bestMove(for: any GKGameModelPlayer) -> (any GKGameModelUpdate)?",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkminmaxstrategist/randommove(for:fromnumberofbestmoves:)",
                "title": "func randomMove(for: any GKGameModelPlayer, fromNumberOfBestMoves: Int) -> (any GKGameModelUpdate)?",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkminmaxstrategist",
            "title": "GKMinmaxStrategist",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Configuring a Strategist",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmontecarlostrategist/budget",
                "title": "var budget: Int",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkmontecarlostrategist/explorationparameter",
                "title": "var explorationParameter: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkmontecarlostrategist",
            "title": "GKMonteCarloStrategist",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Keeping Track of Players",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/players",
                "title": "var players: [any GKGameModelPlayer]?",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/activeplayer",
                "title": "var activePlayer: (any GKGameModelPlayer)?",
                "type": "property"
              },
              {
                "title": "Evaluating a Game Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/gamemodelupdates(for:)",
                "title": "func gameModelUpdates(for: any GKGameModelPlayer) -> [any GKGameModelUpdate]?",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/score(for:)",
                "title": "func score(for: any GKGameModelPlayer) -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/isloss(for:)",
                "title": "func isLoss(for: any GKGameModelPlayer) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/iswin(for:)",
                "title": "func isWin(for: any GKGameModelPlayer) -> Bool",
                "type": "method"
              },
              {
                "title": "Modifying a Game Model",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/apply(_:)",
                "title": "func apply(any GKGameModelUpdate)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/unapplygamemodelupdate(_:)",
                "title": "func unapplyGameModelUpdate(any GKGameModelUpdate)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodel/setgamemodel(_:)",
                "title": "func setGameModel(any GKGameModel)",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkgamemodelmaxscore",
                    "title": "let GKGameModelMaxScore: Int",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkgamemodelminscore",
                    "title": "let GKGameModelMinScore: Int",
                    "type": "var"
                  }
                ],
                "path": "/documentation/gameplaykit/game-model-score-limits",
                "title": "Game Model Score Limits",
                "type": "collection"
              }
            ],
            "path": "/documentation/gameplaykit/gkgamemodel",
            "title": "GKGameModel",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Identifying a Player",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelplayer/playerid",
                "title": "var playerId: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgamemodelplayer",
            "title": "GKGameModelPlayer",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Storing a Move Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelupdate/value",
                "title": "var value: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgamemodelupdate",
            "title": "GKGameModelUpdate",
            "type": "protocol"
          },
          {
            "title": "Decision Trees",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Manually Defined Decision Tree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/init(attribute:)",
                "title": "init(attribute: any NSObjectProtocol)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/rootnode",
                "title": "var rootNode: GKDecisionNode?",
                "type": "property"
              },
              {
                "title": "Creating a Learned Decision Tree",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/init(examples:actions:attributes:)",
                "title": "init(examples: [[any NSObjectProtocol]], actions: [any NSObjectProtocol], attributes: [any NSObjectProtocol])",
                "type": "init"
              },
              {
                "title": "Evaluating a Tree to Make Decisions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/findaction(foranswers:)",
                "title": "func findAction(forAnswers: [AnyHashable : any NSObjectProtocol]) -> (any NSObjectProtocol)?",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/randomsource",
                "title": "var randomSource: GKRandomSource",
                "type": "property"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/init(url:error:)",
                "title": "init(url: URL, error: (any Error)?)",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisiontree/export(to:error:)",
                "title": "func export(to: URL, error: (any Error)?) -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkdecisiontree",
            "title": "GKDecisionTree",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Child Nodes for Decision Branches",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisionnode/createbranch(value:attribute:)",
                "title": "func createBranch(value: NSNumber, attribute: any NSObjectProtocol) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisionnode/createbranch(predicate:attribute:)",
                "title": "func createBranch(predicate: NSPredicate, attribute: any NSObjectProtocol) -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkdecisionnode/createbranch(weight:attribute:)",
                "title": "func createBranch(weight: Int, attribute: any NSObjectProtocol) -> Self",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkdecisionnode",
            "title": "GKDecisionNode",
            "type": "class"
          },
          {
            "title": "Pathfinding",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/init(_:)",
                "title": "init([GKGraphNode])",
                "type": "init"
              },
              {
                "title": "Working with Nodes in a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/add(_:)",
                "title": "func add([GKGraphNode])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/connecttolowestcostnode(node:bidirectional:)",
                "title": "func connectToLowestCostNode(node: GKGraphNode, bidirectional: Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/remove(_:)",
                "title": "func remove([GKGraphNode])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/nodes",
                "title": "var nodes: [GKGraphNode]?",
                "type": "property"
              },
              {
                "title": "Pathfinding with a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraph/findpath(from:to:)",
                "title": "func findPath(from: GKGraphNode, to: GKGraphNode) -> [GKGraphNode]",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraph",
            "title": "GKGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/init(obstacles:bufferradius:nodeclass:)",
                "title": "init(obstacles: [GKPolygonObstacle], bufferRadius: Float, nodeClass: AnyClass)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/init(obstacles:bufferradius:)",
                "title": "init(obstacles: [GKPolygonObstacle], bufferRadius: Float)",
                "type": "init"
              },
              {
                "title": "Working with Obstacles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/obstacles",
                "title": "var obstacles: [GKPolygonObstacle]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/addobstacles(_:)",
                "title": "func addObstacles([GKPolygonObstacle])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/removeobstacles(_:)",
                "title": "func removeObstacles([GKPolygonObstacle])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/removeallobstacles()",
                "title": "func removeAllObstacles()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/nodes(for:)",
                "title": "func nodes(for: GKPolygonObstacle) -> [NodeType]",
                "type": "method"
              },
              {
                "title": "Working with Nodes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/connectusingobstacles(node:)",
                "title": "func connectUsingObstacles(node: NodeType)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/connectusingobstacles(node:ignoring:)",
                "title": "func connectUsingObstacles(node: NodeType, ignoring: [GKPolygonObstacle])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/connectusingobstacles(node:ignoringbufferradiusof:)",
                "title": "func connectUsingObstacles(node: NodeType, ignoringBufferRadiusOf: [GKPolygonObstacle])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/bufferradius",
                "title": "var bufferRadius: Float",
                "type": "property"
              },
              {
                "title": "Locking Node Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/lockconnection(from:to:)",
                "title": "func lockConnection(from: NodeType, to: NodeType)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/unlockconnection(from:to:)",
                "title": "func unlockConnection(from: NodeType, to: NodeType)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/isconnectionlocked(from:to:)",
                "title": "func isConnectionLocked(from: NodeType, to: NodeType) -> Bool",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkobstaclegraph/classforgenericargument(at:)",
                "title": "func classForGenericArgument(at: Int) -> AnyClass",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkobstaclegraph",
            "title": "GKObstacleGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/init(bufferradius:mincoordinate:maxcoordinate:nodeclass:)",
                "title": "init(bufferRadius: Float, minCoordinate: vector_float2, maxCoordinate: vector_float2, nodeClass: AnyClass)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/init(bufferradius:mincoordinate:maxcoordinate:)",
                "title": "init(bufferRadius: Float, minCoordinate: vector_float2, maxCoordinate: vector_float2)",
                "type": "init"
              },
              {
                "title": "Working with Obstacles",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/obstacles",
                "title": "var obstacles: [GKPolygonObstacle]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/addobstacles(_:)",
                "title": "func addObstacles([GKPolygonObstacle])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/removeobstacles(_:)",
                "title": "func removeObstacles([GKPolygonObstacle])",
                "type": "method"
              },
              {
                "title": "Working with Nodes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/connectusingobstacles(node:)",
                "title": "func connectUsingObstacles(node: NodeType)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/bufferradius",
                "title": "var bufferRadius: Float",
                "type": "property"
              },
              {
                "title": "Managing the Mesh",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/triangulate()",
                "title": "func triangulate()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/triangulationmode",
                "title": "var triangulationMode: GKMeshGraphTriangulationMode",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/triangle(at:)",
                "title": "func triangle(at: Int) -> GKTriangle",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/trianglecount",
                "title": "var triangleCount: Int",
                "type": "property"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/vertices",
                    "title": "static var vertices: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/centers",
                    "title": "static var centers: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/edgemidpoints",
                    "title": "static var edgeMidpoints: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode",
                "title": "GKMeshGraphTriangulationMode",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/init(points:)",
                    "title": "init(points: (vector_float3, vector_float3, vector_float3))",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/points",
                    "title": "var points: (vector_float3, vector_float3, vector_float3)",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gktriangle",
                "title": "GKTriangle",
                "type": "struct"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmeshgraph/classforgenericargument(at:)",
                "title": "func classForGenericArgument(at: Int) -> AnyClass",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkmeshgraph",
            "title": "GKMeshGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/init(fromgridstartingat:width:height:diagonalsallowed:nodeclass:)",
                "title": "init(fromGridStartingAt: vector_int2, width: Int32, height: Int32, diagonalsAllowed: Bool, nodeClass: AnyClass)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/init(fromgridstartingat:width:height:diagonalsallowed:)",
                "title": "init(fromGridStartingAt: vector_int2, width: Int32, height: Int32, diagonalsAllowed: Bool)",
                "type": "init"
              },
              {
                "title": "Working with Nodes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/node(atgridposition:)",
                "title": "func node(atGridPosition: vector_int2) -> NodeType?",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/connecttoadjacentnodes(node:)",
                "title": "func connectToAdjacentNodes(node: GKGridGraphNode)",
                "type": "method"
              },
              {
                "title": "Inspecting a Graph",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/diagonalsallowed",
                "title": "var diagonalsAllowed: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/gridorigin",
                "title": "var gridOrigin: vector_int2",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/gridwidth",
                "title": "var gridWidth: Int",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/gridheight",
                "title": "var gridHeight: Int",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraph/classforgenericargument(at:)",
                "title": "func classForGenericArgument(at: Int) -> AnyClass",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkgridgraph",
            "title": "GKGridGraph",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Working with Connections",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/connectednodes",
                "title": "var connectedNodes: [GKGraphNode]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/addconnections(to:bidirectional:)",
                "title": "func addConnections(to: [GKGraphNode], bidirectional: Bool)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/removeconnections(to:bidirectional:)",
                "title": "func removeConnections(to: [GKGraphNode], bidirectional: Bool)",
                "type": "method"
              },
              {
                "title": "Computing Traversal Costs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/cost(to:)",
                "title": "func cost(to: GKGraphNode) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/estimatedcost(to:)",
                "title": "func estimatedCost(to: GKGraphNode) -> Float",
                "type": "method"
              },
              {
                "title": "Finding Paths",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/findpath(to:)",
                "title": "func findPath(to: GKGraphNode) -> [GKGraphNode]",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode/findpath(from:)",
                "title": "func findPath(from: GKGraphNode) -> [GKGraphNode]",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraphnode",
            "title": "GKGraphNode",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode2d/init(point:)",
                "title": "init(point: vector_float2)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode2d/node(withpoint:)",
                "title": "class func node(withPoint: vector_float2) -> Self",
                "type": "method"
              },
              {
                "title": "Inspecting a Nodeâ€™s Position",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode2d/position",
                "title": "var position: vector_float2",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraphnode2d",
            "title": "GKGraphNode2D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode3d/init(point:)",
                "title": "init(point: vector_float3)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode3d/node(withpoint:)",
                "title": "class func node(withPoint: vector_float3) -> Self",
                "type": "method"
              },
              {
                "title": "Inspecting a Nodeâ€™s Position",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgraphnode3d/position",
                "title": "var position: vector_float3",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgraphnode3d",
            "title": "GKGraphNode3D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Graph Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraphnode/init(gridposition:)",
                "title": "init(gridPosition: vector_int2)",
                "type": "init"
              },
              {
                "title": "Inspecting a Nodeâ€™s Position",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgridgraphnode/gridposition",
                "title": "var gridPosition: vector_int2",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgridgraphnode",
            "title": "GKGridGraphNode",
            "type": "class"
          },
          {
            "title": "Agents, Goals, and Behaviors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Defining an Agentâ€™s Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/behavior",
                "title": "var behavior: GKBehavior?",
                "type": "property"
              },
              {
                "title": "Constraining an Agentâ€™s Movement",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/mass",
                "title": "var mass: Float",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/maxacceleration",
                "title": "var maxAcceleration: Float",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/maxspeed",
                "title": "var maxSpeed: Float",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/radius",
                "title": "var radius: Float",
                "type": "property"
              },
              {
                "title": "Synchronizing an Agentâ€™s Visual Representation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/delegate",
                "title": "var delegate: (any GKAgentDelegate)?",
                "type": "property"
              },
              {
                "title": "Managing an Agentâ€™s Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent/speed",
                "title": "var speed: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkagent",
            "title": "GKAgent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing an Agentâ€™s Position and Orientation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/position",
                "title": "var position: vector_float2",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/rotation",
                "title": "var rotation: Float",
                "type": "property"
              },
              {
                "title": "Running the Agent Simulation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/update(deltatime:)",
                "title": "func update(deltaTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkagent2d/velocity",
                "title": "var velocity: vector_float2",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkagent2d",
            "title": "GKAgent2D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing an Agentâ€™s Position and Orientation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/position",
                "title": "var position: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/rotation",
                "title": "var rotation: matrix_float3x3",
                "type": "property"
              },
              {
                "title": "Running the Agent Simulation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/update(deltatime:)",
                "title": "func update(deltaTime: TimeInterval)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/velocity",
                "title": "var velocity: vector_float3",
                "type": "property"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagent3d/righthanded",
                "title": "var rightHanded: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkagent3d",
            "title": "GKAgent3D",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Goals for General Movement Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toseekagent:)",
                "title": "convenience init(toSeekAgent: GKAgent)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tofleeagent:)",
                "title": "convenience init(toFleeAgent: GKAgent)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toreachtargetspeed:)",
                "title": "convenience init(toReachTargetSpeed: Float)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(towander:)",
                "title": "convenience init(toWander: Float)",
                "type": "init"
              },
              {
                "title": "Creating Goals for Avoidance and Interception Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toavoid:maxpredictiontime:)-96a0i",
                "title": "convenience init(toAvoid: [GKAgent], maxPredictionTime: TimeInterval)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toavoid:maxpredictiontime:)-7oslq",
                "title": "convenience init(toAvoid: [GKObstacle], maxPredictionTime: TimeInterval)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tointerceptagent:maxpredictiontime:)",
                "title": "convenience init(toInterceptAgent: GKAgent, maxPredictionTime: TimeInterval)",
                "type": "init"
              },
              {
                "title": "Creating Goals for Flocking Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toseparatefrom:maxdistance:maxangle:)",
                "title": "convenience init(toSeparateFrom: [GKAgent], maxDistance: Float, maxAngle: Float)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(toalignwith:maxdistance:maxangle:)",
                "title": "convenience init(toAlignWith: [GKAgent], maxDistance: Float, maxAngle: Float)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tocoherewith:maxdistance:maxangle:)",
                "title": "convenience init(toCohereWith: [GKAgent], maxDistance: Float, maxAngle: Float)",
                "type": "init"
              },
              {
                "title": "Creating Goals for Path-Following Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tostayon:maxpredictiontime:)",
                "title": "convenience init(toStayOn: GKPath, maxPredictionTime: TimeInterval)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgoal/init(tofollow:maxpredictiontime:forward:)",
                "title": "convenience init(toFollow: GKPath, maxPredictionTime: TimeInterval, forward: Bool)",
                "type": "init"
              }
            ],
            "path": "/documentation/gameplaykit/gkgoal",
            "title": "GKGoal",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(goal:weight:)",
                "title": "convenience init(goal: GKGoal, weight: Float)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(goals:)",
                "title": "convenience init(goals: [GKGoal])",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(goals:andweights:)",
                "title": "convenience init(goals: [GKGoal], andWeights: [NSNumber])",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/init(weightedgoals:)",
                "title": "convenience init(weightedGoals: [GKGoal : NSNumber])",
                "type": "init"
              },
              {
                "title": "Managing a Behaviorâ€™s Set of Goals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/setweight(_:for:)",
                "title": "func setWeight(Float, for: GKGoal)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/weight(for:)",
                "title": "func weight(for: GKGoal) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/remove(_:)",
                "title": "func remove(GKGoal)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/removeallgoals()",
                "title": "func removeAllGoals()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/goalcount",
                "title": "var goalCount: Int",
                "type": "property"
              },
              {
                "title": "Working with Goals Using Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/subscript(_:)-2yvko",
                "title": "subscript(GKGoal) -> NSNumber!",
                "type": "subscript"
              },
              {
                "path": "/documentation/gameplaykit/gkbehavior/subscript(_:)-997a9",
                "title": "subscript(Int) -> GKGoal",
                "type": "subscript"
              }
            ],
            "path": "/documentation/gameplaykit/gkbehavior",
            "title": "GKBehavior",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Composite Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/init(behaviors:)",
                "title": "convenience init(behaviors: [GKBehavior])",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/init(behaviors:andweights:)",
                "title": "convenience init(behaviors: [GKBehavior], andWeights: [NSNumber])",
                "type": "init"
              },
              {
                "title": "Managing the Individual Behaviors in a Composite Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/setweight(_:for:)",
                "title": "func setWeight(Float, for: GKBehavior)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/weight(for:)",
                "title": "func weight(for: GKBehavior) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/remove(_:)",
                "title": "func remove(GKBehavior)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/removeallbehaviors()",
                "title": "func removeAllBehaviors()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/behaviorcount",
                "title": "var behaviorCount: Int",
                "type": "property"
              },
              {
                "title": "Working with Behaviors Using Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/subscript(_:)-6jng9",
                "title": "subscript(GKBehavior) -> NSNumber",
                "type": "subscript"
              },
              {
                "path": "/documentation/gameplaykit/gkcompositebehavior/subscript(_:)-6krdg",
                "title": "subscript(Int) -> GKBehavior",
                "type": "subscript"
              }
            ],
            "path": "/documentation/gameplaykit/gkcompositebehavior",
            "title": "GKCompositeBehavior",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Path",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/init(graphnodes:radius:)",
                "title": "init(graphNodes: [GKGraphNode], radius: Float)",
                "type": "init"
              },
              {
                "title": "Managing a Pathâ€™s Attributes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/radius",
                "title": "var radius: Float",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/iscyclical",
                "title": "var isCyclical: Bool",
                "type": "property"
              },
              {
                "title": "Inspecting a Pathâ€™s Shape",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/numpoints",
                "title": "var numPoints: Int",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/float2(at:)",
                "title": "func float2(at: Int) -> vector_float2",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/float3(at:)",
                "title": "func float3(at: Int) -> vector_float3",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/gameplaykit/gkpath/point(at:)",
                "title": "func point(at: Int) -> vector_float2",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/init(points:radius:cyclical:)-6qqn4",
                "title": "convenience init(points: [SIMD3<Float>], radius: Float, cyclical: Bool)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkpath/init(points:radius:cyclical:)-2iv4v",
                "title": "convenience init(points: [SIMD2<Float>], radius: Float, cyclical: Bool)",
                "type": "init"
              }
            ],
            "path": "/documentation/gameplaykit/gkpath",
            "title": "GKPath",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Synchronizing with Agents",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkagentdelegate/agentwillupdate(_:)",
                "title": "func agentWillUpdate(GKAgent)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkagentdelegate/agentdidupdate(_:)",
                "title": "func agentDidUpdate(GKAgent)",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkagentdelegate",
            "title": "GKAgentDelegate",
            "type": "protocol"
          },
          {
            "title": "Obstacles",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/gameplaykit/gkobstacle",
            "title": "GKObstacle",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcircleobstacle/init(radius:)",
                "title": "init(radius: Float)",
                "type": "init"
              },
              {
                "title": "Placing an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcircleobstacle/position",
                "title": "var position: vector_float2",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcircleobstacle/radius",
                "title": "var radius: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcircleobstacle",
            "title": "GKCircleObstacle",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksphereobstacle/init(radius:)",
                "title": "init(radius: Float)",
                "type": "init"
              },
              {
                "title": "Placing an Obstacle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksphereobstacle/position",
                "title": "var position: vector_float3",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gksphereobstacle/radius",
                "title": "var radius: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gksphereobstacle",
            "title": "GKSphereObstacle",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Inspecting Vertices",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpolygonobstacle/vertexcount",
                "title": "var vertexCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkpolygonobstacle/vertex(at:)",
                "title": "func vertex(at: Int) -> vector_float2",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkpolygonobstacle/init(points:)",
                "title": "convenience init(points: [SIMD2<Float>])",
                "type": "init"
              }
            ],
            "path": "/documentation/gameplaykit/gkpolygonobstacle",
            "title": "GKPolygonObstacle",
            "type": "class"
          },
          {
            "title": "Procedural Noise",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/gameplaykit/gknoisesource",
            "title": "GKNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(_:)",
                "title": "convenience init(GKNoiseSource)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(_:gradientcolors:)",
                "title": "init(GKNoiseSource, gradientColors: [NSNumber : UIColor])",
                "type": "init"
              },
              {
                "title": "Creating Noise by Combining Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(componentnoises:selectionnoise:)",
                "title": "convenience init(componentNoises: [GKNoise], selectionNoise: GKNoise)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init(componentnoises:selectionnoise:componentboundaries:boundaryblenddistances:)",
                "title": "convenience init(componentNoises: [GKNoise], selectionNoise: GKNoise, componentBoundaries: [NSNumber], boundaryBlendDistances: [NSNumber])",
                "type": "init"
              },
              {
                "title": "Colorizing Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/gradientcolors",
                "title": "var gradientColors: [NSNumber : UIColor]",
                "type": "property"
              },
              {
                "title": "Applying Operations to Noise Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/applyabsolutevalue()",
                "title": "func applyAbsoluteValue()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/invert()",
                "title": "func invert()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/raisetopower(_:)-14715",
                "title": "func raiseToPower(Double)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/clamp(lowerbound:upperbound:)",
                "title": "func clamp(lowerBound: Double, upperBound: Double)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/remapvalues(tocurvewithcontrolpoints:)",
                "title": "func remapValues(toCurveWithControlPoints: [NSNumber : NSNumber])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/remapvalues(toterraceswithpeaks:terracesinverted:)",
                "title": "func remapValues(toTerracesWithPeaks: [NSNumber], terracesInverted: Bool)",
                "type": "method"
              },
              {
                "title": "Applying Operations that Combine Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/add(_:)",
                "title": "func add(GKNoise)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/multiply(_:)",
                "title": "func multiply(GKNoise)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/raisetopower(_:)-zm5g",
                "title": "func raiseToPower(GKNoise)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/maximum(_:)",
                "title": "func maximum(GKNoise)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/minimum(_:)",
                "title": "func minimum(GKNoise)",
                "type": "method"
              },
              {
                "title": "Applying Operations that Distort Noise",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/displacewithnoises(x:y:z:)",
                "title": "func displaceWithNoises(x: GKNoise, y: GKNoise, z: GKNoise)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/applyturbulence(frequency:power:roughness:seed:)",
                "title": "func applyTurbulence(frequency: Double, power: Double, roughness: Int32, seed: Int32)",
                "type": "method"
              },
              {
                "title": "Applying Geometric Transformations",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/move(by:)",
                "title": "func move(by: vector_double3)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/rotate(by:)",
                "title": "func rotate(by: vector_double3)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/scale(by:)",
                "title": "func scale(by: vector_double3)",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/init()",
                "title": "convenience init()",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoise/value(atposition:)",
                "title": "func value(atPosition: vector_float2) -> Float",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gknoise",
            "title": "GKNoise",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/init(_:)",
                "title": "convenience init(GKNoise)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/init(_:size:origin:samplecount:seamless:)",
                "title": "init(GKNoise, size: vector_double2, origin: vector_double2, sampleCount: vector_int2, seamless: Bool)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/init()",
                "title": "convenience init()",
                "type": "init"
              },
              {
                "title": "Accessing Noise Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/value(at:)",
                "title": "func value(at: vector_int2) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/interpolatedvalue(at:)",
                "title": "func interpolatedValue(at: vector_float2) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/setvalue(_:at:)",
                "title": "func setValue(Float, at: vector_int2)",
                "type": "method"
              },
              {
                "title": "Inspecting a Noise Map",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/size",
                "title": "var size: vector_double2",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/origin",
                "title": "var origin: vector_double2",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/samplecount",
                "title": "var sampleCount: vector_int2",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknoisemap/isseamless",
                "title": "var isSeamless: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gknoisemap",
            "title": "GKNoiseMap",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/frequency",
                "title": "var frequency: Double",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/octavecount",
                "title": "var octaveCount: Int",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/lacunarity",
                "title": "var lacunarity: Double",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkcoherentnoisesource/seed",
                "title": "var seed: Int32",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcoherentnoisesource",
            "title": "GKCoherentNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkbillownoisesource/init(frequency:octavecount:persistence:lacunarity:seed:)",
                "title": "init(frequency: Double, octaveCount: Int, persistence: Double, lacunarity: Double, seed: Int32)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkbillownoisesource/persistence",
                "title": "var persistence: Double",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkbillownoisesource",
            "title": "GKBillowNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkperlinnoisesource/init(frequency:octavecount:persistence:lacunarity:seed:)",
                "title": "init(frequency: Double, octaveCount: Int, persistence: Double, lacunarity: Double, seed: Int32)",
                "type": "init"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkperlinnoisesource/persistence",
                "title": "var persistence: Double",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkperlinnoisesource",
            "title": "GKPerlinNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkridgednoisesource/init(frequency:octavecount:lacunarity:seed:)",
                "title": "init(frequency: Double, octaveCount: Int, lacunarity: Double, seed: Int32)",
                "type": "init"
              }
            ],
            "path": "/documentation/gameplaykit/gkridgednoisesource",
            "title": "GKRidgedNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/init(frequency:displacement:distanceenabled:seed:)",
                "title": "init(frequency: Double, displacement: Double, distanceEnabled: Bool, seed: Int32)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/voronoinoise(withfrequency:displacement:distanceenabled:seed:)",
                "title": "class func voronoiNoise(withFrequency: Double, displacement: Double, distanceEnabled: Bool, seed: Int32) -> Self",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/frequency",
                "title": "var frequency: Double",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/displacement",
                "title": "var displacement: Double",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/isdistanceenabled",
                "title": "var isDistanceEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkvoronoinoisesource/seed",
                "title": "var seed: Int32",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkvoronoinoisesource",
            "title": "GKVoronoiNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcylindersnoisesource/init(frequency:)",
                "title": "init(frequency: Double)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkcylindersnoisesource/cylindersnoise(withfrequency:)",
                "title": "class func cylindersNoise(withFrequency: Double) -> Self",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcylindersnoisesource/frequency",
                "title": "var frequency: Double",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcylindersnoisesource",
            "title": "GKCylindersNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkspheresnoisesource/init(frequency:)",
                "title": "init(frequency: Double)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkspheresnoisesource/spheresnoise(withfrequency:)",
                "title": "class func spheresNoise(withFrequency: Double) -> Self",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkspheresnoisesource/frequency",
                "title": "var frequency: Double",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkspheresnoisesource",
            "title": "GKSpheresNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcheckerboardnoisesource/init(squaresize:)",
                "title": "init(squareSize: Double)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkcheckerboardnoisesource/checkerboardnoise(withsquaresize:)",
                "title": "class func checkerboardNoise(withSquareSize: Double) -> Self",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkcheckerboardnoisesource/squaresize",
                "title": "var squareSize: Double",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkcheckerboardnoisesource",
            "title": "GKCheckerboardNoiseSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Noise Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkconstantnoisesource/init(value:)",
                "title": "init(value: Double)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkconstantnoisesource/constantnoise(withvalue:)",
                "title": "class func constantNoise(withValue: Double) -> Self",
                "type": "method"
              },
              {
                "title": "Managing Noise Generation Parameters",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkconstantnoisesource/value",
                "title": "var value: Double",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkconstantnoisesource",
            "title": "GKConstantNoiseSource",
            "type": "class"
          },
          {
            "title": "Randomization",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Generating Random Numbers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextint()",
                "title": "func nextInt() -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextint(upperbound:)",
                "title": "func nextInt(upperBound: Int) -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextuniform()",
                "title": "func nextUniform() -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandom/nextbool()",
                "title": "func nextBool() -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkrandom",
            "title": "GKRandom",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating an Independent Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Randomly Shuffling an Array",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/arraybyshufflingobjects(in:)",
                "title": "func arrayByShufflingObjects(in: [Any]) -> [Any]",
                "type": "method"
              },
              {
                "title": "Using a Shared Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/sharedrandom()",
                "title": "class func sharedRandom() -> GKRandomSource",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomsource/init(coder:)",
                "title": "init(coder: NSCoder)",
                "type": "init"
              }
            ],
            "path": "/documentation/gameplaykit/gkrandomsource",
            "title": "GKRandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/init()",
                "title": "convenience init()",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/init(seed:)",
                "title": "init(seed: Data)",
                "type": "init"
              },
              {
                "title": "Replicating Random Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/seed",
                "title": "var seed: Data",
                "type": "property"
              },
              {
                "title": "Avoiding Predictable Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkarc4randomsource/dropvalues(_:)",
                "title": "func dropValues(Int)",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkarc4randomsource",
            "title": "GKARC4RandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource/init()",
                "title": "convenience init()",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource/init(seed:)",
                "title": "init(seed: UInt64)",
                "type": "init"
              },
              {
                "title": "Replicating Random Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource/seed",
                "title": "var seed: UInt64",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gklinearcongruentialrandomsource",
            "title": "GKLinearCongruentialRandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Source",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource/init()",
                "title": "convenience init()",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource/init(seed:)",
                "title": "init(seed: UInt64)",
                "type": "init"
              },
              {
                "title": "Replicating Random Behavior",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource/seed",
                "title": "var seed: UInt64",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkmersennetwisterrandomsource",
            "title": "GKMersenneTwisterRandomSource",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/init(randomsource:lowestvalue:highestvalue:)",
                "title": "init(randomSource: any GKRandom, lowestValue: Int, highestValue: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/init(lowestvalue:highestvalue:)",
                "title": "convenience init(lowestValue: Int, highestValue: Int)",
                "type": "init"
              },
              {
                "title": "Creating Specific Random Distributions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/d6()",
                "title": "class func d6() -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/d20()",
                "title": "class func d20() -> Self",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/init(fordiewithsidecount:)",
                "title": "convenience init(forDieWithSideCount: Int)",
                "type": "init"
              },
              {
                "title": "Generating Random Numbers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextint()",
                "title": "func nextInt() -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextint(upperbound:)",
                "title": "func nextInt(upperBound: Int) -> Int",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextuniform()",
                "title": "func nextUniform() -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/nextbool()",
                "title": "func nextBool() -> Bool",
                "type": "method"
              },
              {
                "title": "Working with Characteristics of a Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/lowestvalue",
                "title": "var lowestValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/highestvalue",
                "title": "var highestValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrandomdistribution/numberofpossibleoutcomes",
                "title": "var numberOfPossibleOutcomes: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkrandomdistribution",
            "title": "GKRandomDistribution",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Random Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/init(randomsource:lowestvalue:highestvalue:)",
                "title": "init(randomSource: any GKRandom, lowestValue: Int, highestValue: Int)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/init(randomsource:mean:deviation:)",
                "title": "init(randomSource: any GKRandom, mean: Float, deviation: Float)",
                "type": "init"
              },
              {
                "title": "Working with Characteristics of a Distribution",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/mean",
                "title": "var mean: Float",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkgaussiandistribution/deviation",
                "title": "var deviation: Float",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkgaussiandistribution",
            "title": "GKGaussianDistribution",
            "type": "class"
          },
          {
            "path": "/documentation/gameplaykit/gkshuffleddistribution",
            "title": "GKShuffledDistribution",
            "type": "class"
          },
          {
            "title": "Rule Systems",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating Data-Driven Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/init(predicate:assertingfact:grade:)",
                "title": "convenience init(predicate: NSPredicate, assertingFact: any NSObjectProtocol, grade: Float)",
                "type": "init"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/init(predicate:retractingfact:grade:)",
                "title": "convenience init(predicate: NSPredicate, retractingFact: any NSObjectProtocol, grade: Float)",
                "type": "init"
              },
              {
                "title": "Creating Block-Based Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/init(blockpredicate:action:)",
                "title": "convenience init(blockPredicate: (GKRuleSystem) -> Bool, action: (GKRuleSystem) -> Void)",
                "type": "init"
              },
              {
                "title": "Setting the Order of Rules in a Rule System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/salience",
                "title": "var salience: Int",
                "type": "property"
              },
              {
                "title": "Evaluating a Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/evaluatepredicate(in:)",
                "title": "func evaluatePredicate(in: GKRuleSystem) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrule/performaction(in:)",
                "title": "func performAction(in: GKRuleSystem)",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkrule",
            "title": "GKRule",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Predicate-Based Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknspredicaterule/init(predicate:)",
                "title": "init(predicate: NSPredicate)",
                "type": "init"
              },
              {
                "title": "Evaluating a Rule",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gknspredicaterule/predicate",
                "title": "var predicate: NSPredicate",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gknspredicaterule/evaluatepredicate(in:)",
                "title": "func evaluatePredicate(in: GKRuleSystem) -> Bool",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gknspredicaterule",
            "title": "GKNSPredicateRule",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Rule System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Managing State Information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/state",
                "title": "var state: NSMutableDictionary",
                "type": "property"
              },
              {
                "title": "Managing a Systemâ€™s List of Rules",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/rules",
                "title": "var rules: [GKRule]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/add(_:)-76jb5",
                "title": "func add(GKRule)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/add(_:)-7u5zw",
                "title": "func add([GKRule])",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/removeallrules()",
                "title": "func removeAllRules()",
                "type": "method"
              },
              {
                "title": "Evaluating a Rule System",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/evaluate()",
                "title": "func evaluate()",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/agenda",
                "title": "var agenda: [GKRule]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/executed",
                "title": "var executed: [GKRule]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/reset()",
                "title": "func reset()",
                "type": "method"
              },
              {
                "title": "Asserting and Retracting Facts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/facts",
                "title": "var facts: [Any]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/assertfact(_:)",
                "title": "func assertFact(any NSObjectProtocol)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/assertfact(_:grade:)",
                "title": "func assertFact(any NSObjectProtocol, grade: Float)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/retractfact(_:)",
                "title": "func retractFact(any NSObjectProtocol)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/retractfact(_:grade:)",
                "title": "func retractFact(any NSObjectProtocol, grade: Float)",
                "type": "method"
              },
              {
                "title": "Drawing Conclusions from Facts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/grade(forfact:)",
                "title": "func grade(forFact: any NSObjectProtocol) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/minimumgrade(forfacts:)",
                "title": "func minimumGrade(forFacts: [Any]) -> Float",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkrulesystem/maximumgrade(forfacts:)",
                "title": "func maximumGrade(forFacts: [Any]) -> Float",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkrulesystem",
            "title": "GKRuleSystem",
            "type": "class"
          },
          {
            "title": "Xcode and SpriteKit Integration",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Loading a Scene File",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/init(filenamed:)",
                "title": "convenience init?(fileNamed: String)",
                "type": "init"
              },
              {
                "title": "Accessing the SpriteKit Scene",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/rootnode",
                "title": "var rootNode: (any GKSceneRootNodeType)?",
                "type": "property"
              },
              {
                "title": "Managing Entities and Components",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/entities",
                "title": "var entities: [GKEntity]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/addentity(_:)",
                "title": "func addEntity(GKEntity)",
                "type": "method"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/removeentity(_:)",
                "title": "func removeEntity(GKEntity)",
                "type": "method"
              },
              {
                "title": "Managing Pathfinding Graphs",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/graphs",
                "title": "var graphs: [String : GKGraph]",
                "type": "property"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/removegraph(_:)",
                "title": "func removeGraph(String)",
                "type": "method"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/init(filenamed:rootnode:)",
                "title": "convenience init?(fileNamed: String, rootNode: any GKSceneRootNodeType)",
                "type": "init"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscene/addgraph(_:name:)",
                "title": "func addGraph(GKGraph, name: String)",
                "type": "method"
              }
            ],
            "path": "/documentation/gameplaykit/gkscene",
            "title": "GKScene",
            "type": "class"
          },
          {
            "path": "/documentation/gameplaykit/gkscenerootnodetype",
            "title": "GKSceneRootNodeType",
            "type": "protocol"
          },
          {
            "children": [
              {
                "title": "Creating a SpriteKit Component",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksknodecomponent/init(node:)",
                "title": "init(node: SKNode)",
                "type": "init"
              },
              {
                "title": "Accessing the Componentâ€™s SpriteKit Node",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gksknodecomponent/node",
                "title": "var node: SKNode",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gksknodecomponent",
            "title": "GKSKNodeComponent",
            "type": "class"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelmaxscore",
                "title": "let GKGameModelMaxScore: Int",
                "type": "var"
              },
              {
                "path": "/documentation/gameplaykit/gkgamemodelminscore",
                "title": "let GKGameModelMinScore: Int",
                "type": "var"
              },
              {
                "title": "Macros",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gk_version",
                "title": "var GK_VERSION: Int32",
                "type": "var"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-constants",
            "title": "GameplayKit Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/init(boxmin:boxmax:)",
                    "title": "init(boxMin: vector_float3, boxMax: vector_float3)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmax",
                    "title": "var boxMax: vector_float3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkbox/boxmin",
                    "title": "var boxMin: vector_float3",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkbox",
                "title": "GKBox",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/vertices",
                    "title": "static var vertices: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/centers",
                    "title": "static var centers: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/edgemidpoints",
                    "title": "static var edgeMidpoints: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode",
                "title": "GKMeshGraphTriangulationMode",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/init(quadmin:quadmax:)",
                    "title": "init(quadMin: vector_float2, quadMax: vector_float2)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmax",
                    "title": "var quadMax: vector_float2",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkquad/quadmin",
                    "title": "var quadMin: vector_float2",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gkquad",
                "title": "GKQuad",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/init(points:)",
                    "title": "init(points: (vector_float3, vector_float3, vector_float3))",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gktriangle/points",
                    "title": "var points: (vector_float3, vector_float3, vector_float3)",
                    "type": "property"
                  }
                ],
                "path": "/documentation/gameplaykit/gktriangle",
                "title": "GKTriangle",
                "type": "struct"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-structures",
            "title": "GameplayKit Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/vertices",
                    "title": "static var vertices: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/centers",
                    "title": "static var centers: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/edgemidpoints",
                    "title": "static var edgeMidpoints: GKMeshGraphTriangulationMode",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/gameplaykit/gkmeshgraphtriangulationmode",
                "title": "GKMeshGraphTriangulationMode",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/halve",
                    "title": "case halve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/quadratic",
                    "title": "case quadratic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/reduceoverlap",
                    "title": "case reduceOverlap",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/gameplaykit/gkrtreesplitstrategy/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/gameplaykit/gkrtreesplitstrategy",
                "title": "GKRTreeSplitStrategy",
                "type": "enum"
              }
            ],
            "path": "/documentation/gameplaykit/gameplaykit-enumerations",
            "title": "GameplayKit Enumerations",
            "type": "collection"
          },
          {
            "title": "Classes",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscnnodecomponent/init(node:)",
                "title": "init(node: SCNNode)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/gameplaykit/gkscnnodecomponent/node",
                "title": "var node: SCNNode",
                "type": "property"
              }
            ],
            "path": "/documentation/gameplaykit/gkscnnodecomponent",
            "title": "GKSCNNodeComponent",
            "type": "class"
          }
        ],
        "path": "/documentation/gameplaykit",
        "title": "GameplayKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
