{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/metal/performing-calculations-on-a-gpu",
            "title": "Performing Calculations on a GPU",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
            "title": "Using Metal to Draw a View’s Contents",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
            "title": "Using a Render Pipeline to Render Primitives",
            "type": "sampleCode"
          },
          {
            "title": "Samples",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Compute Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/performing-calculations-on-a-gpu",
                "title": "Performing Calculations on a GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/selecting-device-objects-for-compute-processing",
                "title": "Selecting Device Objects for Compute Processing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-a-tensorflow-operation",
                "title": "Customizing a TensorFlow operation",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-a-pytorch-operation",
                "title": "Customizing a PyTorch operation",
                "type": "sampleCode"
              },
              {
                "title": "Render Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
                "title": "Using Metal to Draw a View’s Contents",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
                "title": "Using a Render Pipeline to Render Primitives",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/selecting-device-objects-for-graphics-rendering",
                "title": "Selecting Device Objects for Graphics Rendering",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-render-pass-setup",
                "title": "Customizing Render Pass Setup",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-a-custom-metal-view",
                "title": "Creating a Custom Metal View",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/calculating-primitive-visibility-using-depth-testing",
                "title": "Calculating Primitive Visibility Using Depth Testing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-cpu",
                "title": "Encoding Indirect Command Buffers on the CPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-order-independent-transparency-with-image-blocks",
                "title": "Implementing Order-Independent Transparency with Image Blocks",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/loading-textures-and-models-using-metal-fast-resource-loading",
                "title": "Loading textures and models using Metal fast resource loading",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/adjusting-the-level-of-detail-using-metal-mesh-shaders",
                "title": "Adjusting the level of detail using Metal mesh shaders",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-a-3d-application-with-hydra-rendering",
                "title": "Creating a 3D application with Hydra rendering",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/culling-occluded-geometry-using-the-visibility-result-buffer",
                "title": "Culling occluded geometry using the visibility result buffer",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/improving-edge-rendering-quality-with-multisample-antialiasing-msaa",
                "title": "Improving edge-rendering quality with multisample antialiasing (MSAA)",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/achieving-smooth-frame-rates-with-metal-s-display-link",
                "title": "Achieving smooth frame rates with Metal’s display link",
                "type": "sampleCode"
              },
              {
                "title": "Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-a-texture-in-a-compute-function",
                "title": "Processing a Texture in a Compute Function",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/reading-pixel-data-from-a-drawable-texture",
                "title": "Reading Pixel Data from a Drawable Texture",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-and-sampling-textures",
                "title": "Creating and Sampling Textures",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/streaming-large-images-with-metal-sparse-textures",
                "title": "Streaming large images with Metal sparse textures",
                "type": "sampleCode"
              },
              {
                "title": "Argument Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/managing-groups-of-resources-with-argument-buffers",
                "title": "Managing groups of resources with argument buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-argument-buffers-on-the-gpu",
                "title": "Encoding Argument Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-terrain-dynamically-with-argument-buffers",
                "title": "Rendering Terrain Dynamically with Argument Buffers",
                "type": "sampleCode"
              },
              {
                "title": "Shaders",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-metal-dynamic-library",
                "title": "Creating a Metal Dynamic Library",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-function-specialization-to-build-pipeline-variants",
                "title": "Using Function Specialization to Build Pipeline Variants",
                "type": "sampleCode"
              },
              {
                "title": "Synchronization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/synchronizing-cpu-and-gpu-work",
                "title": "Synchronizing CPU and GPU Work",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "title": "Lighting Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-forward-plus-lighting-using-tile-shaders",
                "title": "Rendering a Scene with Forward Plus Lighting Using Tile Shaders",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-objective-c",
                "title": "Rendering a Scene with Deferred Lighting in Objective-C",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-swift",
                "title": "Rendering a Scene with Deferred Lighting in Swift",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-c++",
                "title": "Rendering a Scene with Deferred Lighting in C++",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-reflections-with-fewer-render-passes",
                "title": "Rendering Reflections with Fewer Render Passes",
                "type": "sampleCode"
              },
              {
                "title": "Multiple Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/modern-rendering-with-metal",
                "title": "Modern Rendering with Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-gpu",
                "title": "Encoding Indirect Command Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "title": "Ray Tracing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-reflections-in-real-time-using-ray-tracing",
                "title": "Rendering reflections in real time using ray tracing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-using-metal",
                "title": "Accelerating ray tracing using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/control-the-ray-tracing-process-using-intersection-queries",
                "title": "Control the Ray Tracing Process Using Intersection Queries",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-and-motion-blur-using-metal",
                "title": "Accelerating ray tracing and motion blur using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-curve-primitive-in-a-ray-tracing-scene",
                "title": "Rendering a curve primitive in a ray tracing scene",
                "type": "sampleCode"
              },
              {
                "title": "HDR",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-hdr-images-with-metal",
                "title": "Processing HDR Images with Metal",
                "type": "sampleCode"
              },
              {
                "title": "OpenGL",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/migrating-opengl-code-to-metal",
                "title": "Migrating OpenGL Code to Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/mixing-metal-and-opengl-rendering-in-a-view",
                "title": "Mixing Metal and OpenGL Rendering in a View",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/metal/metal-sample-code-library",
            "title": "Metal Sample Code Library",
            "type": "collection"
          },
          {
            "title": "GPU Devices",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Locating and Inspecting a GPU Device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/getting-the-default-gpu",
                "title": "Getting the Default GPU",
                "type": "article"
              },
              {
                "path": "/documentation/metal/detecting-gpu-features-and-metal-software-versions",
                "title": "Detecting GPU Features and Metal Software Versions",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Locating GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/finding-multiple-gpus-on-an-intel-based-mac",
                    "title": "Finding Multiple GPUs on an Intel-based Mac",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/getting-the-gpu-that-drives-a-views-display",
                    "title": "Getting the GPU that Drives a View’s Display",
                    "type": "article"
                  },
                  {
                    "title": "Selecting GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/adjusting-for-gpu-memory-bandwidth-tradeoffs",
                    "title": "Adjusting for GPU Memory Bandwidth Tradeoffs",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/assessing-multi-gpu-and-multi-display-setups-on-an-intel-based-mac",
                    "title": "Assessing Multi-GPU and Multi-Display Setups on an Intel-Based Mac",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/selecting-device-objects-for-graphics-rendering",
                    "title": "Selecting Device Objects for Graphics Rendering",
                    "type": "sampleCode"
                  },
                  {
                    "path": "/documentation/metal/selecting-device-objects-for-compute-processing",
                    "title": "Selecting Device Objects for Compute Processing",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Working with External GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/handling-external-gpu-additions-and-removals",
                    "title": "Handling External GPU Additions and Removals",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/transferring-data-between-connected-gpus",
                    "title": "Transferring Data Between Connected GPUs",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/transferring-data-with-infinity-fabric-link",
                    "title": "Transferring Data with Infinity Fabric Link",
                    "type": "sampleCode"
                  }
                ],
                "path": "/documentation/metal/multi-gpu-systems",
                "title": "Multi-GPU Systems",
                "type": "collection"
              },
              {
                "title": "Submitting Work to a GPU",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/setting-up-a-command-structure",
                "title": "Setting Up a Command Structure",
                "type": "article"
              },
              {
                "title": "Suspending Work on a GPU",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/preparing-your-metal-app-to-run-in-the-background",
                "title": "Preparing Your Metal App to Run in the Background",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/gpu-devices-and-work-submission",
            "title": "GPU Devices and Work Submission",
            "type": "collection"
          },
          {
            "title": "Command Encoders",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Encoding a Render Pass",
                "type": "groupMarker"
              },
              {
                "title": "Encoding a Render Pass in Parallel",
                "type": "groupMarker"
              },
              {
                "title": "Configuring a Render Command Encoder",
                "type": "groupMarker"
              },
              {
                "title": "Render Pipeline States",
                "type": "groupMarker"
              },
              {
                "title": "Dynamic Render Pipeline States",
                "type": "groupMarker"
              },
              {
                "title": "Render Pass Inputs",
                "type": "groupMarker"
              },
              {
                "title": "Render Pass Outputs",
                "type": "groupMarker"
              },
              {
                "title": "Depth Testing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/calculating-primitive-visibility-using-depth-testing",
                "title": "Calculating Primitive Visibility Using Depth Testing",
                "type": "sampleCode"
              },
              {
                "title": "Rasterization Settings",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-at-different-rasterization-rates",
                "title": "Rendering at Different Rasterization Rates",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-a-rasterization-rate-map",
                "title": "Creating a Rasterization Rate Map",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-with-a-rasterization-rate-map",
                "title": "Rendering with a Rasterization Rate Map",
                "type": "article"
              },
              {
                "path": "/documentation/metal/scaling-variable-rasterization-rate-content",
                "title": "Scaling Variable Rasterization Rate Content",
                "type": "article"
              },
              {
                "title": "Optimizing Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/specifying-drawing-and-dispatch-arguments-indirectly",
                "title": "Specifying Drawing and Dispatch Arguments Indirectly",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-to-multiple-viewports-in-a-draw-command",
                "title": "Rendering to Multiple Viewports in a Draw Command",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-to-multiple-texture-slices-in-a-draw-command",
                "title": "Rendering to Multiple Texture Slices in a Draw Command",
                "type": "article"
              },
              {
                "title": "Advanced Multisampling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/positioning-samples-programmatically",
                "title": "Positioning Samples Programmatically",
                "type": "article"
              },
              {
                "path": "/documentation/metal/storing-data-a-pass-makes-with-custom-sample-positions-for-a-subsequent-pass",
                "title": "Storing Data a Pass Makes with Custom Sample Positions for a Subsequent Pass",
                "type": "article"
              },
              {
                "title": "Applying Rendering Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
                "title": "Using a Render Pipeline to Render Primitives",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-render-pass-setup",
                "title": "Customizing Render Pass Setup",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/setting-load-and-store-actions",
                "title": "Setting Load and Store Actions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/improving-rendering-performance-with-vertex-amplification",
                "title": "Improving Rendering Performance with Vertex Amplification",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/render-passes",
            "title": "Render Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/performing-calculations-on-a-gpu",
                "title": "Performing Calculations on a GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/processing-a-texture-in-a-compute-function",
                "title": "Processing a Texture in a Compute Function",
                "type": "sampleCode"
              },
              {
                "title": "Encoding a Compute Pass",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-threads-and-threadgroups",
                "title": "Creating Threads and Threadgroups",
                "type": "article"
              },
              {
                "path": "/documentation/metal/calculating-threadgroup-and-grid-sizes",
                "title": "Calculating Threadgroup and Grid Sizes",
                "type": "article"
              },
              {
                "title": "Configuring a Compute Pipeline State",
                "type": "groupMarker"
              },
              {
                "title": "Configuring a Compute Pass",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/compute-passes",
            "title": "Compute Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Encoding a Blit Pass",
                "type": "groupMarker"
              },
              {
                "title": "Configuring a Blit Command Encoder",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/blit-passes",
            "title": "Blit Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Indirect Command Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-an-indirect-command-buffer",
                "title": "Creating an Indirect Command Buffer",
                "type": "article"
              },
              {
                "path": "/documentation/metal/specifying-drawing-and-dispatch-arguments-indirectly",
                "title": "Specifying Drawing and Dispatch Arguments Indirectly",
                "type": "article"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-cpu",
                "title": "Encoding Indirect Command Buffers on the CPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-gpu",
                "title": "Encoding Indirect Command Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "title": "Indirect Compute Commands",
                "type": "groupMarker"
              },
              {
                "title": "Render Compute Commands",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/indirect-command-encoding",
            "title": "Indirect Command Encoding",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Ray Tracing Samples",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-using-metal",
                "title": "Accelerating ray tracing using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/control-the-ray-tracing-process-using-intersection-queries",
                "title": "Control the Ray Tracing Process Using Intersection Queries",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-reflections-in-real-time-using-ray-tracing",
                "title": "Rendering reflections in real time using ray tracing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-curve-primitive-in-a-ray-tracing-scene",
                "title": "Rendering a curve primitive in a ray tracing scene",
                "type": "sampleCode"
              },
              {
                "title": "Acceleration Structures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-ray-tracing-data-access-using-per-primitive-data",
                "title": "Improving Ray-Tracing Data Access Using Per-Primitive Data",
                "type": "article"
              },
              {
                "title": "Acceleration Structures Passes",
                "type": "groupMarker"
              },
              {
                "title": "Geometry Descriptors",
                "type": "groupMarker"
              },
              {
                "title": "Motion Geometry Descriptors",
                "type": "groupMarker"
              },
              {
                "title": "Instance Descriptors",
                "type": "groupMarker"
              },
              {
                "title": "Intersection Function Tables",
                "type": "groupMarker"
              },
              {
                "title": "Supporting Types",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/ray-tracing-with-acceleration-structures",
            "title": "Ray Tracing with Acceleration Structures",
            "type": "collection"
          },
          {
            "title": "Resources",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Resource Management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/setting-resource-storage-modes",
                "title": "Setting Resource Storage Modes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/choosing-a-resource-storage-mode-for-apple-gpus",
                "title": "Choosing a Resource Storage Mode for Apple GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus",
                "title": "Choosing a Resource Storage Mode for Intel and AMD GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/copying-data-to-a-private-resource",
                "title": "Copying Data to a Private Resource",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-a-managed-resource-in-macos",
                "title": "Synchronizing a Managed Resource in macOS",
                "type": "article"
              },
              {
                "path": "/documentation/metal/transferring-data-between-connected-gpus",
                "title": "Transferring Data Between Connected GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/reducing-the-memory-footprint-of-metal-apps",
                "title": "Reducing the Memory Footprint of Metal Apps",
                "type": "article"
              },
              {
                "title": "Residency Sets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/simplifying-gpu-resource-management-with-residency-sets",
                "title": "Simplifying GPU Resource Management with Residency Sets",
                "type": "article"
              },
              {
                "title": "Common Resource Functionality",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/resource-fundamentals",
            "title": "Resource Fundamentals",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "General Purpose Buffers",
                "type": "groupMarker"
              },
              {
                "title": "Argument Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-cpu-performance-by-using-argument-buffers",
                "title": "Improving CPU Performance by Using Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/managing-groups-of-resources-with-argument-buffers",
                "title": "Managing groups of resources with argument buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/tracking-the-resource-residency-of-argument-buffers",
                "title": "Tracking the Resource Residency of Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/indexing-argument-buffers",
                "title": "Indexing Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-terrain-dynamically-with-argument-buffers",
                "title": "Rendering Terrain Dynamically with Argument Buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-argument-buffers-on-the-gpu",
                "title": "Encoding Argument Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "title": "Model I/O Interoperability",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/buffers",
            "title": "Buffers",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Texture Basics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/understanding-color-renderable-pixel-format-sizes",
                "title": "Understanding Color-Renderable Pixel Format Sizes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/optimizing-texture-data",
                "title": "Optimizing Texture Data",
                "type": "article"
              },
              {
                "title": "Texture Samplers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-and-sampling-textures",
                "title": "Creating and Sampling Textures",
                "type": "sampleCode"
              },
              {
                "title": "Texture Mipmapping",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-texture-sampling-quality-and-performance-with-mipmaps",
                "title": "Improving Texture Sampling Quality and Performance with Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-a-mipmapped-texture",
                "title": "Creating a Mipmapped Texture",
                "type": "article"
              },
              {
                "path": "/documentation/metal/copying-data-into-or-out-of-mipmaps",
                "title": "Copying Data into or out of Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/generating-mipmap-data",
                "title": "Generating Mipmap Data",
                "type": "article"
              },
              {
                "path": "/documentation/metal/adding-mipmap-filtering-to-samplers",
                "title": "Adding Mipmap Filtering to Samplers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/restricting-access-to-specific-mipmaps",
                "title": "Restricting Access to Specific Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/predicting-which-mips-the-gpu-samples-with-level-of-detail-queries",
                "title": "Predicting Which Mips the GPU Samples with Level-of-Detail Queries",
                "type": "article"
              },
              {
                "path": "/documentation/metal/dynamically-adjusting-texture-level-of-detail",
                "title": "Dynamically Adjusting Texture Level of Detail",
                "type": "article"
              },
              {
                "title": "Sparse Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/managing-sparse-texture-memory",
                "title": "Managing Sparse Texture Memory",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-sparse-heaps-and-sparse-textures",
                "title": "Creating Sparse Heaps and Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/converting-between-pixel-regions-and-sparse-tile-regions",
                "title": "Converting Between Pixel Regions and Sparse Tile Regions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/assigning-memory-to-sparse-textures",
                "title": "Assigning Memory to Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/reading-and-writing-to-sparse-textures",
                "title": "Reading and Writing to Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/estimating-how-often-a-texture-region-is-accessed",
                "title": "Estimating How Often a Texture Region Is Accessed",
                "type": "article"
              },
              {
                "title": "Texture Loading",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/textures",
            "title": "Textures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Resource Memory Allocation and Management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/metal/memory-heaps",
            "title": "Memory Heaps",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "I/O Command Queues",
                "type": "groupMarker"
              },
              {
                "title": "I/O Command Buffers",
                "type": "groupMarker"
              },
              {
                "title": "Asset Compression",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/resource-loading",
            "title": "Resource Loading",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Synchronization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/synchronizing-cpu-and-gpu-work",
                "title": "Synchronizing CPU and GPU Work",
                "type": "sampleCode"
              },
              {
                "title": "Memory Barriers and Fences",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "title": "Signal Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/about-synchronization-events",
                "title": "About Synchronization Events",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-within-a-single-device",
                "title": "Synchronizing Events Within a Single Device",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-across-multiple-devices-or-processes",
                "title": "Synchronizing Events Across Multiple Devices or Processes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-between-a-gpu-and-the-cpu",
                "title": "Synchronizing Events Between a GPU and the CPU",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/resource-synchronization",
            "title": "Resource Synchronization",
            "type": "collection"
          },
          {
            "title": "Shaders",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/stepping-through-code-and-inspecting-variables-to-isolate-bugs",
            "title": "Stepping through code and inspecting variables to isolate bugs",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/optimizing-gpu-performance",
            "title": "Optimizing GPU performance",
            "type": "article"
          },
          {
            "path": "/documentation/metal/logging-shader-debug-messages",
            "title": "Logging shader debug messages",
            "type": "article"
          },
          {
            "path": "/documentation/metal/using-function-specialization-to-build-pipeline-variants",
            "title": "Using Function Specialization to Build Pipeline Variants",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Shader Compilation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Intermediate Representation Libraries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/building-a-shader-library-by-precompiling-source-files",
                    "title": "Building a Shader Library by Precompiling Source Files",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/minimizing-the-binary-size-of-a-shader-library",
                    "title": "Minimizing the Binary Size of a Shader Library",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/generating-and-loading-a-metal-library-symbol-file",
                    "title": "Generating and Loading a Metal Library Symbol File",
                    "type": "article"
                  }
                ],
                "path": "/documentation/metal/metal-libraries",
                "title": "Metal Libraries",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Dynamic Libraries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/compiling-and-linking-metal-dynamic-libraries",
                    "title": "Compiling and Linking Metal Dynamic Libraries",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/creating-a-metal-dynamic-library",
                    "title": "Creating a Metal Dynamic Library",
                    "type": "sampleCode"
                  }
                ],
                "path": "/documentation/metal/metal-dynamic-libraries",
                "title": "Metal Dynamic Libraries",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Binary Archives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/creating-binary-archives-from-device-built-pipeline-state-objects",
                    "title": "Creating Binary Archives from Device-Built Pipeline State Objects",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/manipulating-metal-binary-archives",
                    "title": "Manipulating Metal Binary Archives",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/compiling-binary-archives-from-a-custom-configuration-script",
                    "title": "Compiling Binary Archives from a Custom Configuration Script",
                    "type": "article"
                  }
                ],
                "path": "/documentation/metal/metal-binary-archives",
                "title": "Metal Binary Archives",
                "type": "collection"
              },
              {
                "title": "Shader Library Management",
                "type": "groupMarker"
              },
              {
                "title": "Shader Functions",
                "type": "groupMarker"
              },
              {
                "title": "Stitched Function Libraries",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/customizing-shaders-using-function-pointers-and-stitching",
                "title": "Customizing shaders using function pointers and stitching",
                "type": "sampleCode"
              },
              {
                "title": "Compile-Time Variant Functions",
                "type": "groupMarker"
              },
              {
                "title": "Introspection Data",
                "type": "groupMarker"
              },
              {
                "title": "Function Arguments",
                "type": "groupMarker"
              },
              {
                "title": "Shader Types",
                "type": "groupMarker"
              },
              {
                "title": "Shader Logging",
                "type": "groupMarker"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/shader-libraries",
            "title": "Shader Libraries",
            "type": "collection"
          },
          {
            "title": "Presentation",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Presenting with Core Animation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-custom-metal-view",
                "title": "Creating a Custom Metal View",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/reading-pixel-data-from-a-drawable-texture",
                "title": "Reading Pixel Data from a Drawable Texture",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/achieving-smooth-frame-rates-with-metal-s-display-link",
                "title": "Achieving smooth frame rates with Metal’s display link",
                "type": "sampleCode"
              },
              {
                "title": "Presenting with MetalKit",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
                "title": "Using Metal to Draw a View’s Contents",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/metal/onscreen-presentation",
            "title": "Onscreen Presentation",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "High Dynamic Range Content",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-hdr-images-with-metal",
                "title": "Processing HDR Images with Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/displaying-hdr-content-in-a-metal-layer",
                "title": "Displaying HDR Content in a Metal Layer",
                "type": "article"
              },
              {
                "path": "/documentation/metal/determining-support-for-edr-values",
                "title": "Determining Support for EDR Values",
                "type": "article"
              },
              {
                "path": "/documentation/metal/using-color-spaces-to-display-hdr-content",
                "title": "Using Color Spaces to Display HDR Content",
                "type": "article"
              },
              {
                "path": "/documentation/metal/using-system-tone-mapping-on-video-content",
                "title": "Using System Tone Mapping on Video Content",
                "type": "article"
              },
              {
                "path": "/documentation/metal/performing-your-own-tone-mapping",
                "title": "Performing Your Own Tone Mapping",
                "type": "article"
              },
              {
                "path": "/documentation/metal/implementing-tone-mapping-on-reference-displays",
                "title": "Implementing Tone Mapping on Reference Displays",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/hdr-content",
            "title": "HDR Content",
            "type": "collection"
          },
          {
            "title": "User Interface",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/metal/managing-your-game-window-for-metal-in-macos",
            "title": "Managing your game window for Metal in macOS",
            "type": "article"
          },
          {
            "path": "/documentation/metal/adapting-your-game-interface-for-smaller-screens",
            "title": "Adapting your game interface for smaller screens",
            "type": "article"
          },
          {
            "title": "Developer Tools",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/metal-developer-workflows",
            "title": "Metal developer workflows",
            "type": "collection"
          },
          {
            "external": true,
            "path": "/documentation/xcode/metal-debugger",
            "title": "Metal debugger",
            "type": "collection"
          },
          {
            "path": "/documentation/metal/improving-your-games-graphics-performance-and-settings",
            "title": "Improving your game’s graphics performance and settings",
            "type": "article"
          },
          {
            "path": "/documentation/metal/capturing-metal-commands-programmatically",
            "title": "Capturing Metal Commands Programmatically",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/supporting-simulator-in-a-metal-app",
            "title": "Supporting Simulator in a Metal app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/xcode/analyzing-the-memory-usage-of-your-metal-app",
            "title": "Analyzing the memory usage of your Metal app",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/analyzing-the-performance-of-your-metal-app",
            "title": "Analyzing the performance of your Metal app",
            "type": "article"
          },
          {
            "path": "/documentation/metal/developing-metal-apps-that-run-in-simulator",
            "title": "Developing Metal apps that run in Simulator",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Counters and Counter Sets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/confirming-which-counters-and-counter-sets-a-gpu-supports",
                "title": "Confirming which Counters and Counter Sets a GPU Supports",
                "type": "article"
              },
              {
                "title": "Counter Sample Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-counter-sample-buffer-to-store-a-gpus-counter-data-during-a-pass",
                "title": "Creating a Counter Sample Buffer to Store a GPU’s Counter Data During a Pass",
                "type": "article"
              },
              {
                "path": "/documentation/metal/sampling-gpu-data-into-counter-sample-buffers",
                "title": "Sampling GPU Data into Counter Sample Buffers",
                "type": "article"
              },
              {
                "title": "Counter Sample Data Output",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/converting-a-gpus-counter-data-into-a-readable-format",
                "title": "Converting a GPU’s Counter Data into a Readable Format",
                "type": "article"
              },
              {
                "title": "Timestamp Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/converting-gpu-timestamps-into-cpu-time",
                "title": "Converting GPU Timestamps into CPU Time",
                "type": "article"
              },
              {
                "title": "Counter Sample Buffer Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/gpu-counters-and-counter-sample-buffers",
            "title": "GPU Counters and Counter Sample Buffers",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Frame Capture",
                "type": "groupMarker"
              },
              {
                "title": "Capture Errors",
                "type": "groupMarker"
              },
              {
                "title": "Shader Logs",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/metal-debugging-types",
            "title": "Metal Debugging Types",
            "type": "collection"
          },
          {
            "title": "Apple Silicon",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/apple-silicon/porting-your-metal-code-to-apple-silicon",
            "title": "Porting Your Metal Code to Apple Silicon",
            "type": "article"
          },
          {
            "path": "/documentation/metal/tailor-your-apps-for-apple-gpus-and-tile-based-deferred-rendering",
            "title": "Tailor Your Apps for Apple GPUs and Tile-Based Deferred Rendering",
            "type": "article"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/metal-structures",
            "title": "Metal Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/metal-enumerations",
            "title": "Metal Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/metal-constants",
            "title": "Metal Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/metal-data-types",
            "title": "Metal Data Types",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Global Variables",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/metal-variables",
            "title": "Metal Variables",
            "type": "collection"
          }
        ],
        "path": "/documentation/metal",
        "title": "Metal",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/metal/performing-calculations-on-a-gpu",
            "title": "Performing Calculations on a GPU",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
            "title": "Using Metal to Draw a View’s Contents",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
            "title": "Using a Render Pipeline to Render Primitives",
            "type": "sampleCode"
          },
          {
            "title": "Samples",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Compute Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/performing-calculations-on-a-gpu",
                "title": "Performing Calculations on a GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/selecting-device-objects-for-compute-processing",
                "title": "Selecting Device Objects for Compute Processing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-a-tensorflow-operation",
                "title": "Customizing a TensorFlow operation",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-a-pytorch-operation",
                "title": "Customizing a PyTorch operation",
                "type": "sampleCode"
              },
              {
                "title": "Render Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
                "title": "Using Metal to Draw a View’s Contents",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
                "title": "Using a Render Pipeline to Render Primitives",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/selecting-device-objects-for-graphics-rendering",
                "title": "Selecting Device Objects for Graphics Rendering",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-render-pass-setup",
                "title": "Customizing Render Pass Setup",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-a-custom-metal-view",
                "title": "Creating a Custom Metal View",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/calculating-primitive-visibility-using-depth-testing",
                "title": "Calculating Primitive Visibility Using Depth Testing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-cpu",
                "title": "Encoding Indirect Command Buffers on the CPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-order-independent-transparency-with-image-blocks",
                "title": "Implementing Order-Independent Transparency with Image Blocks",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/loading-textures-and-models-using-metal-fast-resource-loading",
                "title": "Loading textures and models using Metal fast resource loading",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/adjusting-the-level-of-detail-using-metal-mesh-shaders",
                "title": "Adjusting the level of detail using Metal mesh shaders",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-a-3d-application-with-hydra-rendering",
                "title": "Creating a 3D application with Hydra rendering",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/culling-occluded-geometry-using-the-visibility-result-buffer",
                "title": "Culling occluded geometry using the visibility result buffer",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/improving-edge-rendering-quality-with-multisample-antialiasing-msaa",
                "title": "Improving edge-rendering quality with multisample antialiasing (MSAA)",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/achieving-smooth-frame-rates-with-metal-s-display-link",
                "title": "Achieving smooth frame rates with Metal’s display link",
                "type": "sampleCode"
              },
              {
                "title": "Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-a-texture-in-a-compute-function",
                "title": "Processing a Texture in a Compute Function",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/reading-pixel-data-from-a-drawable-texture",
                "title": "Reading Pixel Data from a Drawable Texture",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-and-sampling-textures",
                "title": "Creating and Sampling Textures",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/streaming-large-images-with-metal-sparse-textures",
                "title": "Streaming large images with Metal sparse textures",
                "type": "sampleCode"
              },
              {
                "title": "Argument Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/managing-groups-of-resources-with-argument-buffers",
                "title": "Managing groups of resources with argument buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-argument-buffers-on-the-gpu",
                "title": "Encoding Argument Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-terrain-dynamically-with-argument-buffers",
                "title": "Rendering Terrain Dynamically with Argument Buffers",
                "type": "sampleCode"
              },
              {
                "title": "Shaders",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-metal-dynamic-library",
                "title": "Creating a Metal Dynamic Library",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-function-specialization-to-build-pipeline-variants",
                "title": "Using Function Specialization to Build Pipeline Variants",
                "type": "sampleCode"
              },
              {
                "title": "Synchronization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/synchronizing-cpu-and-gpu-work",
                "title": "Synchronizing CPU and GPU Work",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "title": "Lighting Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-forward-plus-lighting-using-tile-shaders",
                "title": "Rendering a Scene with Forward Plus Lighting Using Tile Shaders",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-objective-c",
                "title": "Rendering a Scene with Deferred Lighting in Objective-C",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-swift",
                "title": "Rendering a Scene with Deferred Lighting in Swift",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-c++",
                "title": "Rendering a Scene with Deferred Lighting in C++",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-reflections-with-fewer-render-passes",
                "title": "Rendering Reflections with Fewer Render Passes",
                "type": "sampleCode"
              },
              {
                "title": "Multiple Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/modern-rendering-with-metal",
                "title": "Modern Rendering with Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-gpu",
                "title": "Encoding Indirect Command Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "title": "Ray Tracing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-reflections-in-real-time-using-ray-tracing",
                "title": "Rendering reflections in real time using ray tracing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-using-metal",
                "title": "Accelerating ray tracing using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/control-the-ray-tracing-process-using-intersection-queries",
                "title": "Control the Ray Tracing Process Using Intersection Queries",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-and-motion-blur-using-metal",
                "title": "Accelerating ray tracing and motion blur using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-curve-primitive-in-a-ray-tracing-scene",
                "title": "Rendering a curve primitive in a ray tracing scene",
                "type": "sampleCode"
              },
              {
                "title": "HDR",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-hdr-images-with-metal",
                "title": "Processing HDR Images with Metal",
                "type": "sampleCode"
              },
              {
                "title": "OpenGL",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/migrating-opengl-code-to-metal",
                "title": "Migrating OpenGL Code to Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/mixing-metal-and-opengl-rendering-in-a-view",
                "title": "Mixing Metal and OpenGL Rendering in a View",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/metal/metal-sample-code-library",
            "title": "Metal Sample Code Library",
            "type": "collection"
          },
          {
            "title": "GPU Devices",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Locating and Inspecting a GPU Device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/getting-the-default-gpu",
                "title": "Getting the Default GPU",
                "type": "article"
              },
              {
                "path": "/documentation/metal/detecting-gpu-features-and-metal-software-versions",
                "title": "Detecting GPU Features and Metal Software Versions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/mtlcreatesystemdefaultdevice()",
                "title": "MTLCreateSystemDefaultDevice",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Working with GPU Devices",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Checking a GPU Device’s Feature Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsfamily(_:)",
                        "title": "- supportsFamily:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Checking for Common GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/metal3",
                            "title": "MTLGPUFamilyMetal3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/common3",
                            "title": "MTLGPUFamilyCommon3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/common2",
                            "title": "MTLGPUFamilyCommon2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/common1",
                            "title": "MTLGPUFamilyCommon1",
                            "type": "case"
                          },
                          {
                            "title": "Checking for Apple Family GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple9",
                            "title": "MTLGPUFamilyApple9",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple8",
                            "title": "MTLGPUFamilyApple8",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple7",
                            "title": "MTLGPUFamilyApple7",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple6",
                            "title": "MTLGPUFamilyApple6",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple5",
                            "title": "MTLGPUFamilyApple5",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple4",
                            "title": "MTLGPUFamilyApple4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple3",
                            "title": "MTLGPUFamilyApple3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple2",
                            "title": "MTLGPUFamilyApple2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple1",
                            "title": "MTLGPUFamilyApple1",
                            "type": "case"
                          },
                          {
                            "title": "Checking for macOS Family GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/mac2",
                            "title": "MTLGPUFamilyMac2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlgpufamily/mac1",
                            "title": "MTLGPUFamilyMac1",
                            "type": "case"
                          },
                          {
                            "title": "Checking for Mac Catalyst Family GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlgpufamily/maccatalyst2",
                            "title": "MTLGPUFamilyMacCatalyst2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlgpufamily/maccatalyst1",
                            "title": "MTLGPUFamilyMacCatalyst1",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlgpufamily",
                        "title": "MTLGPUFamily",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/supportsfeatureset(_:)",
                        "title": "- supportsFeatureSet:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "iOS GPU Family 5",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily5_v1",
                            "title": "MTLFeatureSet_iOS_GPUFamily5_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 4",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily4_v2",
                            "title": "MTLFeatureSet_iOS_GPUFamily4_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily4_v1",
                            "title": "MTLFeatureSet_iOS_GPUFamily4_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 3",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v4",
                            "title": "MTLFeatureSet_iOS_GPUFamily3_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v3",
                            "title": "MTLFeatureSet_iOS_GPUFamily3_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v2",
                            "title": "MTLFeatureSet_iOS_GPUFamily3_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v1",
                            "title": "MTLFeatureSet_iOS_GPUFamily3_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v5",
                            "title": "MTLFeatureSet_iOS_GPUFamily2_v5",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v4",
                            "title": "MTLFeatureSet_iOS_GPUFamily2_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v3",
                            "title": "MTLFeatureSet_iOS_GPUFamily2_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v2",
                            "title": "MTLFeatureSet_iOS_GPUFamily2_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v1",
                            "title": "MTLFeatureSet_iOS_GPUFamily2_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 1",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v5",
                            "title": "MTLFeatureSet_iOS_GPUFamily1_v5",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v4",
                            "title": "MTLFeatureSet_iOS_GPUFamily1_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v3",
                            "title": "MTLFeatureSet_iOS_GPUFamily1_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v2",
                            "title": "MTLFeatureSet_iOS_GPUFamily1_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v1",
                            "title": "MTLFeatureSet_iOS_GPUFamily1_v1",
                            "type": "case"
                          },
                          {
                            "title": "tvOS GPU Family 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily2_v2",
                            "title": "MTLFeatureSet_tvOS_GPUFamily2_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily2_v1",
                            "title": "MTLFeatureSet_tvOS_GPUFamily2_v1",
                            "type": "case"
                          },
                          {
                            "title": "tvOS GPU Family 1",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v4",
                            "title": "MTLFeatureSet_tvOS_GPUFamily1_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v3",
                            "title": "MTLFeatureSet_tvOS_GPUFamily1_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v2",
                            "title": "MTLFeatureSet_tvOS_GPUFamily1_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v1-swift.enum.case",
                            "title": "MTLFeatureSet_tvOS_GPUFamily1_v1",
                            "type": "case"
                          },
                          {
                            "title": "macOS GPU Family 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily2_v1",
                            "title": "MTLFeatureSet_macOS_GPUFamily2_v1",
                            "type": "case"
                          },
                          {
                            "title": "macOS GPU Family 1",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v4",
                            "title": "MTLFeatureSet_macOS_GPUFamily1_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v3",
                            "title": "MTLFeatureSet_macOS_GPUFamily1_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v2",
                            "title": "MTLFeatureSet_macOS_GPUFamily1_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v1",
                            "title": "MTLFeatureSet_macOS_GPUFamily1_v1",
                            "type": "case"
                          },
                          {
                            "title": "macOS Tier 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_readwritetexturetier2",
                            "title": "MTLFeatureSet_macOS_ReadWriteTextureTier2",
                            "type": "case"
                          },
                          {
                            "title": "Enumeration Cases",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/osx_gpufamily1_v1",
                            "title": "MTLFeatureSet_OSX_GPUFamily1_v1",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/osx_gpufamily1_v2",
                            "title": "MTLFeatureSet_OSX_GPUFamily1_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/osx_readwritetexturetier2",
                            "title": "MTLFeatureSet_OSX_ReadWriteTextureTier2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v1-swift.type.property",
                            "title": "MTLFeatureSet_TVOS_GPUFamily1_v1",
                            "type": "case"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/metal/mtlfeatureset",
                        "title": "MTLFeatureSet",
                        "type": "enum"
                      },
                      {
                        "title": "Checking Compute Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxthreadgroupmemorylength",
                        "title": "maxThreadgroupMemoryLength",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxthreadsperthreadgroup",
                        "title": "maxThreadsPerThreadgroup",
                        "type": "property"
                      },
                      {
                        "title": "Checking Render Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsraytracing",
                        "title": "supportsRaytracing",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsprimitivemotionblur",
                        "title": "supportsPrimitiveMotionBlur",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsraytracingfromrender",
                        "title": "supportsRaytracingFromRender",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supports32bitmsaa",
                        "title": "supports32BitMSAA",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportspullmodelinterpolation",
                        "title": "supportsPullModelInterpolation",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsshaderbarycentriccoordinates",
                        "title": "supportsShaderBarycentricCoordinates",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsvertexamplificationcount(_:)",
                        "title": "- supportsVertexAmplificationCount:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/areprogrammablesamplepositionssupported",
                        "title": "programmableSamplePositionsSupported",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/arerasterordergroupssupported",
                        "title": "rasterOrderGroupsSupported",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/arebarycentriccoordssupported",
                        "title": "barycentricCoordsSupported",
                        "type": "property"
                      },
                      {
                        "title": "Checking Texture and Sampler Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supports32bitfloatfiltering",
                        "title": "supports32BitFloatFiltering",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsbctexturecompression",
                        "title": "supportsBCTextureCompression",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/isdepth24stencil8pixelformatsupported",
                        "title": "depth24Stencil8PixelFormatSupported",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsquerytexturelod",
                        "title": "supportsQueryTextureLOD",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Read-Write Texture Tiers",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlreadwritetexturetier/tier1",
                                "title": "MTLReadWriteTextureTier1",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlreadwritetexturetier/tier2",
                                "title": "MTLReadWriteTextureTier2",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlreadwritetexturetier/tiernone",
                                "title": "MTLReadWriteTextureTierNone",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/metal/mtlreadwritetexturetier",
                            "title": "MTLReadWriteTextureTier",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/metal/mtldevice/readwritetexturesupport",
                        "title": "readWriteTextureSupport",
                        "type": "property"
                      },
                      {
                        "title": "Checking Function Pointer Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsfunctionpointers",
                        "title": "supportsFunctionPointers",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsfunctionpointersfromrender",
                        "title": "supportsFunctionPointersFromRender",
                        "type": "property"
                      },
                      {
                        "title": "Checking a GPU Device’s Memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/currentallocatedsize",
                        "title": "currentAllocatedSize",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/recommendedmaxworkingsetsize",
                        "title": "recommendedMaxWorkingSetSize",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/hasunifiedmemory",
                        "title": "hasUnifiedMemory",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxtransferrate",
                        "title": "maxTransferRate",
                        "type": "property"
                      },
                      {
                        "title": "Sampling a GPU Device’s Counters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/countersets",
                        "title": "counterSets",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportscountersampling(_:)",
                        "title": "- supportsCounterSampling:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Reading Sampling Boundary Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atblitboundary",
                            "title": "MTLCounterSamplingPointAtBlitBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atdispatchboundary",
                            "title": "MTLCounterSamplingPointAtDispatchBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atdrawboundary",
                            "title": "MTLCounterSamplingPointAtDrawBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atstageboundary",
                            "title": "MTLCounterSamplingPointAtStageBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/attiledispatchboundary",
                            "title": "MTLCounterSamplingPointAtTileDispatchBoundary",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlcountersamplingpoint",
                        "title": "MTLCounterSamplingPoint",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecountersamplebuffer(descriptor:)",
                        "title": "- newCounterSampleBufferWithDescriptor:error:",
                        "type": "method"
                      },
                      {
                        "title": "Sampling GPU and CPU Timestamps Simultaneously",
                        "type": "groupMarker"
                      },
                      {
                        "title": "Identifying a GPU Device",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/name",
                        "title": "name",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/architecture",
                        "title": "architecture",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting a GPU Device’s Architecture Details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlarchitecture/name",
                            "title": "name",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/metal/mtlarchitecture",
                        "title": "MTLArchitecture",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/registryid",
                        "title": "registryID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/location",
                        "title": "location",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining the GPU’s Location",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/builtin",
                            "title": "MTLDeviceLocationBuiltIn",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/slot",
                            "title": "MTLDeviceLocationSlot",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/external",
                            "title": "MTLDeviceLocationExternal",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/unspecified",
                            "title": "MTLDeviceLocationUnspecified",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtldevicelocation",
                        "title": "MTLDeviceLocation",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/locationnumber",
                        "title": "locationNumber",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/islowpower",
                        "title": "lowPower",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/isremovable",
                        "title": "removable",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/isheadless",
                        "title": "headless",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/peergroupid",
                        "title": "peerGroupID",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/peercount",
                        "title": "peerCount",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/peerindex",
                        "title": "peerIndex",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/device-inspection",
                    "title": "Device Inspection",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Command Queues",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecommandqueue()",
                        "title": "- newCommandQueue",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecommandqueue(maxcommandbuffercount:)",
                        "title": "- newCommandQueueWithMaxCommandBufferCount:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Residency Sets",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeresidencyset(descriptor:)",
                        "title": "- newResidencySetWithDescriptor:error:",
                        "type": "method"
                      },
                      {
                        "title": "Creating I/O Command Queues",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeiocommandqueue(descriptor:)",
                        "title": "- newIOCommandQueueWithDescriptor:error:",
                        "type": "method"
                      },
                      {
                        "title": "Creating I/O File Handles",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeiofilehandle(url:)",
                        "title": "- newIOFileHandleWithURL:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeiofilehandle(url:compressionmethod:)",
                        "title": "- newIOFileHandleWithURL:compressionMethod:error:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/makeiohandle(url:)",
                        "title": "- newIOHandleWithURL:error:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/makeiohandle(url:compressionmethod:)",
                        "title": "- newIOHandleWithURL:compressionMethod:error:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Indirect Command Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeindirectcommandbuffer(descriptor:maxcommandcount:options:)",
                        "title": "- newIndirectCommandBufferWithDescriptor:maxCommandCount:options:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/work-submission",
                    "title": "Work Submission",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Render Pipeline States with Vertex Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:)",
                        "title": "- newRenderPipelineStateWithDescriptor:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:completionhandler:)",
                        "title": "- newRenderPipelineStateWithDescriptor:completionHandler:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:reflection:)",
                        "title": "- newRenderPipelineStateWithDescriptor:options:reflection:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:completionhandler:)-5gdww",
                        "title": "- newRenderPipelineStateWithDescriptor:options:completionHandler:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Render Pipeline States with Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:completionhandler:)-1wvya",
                        "title": "- newRenderPipelineStateWithMeshDescriptor:options:completionHandler:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Tile Render Pipeline States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(tiledescriptor:options:reflection:)",
                        "title": "- newRenderPipelineStateWithTileDescriptor:options:reflection:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(tiledescriptor:options:completionhandler:)",
                        "title": "- newRenderPipelineStateWithTileDescriptor:options:completionHandler:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Compute Pipeline States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(descriptor:options:reflection:)",
                        "title": "- newComputePipelineStateWithDescriptor:options:reflection:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(descriptor:options:completionhandler:)",
                        "title": "- newComputePipelineStateWithDescriptor:options:completionHandler:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:)",
                        "title": "- newComputePipelineStateWithFunction:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:completionhandler:)",
                        "title": "- newComputePipelineStateWithFunction:completionHandler:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:options:reflection:)",
                        "title": "- newComputePipelineStateWithFunction:options:reflection:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:options:completionhandler:)",
                        "title": "- newComputePipelineStateWithFunction:options:completionHandler:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Depth and Stencil States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedepthstencilstate(descriptor:)",
                        "title": "- newDepthStencilStateWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "title": "Supporting Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlnewrenderpipelinestatecompletionhandler",
                        "title": "MTLNewRenderPipelineStateCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/metal/mtlnewrenderpipelinestatewithreflectioncompletionhandler",
                        "title": "MTLNewRenderPipelineStateWithReflectionCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/metal/mtlnewcomputepipelinestatecompletionhandler",
                        "title": "MTLNewComputePipelineStateCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/metal/mtlnewcomputepipelinestatewithreflectioncompletionhandler",
                        "title": "MTLNewComputePipelineStateWithReflectionCompletionHandler",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/metal/pipeline-state-creation",
                    "title": "Pipeline State Creation",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Working with Resource Heaps",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeheap(descriptor:)",
                        "title": "- newHeapWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heapbuffersizeandalign(length:options:)",
                        "title": "- heapBufferSizeAndAlignWithLength:options:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heaptexturesizeandalign(descriptor:)",
                        "title": "- heapTextureSizeAndAlignWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heapaccelerationstructuresizeandalign(size:)",
                        "title": "- heapAccelerationStructureSizeAndAlignWithSize:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heapaccelerationstructuresizeandalign(descriptor:)",
                        "title": "- heapAccelerationStructureSizeAndAlignWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Size and Alignment",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsizeandalign/size",
                            "title": "size",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlsizeandalign/align",
                            "title": "align",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/metal/mtlsizeandalign",
                        "title": "MTLSizeAndAlign",
                        "type": "struct"
                      },
                      {
                        "title": "Creating Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxbufferlength",
                        "title": "maxBufferLength",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebuffer(length:options:)",
                        "title": "- newBufferWithLength:options:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebuffer(bytes:length:options:)",
                        "title": "- newBufferWithBytes:length:options:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebuffer(bytesnocopy:length:options:deallocator:)",
                        "title": "- newBufferWithBytesNoCopy:length:options:deallocator:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maketexture(descriptor:)",
                        "title": "- newTextureWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maketexture(descriptor:iosurface:plane:)",
                        "title": "- newTextureWithDescriptor:iosurface:plane:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedtexture(descriptor:)",
                        "title": "- newSharedTextureWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedtexture(handle:)",
                        "title": "- newSharedTextureWithHandle:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/minimumlineartexturealignment(for:)",
                        "title": "- minimumLinearTextureAlignmentForPixelFormat:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/minimumtexturebufferalignment(for:)",
                        "title": "- minimumTextureBufferAlignmentForPixelFormat:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Samplers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportstexturesamplecount(_:)",
                        "title": "- supportsTextureSampleCount:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesamplerstate(descriptor:)",
                        "title": "- newSamplerStateWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "title": "Working with Sparse Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesize(texturetype:pixelformat:samplecount:sparsepagesize:)",
                        "title": "- sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesize(with:pixelformat:samplecount:)",
                        "title": "- sparseTileSizeWithTextureType:pixelFormat:sampleCount:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesizeinbytes(sparsepagesize:)",
                        "title": "- sparseTileSizeInBytesForSparsePageSize:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesizeinbytes",
                        "title": "sparseTileSizeInBytes",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/convertsparsepixelregions(_:totileregions:withtilesize:alignmentmode:numregions:)",
                        "title": "- convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/convertsparsetileregions(_:topixelregions:withtilesize:numregions:)",
                        "title": "- convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Sparse Texture Page Sizes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsepagesize/size16",
                            "title": "MTLSparsePageSize16",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsepagesize/size64",
                            "title": "MTLSparsePageSize64",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsepagesize/size256",
                            "title": "MTLSparsePageSize256",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlsparsepagesize",
                        "title": "MTLSparsePageSize",
                        "type": "enum"
                      },
                      {
                        "children": [
                          {
                            "title": "Specifying the Alignment Mode",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsetextureregionalignmentmode/outward",
                            "title": "MTLSparseTextureRegionAlignmentModeOutward",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsetextureregionalignmentmode/inward",
                            "title": "MTLSparseTextureRegionAlignmentModeInward",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlsparsetextureregionalignmentmode",
                        "title": "MTLSparseTextureRegionAlignmentMode",
                        "type": "enum"
                      },
                      {
                        "title": "Creating Acceleration Structures for Ray Tracing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeaccelerationstructure(descriptor:)",
                        "title": "- newAccelerationStructureWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeaccelerationstructure(size:)",
                        "title": "- newAccelerationStructureWithSize:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/accelerationstructuresizes(descriptor:)",
                        "title": "- accelerationStructureSizesWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Retrieving the Sizes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/accelerationstructuresize",
                            "title": "accelerationStructureSize",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/buildscratchbuffersize",
                            "title": "buildScratchBufferSize",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/refitscratchbuffersize",
                            "title": "refitScratchBufferSize",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/metal/mtlaccelerationstructuresizes",
                        "title": "MTLAccelerationStructureSizes",
                        "type": "struct"
                      },
                      {
                        "title": "Creating Argument Buffer Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Argument Buffer Tiers",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlargumentbufferstier/tier1",
                                "title": "MTLArgumentBuffersTier1",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlargumentbufferstier/tier2",
                                "title": "MTLArgumentBuffersTier2",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/metal/mtlargumentbufferstier",
                            "title": "MTLArgumentBuffersTier",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/metal/mtldevice/argumentbufferssupport",
                        "title": "argumentBuffersSupport",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxargumentbuffersamplercount",
                        "title": "maxArgumentBufferSamplerCount",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeargumentencoder(arguments:)",
                        "title": "- newArgumentEncoderWithArguments:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeargumentencoder(bufferbinding:)",
                        "title": "- newArgumentEncoderWithBufferBinding:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Fences and Events",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makefence()",
                        "title": "- newFence",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeevent()",
                        "title": "- newEvent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedevent()",
                        "title": "- newSharedEvent",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedevent(handle:)",
                        "title": "- newSharedEventWithHandle:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Rasterization Rate Maps",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsrasterizationratemap(layercount:)",
                        "title": "- supportsRasterizationRateMapWithLayerCount:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerasterizationratemap(descriptor:)",
                        "title": "- newRasterizationRateMapWithDescriptor:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/resource-creation",
                    "title": "Resource Creation",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Shader Libraries",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedefaultlibrary()",
                        "title": "- newDefaultLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedefaultlibrary(bundle:)",
                        "title": "- newDefaultLibraryWithBundle:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(url:)",
                        "title": "- newLibraryWithURL:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(source:options:)",
                        "title": "- newLibraryWithSource:options:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(source:options:completionhandler:)",
                        "title": "- newLibraryWithSource:options:completionHandler:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(stitcheddescriptor:)",
                        "title": "- newLibraryWithStitchedDescriptor:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(stitcheddescriptor:completionhandler:)",
                        "title": "- newLibraryWithStitchedDescriptor:completionHandler:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(data:)",
                        "title": "- newLibraryWithData:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlnewlibrarycompletionhandler",
                        "title": "MTLNewLibraryCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/makelibrary(filepath:)",
                        "title": "- newLibraryWithFile:error:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Dynamic Shader Libraries",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsdynamiclibraries",
                        "title": "supportsDynamicLibraries",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsrenderdynamiclibraries",
                        "title": "supportsRenderDynamicLibraries",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedynamiclibrary(library:)",
                        "title": "- newDynamicLibrary:error:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedynamiclibrary(url:)",
                        "title": "- newDynamicLibraryWithURL:error:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/none",
                            "title": "MTLDynamicLibraryErrorNone",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/invalidfile",
                            "title": "MTLDynamicLibraryErrorInvalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/compilationfailure",
                            "title": "MTLDynamicLibraryErrorCompilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unresolvedinstallname",
                            "title": "MTLDynamicLibraryErrorUnresolvedInstallName",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/dependencyloadfailure",
                            "title": "MTLDynamicLibraryErrorDependencyLoadFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unsupported",
                            "title": "MTLDynamicLibraryErrorUnsupported",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/none",
                            "title": "MTLDynamicLibraryErrorNone",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/invalidfile",
                            "title": "MTLDynamicLibraryErrorInvalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/compilationfailure",
                            "title": "MTLDynamicLibraryErrorCompilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unresolvedinstallname",
                            "title": "MTLDynamicLibraryErrorUnresolvedInstallName",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/dependencyloadfailure",
                            "title": "MTLDynamicLibraryErrorDependencyLoadFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unsupported",
                            "title": "MTLDynamicLibraryErrorUnsupported",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code",
                        "title": "MTLDynamicLibraryError",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibrarydomain",
                        "title": "MTLDynamicLibraryDomain",
                        "type": "var"
                      },
                      {
                        "title": "Creating Binary Shader Archives",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebinaryarchive(descriptor:)",
                        "title": "- newBinaryArchiveWithDescriptor:error:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Choosing an Archive File",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchivedescriptor/url",
                            "title": "url",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/metal/mtlbinaryarchivedescriptor",
                        "title": "MTLBinaryArchiveDescriptor",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/none",
                            "title": "MTLBinaryArchiveErrorNone",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/invalidfile",
                            "title": "MTLBinaryArchiveErrorInvalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/compilationfailure",
                            "title": "MTLBinaryArchiveErrorCompilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/unexpectedelement",
                            "title": "MTLBinaryArchiveErrorUnexpectedElement",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/internalerror",
                            "title": "MTLBinaryArchiveErrorInternalError",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/none",
                            "title": "MTLBinaryArchiveErrorNone",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/invalidfile",
                            "title": "MTLBinaryArchiveErrorInvalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/compilationfailure",
                            "title": "MTLBinaryArchiveErrorCompilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/unexpectedelement",
                            "title": "MTLBinaryArchiveErrorUnexpectedElement",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/internalerror",
                            "title": "MTLBinaryArchiveErrorInternalError",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code",
                        "title": "MTLBinaryArchiveError",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchivedomain",
                        "title": "MTLBinaryArchiveDomain",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/metal/shader-library-and-archive-creation",
                    "title": "Shader Library and Archive Creation",
                    "type": "collection"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/maximumconcurrentcompilationtaskcount",
                    "title": "maximumConcurrentCompilationTaskCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/shouldmaximizeconcurrentcompilation",
                    "title": "shouldMaximizeConcurrentCompilation",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/makecommandqueue(descriptor:)",
                    "title": "- newCommandQueueWithDescriptor:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/makelogstate(descriptor:)",
                    "title": "- newLogStateWithDescriptor:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtldevice",
                "title": "MTLDevice",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Locating GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/finding-multiple-gpus-on-an-intel-based-mac",
                    "title": "Finding Multiple GPUs on an Intel-based Mac",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/getting-the-gpu-that-drives-a-views-display",
                    "title": "Getting the GPU that Drives a View’s Display",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/mtlcopyalldevices()",
                    "title": "MTLCopyAllDevices",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlremovedeviceobserver(_:)",
                    "title": "MTLRemoveDeviceObserver",
                    "type": "func"
                  },
                  {
                    "external": true,
                    "path": "/documentation/coregraphics/1493900-cgdirectdisplaycopycurrentmetald",
                    "title": "CGDirectDisplayCopyCurrentMetalDevice",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtldevicenotificationhandler",
                    "title": "MTLDeviceNotificationHandler",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a notification name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevicenotificationname/wasadded",
                        "title": "MTLDeviceWasAddedNotification",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/metal/mtldevicenotificationname/removalrequested",
                        "title": "MTLDeviceRemovalRequestedNotification",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/metal/mtldevicenotificationname/wasremoved",
                        "title": "MTLDeviceWasRemovedNotification",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/metal/mtldevicenotificationname",
                    "title": "MTLDeviceNotificationName",
                    "type": "typealias"
                  },
                  {
                    "title": "Selecting GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/adjusting-for-gpu-memory-bandwidth-tradeoffs",
                    "title": "Adjusting for GPU Memory Bandwidth Tradeoffs",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/assessing-multi-gpu-and-multi-display-setups-on-an-intel-based-mac",
                    "title": "Assessing Multi-GPU and Multi-Display Setups on an Intel-Based Mac",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/selecting-device-objects-for-graphics-rendering",
                    "title": "Selecting Device Objects for Graphics Rendering",
                    "type": "sampleCode"
                  },
                  {
                    "path": "/documentation/metal/selecting-device-objects-for-compute-processing",
                    "title": "Selecting Device Objects for Compute Processing",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Working with External GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/handling-external-gpu-additions-and-removals",
                    "title": "Handling External GPU Additions and Removals",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/transferring-data-between-connected-gpus",
                    "title": "Transferring Data Between Connected GPUs",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/transferring-data-with-infinity-fabric-link",
                    "title": "Transferring Data with Infinity Fabric Link",
                    "type": "sampleCode"
                  }
                ],
                "path": "/documentation/metal/multi-gpu-systems",
                "title": "Multi-GPU Systems",
                "type": "collection"
              },
              {
                "title": "Submitting Work to a GPU",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/setting-up-a-command-structure",
                "title": "Setting Up a Command Structure",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/makecommandbuffer(descriptor:)",
                    "title": "- commandBufferWithDescriptor:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/makecommandbuffer()",
                    "title": "- commandBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/makecommandbufferwithunretainedreferences()",
                    "title": "- commandBufferWithUnretainedReferences",
                    "type": "method"
                  },
                  {
                    "title": "Attaching Residency Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/addresidencyset(_:)",
                    "title": "- addResidencySet:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/addresidencysets:count:",
                    "title": "- addResidencySets:count:",
                    "type": "method"
                  },
                  {
                    "title": "Detaching Residency Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/removeresidencyset(_:)",
                    "title": "- removeResidencySet:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/removeresidencysets:count:",
                    "title": "- removeResidencySets:count:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Command Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcommandqueue/insertdebugcaptureboundary()",
                    "title": "- insertDebugCaptureBoundary",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcommandqueue",
                "title": "MTLCommandQueue",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueuedescriptor/logstate",
                    "title": "logState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueuedescriptor/maxcommandbuffercount",
                    "title": "maxCommandBufferCount",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcommandqueuedescriptor",
                "title": "MTLCommandQueueDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating Command Encoders",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Render Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makerendercommandencoder(descriptor:)",
                        "title": "- renderCommandEncoderWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Parallel Render Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeparallelrendercommandencoder(descriptor:)",
                        "title": "- parallelRenderCommandEncoderWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Acceleration Structure Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeaccelerationstructurecommandencoder(descriptor:)",
                        "title": "- accelerationStructureCommandEncoderWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeaccelerationstructurecommandencoder()",
                        "title": "- accelerationStructureCommandEncoder",
                        "type": "method"
                      },
                      {
                        "title": "Creating Compute Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makecomputecommandencoder(descriptor:)",
                        "title": "- computeCommandEncoderWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makecomputecommandencoder()",
                        "title": "- computeCommandEncoder",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makecomputecommandencoder(dispatchtype:)",
                        "title": "- computeCommandEncoderWithDispatchType:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Execution Dispatch Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldispatchtype/concurrent",
                            "title": "MTLDispatchTypeConcurrent",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldispatchtype/serial",
                            "title": "MTLDispatchTypeSerial",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtldispatchtype",
                        "title": "MTLDispatchType",
                        "type": "enum"
                      },
                      {
                        "title": "Creating Blit Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeblitcommandencoder()",
                        "title": "- blitCommandEncoder",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeblitcommandencoder(descriptor:)",
                        "title": "- blitCommandEncoderWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "title": "Creating Resource State Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/resourcestatecommandencoder(with:)",
                        "title": "- resourceStateCommandEncoderWithDescriptor:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeresourcestatecommandencoder()",
                        "title": "- resourceStateCommandEncoder",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/command-encoder-factory-methods",
                    "title": "Command Encoder Factory Methods",
                    "type": "collection"
                  },
                  {
                    "title": "Attaching Residency Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/useresidencyset(_:)",
                    "title": "- useResidencySet:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/useresidencysets:count:",
                    "title": "- useResidencySets:count:",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Passes with Events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/encodewaitforevent(_:value:)",
                    "title": "- encodeWaitForEvent:value:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/encodesignalevent(_:value:)",
                    "title": "- encodeSignalEvent:value:",
                    "type": "method"
                  },
                  {
                    "title": "Presenting a Drawable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/present(_:)",
                    "title": "- presentDrawable:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/present(_:attime:)",
                    "title": "- presentDrawable:atTime:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/present(_:afterminimumduration:)",
                    "title": "- presentDrawable:afterMinimumDuration:",
                    "type": "method"
                  },
                  {
                    "title": "Registering State Change Handlers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/addscheduledhandler(_:)",
                    "title": "- addScheduledHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/addcompletedhandler(_:)",
                    "title": "- addCompletedHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferhandler",
                    "title": "MTLCommandBufferHandler",
                    "type": "typealias"
                  },
                  {
                    "title": "Submitting a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/enqueue()",
                    "title": "- enqueue",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/commit()",
                    "title": "- commit",
                    "type": "method"
                  },
                  {
                    "title": "Waiting for State Changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/waituntilscheduled()",
                    "title": "- waitUntilScheduled",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/waituntilcompleted()",
                    "title": "- waitUntilCompleted",
                    "type": "method"
                  },
                  {
                    "title": "Troubleshooting a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/status",
                    "title": "status",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Command Buffer States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/notenqueued",
                        "title": "MTLCommandBufferStatusNotEnqueued",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/enqueued",
                        "title": "MTLCommandBufferStatusEnqueued",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/committed",
                        "title": "MTLCommandBufferStatusCommitted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/scheduled",
                        "title": "MTLCommandBufferStatusScheduled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/completed",
                        "title": "MTLCommandBufferStatusCompleted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/error",
                        "title": "MTLCommandBufferStatusError",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlcommandbufferstatus",
                    "title": "MTLCommandBufferStatus",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifying the Command Buffer",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/label",
                        "title": "label",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/commandqueue",
                        "title": "commandQueue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/device",
                        "title": "device",
                        "type": "property"
                      },
                      {
                        "title": "Grouping Commands within a GPU Frame Capture",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/pushdebuggroup(_:)",
                        "title": "- pushDebugGroup:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/popdebuggroup()",
                        "title": "- popDebugGroup",
                        "type": "method"
                      },
                      {
                        "title": "Getting Error Details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/error",
                        "title": "error",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/erroroptions",
                        "title": "errorOptions",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting Execution Information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlcommandbufferencoderinfo/label",
                            "title": "label",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlcommandbufferencoderinfo/debugsignposts",
                            "title": "debugSignposts",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlcommandbufferencoderinfo/errorstate",
                            "title": "errorState",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the Error State",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/completed",
                                "title": "MTLCommandEncoderErrorStateCompleted",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/pending",
                                "title": "MTLCommandEncoderErrorStatePending",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/affected",
                                "title": "MTLCommandEncoderErrorStateAffected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/faulted",
                                "title": "MTLCommandEncoderErrorStateFaulted",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/unknown",
                                "title": "MTLCommandEncoderErrorStateUnknown",
                                "type": "case"
                              }
                            ],
                            "path": "/documentation/metal/mtlcommandencodererrorstate",
                            "title": "MTLCommandEncoderErrorState",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/metal/mtlcommandbufferencoderinfo",
                        "title": "MTLCommandBufferEncoderInfo",
                        "type": "protocol"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferencoderinfoerrorkey",
                        "title": "MTLCommandBufferEncoderInfoErrorKey",
                        "type": "var"
                      },
                      {
                        "title": "Reading the Runtime Message Logs",
                        "type": "groupMarker"
                      },
                      {
                        "title": "Checking Scheduling Times on the CPU",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/kernelstarttime",
                        "title": "kernelStartTime",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/kernelendtime",
                        "title": "kernelEndTime",
                        "type": "property"
                      },
                      {
                        "title": "Checking Execution Times on the GPU",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/gpustarttime",
                        "title": "GPUStartTime",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/gpuendtime",
                        "title": "GPUEndTime",
                        "type": "property"
                      },
                      {
                        "title": "Determining Whether to Maintain Strong References",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/retainedreferences",
                        "title": "retainedReferences",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/command-buffer-debugging",
                    "title": "Command Buffer Debugging",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/metal/mtlcommandbuffer",
                "title": "MTLCommandBuffer",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferdescriptor/logstate",
                    "title": "logState",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferdescriptor/retainedreferences",
                    "title": "retainedReferences",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferdescriptor/erroroptions",
                    "title": "errorOptions",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Buffer Error Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererroroption/mtlcommandbuffererroroptionnone",
                        "title": "MTLCommandBufferErrorOptionNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererroroption/encoderexecutionstatus",
                        "title": "MTLCommandBufferErrorOptionEncoderExecutionStatus",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlcommandbuffererroroption",
                    "title": "MTLCommandBufferErrorOption",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlcommandbufferdescriptor",
                "title": "MTLCommandBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Ending Command Encoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/endencoding()",
                    "title": "- endEncoding",
                    "type": "method"
                  },
                  {
                    "title": "Annotating the Command Buffer with Debug Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/insertdebugsignpost(_:)",
                    "title": "- insertDebugSignpost:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/pushdebuggroup(_:)",
                    "title": "- pushDebugGroup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/popdebuggroup()",
                    "title": "- popDebugGroup",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Command Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcommandencoder",
                "title": "MTLCommandEncoder",
                "type": "protocol"
              },
              {
                "title": "Suspending Work on a GPU",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/preparing-your-metal-app-to-run-in-the-background",
                "title": "Preparing Your Metal App to Run in the Background",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/gpu-devices-and-work-submission",
            "title": "GPU Devices and Work Submission",
            "type": "collection"
          },
          {
            "title": "Command Encoders",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Encoding a Render Pass",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Encoding Configuration Commands",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring Pipeline State",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setrenderpipelinestate(_:)",
                        "title": "- setRenderPipelineState:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring the Actions for Attachments",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setcolorstoreaction(_:index:)",
                        "title": "- setColorStoreAction:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setcolorstoreactionoptions(_:index:)",
                        "title": "- setColorStoreActionOptions:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthstoreaction(_:)",
                        "title": "- setDepthStoreAction:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthstoreactionoptions(_:)",
                        "title": "- setDepthStoreActionOptions:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilstoreaction(_:)",
                        "title": "- setStencilStoreAction:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilstoreactionoptions(_:)",
                        "title": "- setStencilStoreActionOptions:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Blend Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setblendcolor(red:green:blue:alpha:)",
                        "title": "- setBlendColorRed:green:blue:alpha:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Rendering Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settrianglefillmode(_:)",
                        "title": "- setTriangleFillMode:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfrontfacing(_:)",
                        "title": "- setFrontFacingWinding:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setcullmode(_:)",
                        "title": "- setCullMode:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Depth and Stencil Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthstencilstate(_:)",
                        "title": "- setDepthStencilState:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthbias(_:slopescale:clamp:)",
                        "title": "- setDepthBias:slopeScale:clamp:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthclipmode(_:)",
                        "title": "- setDepthClipMode:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilreferencevalue(_:)",
                        "title": "- setStencilReferenceValue:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilreferencevalues(front:back:)",
                        "title": "- setStencilFrontReferenceValue:backReferenceValue:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Viewport and Scissor Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setviewport(_:)",
                        "title": "- setViewport:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setscissorrect(_:)",
                        "title": "- setScissorRect:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Visibility Testing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvisibilityresultmode(_:offset:)",
                        "title": "- setVisibilityResultMode:offset:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Vertex Amplification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexamplificationcount(_:viewmappings:)",
                        "title": "- setVertexAmplificationCount:viewMappings:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Tessellation Factors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settessellationfactorscale(_:)",
                        "title": "- setTessellationFactorScale:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settessellationfactorbuffer(_:offset:instancestride:)",
                        "title": "- setTessellationFactorBuffer:offset:instanceStride:",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Persistent Threadgroup Memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectthreadgroupmemorylength(_:index:)",
                        "title": "- setObjectThreadgroupMemoryLength:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setthreadgroupmemorylength(_:offset:index:)",
                        "title": "- setThreadgroupMemoryLength:offset:atIndex:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/render-pass-configuration",
                    "title": "Render Pass Configuration",
                    "type": "collection"
                  },
                  {
                    "title": "Encoding Resource Preparation Commands",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers for Object Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectbuffer(_:offset:index:)",
                        "title": "- setObjectBuffer:offset:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectbytes(_:length:index:)",
                        "title": "- setObjectBytes:length:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectbufferoffset(_:index:)",
                        "title": "- setObjectBufferOffset:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures for Object Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjecttexture(_:index:)",
                        "title": "- setObjectTexture:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States for Object Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectsamplerstate(_:index:)",
                        "title": "- setObjectSamplerState:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "- setObjectSamplerState:lodMinClamp:lodMaxClamp:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Buffers for Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshbuffer(_:offset:index:)",
                        "title": "- setMeshBuffer:offset:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshbytes(_:length:index:)",
                        "title": "- setMeshBytes:length:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshbufferoffset(_:index:)",
                        "title": "- setMeshBufferOffset:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures for Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshtexture(_:index:)",
                        "title": "- setMeshTexture:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States for Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshsamplerstate(_:index:)",
                        "title": "- setMeshSamplerState:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "- setMeshSamplerState:lodMinClamp:lodMaxClamp:atIndex:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/mesh-and-object-shader-resource-preparation-commands",
                    "title": "Mesh and Object Shader Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexbuffer(_:offset:index:)",
                        "title": "- setVertexBuffer:offset:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexbytes(_:length:index:)",
                        "title": "- setVertexBytes:length:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexbufferoffset(_:index:)",
                        "title": "- setVertexBufferOffset:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertextexture(_:index:)",
                        "title": "- setVertexTexture:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexsamplerstate(_:index:)",
                        "title": "- setVertexSamplerState:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "- setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Acceleration Structures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexaccelerationstructure(_:bufferindex:)",
                        "title": "- setVertexAccelerationStructure:atBufferIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Visible Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexvisiblefunctiontable(_:bufferindex:)",
                        "title": "- setVertexVisibleFunctionTable:atBufferIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Intersection Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexintersectionfunctiontable(_:bufferindex:)",
                        "title": "- setVertexIntersectionFunctionTable:atBufferIndex:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/vertex-shader-resource-preparation-commands",
                    "title": "Vertex Shader Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentbuffer(_:offset:index:)",
                        "title": "- setFragmentBuffer:offset:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentbytes(_:length:index:)",
                        "title": "- setFragmentBytes:length:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentbufferoffset(_:index:)",
                        "title": "- setFragmentBufferOffset:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmenttexture(_:index:)",
                        "title": "- setFragmentTexture:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentsamplerstate(_:index:)",
                        "title": "- setFragmentSamplerState:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "- setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Acceleration Structures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentaccelerationstructure(_:bufferindex:)",
                        "title": "- setFragmentAccelerationStructure:atBufferIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Visible Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentvisiblefunctiontable(_:bufferindex:)",
                        "title": "- setFragmentVisibleFunctionTable:atBufferIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Intersection Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentintersectionfunctiontable(_:bufferindex:)",
                        "title": "- setFragmentIntersectionFunctionTable:atBufferIndex:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/fragment-shader-resource-preparation-commands",
                    "title": "Fragment Shader Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilebuffer(_:offset:index:)",
                        "title": "- setTileBuffer:offset:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilebytes(_:length:index:)",
                        "title": "- setTileBytes:length:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilebufferoffset(_:index:)",
                        "title": "- setTileBufferOffset:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settiletexture(_:index:)",
                        "title": "- setTileTexture:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilesamplerstate(_:index:)",
                        "title": "- setTileSamplerState:atIndex:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilesamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "- setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Acceleration Structures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settileaccelerationstructure(_:bufferindex:)",
                        "title": "- setTileAccelerationStructure:atBufferIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Visible Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilevisiblefunctiontable(_:bufferindex:)",
                        "title": "- setTileVisibleFunctionTable:atBufferIndex:",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Intersection Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settileintersectionfunctiontable(_:bufferindex:)",
                        "title": "- setTileIntersectionFunctionTable:atBufferIndex:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/tile-shaders-resource-preparation-commands",
                    "title": "Tile Shaders Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Loading Individual Resources for Argument Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/useresource(_:usage:stages:)",
                        "title": "- useResource:usage:stages:",
                        "type": "method"
                      },
                      {
                        "title": "Loading Heaps and the Resources They Contain for Argument Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/useheap(_:stages:)",
                        "title": "- useHeap:stages:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/argument-buffer-resource-preparation-commands",
                    "title": "Argument Buffer Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "title": "Encoding Draw Commands",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Drawing with Meshes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawmeshthreads(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                        "title": "- drawMeshThreads:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawmeshthreadgroups(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                        "title": "- drawMeshThreadgroups:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawmeshthreadgroups(indirectbuffer:indirectbufferoffset:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                        "title": "- drawMeshThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Vertices",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:vertexstart:vertexcount:)",
                        "title": "- drawPrimitives:vertexStart:vertexCount:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:vertexstart:vertexcount:instancecount:)",
                        "title": "- drawPrimitives:vertexStart:vertexCount:instanceCount:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:vertexstart:vertexcount:instancecount:baseinstance:)",
                        "title": "- drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:indirectbuffer:indirectbufferoffset:)",
                        "title": "- drawPrimitives:indirectBuffer:indirectBufferOffset:",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Indexed Vertices",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indexcount:indextype:indexbuffer:indexbufferoffset:)",
                        "title": "- drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indexcount:indextype:indexbuffer:indexbufferoffset:instancecount:)",
                        "title": "- drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indexcount:indextype:indexbuffer:indexbufferoffset:instancecount:basevertex:baseinstance:)",
                        "title": "- drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indextype:indexbuffer:indexbufferoffset:indirectbuffer:indirectbufferoffset:)",
                        "title": "- drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Tessellation Patches",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawpatches(numberofpatchcontrolpoints:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:instancecount:baseinstance:)",
                        "title": "- drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawpatches(numberofpatchcontrolpoints:patchindexbuffer:patchindexbufferoffset:indirectbuffer:indirectbufferoffset:)",
                        "title": "- drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Indexed Tessellation Patches",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedpatches(numberofpatchcontrolpoints:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:controlpointindexbuffer:controlpointindexbufferoffset:instancecount:baseinstance:)",
                        "title": "- drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedpatches(numberofpatchcontrolpoints:patchindexbuffer:patchindexbufferoffset:controlpointindexbuffer:controlpointindexbufferoffset:indirectbuffer:indirectbufferoffset:)",
                        "title": "- drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Tile Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/dispatchthreadspertile(_:)",
                        "title": "- dispatchThreadsPerTile:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/tilewidth",
                        "title": "tileWidth",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/tileheight",
                        "title": "tileHeight",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/render-pass-drawing-commands",
                    "title": "Render Pass Drawing Commands",
                    "type": "collection"
                  },
                  {
                    "title": "Encoding Resource Synchronization Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/waitforfence(_:before:)",
                    "title": "- waitForFence:beforeStages:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/updatefence(_:after:)",
                    "title": "- updateFence:afterStages:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/memorybarrierwithresources:count:afterstages:beforestages:",
                    "title": "- memoryBarrierWithResources:count:afterStages:beforeStages:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/memorybarrier(scope:after:before:)",
                    "title": "- memoryBarrierWithScope:afterStages:beforeStages:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Commands that Run Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/executecommandsinbuffer:withrange:",
                    "title": "- executeCommandsInBuffer:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/executecommandsinbuffer:indirectbuffer:indirectbufferoffset:",
                    "title": "- executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Data Sampling Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "- sampleCountersInBuffer:atSampleIndex:withBarrier:",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Deprecated Methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/useresource(_:usage:)",
                        "title": "- useResource:usage:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/useheap(_:)",
                        "title": "- useHeap:",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/texturebarrier()",
                        "title": "- textureBarrier",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/deprecated-symbols",
                    "title": "Deprecated Symbols",
                    "type": "collection"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbuffer(_:offset:attributestride:index:)",
                    "title": "- setVertexBuffer:offset:attributeStride:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbufferoffset(offset:attributestride:index:)",
                    "title": "- setVertexBufferOffset:attributeStride:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbuffers:offsets:attributestrides:withrange:",
                    "title": "- setVertexBuffers:offsets:attributeStrides:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbytes(_:length:attributestride:index:)",
                    "title": "- setVertexBytes:length:attributeStride:atIndex:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrendercommandencoder",
                "title": "MTLRenderCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltrianglefillmode/fill",
                    "title": "MTLTriangleFillModeFill",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtltrianglefillmode/lines",
                    "title": "MTLTriangleFillModeLines",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtltrianglefillmode",
                "title": "MTLTriangleFillMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlwinding/clockwise",
                    "title": "MTLWindingClockwise",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlwinding/counterclockwise",
                    "title": "MTLWindingCounterClockwise",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlwinding",
                "title": "MTLWinding",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcullmode/none",
                    "title": "MTLCullModeNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcullmode/front",
                    "title": "MTLCullModeFront",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcullmode/back",
                    "title": "MTLCullModeBack",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlcullmode",
                "title": "MTLCullMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/point",
                    "title": "MTLPrimitiveTypePoint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/line",
                    "title": "MTLPrimitiveTypeLine",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/linestrip",
                    "title": "MTLPrimitiveTypeLineStrip",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/triangle",
                    "title": "MTLPrimitiveTypeTriangle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/trianglestrip",
                    "title": "MTLPrimitiveTypeTriangleStrip",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlprimitivetype",
                "title": "MTLPrimitiveType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindextype/uint16",
                    "title": "MTLIndexTypeUInt16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindextype/uint32",
                    "title": "MTLIndexTypeUInt32",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlindextype",
                "title": "MTLIndexType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthclipmode/clip",
                    "title": "MTLDepthClipModeClip",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldepthclipmode/clamp",
                    "title": "MTLDepthClipModeClamp",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtldepthclipmode",
                "title": "MTLDepthClipMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisibilityresultmode/disabled",
                    "title": "MTLVisibilityResultModeDisabled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlvisibilityresultmode/boolean",
                    "title": "MTLVisibilityResultModeBoolean",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlvisibilityresultmode/counting",
                    "title": "MTLVisibilityResultModeCounting",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlvisibilityresultmode",
                "title": "MTLVisibilityResultMode",
                "type": "enum"
              },
              {
                "title": "Encoding a Render Pass in Parallel",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Render Command Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/makerendercommandencoder()",
                    "title": "- renderCommandEncoder",
                    "type": "method"
                  },
                  {
                    "title": "Setting Render Pass State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setcolorstoreaction(_:index:)",
                    "title": "- setColorStoreAction:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setcolorstoreactionoptions(_:index:)",
                    "title": "- setColorStoreActionOptions:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setdepthstoreaction(_:)",
                    "title": "- setDepthStoreAction:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setdepthstoreactionoptions(_:)",
                    "title": "- setDepthStoreActionOptions:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setstencilstoreaction(_:)",
                    "title": "- setStencilStoreAction:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setstencilstoreactionoptions(_:)",
                    "title": "- setStencilStoreActionOptions:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlparallelrendercommandencoder",
                "title": "MTLParallelRenderCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlloadaction/dontcare",
                    "title": "MTLLoadActionDontCare",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlloadaction/load",
                    "title": "MTLLoadActionLoad",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlloadaction/clear",
                    "title": "MTLLoadActionClear",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlloadaction",
                "title": "MTLLoadAction",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/dontcare",
                    "title": "MTLStoreActionDontCare",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/store",
                    "title": "MTLStoreActionStore",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/multisampleresolve",
                    "title": "MTLStoreActionMultisampleResolve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/storeandmultisampleresolve",
                    "title": "MTLStoreActionStoreAndMultisampleResolve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/unknown",
                    "title": "MTLStoreActionUnknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/customsampledepthstore",
                    "title": "MTLStoreActionCustomSampleDepthStore",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlstoreaction",
                "title": "MTLStoreAction",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreactionoptions/mtlstoreactionoptionnone",
                    "title": "MTLStoreActionOptionNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreactionoptions/customsamplepositions",
                    "title": "MTLStoreActionOptionCustomSamplePositions",
                    "type": "case"
                  },
                  {
                    "title": "Using Programmable Sample Positions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreactionoptions/customsamplepositions",
                    "title": "MTLStoreActionOptionCustomSamplePositions",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlstoreactionoptions",
                "title": "MTLStoreActionOptions",
                "type": "enum"
              },
              {
                "title": "Configuring a Render Command Encoder",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Default Render Pass Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/renderpassdescriptor",
                    "title": "+ renderPassDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Attachments for a Rendering Pass",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/colorattachments",
                    "title": "colorAttachments",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/depthattachment",
                    "title": "depthAttachment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/stencilattachment",
                    "title": "stencilAttachment",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Visibility Result Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/visibilityresultbuffer",
                    "title": "visibilityResultBuffer",
                    "type": "property"
                  },
                  {
                    "title": "Layered Rendering",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rendertargetarraylength",
                    "title": "renderTargetArrayLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rendertargetwidth",
                    "title": "renderTargetWidth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rendertargetheight",
                    "title": "renderTargetHeight",
                    "type": "property"
                  },
                  {
                    "title": "Using Programmable Sample Positions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplepositionmake(_:_:)",
                    "title": "MTLSamplePositionMake",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/setsamplepositions:count:",
                    "title": "- setSamplePositions:count:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/getsamplepositions:count:",
                    "title": "- getSamplePositions:count:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Tile Shading Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/imageblocksamplelength",
                    "title": "imageblockSampleLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/threadgroupmemorylength",
                    "title": "threadgroupMemoryLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/tilewidth",
                    "title": "tileWidth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/tileheight",
                    "title": "tileHeight",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Sample Counts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/defaultrastersamplecount",
                    "title": "defaultRasterSampleCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying a Rasterization Rate Map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rasterizationratemap",
                    "title": "rasterizationRateMap",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Sample Buffers for GPU Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/samplebufferattachments",
                    "title": "sampleBufferAttachments",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassdescriptor",
                "title": "MTLRenderPassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Texture for the Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/texture",
                    "title": "texture",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/level",
                    "title": "level",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/slice",
                    "title": "slice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/depthplane",
                    "title": "depthPlane",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rendering Pass Actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/loadaction",
                    "title": "loadAction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/storeaction",
                    "title": "storeAction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/storeactionoptions",
                    "title": "storeActionOptions",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Texture to Resolve Multisample Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolvetexture",
                    "title": "resolveTexture",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolvelevel",
                    "title": "resolveLevel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolveslice",
                    "title": "resolveSlice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolvedepthplane",
                    "title": "resolveDepthPlane",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassattachmentdescriptor",
                "title": "MTLRenderPassAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Description of a Color Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptorarray",
                "title": "MTLRenderPassColorAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Clearing Value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptor/clearcolor",
                    "title": "clearColor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolormake(_:_:_:_:)",
                    "title": "MTLClearColorMake",
                    "type": "func"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptor",
                "title": "MTLRenderPassColorAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/alpha",
                    "title": "alpha",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/blue",
                    "title": "blue",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/green",
                    "title": "green",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/red",
                    "title": "red",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/green",
                    "title": "green",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/blue",
                    "title": "blue",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/alpha",
                    "title": "alpha",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlclearcolor",
                "title": "MTLClearColor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying Clearing Value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdepthattachmentdescriptor/cleardepth",
                    "title": "clearDepth",
                    "type": "property"
                  },
                  {
                    "title": "MSAA Depth Resolve",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdepthattachmentdescriptor/depthresolvefilter",
                    "title": "depthResolveFilter",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassdepthattachmentdescriptor",
                "title": "MTLRenderPassDepthAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisampledepthresolvefilter/sample0",
                    "title": "MTLMultisampleDepthResolveFilterSample0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisampledepthresolvefilter/min",
                    "title": "MTLMultisampleDepthResolveFilterMin",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisampledepthresolvefilter/max",
                    "title": "MTLMultisampleDepthResolveFilterMax",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlmultisampledepthresolvefilter",
                "title": "MTLMultisampleDepthResolveFilter",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptorarray",
                "title": "MTLTileRenderPipelineColorAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Resolve Filter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassstencilattachmentdescriptor/stencilresolvefilter",
                    "title": "stencilResolveFilter",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Stencil Clear Value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassstencilattachmentdescriptor/clearstencil",
                    "title": "clearStencil",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassstencilattachmentdescriptor",
                "title": "MTLRenderPassStencilAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisamplestencilresolvefilter/depthresolvedsample",
                    "title": "MTLMultisampleStencilResolveFilterDepthResolvedSample",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisamplestencilresolvefilter/sample0",
                    "title": "MTLMultisampleStencilResolveFilterSample0",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlmultisamplestencilresolvefilter",
                "title": "MTLMultisampleStencilResolveFilter",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptorarray",
                "title": "MTLRenderPassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "sampleBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/startofvertexsampleindex",
                    "title": "startOfVertexSampleIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/endofvertexsampleindex",
                    "title": "endOfVertexSampleIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/startoffragmentsampleindex",
                    "title": "startOfFragmentSampleIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/endoffragmentsampleindex",
                    "title": "endOfFragmentSampleIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor",
                "title": "MTLRenderPassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "title": "Render Pipeline States",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  },
                  {
                    "title": "Checking Object Shader Memory Requirements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadsperobjectthreadgroup",
                    "title": "maxTotalThreadsPerObjectThreadgroup",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/objectthreadexecutionwidth",
                    "title": "objectThreadExecutionWidth",
                    "type": "property"
                  },
                  {
                    "title": "Checking Mesh Shader Memory Requirements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadspermeshthreadgroup",
                    "title": "maxTotalThreadsPerMeshThreadgroup",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadgroupspermeshgrid",
                    "title": "maxTotalThreadgroupsPerMeshGrid",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/meshthreadexecutionwidth",
                    "title": "meshThreadExecutionWidth",
                    "type": "property"
                  },
                  {
                    "title": "Checking Tile Shader Memory Requirements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadsperthreadgroup",
                    "title": "maxTotalThreadsPerThreadgroup",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/threadgroupsizematchestilesize",
                    "title": "threadgroupSizeMatchesTileSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/imageblocksamplelength",
                    "title": "imageblockSampleLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/imageblockmemorylength(fordimensions:)",
                    "title": "- imageblockMemoryLengthForDimensions:",
                    "type": "method"
                  },
                  {
                    "title": "Checking Feature Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/supportindirectcommandbuffers",
                    "title": "supportIndirectCommandBuffers",
                    "type": "property"
                  },
                  {
                    "title": "Checking Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/shadervalidation",
                    "title": "shaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Creating Function Handles and Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/functionhandle(function:stage:)",
                    "title": "- functionHandleWithFunction:stage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/makevisiblefunctiontable(descriptor:stage:)",
                    "title": "- newVisibleFunctionTableWithDescriptor:stage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/makeintersectionfunctiontable(descriptor:stage:)",
                    "title": "- newIntersectionFunctionTableWithDescriptor:stage:",
                    "type": "method"
                  },
                  {
                    "title": "Creating Modified Clones of the Render Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/makerenderpipelinestate(additionalbinaryfunctions:)",
                    "title": "- newRenderPipelineStateWithAdditionalBinaryFunctions:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinestate",
                "title": "MTLRenderPipelineState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Render Pipeline State Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Graphics Functions and Associated Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexfunction",
                    "title": "vertexFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentfunction",
                    "title": "fragmentFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxvertexcallstackdepth",
                    "title": "maxVertexCallStackDepth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxfragmentcallstackdepth",
                    "title": "maxFragmentCallStackDepth",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Buffer Layouts and Fetch Behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexdescriptor",
                    "title": "vertexDescriptor",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexbuffers",
                    "title": "vertexBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentbuffers",
                    "title": "fragmentBuffers",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rendering Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/reset()",
                    "title": "- reset",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/colorattachments",
                    "title": "colorAttachments",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/depthattachmentpixelformat",
                    "title": "depthAttachmentPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/stencilattachmentpixelformat",
                    "title": "stencilAttachmentPixelFormat",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rasterization and Visibility State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/isalphatocoverageenabled",
                    "title": "alphaToCoverageEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/isalphatooneenabled",
                    "title": "alphaToOneEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/israsterizationenabled",
                    "title": "rasterizationEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/inputprimitivetopology",
                    "title": "inputPrimitiveTopology",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/rastersamplecount",
                    "title": "rasterSampleCount",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/unspecified",
                        "title": "MTLPrimitiveTopologyClassUnspecified",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/point",
                        "title": "MTLPrimitiveTopologyClassPoint",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/line",
                        "title": "MTLPrimitiveTopologyClassLine",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/triangle",
                        "title": "MTLPrimitiveTopologyClassTriangle",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlprimitivetopologyclass",
                    "title": "MTLPrimitiveTopologyClass",
                    "type": "enum"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/samplecount",
                    "title": "sampleCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Tessellation State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxtessellationfactor",
                    "title": "maxTessellationFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/istessellationfactorscaleenabled",
                    "title": "tessellationFactorScaleEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationfactorformat",
                    "title": "tessellationFactorFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationcontrolpointindextype",
                    "title": "tessellationControlPointIndexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationfactorstepfunction",
                    "title": "tessellationFactorStepFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationoutputwindingorder",
                    "title": "tessellationOutputWindingOrder",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationpartitionmode",
                    "title": "tessellationPartitionMode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorformat/half",
                        "title": "MTLTessellationFactorFormatHalf",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationfactorformat",
                    "title": "MTLTessellationFactorFormat",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationcontrolpointindextype/none",
                        "title": "MTLTessellationControlPointIndexTypeNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationcontrolpointindextype/uint16",
                        "title": "MTLTessellationControlPointIndexTypeUInt16",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationcontrolpointindextype/uint32",
                        "title": "MTLTessellationControlPointIndexTypeUInt32",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationcontrolpointindextype",
                    "title": "MTLTessellationControlPointIndexType",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/constant",
                        "title": "MTLTessellationFactorStepFunctionConstant",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/perpatch",
                        "title": "MTLTessellationFactorStepFunctionPerPatch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/perinstance",
                        "title": "MTLTessellationFactorStepFunctionPerInstance",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/perpatchandperinstance",
                        "title": "MTLTessellationFactorStepFunctionPerPatchAndPerInstance",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationfactorstepfunction",
                    "title": "MTLTessellationFactorStepFunction",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/pow2",
                        "title": "MTLTessellationPartitionModePow2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/integer",
                        "title": "MTLTessellationPartitionModeInteger",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/fractionalodd",
                        "title": "MTLTessellationPartitionModeFractionalOdd",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/fractionaleven",
                        "title": "MTLTessellationPartitionModeFractionalEven",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationpartitionmode",
                    "title": "MTLTessellationPartitionMode",
                    "type": "enum"
                  },
                  {
                    "title": "Specifying Indirect Command Buffers Usage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/supportindirectcommandbuffers",
                    "title": "supportIndirectCommandBuffers",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Maximum Vertex Amplification Count",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxvertexamplificationcount",
                    "title": "maxVertexAmplificationCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Precompiled Shader Binaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/supportaddingvertexbinaryfunctions",
                    "title": "supportAddingVertexBinaryFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/supportaddingfragmentbinaryfunctions",
                    "title": "supportAddingFragmentBinaryFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/binaryarchives",
                    "title": "binaryArchives",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Callable Functions for the Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexlinkedfunctions",
                    "title": "vertexLinkedFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentlinkedfunctions",
                    "title": "fragmentLinkedFunctions",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/shadervalidation",
                    "title": "shaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentpreloadedlibraries",
                    "title": "fragmentPreloadedLibraries",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexpreloadedlibraries",
                    "title": "vertexPreloadedLibraries",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinedescriptor",
                "title": "MTLRenderPipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Descriptor’s Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor/vertexadditionalbinaryfunctions",
                    "title": "vertexAdditionalBinaryFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor/fragmentadditionalbinaryfunctions",
                    "title": "fragmentAdditionalBinaryFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor/tileadditionalbinaryfunctions",
                    "title": "tileAdditionalBinaryFunctions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor",
                "title": "MTLRenderPipelineFunctionsDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/binaryarchives",
                    "title": "binaryArchives",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/colorattachments",
                    "title": "colorAttachments",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/depthattachmentpixelformat",
                    "title": "depthAttachmentPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/fragmentbuffers",
                    "title": "fragmentBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/fragmentfunction",
                    "title": "fragmentFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/fragmentlinkedfunctions",
                    "title": "fragmentLinkedFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/isalphatocoverageenabled",
                    "title": "alphaToCoverageEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/isalphatooneenabled",
                    "title": "alphaToOneEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/israsterizationenabled",
                    "title": "rasterizationEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxtotalthreadgroupspermeshgrid",
                    "title": "maxTotalThreadgroupsPerMeshGrid",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxtotalthreadspermeshthreadgroup",
                    "title": "maxTotalThreadsPerMeshThreadgroup",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxtotalthreadsperobjectthreadgroup",
                    "title": "maxTotalThreadsPerObjectThreadgroup",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxvertexamplificationcount",
                    "title": "maxVertexAmplificationCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshbuffers",
                    "title": "meshBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshfunction",
                    "title": "meshFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshlinkedfunctions",
                    "title": "meshLinkedFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshthreadgroupsizeismultipleofthreadexecutionwidth",
                    "title": "meshThreadgroupSizeIsMultipleOfThreadExecutionWidth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectbuffers",
                    "title": "objectBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectfunction",
                    "title": "objectFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectlinkedfunctions",
                    "title": "objectLinkedFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectthreadgroupsizeismultipleofthreadexecutionwidth",
                    "title": "objectThreadgroupSizeIsMultipleOfThreadExecutionWidth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/payloadmemorylength",
                    "title": "payloadMemoryLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/rastersamplecount",
                    "title": "rasterSampleCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/shadervalidation",
                    "title": "shaderValidation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/stencilattachmentpixelformat",
                    "title": "stencilAttachmentPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/supportindirectcommandbuffers",
                    "title": "supportIndirectCommandBuffers",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/reset()",
                    "title": "- reset",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor",
                "title": "MTLMeshRenderPipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptor/mutability",
                    "title": "mutability",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/default",
                        "title": "MTLMutabilityDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/mutable",
                        "title": "MTLMutabilityMutable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/immutable",
                        "title": "MTLMutabilityImmutable",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlmutability",
                    "title": "MTLMutability",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptor",
                "title": "MTLPipelineBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptorarray",
                "title": "MTLPipelineBufferDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Render Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/pixelformat",
                    "title": "pixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/writemask",
                    "title": "writeMask",
                    "type": "property"
                  },
                  {
                    "title": "Controlling the Blend Operation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/isblendingenabled",
                    "title": "blendingEnabled",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/alphablendoperation",
                    "title": "alphaBlendOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/rgbblendoperation",
                    "title": "rgbBlendOperation",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Blend Factors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/destinationalphablendfactor",
                    "title": "destinationAlphaBlendFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/destinationrgbblendfactor",
                    "title": "destinationRGBBlendFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/sourcealphablendfactor",
                    "title": "sourceAlphaBlendFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/sourcergbblendfactor",
                    "title": "sourceRGBBlendFactor",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/add",
                        "title": "MTLBlendOperationAdd",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/subtract",
                        "title": "MTLBlendOperationSubtract",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/reversesubtract",
                        "title": "MTLBlendOperationReverseSubtract",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/min",
                        "title": "MTLBlendOperationMin",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/max",
                        "title": "MTLBlendOperationMax",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlblendoperation",
                    "title": "MTLBlendOperation",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/zero",
                        "title": "MTLBlendFactorZero",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/one",
                        "title": "MTLBlendFactorOne",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/sourcecolor",
                        "title": "MTLBlendFactorSourceColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussourcecolor",
                        "title": "MTLBlendFactorOneMinusSourceColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/sourcealpha",
                        "title": "MTLBlendFactorSourceAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussourcealpha",
                        "title": "MTLBlendFactorOneMinusSourceAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/destinationcolor",
                        "title": "MTLBlendFactorDestinationColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusdestinationcolor",
                        "title": "MTLBlendFactorOneMinusDestinationColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/destinationalpha",
                        "title": "MTLBlendFactorDestinationAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusdestinationalpha",
                        "title": "MTLBlendFactorOneMinusDestinationAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/sourcealphasaturated",
                        "title": "MTLBlendFactorSourceAlphaSaturated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/blendcolor",
                        "title": "MTLBlendFactorBlendColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusblendcolor",
                        "title": "MTLBlendFactorOneMinusBlendColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/blendalpha",
                        "title": "MTLBlendFactorBlendAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusblendalpha",
                        "title": "MTLBlendFactorOneMinusBlendAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/source1color",
                        "title": "MTLBlendFactorSource1Color",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussource1color",
                        "title": "MTLBlendFactorOneMinusSource1Color",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/source1alpha",
                        "title": "MTLBlendFactorSource1Alpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussource1alpha",
                        "title": "MTLBlendFactorOneMinusSource1Alpha",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlblendfactor",
                    "title": "MTLBlendFactor",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/mtlcolorwritemasknone",
                        "title": "MTLColorWriteMaskNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/red",
                        "title": "MTLColorWriteMaskRed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/green",
                        "title": "MTLColorWriteMaskGreen",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/blue",
                        "title": "MTLColorWriteMaskBlue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/alpha",
                        "title": "MTLColorWriteMaskAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/all",
                        "title": "MTLColorWriteMaskAll",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlcolorwritemask",
                    "title": "MTLColorWriteMask",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor",
                "title": "MTLRenderPipelineColorAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Render Pipeline State for a Color Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptorarray",
                "title": "MTLRenderPipelineColorAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Render Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Graphics Functions and Associated Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/tilefunction",
                    "title": "tileFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/tilebuffers",
                    "title": "tileBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/maxcallstackdepth",
                    "title": "maxCallStackDepth",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rasterization and Visibility State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/threadgroupsizematchestilesize",
                    "title": "threadgroupSizeMatchesTileSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/rastersamplecount",
                    "title": "rasterSampleCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rendering Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/reset()",
                    "title": "- reset",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/colorattachments",
                    "title": "colorAttachments",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Threads per Threadgroup",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/maxtotalthreadsperthreadgroup",
                    "title": "maxTotalThreadsPerThreadgroup",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Precompiled Shader Binaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/supportaddingbinaryfunctions",
                    "title": "supportAddingBinaryFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/binaryarchives",
                    "title": "binaryArchives",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Callable Functions for the Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/linkedfunctions",
                    "title": "linkedFunctions",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/shadervalidation",
                    "title": "shaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/preloadedlibraries",
                    "title": "preloadedLibraries",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltilerenderpipelinedescriptor",
                "title": "MTLTileRenderPipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Pixel Format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptor/pixelformat",
                    "title": "pixelFormat",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptor",
                "title": "MTLTileRenderPipelineColorAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Retrieving Argument Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/mtlpipelineoptionnone",
                    "title": "MTLPipelineOptionNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/buffertypeinfo",
                    "title": "MTLPipelineOptionBufferTypeInfo",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/failonbinaryarchivemiss",
                    "title": "MTLPipelineOptionFailOnBinaryArchiveMiss",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpipelineoption/argumentinfo",
                    "title": "MTLPipelineOptionArgumentInfo",
                    "type": "case"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/bindinginfo",
                    "title": "MTLPipelineOptionBindingInfo",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlpipelineoption",
                "title": "MTLPipelineOption",
                "type": "enum"
              },
              {
                "title": "Dynamic Render Pipeline States",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying Viewport Boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/originx",
                    "title": "originX",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/originy",
                    "title": "originY",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/width",
                    "title": "width",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/height",
                    "title": "height",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/znear",
                    "title": "znear",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/zfar",
                    "title": "zfar",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlviewport",
                "title": "MTLViewport",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying Scissor Boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/height",
                    "title": "height",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/width",
                    "title": "width",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/x",
                    "title": "x",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/y",
                    "title": "y",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlscissorrect",
                "title": "MTLScissorRect",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying Mapping Offsets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexamplificationviewmapping/rendertargetarrayindexoffset",
                    "title": "renderTargetArrayIndexOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexamplificationviewmapping/viewportarrayindexoffset",
                    "title": "viewportArrayIndexOffset",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvertexamplificationviewmapping",
                "title": "MTLVertexAmplificationViewMapping",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlquadtessellationfactorshalf/edgetessellationfactor",
                    "title": "edgeTessellationFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlquadtessellationfactorshalf/insidetessellationfactor",
                    "title": "insideTessellationFactor",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlquadtessellationfactorshalf",
                "title": "MTLQuadTessellationFactorsHalf",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltriangletessellationfactorshalf/edgetessellationfactor",
                    "title": "edgeTessellationFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltriangletessellationfactorshalf/insidetessellationfactor",
                    "title": "insideTessellationFactor",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltriangletessellationfactorshalf",
                "title": "MTLTriangleTessellationFactorsHalf",
                "type": "struct"
              },
              {
                "title": "Render Pass Inputs",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a New Vertex Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexdescriptor/vertexdescriptor",
                    "title": "+ vertexDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Setting Default Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexdescriptor/reset()",
                    "title": "- reset",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Vertex Buffer Layouts and Vertex Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexdescriptor/attributes",
                    "title": "attributes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexdescriptor/layouts",
                    "title": "layouts",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvertexdescriptor",
                "title": "MTLVertexDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Organizing the Vertex Attribute",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptor/format",
                    "title": "format",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptor/offset",
                    "title": "offset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptor/bufferindex",
                    "title": "bufferIndex",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/invalid",
                        "title": "MTLVertexFormatInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar",
                        "title": "MTLVertexFormatUChar",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar2",
                        "title": "MTLVertexFormatUChar2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar3",
                        "title": "MTLVertexFormatUChar3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar4",
                        "title": "MTLVertexFormatUChar4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char",
                        "title": "MTLVertexFormatChar",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char2",
                        "title": "MTLVertexFormatChar2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char3",
                        "title": "MTLVertexFormatChar3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char4",
                        "title": "MTLVertexFormatChar4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ucharnormalized",
                        "title": "MTLVertexFormatUCharNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar2normalized",
                        "title": "MTLVertexFormatUChar2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar3normalized",
                        "title": "MTLVertexFormatUChar3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar4normalized",
                        "title": "MTLVertexFormatUChar4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/charnormalized",
                        "title": "MTLVertexFormatCharNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char2normalized",
                        "title": "MTLVertexFormatChar2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char3normalized",
                        "title": "MTLVertexFormatChar3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char4normalized",
                        "title": "MTLVertexFormatChar4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort",
                        "title": "MTLVertexFormatUShort",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort2",
                        "title": "MTLVertexFormatUShort2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort3",
                        "title": "MTLVertexFormatUShort3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort4",
                        "title": "MTLVertexFormatUShort4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short",
                        "title": "MTLVertexFormatShort",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short2",
                        "title": "MTLVertexFormatShort2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short3",
                        "title": "MTLVertexFormatShort3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short4",
                        "title": "MTLVertexFormatShort4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushortnormalized",
                        "title": "MTLVertexFormatUShortNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort2normalized",
                        "title": "MTLVertexFormatUShort2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort3normalized",
                        "title": "MTLVertexFormatUShort3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort4normalized",
                        "title": "MTLVertexFormatUShort4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/shortnormalized",
                        "title": "MTLVertexFormatShortNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short2normalized",
                        "title": "MTLVertexFormatShort2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short3normalized",
                        "title": "MTLVertexFormatShort3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short4normalized",
                        "title": "MTLVertexFormatShort4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half",
                        "title": "MTLVertexFormatHalf",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half2",
                        "title": "MTLVertexFormatHalf2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half3",
                        "title": "MTLVertexFormatHalf3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half4",
                        "title": "MTLVertexFormatHalf4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float",
                        "title": "MTLVertexFormatFloat",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float2",
                        "title": "MTLVertexFormatFloat2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float3",
                        "title": "MTLVertexFormatFloat3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float4",
                        "title": "MTLVertexFormatFloat4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint",
                        "title": "MTLVertexFormatUInt",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint2",
                        "title": "MTLVertexFormatUInt2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint3",
                        "title": "MTLVertexFormatUInt3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint4",
                        "title": "MTLVertexFormatUInt4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int",
                        "title": "MTLVertexFormatInt",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int2",
                        "title": "MTLVertexFormatInt2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int3",
                        "title": "MTLVertexFormatInt3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int4",
                        "title": "MTLVertexFormatInt4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int1010102normalized",
                        "title": "MTLVertexFormatInt1010102Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint1010102normalized",
                        "title": "MTLVertexFormatUInt1010102Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar4normalized_bgra",
                        "title": "MTLVertexFormatUChar4Normalized_BGRA",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/floatrg11b10",
                        "title": "MTLVertexFormatFloatRG11B10",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/floatrgb9e5",
                        "title": "MTLVertexFormatFloatRGB9E5",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlvertexformat",
                    "title": "MTLVertexFormat",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlvertexattributedescriptor",
                "title": "MTLVertexAttributeDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Specified Vertex Attribute",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlvertexattributedescriptorarray",
                "title": "MTLVertexAttributeDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Organizing the Vertex Buffer Layout",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor/stepfunction",
                    "title": "stepFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor/steprate",
                    "title": "stepRate",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor/stride",
                    "title": "stride",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/constant",
                        "title": "MTLVertexStepFunctionConstant",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/pervertex",
                        "title": "MTLVertexStepFunctionPerVertex",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/perinstance",
                        "title": "MTLVertexStepFunctionPerInstance",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/perpatch",
                        "title": "MTLVertexStepFunctionPerPatch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/perpatchcontrolpoint",
                        "title": "MTLVertexStepFunctionPerPatchControlPoint",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlvertexstepfunction",
                    "title": "MTLVertexStepFunction",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor",
                "title": "MTLVertexBufferLayoutDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Specified Vertex Buffer Layout",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlvertexbufferlayoutdescriptorarray",
                "title": "MTLVertexBufferLayoutDescriptorArray",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlbufferlayoutstridedynamic",
                "title": "MTLBufferLayoutStrideDynamic",
                "type": "var"
              },
              {
                "title": "Render Pass Outputs",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Drawable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/drawableid",
                    "title": "drawableID",
                    "type": "property"
                  },
                  {
                    "title": "Presenting the Drawable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/present()",
                    "title": "- present",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/present(afterminimumduration:)",
                    "title": "- presentAfterMinimumDuration:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/present(at:)",
                    "title": "- presentAtTime:",
                    "type": "method"
                  },
                  {
                    "title": "Getting Presentation Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/addpresentedhandler(_:)",
                    "title": "- addPresentedHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/presentedtime",
                    "title": "presentedTime",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawable",
                "title": "MTLDrawable",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtldrawablepresentedhandler",
                "title": "MTLDrawablePresentedHandler",
                "type": "typealias"
              },
              {
                "title": "Depth Testing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/calculating-primitive-visibility-using-depth-testing",
                "title": "Calculating Primitive Visibility Using Depth Testing",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Identifying Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencilstate/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencilstate/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldepthstencilstate",
                "title": "MTLDepthStencilState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Specifying Depth Operations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/depthcomparefunction",
                    "title": "depthCompareFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/isdepthwriteenabled",
                    "title": "depthWriteEnabled",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Stencil Descriptors for Primitives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/backfacestencil",
                    "title": "backFaceStencil",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/frontfacestencil",
                    "title": "frontFaceStencil",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldepthstencildescriptor",
                "title": "MTLDepthStencilDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Stencil Functions and Operations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/stencilfailureoperation",
                    "title": "stencilFailureOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/depthfailureoperation",
                    "title": "depthFailureOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/depthstencilpassoperation",
                    "title": "depthStencilPassOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/stencilcomparefunction",
                    "title": "stencilCompareFunction",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Stencil Bit Mask Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/readmask",
                    "title": "readMask",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/writemask",
                    "title": "writeMask",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/keep",
                        "title": "MTLStencilOperationKeep",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/zero",
                        "title": "MTLStencilOperationZero",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/replace",
                        "title": "MTLStencilOperationReplace",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/incrementclamp",
                        "title": "MTLStencilOperationIncrementClamp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/decrementclamp",
                        "title": "MTLStencilOperationDecrementClamp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/invert",
                        "title": "MTLStencilOperationInvert",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/incrementwrap",
                        "title": "MTLStencilOperationIncrementWrap",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/decrementwrap",
                        "title": "MTLStencilOperationDecrementWrap",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlstenciloperation",
                    "title": "MTLStencilOperation",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlstencildescriptor",
                "title": "MTLStencilDescriptor",
                "type": "class"
              },
              {
                "title": "Rasterization Settings",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-at-different-rasterization-rates",
                "title": "Rendering at Different Rasterization Rates",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-a-rasterization-rate-map",
                "title": "Creating a Rasterization Rate Map",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-with-a-rasterization-rate-map",
                "title": "Rendering with a Rasterization Rate Map",
                "type": "article"
              },
              {
                "path": "/documentation/metal/scaling-variable-rasterization-rate-content",
                "title": "Scaling Variable Rasterization Rate Content",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating Rate Map Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/rasterizationratemapdescriptorwithscreensize:",
                    "title": "+ rasterizationRateMapDescriptorWithScreenSize:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/rasterizationratemapdescriptorwithscreensize:layer:",
                    "title": "+ rasterizationRateMapDescriptorWithScreenSize:layer:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/rasterizationratemapdescriptorwithscreensize:layercount:layers:",
                    "title": "+ rasterizationRateMapDescriptorWithScreenSize:layerCount:layers:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Rate Map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Viewport Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/screensize",
                    "title": "screenSize",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Rate Map Layers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/layercount",
                    "title": "layerCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/layer(at:)",
                    "title": "- layerAtIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/setlayer(_:at:)",
                    "title": "- setLayer:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/layers",
                    "title": "layers",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Members of the Array",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrasterizationratelayerarray/subscript(_:)",
                        "title": "- objectAtIndexedSubscript:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrasterizationratelayerarray/setobject:atindexedsubscript:",
                        "title": "- setObject:atIndexedSubscript:",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Layer Rasterization Rate Descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/initwithsamplecount:horizontal:vertical:",
                            "title": "- initWithSampleCount:horizontal:vertical:",
                            "type": "method"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/init(samplecount:)",
                            "title": "- initWithSampleCount:",
                            "type": "method"
                          },
                          {
                            "title": "Inspecting the Layer Rate Function Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/samplecount",
                            "title": "sampleCount",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/maxsamplecount",
                            "title": "maxSampleCount",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/horizontal",
                            "title": "horizontal",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/vertical",
                            "title": "vertical",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/horizontalsamplestorage",
                            "title": "horizontalSampleStorage",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/verticalsamplestorage",
                            "title": "verticalSampleStorage",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Accessing the Array",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlrasterizationratesamplearray/objectatindexedsubscript:",
                                "title": "- objectAtIndexedSubscript:",
                                "type": "method"
                              },
                              {
                                "path": "/documentation/metal/mtlrasterizationratesamplearray/setobject:atindexedsubscript:",
                                "title": "- setObject:atIndexedSubscript:",
                                "type": "method"
                              }
                            ],
                            "path": "/documentation/metal/mtlrasterizationratesamplearray",
                            "title": "MTLRasterizationRateSampleArray",
                            "type": "class"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/init",
                            "title": "- init",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/metal/mtlrasterizationratelayerdescriptor",
                        "title": "MTLRasterizationRateLayerDescriptor",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/metal/mtlrasterizationratelayerarray",
                    "title": "MTLRasterizationRateLayerArray",
                    "type": "class"
                  }
                ],
                "path": "/documentation/metal/mtlrasterizationratemapdescriptor",
                "title": "MTLRasterizationRateMapDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Rate Map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Geometric and Rendering Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/layercount",
                    "title": "layerCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/screensize",
                    "title": "screenSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/physicalsize(layer:)",
                    "title": "- physicalSizeForLayer:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/physicalgranularity",
                    "title": "physicalGranularity",
                    "type": "property"
                  },
                  {
                    "title": "Converting Between Viewport and Physical Coordinates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/physicalcoordinates(screencoordinates:layer:)",
                    "title": "- mapScreenToPhysicalCoordinates:forLayer:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/screencoordinates(physicalcoordinates:layer:)",
                    "title": "- mapPhysicalToScreenCoordinates:forLayer:",
                    "type": "method"
                  },
                  {
                    "title": "Obtaining Coordinate Transformation Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/parameterdatasizeandalign",
                    "title": "parameterBufferSizeAndAlign",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/copyparameterdata(buffer:offset:)",
                    "title": "- copyParameterDataToBuffer:offset:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrasterizationratemap",
                "title": "MTLRasterizationRateMap",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlcoordinate2d",
                "title": "MTLCoordinate2D",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlcoordinate2dmake(_:_:)",
                "title": "MTLCoordinate2DMake",
                "type": "func"
              },
              {
                "title": "Optimizing Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/specifying-drawing-and-dispatch-arguments-indirectly",
                "title": "Specifying Drawing and Dispatch Arguments Indirectly",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-to-multiple-viewports-in-a-draw-command",
                "title": "Rendering to Multiple Viewports in a Draw Command",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-to-multiple-texture-slices-in-a-draw-command",
                "title": "Rendering to Multiple Texture Slices in a Draw Command",
                "type": "article"
              },
              {
                "title": "Advanced Multisampling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/positioning-samples-programmatically",
                "title": "Positioning Samples Programmatically",
                "type": "article"
              },
              {
                "path": "/documentation/metal/storing-data-a-pass-makes-with-custom-sample-positions-for-a-subsequent-pass",
                "title": "Storing Data a Pass Makes with Custom Sample Positions for a Subsequent Pass",
                "type": "article"
              },
              {
                "title": "Applying Rendering Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
                "title": "Using a Render Pipeline to Render Primitives",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-render-pass-setup",
                "title": "Customizing Render Pass Setup",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/setting-load-and-store-actions",
                "title": "Setting Load and Store Actions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/improving-rendering-performance-with-vertex-amplification",
                "title": "Improving Rendering Performance with Vertex Amplification",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/render-passes",
            "title": "Render Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/performing-calculations-on-a-gpu",
                "title": "Performing Calculations on a GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/processing-a-texture-in-a-compute-function",
                "title": "Processing a Texture in a Compute Function",
                "type": "sampleCode"
              },
              {
                "title": "Encoding a Compute Pass",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-threads-and-threadgroups",
                "title": "Creating Threads and Threadgroups",
                "type": "article"
              },
              {
                "path": "/documentation/metal/calculating-threadgroup-and-grid-sizes",
                "title": "Calculating Threadgroup and Grid Sizes",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setcomputepipelinestate(_:)",
                    "title": "- setComputePipelineState:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchtype",
                    "title": "dispatchType",
                    "type": "property"
                  },
                  {
                    "title": "Encoding Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffer(_:offset:index:)",
                    "title": "- setBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffer(_:offset:attributestride:index:)",
                    "title": "- setBuffer:offset:attributeStride:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffers:offsets:withrange:",
                    "title": "- setBuffers:offsets:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffers:offsets:attributestrides:withrange:",
                    "title": "- setBuffers:offsets:attributeStrides:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbufferoffset(_:index:)",
                    "title": "- setBufferOffset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbufferoffset(offset:attributestride:index:)",
                    "title": "- setBufferOffset:attributeStride:atIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Raw Bytes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbytes(_:length:index:)",
                    "title": "- setBytes:length:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbytes(_:length:attributestride:index:)",
                    "title": "- setBytes:length:attributeStride:atIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Textures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/settexture(_:index:)",
                    "title": "- setTexture:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/settextures:withrange:",
                    "title": "- setTextures:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Texture Sampler States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstate(_:index:)",
                    "title": "- setSamplerState:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                    "title": "- setSamplerState:lodMinClamp:lodMaxClamp:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstates:withrange:",
                    "title": "- setSamplerStates:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstates:lodminclamps:lodmaxclamps:withrange:",
                    "title": "- setSamplerStates:lodMinClamps:lodMaxClamps:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Function Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setvisiblefunctiontable(_:bufferindex:)",
                    "title": "- setVisibleFunctionTable:atBufferIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setvisiblefunctiontables:withbufferrange:",
                    "title": "- setVisibleFunctionTables:withBufferRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setintersectionfunctiontables:withbufferrange:",
                    "title": "- setIntersectionFunctionTables:withBufferRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Acceleration Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setaccelerationstructure(_:bufferindex:)",
                    "title": "- setAccelerationStructure:atBufferIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setintersectionfunctiontable(_:bufferindex:)",
                    "title": "- setIntersectionFunctionTable:atBufferIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Resident Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useresource(_:usage:)",
                    "title": "- useResource:usage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useresources:count:usage:",
                    "title": "- useResources:count:usage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useheap(_:)",
                    "title": "- useHeap:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useheaps:count:",
                    "title": "- useHeaps:count:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Tile Memory Usage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setthreadgroupmemorylength(_:index:)",
                    "title": "- setThreadgroupMemoryLength:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setimageblockwidth(_:height:)",
                    "title": "- setImageblockWidth:height:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Stage-in Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setstageinregion(_:)",
                    "title": "- setStageInRegion:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setstageinregionwithindirectbuffer(_:indirectbufferoffset:)",
                    "title": "- setStageInRegionWithIndirectBuffer:indirectBufferOffset:",
                    "type": "method"
                  },
                  {
                    "title": "Dispatching Kernel Calls Directly",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchthreads(_:threadsperthreadgroup:)",
                    "title": "- dispatchThreads:threadsPerThreadgroup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchthreadgroups(_:threadsperthreadgroup:)",
                    "title": "- dispatchThreadgroups:threadsPerThreadgroup:",
                    "type": "method"
                  },
                  {
                    "title": "Dispatching from Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchthreadgroups(indirectbuffer:indirectbufferoffset:threadsperthreadgroup:)",
                    "title": "- dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/executecommandsinbuffer:indirectbuffer:indirectbufferoffset:",
                    "title": "- executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/executecommandsinbuffer:withrange:",
                    "title": "- executeCommandsInBuffer:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Across Command Execution",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/waitforfence(_:)",
                    "title": "- waitForFence:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/updatefence(_:)",
                    "title": "- updateFence:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/memorybarrier(scope:)",
                    "title": "- memoryBarrierWithScope:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/memorybarrierwithresources:count:",
                    "title": "- memoryBarrierWithResources:count:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Sample Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "- sampleCountersInBuffer:atSampleIndex:withBarrier:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcomputecommandencoder",
                "title": "MTLComputeCommandEncoder",
                "type": "protocol"
              },
              {
                "title": "Configuring a Compute Pipeline State",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Compute Execution Environment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/computefunction",
                    "title": "computeFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/threadgroupsizeismultipleofthreadexecutionwidth",
                    "title": "threadGroupSizeIsMultipleOfThreadExecutionWidth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/maxtotalthreadsperthreadgroup",
                    "title": "maxTotalThreadsPerThreadgroup",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/maxcallstackdepth",
                    "title": "maxCallStackDepth",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Compute Pass Inputs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/stageinputdescriptor",
                    "title": "stageInputDescriptor",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Defining Attribute Location",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptor/bufferindex",
                        "title": "bufferIndex",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptor/offset",
                        "title": "offset",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptor/format",
                        "title": "format",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Invalid format",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/invalid",
                            "title": "MTLAttributeFormatInvalid",
                            "type": "case"
                          },
                          {
                            "title": "Character data formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar",
                            "title": "MTLAttributeFormatUChar",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar2",
                            "title": "MTLAttributeFormatUChar2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar3",
                            "title": "MTLAttributeFormatUChar3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar4",
                            "title": "MTLAttributeFormatUChar4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char",
                            "title": "MTLAttributeFormatChar",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char2",
                            "title": "MTLAttributeFormatChar2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char3",
                            "title": "MTLAttributeFormatChar3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char4",
                            "title": "MTLAttributeFormatChar4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ucharnormalized",
                            "title": "MTLAttributeFormatUCharNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar2normalized",
                            "title": "MTLAttributeFormatUChar2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar3normalized",
                            "title": "MTLAttributeFormatUChar3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar4normalized",
                            "title": "MTLAttributeFormatUChar4Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/charnormalized",
                            "title": "MTLAttributeFormatCharNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char2normalized",
                            "title": "MTLAttributeFormatChar2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char3normalized",
                            "title": "MTLAttributeFormatChar3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char4normalized",
                            "title": "MTLAttributeFormatChar4Normalized",
                            "type": "case"
                          },
                          {
                            "title": "16- bit integer data formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort",
                            "title": "MTLAttributeFormatUShort",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort2",
                            "title": "MTLAttributeFormatUShort2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort3",
                            "title": "MTLAttributeFormatUShort3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort4",
                            "title": "MTLAttributeFormatUShort4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short",
                            "title": "MTLAttributeFormatShort",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short2",
                            "title": "MTLAttributeFormatShort2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short3",
                            "title": "MTLAttributeFormatShort3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short4",
                            "title": "MTLAttributeFormatShort4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushortnormalized",
                            "title": "MTLAttributeFormatUShortNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort2normalized",
                            "title": "MTLAttributeFormatUShort2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort3normalized",
                            "title": "MTLAttributeFormatUShort3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort4normalized",
                            "title": "MTLAttributeFormatUShort4Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/shortnormalized",
                            "title": "MTLAttributeFormatShortNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short2normalized",
                            "title": "MTLAttributeFormatShort2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short3normalized",
                            "title": "MTLAttributeFormatShort3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short4normalized",
                            "title": "MTLAttributeFormatShort4Normalized",
                            "type": "case"
                          },
                          {
                            "title": "32-bit integer data formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint",
                            "title": "MTLAttributeFormatUInt",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint2",
                            "title": "MTLAttributeFormatUInt2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint3",
                            "title": "MTLAttributeFormatUInt3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint4",
                            "title": "MTLAttributeFormatUInt4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int",
                            "title": "MTLAttributeFormatInt",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int2",
                            "title": "MTLAttributeFormatInt2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int3",
                            "title": "MTLAttributeFormatInt3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int4",
                            "title": "MTLAttributeFormatInt4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int1010102normalized",
                            "title": "MTLAttributeFormatInt1010102Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint1010102normalized",
                            "title": "MTLAttributeFormatUInt1010102Normalized",
                            "type": "case"
                          },
                          {
                            "title": "16-bit floating point formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half",
                            "title": "MTLAttributeFormatHalf",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half2",
                            "title": "MTLAttributeFormatHalf2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half3",
                            "title": "MTLAttributeFormatHalf3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half4",
                            "title": "MTLAttributeFormatHalf4",
                            "type": "case"
                          },
                          {
                            "title": "32-bit floating point formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float",
                            "title": "MTLAttributeFormatFloat",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float2",
                            "title": "MTLAttributeFormatFloat2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float3",
                            "title": "MTLAttributeFormatFloat3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float4",
                            "title": "MTLAttributeFormatFloat4",
                            "type": "case"
                          },
                          {
                            "title": "Pixel data types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar4normalized_bgra",
                            "title": "MTLAttributeFormatUChar4Normalized_BGRA",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/floatrg11b10",
                            "title": "MTLAttributeFormatFloatRG11B10",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/floatrgb9e5",
                            "title": "MTLAttributeFormatFloatRGB9E5",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlattributeformat",
                        "title": "MTLAttributeFormat",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlattributedescriptor",
                    "title": "MTLAttributeDescriptor",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Attribute State Objects",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptorarray/subscript(_:)",
                        "title": "- objectAtIndexedSubscript:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptorarray/setobject:atindexedsubscript:",
                        "title": "- setObject:atIndexedSubscript:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/mtlattributedescriptorarray",
                    "title": "MTLAttributeDescriptorArray",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing Fetch Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptor/stride",
                        "title": "stride",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptor/stepfunction",
                        "title": "stepFunction",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptor/steprate",
                        "title": "stepRate",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Step options",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/constant",
                            "title": "MTLStepFunctionConstant",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/perinstance",
                            "title": "MTLStepFunctionPerInstance",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/perpatch",
                            "title": "MTLStepFunctionPerPatch",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/perpatchcontrolpoint",
                            "title": "MTLStepFunctionPerPatchControlPoint",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/pervertex",
                            "title": "MTLStepFunctionPerVertex",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridx",
                            "title": "MTLStepFunctionThreadPositionInGridX",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridy",
                            "title": "MTLStepFunctionThreadPositionInGridY",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridxindexed",
                            "title": "MTLStepFunctionThreadPositionInGridXIndexed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridyindexed",
                            "title": "MTLStepFunctionThreadPositionInGridYIndexed",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlstepfunction",
                        "title": "MTLStepFunction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlbufferlayoutdescriptor",
                    "title": "MTLBufferLayoutDescriptor",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Array Accessors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptorarray/subscript(_:)",
                        "title": "- objectAtIndexedSubscript:",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptorarray/setobject:atindexedsubscript:",
                        "title": "- setObject:atIndexedSubscript:",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/mtlbufferlayoutdescriptorarray",
                    "title": "MTLBufferLayoutDescriptorArray",
                    "type": "class"
                  },
                  {
                    "title": "Configuring Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/buffers",
                    "title": "buffers",
                    "type": "property"
                  },
                  {
                    "title": "Identifying the Pipeline State Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/supportindirectcommandbuffers",
                    "title": "supportIndirectCommandBuffers",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/shadervalidation",
                    "title": "shaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Reset to Defaults",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/reset()",
                    "title": "- reset",
                    "type": "method"
                  },
                  {
                    "title": "Loading Dynamic Libraries to Link at Runtime",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/preloadedlibraries",
                    "title": "preloadedLibraries",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/insertlibraries",
                    "title": "insertLibraries",
                    "type": "property"
                  },
                  {
                    "title": "Setting Callable Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/linkedfunctions",
                    "title": "linkedFunctions",
                    "type": "property"
                  },
                  {
                    "title": "Loading Binary Archives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/supportaddingbinaryfunctions",
                    "title": "supportAddingBinaryFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/binaryarchives",
                    "title": "binaryArchives",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepipelinedescriptor",
                "title": "MTLComputePipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Checking Threadgroup Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/maxtotalthreadsperthreadgroup",
                    "title": "maxTotalThreadsPerThreadgroup",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/threadexecutionwidth",
                    "title": "threadExecutionWidth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/staticthreadgroupmemorylength",
                    "title": "staticThreadgroupMemoryLength",
                    "type": "property"
                  },
                  {
                    "title": "Checking Imageblock Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/imageblockmemorylength(fordimensions:)",
                    "title": "- imageblockMemoryLengthForDimensions:",
                    "type": "method"
                  },
                  {
                    "title": "Checking Indirect Command Buffer Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/supportindirectcommandbuffers",
                    "title": "supportIndirectCommandBuffers",
                    "type": "property"
                  },
                  {
                    "title": "Checking Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/shadervalidation",
                    "title": "shaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Creating Function Handles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/functionhandle(function:)",
                    "title": "- functionHandleWithFunction:",
                    "type": "method"
                  },
                  {
                    "title": "Adding Visible Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/makecomputepipelinestatewithadditionalbinaryfunctions(functions:)",
                    "title": "- newComputePipelineStateWithAdditionalBinaryFunctions:error:",
                    "type": "method"
                  },
                  {
                    "title": "Creating Function Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/makevisiblefunctiontable(descriptor:)",
                    "title": "- newVisibleFunctionTableWithDescriptor:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/makeintersectionfunctiontable(descriptor:)",
                    "title": "- newIntersectionFunctionTableWithDescriptor:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepipelinestate",
                "title": "MTLComputePipelineState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating a Input/Output Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/stageinputoutputdescriptor",
                    "title": "+ stageInputOutputDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Describing Argument Layouts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/attributes",
                    "title": "attributes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/layouts",
                    "title": "layouts",
                    "type": "property"
                  },
                  {
                    "title": "Declaring Index Buffers for Indirect Compute Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/indexbufferindex",
                    "title": "indexBufferIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/indextype",
                    "title": "indexType",
                    "type": "property"
                  },
                  {
                    "title": "Resetting the Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/reset()",
                    "title": "- reset",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlstageinputoutputdescriptor",
                "title": "MTLStageInputOutputDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptor/mutability",
                    "title": "mutability",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/default",
                        "title": "MTLMutabilityDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/mutable",
                        "title": "MTLMutabilityMutable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/immutable",
                        "title": "MTLMutabilityImmutable",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlmutability",
                    "title": "MTLMutability",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptor",
                "title": "MTLPipelineBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptorarray",
                "title": "MTLPipelineBufferDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Retrieving Argument Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/mtlpipelineoptionnone",
                    "title": "MTLPipelineOptionNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/buffertypeinfo",
                    "title": "MTLPipelineOptionBufferTypeInfo",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/failonbinaryarchivemiss",
                    "title": "MTLPipelineOptionFailOnBinaryArchiveMiss",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpipelineoption/argumentinfo",
                    "title": "MTLPipelineOptionArgumentInfo",
                    "type": "case"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/bindinginfo",
                    "title": "MTLPipelineOptionBindingInfo",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlpipelineoption",
                "title": "MTLPipelineOption",
                "type": "enum"
              },
              {
                "title": "Configuring a Compute Pass",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Compute Pass Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepassdescriptor/computepassdescriptor",
                    "title": "+ computePassDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Dispatch Mechanism",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepassdescriptor/dispatchtype",
                    "title": "dispatchType",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Sample Buffers for GPU Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepassdescriptor/samplebufferattachments",
                    "title": "sampleBufferAttachments",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepassdescriptor",
                "title": "MTLComputePassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Execution Dispatch Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchtype/concurrent",
                    "title": "MTLDispatchTypeConcurrent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchtype/serial",
                    "title": "MTLDispatchTypeSerial",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtldispatchtype",
                "title": "MTLDispatchType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Size of the Threadgroup",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/threadgroupspergrid",
                    "title": "threadgroupsPerGrid",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments",
                "title": "MTLDispatchThreadgroupsIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "sampleBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "startOfEncoderSampleIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "endOfEncoderSampleIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor",
                "title": "MTLComputePassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptorarray",
                "title": "MTLComputePassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              }
            ],
            "path": "/documentation/metal/compute-passes",
            "title": "Compute Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Encoding a Blit Pass",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Filling Buffers with Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/fillbuffer:range:value:",
                    "title": "- fillBuffer:range:value:",
                    "type": "method"
                  },
                  {
                    "title": "Generating Texture Mipmaps",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/generatemipmaps(for:)",
                    "title": "- generateMipmapsForTexture:",
                    "type": "method"
                  },
                  {
                    "title": "Copying Buffer Data to Another Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceoffset:to:destinationoffset:size:)",
                    "title": "- copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:",
                    "type": "method"
                  },
                  {
                    "title": "Copying Texture Data to Another Texture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:to:)",
                    "title": "- copyFromTexture:toTexture:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:to:destinationslice:destinationlevel:slicecount:levelcount:)",
                    "title": "- copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:sourceorigin:sourcesize:to:destinationslice:destinationlevel:destinationorigin:)",
                    "title": "- copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:",
                    "type": "method"
                  },
                  {
                    "title": "Copying Buffer Data to a Texture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceoffset:sourcebytesperrow:sourcebytesperimage:sourcesize:to:destinationslice:destinationlevel:destinationorigin:)",
                    "title": "- copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceoffset:sourcebytesperrow:sourcebytesperimage:sourcesize:to:destinationslice:destinationlevel:destinationorigin:options:)",
                    "title": "- copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:",
                    "type": "method"
                  },
                  {
                    "title": "Copying Texture Data to a Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:sourceorigin:sourcesize:to:destinationoffset:destinationbytesperrow:destinationbytesperimage:)",
                    "title": "- copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:sourceorigin:sourcesize:to:destinationoffset:destinationbytesperrow:destinationbytesperimage:options:)",
                    "title": "- copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:",
                    "type": "method"
                  },
                  {
                    "title": "Working with Textures on the GPU",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforgpuaccess(texture:)",
                    "title": "- optimizeContentsForGPUAccess:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforgpuaccess(texture:slice:level:)",
                    "title": "- optimizeContentsForGPUAccess:slice:level:",
                    "type": "method"
                  },
                  {
                    "title": "Working with Textures on the CPU",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforcpuaccess(texture:)",
                    "title": "- optimizeContentsForCPUAccess:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforcpuaccess(texture:slice:level:)",
                    "title": "- optimizeContentsForCPUAccess:slice:level:",
                    "type": "method"
                  },
                  {
                    "title": "Working with Managed Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/synchronize(resource:)",
                    "title": "- synchronizeResource:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/synchronize(texture:slice:level:)",
                    "title": "- synchronizeTexture:slice:level:",
                    "type": "method"
                  },
                  {
                    "title": "Working with Fences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/waitforfence(_:)",
                    "title": "- waitForFence:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/updatefence(_:)",
                    "title": "- updateFence:",
                    "type": "method"
                  },
                  {
                    "title": "Working with Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copyindirectcommandbuffer:sourcerange:destination:destinationindex:",
                    "title": "- copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/resetcommandsinbuffer:withrange:",
                    "title": "- resetCommandsInBuffer:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizeindirectcommandbuffer:withrange:",
                    "title": "- optimizeIndirectCommandBuffer:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Working with Sample Counter Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "- sampleCountersInBuffer:atSampleIndex:withBarrier:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/resolvecounters:inrange:destinationbuffer:destinationoffset:",
                    "title": "- resolveCounters:inRange:destinationBuffer:destinationOffset:",
                    "type": "method"
                  },
                  {
                    "title": "Working with Sparse Texture Access Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/gettextureaccesscounters(_:region:miplevel:slice:resetcounters:countersbuffer:countersbufferoffset:)",
                    "title": "- getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/resettextureaccesscounters(_:region:miplevel:slice:)",
                    "title": "- resetTextureAccessCounters:region:mipLevel:slice:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlblitcommandencoder",
                "title": "MTLBlitCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Depth and Stencil Buffer Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/depthfromdepthstencil",
                    "title": "MTLBlitOptionDepthFromDepthStencil",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/stencilfromdepthstencil",
                    "title": "MTLBlitOptionStencilFromDepthStencil",
                    "type": "case"
                  },
                  {
                    "title": "Texture Compression Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/rowlinearpvrtc",
                    "title": "MTLBlitOptionRowLinearPVRTC",
                    "type": "case"
                  },
                  {
                    "title": "Clearing Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/mtlblitoptionnone",
                    "title": "MTLBlitOptionNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlblitoption",
                "title": "MTLBlitOption",
                "type": "enum"
              },
              {
                "title": "Configuring a Blit Command Encoder",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Blit Pass Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpassdescriptor/blitpassdescriptor",
                    "title": "+ blitPassDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Configuring Sample Buffer Attachment Descriptors for a Blit Pass",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpassdescriptor/samplebufferattachments",
                    "title": "sampleBufferAttachments",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlblitpassdescriptor",
                "title": "MTLBlitPassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "sampleBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "startOfEncoderSampleIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "endOfEncoderSampleIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor",
                "title": "MTLBlitPassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptorarray",
                "title": "MTLBlitPassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              }
            ],
            "path": "/documentation/metal/blit-passes",
            "title": "Blit Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Indirect Command Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-an-indirect-command-buffer",
                "title": "Creating an Indirect Command Buffer",
                "type": "article"
              },
              {
                "path": "/documentation/metal/specifying-drawing-and-dispatch-arguments-indirectly",
                "title": "Specifying Drawing and Dispatch Arguments Indirectly",
                "type": "article"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-cpu",
                "title": "Encoding Indirect Command Buffers on the CPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-gpu",
                "title": "Encoding Indirect Command Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Determining the Maximum Number of Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/size",
                    "title": "size",
                    "type": "property"
                  },
                  {
                    "title": "Retrieving Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/indirectrendercommandat(_:)",
                    "title": "- indirectRenderCommandAtIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/indirectcomputecommandat(_:)",
                    "title": "- indirectComputeCommandAtIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Resetting Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/resetwithrange:",
                    "title": "- resetWithRange:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandbuffer",
                "title": "MTLIndirectCommandBuffer",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Declaring Command Types to Encode",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/commandtypes",
                    "title": "commandTypes",
                    "type": "property"
                  },
                  {
                    "title": "Declaring Command Inheritance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/inheritbuffers",
                    "title": "inheritBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/inheritpipelinestate",
                    "title": "inheritPipelineState",
                    "type": "property"
                  },
                  {
                    "title": "Declaring the Maximum Number of Argument Buffers Per Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxvertexbufferbindcount",
                    "title": "maxVertexBufferBindCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxfragmentbufferbindcount",
                    "title": "maxFragmentBufferBindCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxkernelbufferbindcount",
                    "title": "maxKernelBufferBindCount",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxkernelthreadgroupmemorybindcount",
                    "title": "maxKernelThreadgroupMemoryBindCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxmeshbufferbindcount",
                    "title": "maxMeshBufferBindCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxobjectbufferbindcount",
                    "title": "maxObjectBufferBindCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxobjectthreadgroupmemorybindcount",
                    "title": "maxObjectThreadgroupMemoryBindCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/supportdynamicattributestride",
                    "title": "supportDynamicAttributeStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/supportraytracing",
                    "title": "supportRayTracing",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandbufferdescriptor",
                "title": "MTLIndirectCommandBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Command Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/draw",
                    "title": "MTLIndirectCommandTypeDraw",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawindexed",
                    "title": "MTLIndirectCommandTypeDrawIndexed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawpatches",
                    "title": "MTLIndirectCommandTypeDrawPatches",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawindexedpatches",
                    "title": "MTLIndirectCommandTypeDrawIndexedPatches",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/concurrentdispatch",
                    "title": "MTLIndirectCommandTypeConcurrentDispatch",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/concurrentdispatchthreads",
                    "title": "MTLIndirectCommandTypeConcurrentDispatchThreads",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawmeshthreadgroups",
                    "title": "MTLIndirectCommandTypeDrawMeshThreadgroups",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawmeshthreads",
                    "title": "MTLIndirectCommandTypeDrawMeshThreads",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandtype",
                "title": "MTLIndirectCommandType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating a Command Execution Range",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrangemake(_:_:)",
                    "title": "MTLIndirectCommandBufferExecutionRangeMake",
                    "type": "func"
                  },
                  {
                    "title": "Examining the Range",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange/location",
                    "title": "location",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange/length",
                    "title": "length",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange",
                "title": "MTLIndirectCommandBufferExecutionRange",
                "type": "struct"
              },
              {
                "path": "/documentation/metal/mtlindirectcommandbufferexecutionrangemake(_:_:)",
                "title": "MTLIndirectCommandBufferExecutionRangeMake",
                "type": "func"
              },
              {
                "title": "Indirect Compute Commands",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting a Command’s Arguments",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setcomputepipelinestate(_:)",
                    "title": "- setComputePipelineState:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setimageblockwidth(_:height:)",
                    "title": "- setImageblockWidth:height:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setkernelbuffer(_:offset:at:)",
                    "title": "- setKernelBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setthreadgroupmemorylength(_:index:)",
                    "title": "- setThreadgroupMemoryLength:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setstageinregion(_:)",
                    "title": "- setStageInRegion:",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Command Execution",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setbarrier()",
                    "title": "- setBarrier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/clearbarrier()",
                    "title": "- clearBarrier",
                    "type": "method"
                  },
                  {
                    "title": "Encoding a Compute Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/concurrentdispatchthreadgroups(_:threadsperthreadgroup:)",
                    "title": "- concurrentDispatchThreadgroups:threadsPerThreadgroup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/concurrentdispatchthreads(_:threadsperthreadgroup:)",
                    "title": "- concurrentDispatchThreads:threadsPerThreadgroup:",
                    "type": "method"
                  },
                  {
                    "title": "Resetting a Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/reset()",
                    "title": "- reset",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setkernelbuffer(_:offset:attributestride:at:)",
                    "title": "- setKernelBuffer:offset:attributeStride:atIndex:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcomputecommand",
                "title": "MTLIndirectComputeCommand",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating Regions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlregionmake1d(_:_:)",
                    "title": "MTLRegionMake1D",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlregionmake2d(_:_:_:_:)",
                    "title": "MTLRegionMake2D",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlregionmake3d(_:_:_:_:_:_:)",
                    "title": "MTLRegionMake3D",
                    "type": "func"
                  },
                  {
                    "title": "Getting and Setting Region Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlregion/origin",
                    "title": "origin",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlregion/size",
                    "title": "size",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlregion",
                "title": "MTLRegion",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating Sizes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsizemake(_:_:_:)",
                    "title": "MTLSizeMake",
                    "type": "func"
                  },
                  {
                    "title": "Getting and Setting Dimensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/width",
                    "title": "width",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/height",
                    "title": "height",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/depth",
                    "title": "depth",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsize",
                "title": "MTLSize",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating Origin Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtloriginmake(_:_:_:)",
                    "title": "MTLOriginMake",
                    "type": "func"
                  },
                  {
                    "title": "Getting and Setting Coordinate Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/x",
                    "title": "x",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/y",
                    "title": "y",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/z",
                    "title": "z",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlorigin",
                "title": "MTLOrigin",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinregionindirectarguments/stageinorigin",
                    "title": "stageInOrigin",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinregionindirectarguments/stageinsize",
                    "title": "stageInSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlstageinregionindirectarguments",
                "title": "MTLStageInRegionIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Size of the Threadgroup",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/threadgroupspergrid",
                    "title": "threadgroupsPerGrid",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments",
                "title": "MTLDispatchThreadgroupsIndirectArguments",
                "type": "struct"
              },
              {
                "title": "Render Compute Commands",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting Command Arguments",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setrenderpipelinestate(_:)",
                    "title": "- setRenderPipelineState:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setvertexbuffer(_:offset:at:)",
                    "title": "- setVertexBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setfragmentbuffer(_:offset:at:)",
                    "title": "- setFragmentBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding a Drawing Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawprimitives(_:vertexstart:vertexcount:instancecount:baseinstance:)",
                    "title": "- drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawindexedprimitives(_:indexcount:indextype:indexbuffer:indexbufferoffset:instancecount:basevertex:baseinstance:)",
                    "title": "- drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawpatches(_:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:instancecount:baseinstance:tessellationfactorbuffer:tessellationfactorbufferoffset:tessellationfactorbufferinstancestride:)",
                    "title": "- drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawindexedpatches(_:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:controlpointindexbuffer:controlpointindexbufferoffset:instancecount:baseinstance:tessellationfactorbuffer:tessellationfactorbufferoffset:tessellationfactorbu-4mdz8",
                    "title": "- drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:",
                    "type": "method"
                  },
                  {
                    "title": "Resetting a Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/reset()",
                    "title": "- reset",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/clearbarrier()",
                    "title": "- clearBarrier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawmeshthreadgroups(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                    "title": "- drawMeshThreadgroups:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawmeshthreads(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                    "title": "- drawMeshThreads:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setbarrier()",
                    "title": "- setBarrier",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setmeshbuffer(_:offset:at:)",
                    "title": "- setMeshBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setobjectbuffer(_:offset:at:)",
                    "title": "- setObjectBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setobjectthreadgroupmemorylength(_:index:)",
                    "title": "- setObjectThreadgroupMemoryLength:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setvertexbuffer(_:offset:attributestride:at:)",
                    "title": "- setVertexBuffer:offset:attributeStride:atIndex:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlindirectrendercommand",
                "title": "MTLIndirectRenderCommand",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/baseinstance",
                    "title": "baseInstance",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/instancecount",
                    "title": "instanceCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/patchcount",
                    "title": "patchCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/instancecount",
                    "title": "instanceCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/patchstart",
                    "title": "patchStart",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/baseinstance",
                    "title": "baseInstance",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawpatchindirectarguments",
                "title": "MTLDrawPatchIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/baseinstance",
                    "title": "baseInstance",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/instancecount",
                    "title": "instanceCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/vertexcount",
                    "title": "vertexCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/instancecount",
                    "title": "instanceCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/vertexstart",
                    "title": "vertexStart",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/baseinstance",
                    "title": "baseInstance",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawprimitivesindirectarguments",
                "title": "MTLDrawPrimitivesIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/baseinstance",
                    "title": "baseInstance",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/basevertex",
                    "title": "baseVertex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/indexcount",
                    "title": "indexCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/indexstart",
                    "title": "indexStart",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/instancecount",
                    "title": "instanceCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/indexstart",
                    "title": "indexStart",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/basevertex",
                    "title": "baseVertex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/baseinstance",
                    "title": "baseInstance",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments",
                "title": "MTLDrawIndexedPrimitivesIndirectArguments",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/indirect-command-encoding",
            "title": "Indirect Command Encoding",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Ray Tracing Samples",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-using-metal",
                "title": "Accelerating ray tracing using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/control-the-ray-tracing-process-using-intersection-queries",
                "title": "Control the Ray Tracing Process Using Intersection Queries",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-reflections-in-real-time-using-ray-tracing",
                "title": "Rendering reflections in real time using ray tracing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-curve-primitive-in-a-ray-tracing-scene",
                "title": "Rendering a curve primitive in a ray tracing scene",
                "type": "sampleCode"
              },
              {
                "title": "Acceleration Structures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-ray-tracing-data-access-using-per-primitive-data",
                "title": "Improving Ray-Tracing Data Access Using Per-Primitive Data",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Reading the Structure’s Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructure/size",
                    "title": "size",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructure/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructure",
                "title": "MTLAccelerationStructure",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Specifying Usage Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuredescriptor/usage",
                    "title": "usage",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuredescriptor",
                "title": "MTLAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Primitive Geometry Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Geometry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/geometrydescriptors",
                    "title": "geometryDescriptors",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionkeyframecount",
                    "title": "motionKeyframeCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionstarttime",
                    "title": "motionStartTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionendtime",
                    "title": "motionEndTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionstartbordermode",
                    "title": "motionStartBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionendbordermode",
                    "title": "motionEndBorderMode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Motion Modes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmotionbordermode/clamp",
                        "title": "MTLMotionBorderModeClamp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmotionbordermode/vanish",
                        "title": "MTLMotionBorderModeVanish",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlmotionbordermode",
                    "title": "MTLMotionBorderMode",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor",
                "title": "MTLPrimitiveAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Instance Geometry Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Instance Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptortype",
                    "title": "instanceDescriptorType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedaccelerationstructures",
                    "title": "instancedAccelerationStructures",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Instance Descriptor Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/default",
                        "title": "MTLAccelerationStructureInstanceDescriptorTypeDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/userid",
                        "title": "MTLAccelerationStructureInstanceDescriptorTypeUserID",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/motion",
                        "title": "MTLAccelerationStructureInstanceDescriptorTypeMotion",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/indirect",
                        "title": "MTLAccelerationStructureInstanceDescriptorTypeIndirect",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/indirectmotion",
                        "title": "MTLAccelerationStructureInstanceDescriptorTypeIndirectMotion",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype",
                    "title": "MTLAccelerationStructureInstanceDescriptorType",
                    "type": "enum"
                  },
                  {
                    "title": "Specifying the List of Instances",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancecount",
                    "title": "instanceCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptorbuffer",
                    "title": "instanceDescriptorBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptorbufferoffset",
                    "title": "instanceDescriptorBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptorstride",
                    "title": "instanceDescriptorStride",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformcount",
                    "title": "motionTransformCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformbuffer",
                    "title": "motionTransformBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformbufferoffset",
                    "title": "motionTransformBufferOffset",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancetransformationmatrixlayout",
                    "title": "instanceTransformationMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformstride",
                    "title": "motionTransformStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformtype",
                    "title": "motionTransformType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor",
                "title": "MTLInstanceAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Building an Acceleration Structure",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/build(accelerationstructure:descriptor:scratchbuffer:scratchbufferoffset:)",
                    "title": "- buildAccelerationStructure:descriptor:scratchBuffer:scratchBufferOffset:",
                    "type": "method"
                  },
                  {
                    "title": "Copying an Acceleration Structure",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/copy(sourceaccelerationstructure:destinationaccelerationstructure:)",
                    "title": "- copyAccelerationStructure:toAccelerationStructure:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/writecompactedsize(accelerationstructure:buffer:offset:)",
                    "title": "- writeCompactedAccelerationStructureSize:toBuffer:offset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/writecompactedsize(accelerationstructure:buffer:offset:sizedatatype:)",
                    "title": "- writeCompactedAccelerationStructureSize:toBuffer:offset:sizeDataType:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/copyandcompact(sourceaccelerationstructure:destinationaccelerationstructure:)",
                    "title": "- copyAndCompactAccelerationStructure:toAccelerationStructure:",
                    "type": "method"
                  },
                  {
                    "title": "Refitting an Acceleration Structure",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/refit(sourceaccelerationstructure:descriptor:destinationaccelerationstructure:scratchbuffer:scratchbufferoffset:)",
                    "title": "- refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Command Execution for Untracked Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/updatefence(_:)",
                    "title": "- updateFence:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/waitforfence(_:)",
                    "title": "- waitForFence:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Resource Usage for Argument Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useheap(_:)",
                    "title": "- useHeap:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useheaps:count:",
                    "title": "- useHeaps:count:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useresource(_:usage:)",
                    "title": "- useResource:usage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useresources:count:usage:",
                    "title": "- useResources:count:usage:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlresourceusage/read",
                        "title": "MTLResourceUsageRead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlresourceusage/write",
                        "title": "MTLResourceUsageWrite",
                        "type": "case"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlresourceusage/sample",
                        "title": "MTLResourceUsageSample",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlresourceusage",
                    "title": "MTLResourceUsage",
                    "type": "enum"
                  },
                  {
                    "title": "Sampling Acceleration Structure Execution Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "- sampleCountersInBuffer:atSampleIndex:withBarrier:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/refit(sourceaccelerationstructure:descriptor:destinationaccelerationstructure:scratchbuffer:scratchbufferoffset:options:)",
                    "title": "- refitAccelerationStructure:descriptor:destination:scratchBuffer:scratchBufferOffset:options:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurecommandencoder",
                "title": "MTLAccelerationStructureCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Usage Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/mtlaccelerationstructureusagenone",
                    "title": "MTLAccelerationStructureUsageNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/refit",
                    "title": "MTLAccelerationStructureUsageRefit",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/preferfastbuild",
                    "title": "MTLAccelerationStructureUsagePreferFastBuild",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/extendedlimits",
                    "title": "MTLAccelerationStructureUsageExtendedLimits",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureusage",
                "title": "MTLAccelerationStructureUsage",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurerefitoptions/perprimitivedata",
                    "title": "MTLAccelerationStructureRefitOptionPerPrimitiveData",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurerefitoptions/vertexdata",
                    "title": "MTLAccelerationStructureRefitOptionVertexData",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurerefitoptions",
                "title": "MTLAccelerationStructureRefitOptions",
                "type": "enum"
              },
              {
                "title": "Acceleration Structures Passes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepassdescriptor/samplebufferattachments",
                    "title": "sampleBufferAttachments",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepassdescriptor/accelerationstructurepassdescriptor",
                    "title": "+ accelerationStructurePassDescriptor",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurepassdescriptor",
                "title": "MTLAccelerationStructurePassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "endOfEncoderSampleIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "sampleBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "startOfEncoderSampleIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor",
                "title": "MTLAccelerationStructurePassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptorarray",
                "title": "MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "title": "Geometry Descriptors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying Base Geometry Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/intersectionfunctiontableoffset",
                    "title": "intersectionFunctionTableOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/opaque",
                    "title": "opaque",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/allowduplicateintersectionfunctioninvocation",
                    "title": "allowDuplicateIntersectionFunctionInvocation",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedatabuffer",
                    "title": "primitiveDataBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedatabufferoffset",
                    "title": "primitiveDataBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedataelementsize",
                    "title": "primitiveDataElementSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedatastride",
                    "title": "primitiveDataStride",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor",
                "title": "MTLAccelerationStructureGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Triangle Geometry Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Number of Triangles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/trianglecount",
                    "title": "triangleCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Index Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/indexbuffer",
                    "title": "indexBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/indextype",
                    "title": "indexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/indexbufferoffset",
                    "title": "indexBufferOffset",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Vertex Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexbuffer",
                    "title": "vertexBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexbufferoffset",
                    "title": "vertexBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexstride",
                    "title": "vertexStride",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/transformationmatrixbuffer",
                    "title": "transformationMatrixBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/transformationmatrixbufferoffset",
                    "title": "transformationMatrixBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/transformationmatrixlayout",
                    "title": "transformationMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexformat",
                    "title": "vertexFormat",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor",
                "title": "MTLAccelerationStructureTriangleGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointbuffer",
                    "title": "controlPointBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointbufferoffset",
                    "title": "controlPointBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointcount",
                    "title": "controlPointCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointformat",
                    "title": "controlPointFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointstride",
                    "title": "controlPointStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/curvebasis",
                    "title": "curveBasis",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/curveendcaps",
                    "title": "curveEndCaps",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/curvetype",
                    "title": "curveType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/indexbuffer",
                    "title": "indexBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/indexbufferoffset",
                    "title": "indexBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/indextype",
                    "title": "indexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusbuffer",
                    "title": "radiusBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusbufferoffset",
                    "title": "radiusBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusformat",
                    "title": "radiusFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusstride",
                    "title": "radiusStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/segmentcontrolpointcount",
                    "title": "segmentControlPointCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/segmentcount",
                    "title": "segmentCount",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor",
                "title": "MTLAccelerationStructureCurveGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvetype/flat",
                    "title": "MTLCurveTypeFlat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvetype/round",
                    "title": "MTLCurveTypeRound",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlcurvetype",
                "title": "MTLCurveType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/bspline",
                    "title": "MTLCurveBasisBSpline",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/bezier",
                    "title": "MTLCurveBasisBezier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/catmullrom",
                    "title": "MTLCurveBasisCatmullRom",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/linear",
                    "title": "MTLCurveBasisLinear",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlcurvebasis",
                "title": "MTLCurveBasis",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurveendcaps/disk",
                    "title": "MTLCurveEndCapsDisk",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurveendcaps/none",
                    "title": "MTLCurveEndCapsNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurveendcaps/sphere",
                    "title": "MTLCurveEndCapsSphere",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlcurveendcaps",
                "title": "MTLCurveEndCaps",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating a Bounding Box Geometry Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Number of Bounding Boxes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxcount",
                    "title": "boundingBoxCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Bounding Boxes Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxbuffer",
                    "title": "boundingBoxBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxbufferoffset",
                    "title": "boundingBoxBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxstride",
                    "title": "boundingBoxStride",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor",
                "title": "MTLAccelerationStructureBoundingBoxGeometryDescriptor",
                "type": "class"
              },
              {
                "title": "Motion Geometry Descriptors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Triangle Motion Geometry Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Number of Triangles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/trianglecount",
                    "title": "triangleCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Index Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/indexbuffer",
                    "title": "indexBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/indextype",
                    "title": "indexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/indexbufferoffset",
                    "title": "indexBufferOffset",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Vertex Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/vertexbuffers",
                    "title": "vertexBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/vertexstride",
                    "title": "vertexStride",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/transformationmatrixbuffer",
                    "title": "transformationMatrixBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/transformationmatrixbufferoffset",
                    "title": "transformationMatrixBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/transformationmatrixlayout",
                    "title": "transformationMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/vertexformat",
                    "title": "vertexFormat",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor",
                "title": "MTLAccelerationStructureMotionTriangleGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointbuffers",
                    "title": "controlPointBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointcount",
                    "title": "controlPointCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointformat",
                    "title": "controlPointFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointstride",
                    "title": "controlPointStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/curvebasis",
                    "title": "curveBasis",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/curveendcaps",
                    "title": "curveEndCaps",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/curvetype",
                    "title": "curveType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/indexbuffer",
                    "title": "indexBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/indexbufferoffset",
                    "title": "indexBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/indextype",
                    "title": "indexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/radiusbuffers",
                    "title": "radiusBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/radiusformat",
                    "title": "radiusFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/radiusstride",
                    "title": "radiusStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/segmentcontrolpointcount",
                    "title": "segmentControlPointCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/segmentcount",
                    "title": "segmentCount",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor",
                "title": "MTLAccelerationStructureMotionCurveGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Motion Bounding Box Geometry Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Number of Bounding Boxes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor/boundingboxcount",
                    "title": "boundingBoxCount",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Bounding Boxes Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor/boundingboxbuffers",
                    "title": "boundingBoxBuffers",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor/boundingboxstride",
                    "title": "boundingBoxStride",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor",
                "title": "MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Motion Keyframe Data Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmotionkeyframedata/data",
                    "title": "+ data",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Keyframe Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmotionkeyframedata/buffer",
                    "title": "buffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmotionkeyframedata/offset",
                    "title": "offset",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlmotionkeyframedata",
                "title": "MTLMotionKeyframeData",
                "type": "class"
              },
              {
                "title": "Instance Descriptors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/accelerationstructureindex",
                    "title": "accelerationStructureIndex",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Instance Transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/transformationmatrix",
                    "title": "transformationMatrix",
                    "type": "property"
                  },
                  {
                    "title": "Customizing Intersection and Hit Tests for the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/intersectionfunctiontableoffset",
                    "title": "intersectionFunctionTableOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/options",
                    "title": "options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/mask",
                    "title": "mask",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor",
                "title": "MTLAccelerationStructureInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/accelerationstructureindex",
                    "title": "accelerationStructureIndex",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Instance Transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/transformationmatrix",
                    "title": "transformationMatrix",
                    "type": "property"
                  },
                  {
                    "title": "Customizing Intersection and Hit Tests for the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/intersectionfunctiontableoffset",
                    "title": "intersectionFunctionTableOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/options",
                    "title": "options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/mask",
                    "title": "mask",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the User Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/userid",
                    "title": "userID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor",
                "title": "MTLAccelerationStructureUserIDInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/accelerationstructureindex",
                    "title": "accelerationStructureIndex",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionstarttime",
                    "title": "motionStartTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionendtime",
                    "title": "motionEndTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionstartbordermode",
                    "title": "motionStartBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionendbordermode",
                    "title": "motionEndBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motiontransformsstartindex",
                    "title": "motionTransformsStartIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motiontransformscount",
                    "title": "motionTransformsCount",
                    "type": "property"
                  },
                  {
                    "title": "Customizing Intersection and Hit Tests for the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/intersectionfunctiontableoffset",
                    "title": "intersectionFunctionTableOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/options",
                    "title": "options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/mask",
                    "title": "mask",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the User Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/userid",
                    "title": "userID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor",
                "title": "MTLAccelerationStructureMotionInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Usage Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/mtlaccelerationstructureinstanceoptionnone",
                    "title": "MTLAccelerationStructureInstanceOptionNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/disabletriangleculling",
                    "title": "MTLAccelerationStructureInstanceOptionDisableTriangleCulling",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/trianglefrontfacingwindingcounterclockwise",
                    "title": "MTLAccelerationStructureInstanceOptionTriangleFrontFacingWindingCounterClockwise",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/opaque",
                    "title": "MTLAccelerationStructureInstanceOptionOpaque",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/nonopaque",
                    "title": "MTLAccelerationStructureInstanceOptionNonOpaque",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions",
                "title": "MTLAccelerationStructureInstanceOptions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancecountbuffer",
                    "title": "instanceCountBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancecountbufferoffset",
                    "title": "instanceCountBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptorbuffer",
                    "title": "instanceDescriptorBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptorbufferoffset",
                    "title": "instanceDescriptorBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptorstride",
                    "title": "instanceDescriptorStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptortype",
                    "title": "instanceDescriptorType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancetransformationmatrixlayout",
                    "title": "instanceTransformationMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/maxinstancecount",
                    "title": "maxInstanceCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/maxmotiontransformcount",
                    "title": "maxMotionTransformCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformbuffer",
                    "title": "motionTransformBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformbufferoffset",
                    "title": "motionTransformBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformcountbuffer",
                    "title": "motionTransformCountBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformcountbufferoffset",
                    "title": "motionTransformCountBufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformstride",
                    "title": "motionTransformStride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformtype",
                    "title": "motionTransformType",
                    "type": "property"
                  },
                  {
                    "title": "Type Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/descriptor",
                    "title": "+ descriptor",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor",
                "title": "MTLIndirectInstanceAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/accelerationstructureid",
                    "title": "accelerationStructureID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/intersectionfunctiontableoffset",
                    "title": "intersectionFunctionTableOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/mask",
                    "title": "mask",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/options",
                    "title": "options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/transformationmatrix",
                    "title": "transformationMatrix",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/userid",
                    "title": "userID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor",
                "title": "MTLIndirectAccelerationStructureInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/accelerationstructureid",
                    "title": "accelerationStructureID",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionstarttime",
                    "title": "motionStartTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionstartbordermode",
                    "title": "motionStartBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionendtime",
                    "title": "motionEndTime",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionendbordermode",
                    "title": "motionEndBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motiontransformscount",
                    "title": "motionTransformsCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motiontransformsstartindex",
                    "title": "motionTransformsStartIndex",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the User Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/userid",
                    "title": "userID",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/intersectionfunctiontableoffset",
                    "title": "intersectionFunctionTableOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/mask",
                    "title": "mask",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/options",
                    "title": "options",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor",
                "title": "MTLIndirectAccelerationStructureMotionInstanceDescriptor",
                "type": "struct"
              },
              {
                "title": "Intersection Function Tables",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting a Table Entry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunction(_:index:)",
                    "title": "- setFunction:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunctions:withrange:",
                    "title": "- setFunctions:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Arguments for Intersection Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffer(_:offset:index:)",
                    "title": "- setBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffers:offsets:withrange:",
                    "title": "- setBuffers:offsets:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontable(_:bufferindex:)",
                    "title": "- setVisibleFunctionTable:atBufferIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontables:withbufferrange:",
                    "title": "- setVisibleFunctionTables:withBufferRange:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Opaque Triangle Intersection Testing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:index:)",
                    "title": "- setOpaqueTriangleIntersectionFunctionWithSignature:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:range:)",
                    "title": "- setOpaqueTriangleIntersectionFunctionWithSignature:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:index:)",
                    "title": "- setOpaqueCurveIntersectionFunctionWithSignature:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:range:)",
                    "title": "- setOpaqueCurveIntersectionFunctionWithSignature:withRange:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontable",
                "title": "MTLIntersectionFunctionTable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating an Intersection Function Table Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor/intersectionfunctiontabledescriptor",
                    "title": "+ intersectionFunctionTableDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Table’s Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor/functioncount",
                    "title": "functionCount",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor",
                "title": "MTLIntersectionFunctionTableDescriptor",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlintersectionfunctiondescriptor",
                "title": "MTLIntersectionFunctionDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Intersection Function Signature",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/mtlintersectionfunctionsignaturenone",
                    "title": "MTLIntersectionFunctionSignatureNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/instancing",
                    "title": "MTLIntersectionFunctionSignatureInstancing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/triangledata",
                    "title": "MTLIntersectionFunctionSignatureTriangleData",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/worldspacedata",
                    "title": "MTLIntersectionFunctionSignatureWorldSpaceData",
                    "type": "case"
                  },
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/curvedata",
                    "title": "MTLIntersectionFunctionSignatureCurveData",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/extendedlimits",
                    "title": "MTLIntersectionFunctionSignatureExtendedLimits",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/instancemotion",
                    "title": "MTLIntersectionFunctionSignatureInstanceMotion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/maxlevels",
                    "title": "MTLIntersectionFunctionSignatureMaxLevels",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/primitivemotion",
                    "title": "MTLIntersectionFunctionSignaturePrimitiveMotion",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctionsignature",
                "title": "MTLIntersectionFunctionSignature",
                "type": "enum"
              },
              {
                "title": "Supporting Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/mtlaxisalignedboundingbox",
                "title": "MTLAxisAlignedBoundingBox",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlpackedfloat3",
                "title": "MTLPackedFloat3",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlpackedfloat4x3",
                "title": "MTLPackedFloat4x3",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlpackedfloat3make(_:_:_:)",
                "title": "MTLPackedFloat3Make",
                "type": "func"
              }
            ],
            "path": "/documentation/metal/ray-tracing-with-acceleration-structures",
            "title": "Ray Tracing with Acceleration Structures",
            "type": "collection"
          },
          {
            "title": "Resources",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Resource Management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/setting-resource-storage-modes",
                "title": "Setting Resource Storage Modes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/choosing-a-resource-storage-mode-for-apple-gpus",
                "title": "Choosing a Resource Storage Mode for Apple GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus",
                "title": "Choosing a Resource Storage Mode for Intel and AMD GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/copying-data-to-a-private-resource",
                "title": "Copying Data to a Private Resource",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-a-managed-resource-in-macos",
                "title": "Synchronizing a Managed Resource in macOS",
                "type": "article"
              },
              {
                "path": "/documentation/metal/transferring-data-between-connected-gpus",
                "title": "Transferring Data Between Connected GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/reducing-the-memory-footprint-of-metal-apps",
                "title": "Reducing the Memory Footprint of Metal Apps",
                "type": "article"
              },
              {
                "title": "Residency Sets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/simplifying-gpu-resource-management-with-residency-sets",
                "title": "Simplifying GPU Resource Management with Residency Sets",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Adding Allocations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/addallocation(_:)",
                    "title": "- addAllocation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/addallocations:count:",
                    "title": "- addAllocations:count:",
                    "type": "method"
                  },
                  {
                    "title": "Removing Allocations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/removeallallocations()",
                    "title": "- removeAllAllocations",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/removeallocation(_:)",
                    "title": "- removeAllocation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/removeallocations:count:",
                    "title": "- removeAllocations:count:",
                    "type": "method"
                  },
                  {
                    "title": "Finalizing Pending Allocation Changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/commit()",
                    "title": "- commit",
                    "type": "method"
                  },
                  {
                    "title": "Requesting Residency for the Allocations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/requestresidency()",
                    "title": "- requestResidency",
                    "type": "method"
                  },
                  {
                    "title": "Releasing the Allocations from Residency",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/endresidency()",
                    "title": "- endResidency",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting a Residency Set",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/containsallocation(_:)",
                    "title": "- containsAllocation:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/allallocations",
                    "title": "allAllocations",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/allocationcount",
                    "title": "allocationCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/allocatedsize",
                    "title": "allocatedSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresidencyset",
                "title": "MTLResidencySet",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Residency Set",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencysetdescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencysetdescriptor/initialcapacity",
                    "title": "initialCapacity",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresidencysetdescriptor",
                "title": "MTLResidencySetDescriptor",
                "type": "class"
              },
              {
                "title": "Common Resource Functionality",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting an Allocation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlallocation/allocatedsize",
                    "title": "allocatedSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlallocation",
                "title": "MTLAllocation",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Resource",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Reading Memory and Storage Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/cpucachemode",
                    "title": "cpuCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/storagemode",
                    "title": "storageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/hazardtrackingmode",
                    "title": "hazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/resourceoptions",
                    "title": "resourceOptions",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Cache Mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcpucachemode/defaultcache",
                        "title": "MTLCPUCacheModeDefaultCache",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcpucachemode/writecombined",
                        "title": "MTLCPUCacheModeWriteCombined",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlcpucachemode",
                    "title": "MTLCPUCacheMode",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Storage Mode Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/shared",
                        "title": "MTLStorageModeShared",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/managed",
                        "title": "MTLStorageModeManaged",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/private",
                        "title": "MTLStorageModePrivate",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/memoryless",
                        "title": "MTLStorageModeMemoryless",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlstoragemode",
                    "title": "MTLStorageMode",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Tracking Mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlhazardtrackingmode/default",
                        "title": "MTLHazardTrackingModeDefault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlhazardtrackingmode/untracked",
                        "title": "MTLHazardTrackingModeUntracked",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlhazardtrackingmode/tracked",
                        "title": "MTLHazardTrackingModeTracked",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlhazardtrackingmode",
                    "title": "MTLHazardTrackingMode",
                    "type": "enum"
                  },
                  {
                    "title": "Setting the Purgeable State of the Resource",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/setpurgeablestate(_:)",
                    "title": "- setPurgeableState:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Purgeable States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/keepcurrent",
                        "title": "MTLPurgeableStateKeepCurrent",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/nonvolatile",
                        "title": "MTLPurgeableStateNonVolatile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/volatile",
                        "title": "MTLPurgeableStateVolatile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/empty",
                        "title": "MTLPurgeableStateEmpty",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlpurgeablestate",
                    "title": "MTLPurgeableState",
                    "type": "enum"
                  },
                  {
                    "title": "Managing Heap Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/heapoffset",
                    "title": "heapOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/heap",
                    "title": "heap",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/makealiasable()",
                    "title": "- makeAliasable",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/isaliasable()",
                    "title": "- isAliasable",
                    "type": "method"
                  },
                  {
                    "title": "Querying the Allocated Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/allocatedsize",
                    "title": "allocatedSize",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/setownerwithidentity:",
                    "title": "- setOwnerWithIdentity:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlresource",
                "title": "MTLResource",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Specifying CPU Cache Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/mtlresourcecpucachemodedefaultcache",
                    "title": "MTLResourceCPUCacheModeDefaultCache",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/cpucachemodewritecombined",
                    "title": "MTLResourceCPUCacheModeWriteCombined",
                    "type": "case"
                  },
                  {
                    "title": "Specifying Storage Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodeshared",
                    "title": "MTLResourceStorageModeShared",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodemanaged",
                    "title": "MTLResourceStorageModeManaged",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodeprivate",
                    "title": "MTLResourceStorageModePrivate",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodememoryless",
                    "title": "MTLResourceStorageModeMemoryless",
                    "type": "case"
                  },
                  {
                    "title": "Specifying Hazard Tracking",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/mtlresourcehazardtrackingmodedefault",
                    "title": "MTLResourceHazardTrackingModeDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/hazardtrackingmodetracked",
                    "title": "MTLResourceHazardTrackingModeTracked",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/hazardtrackingmodeuntracked",
                    "title": "MTLResourceHazardTrackingModeUntracked",
                    "type": "case"
                  },
                  {
                    "title": "Deprecated Options",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlresourceoptions/mtlresourceoptioncpucachemodedefault",
                    "title": "MTLResourceOptionCPUCacheModeDefault",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlresourceoptions/optioncpucachemodewritecombined",
                    "title": "MTLResourceOptionCPUCacheModeWriteCombined",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlresourceoptions",
                "title": "MTLResourceOptions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceusage/read",
                    "title": "MTLResourceUsageRead",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceusage/write",
                    "title": "MTLResourceUsageWrite",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlresourceusage/sample",
                    "title": "MTLResourceUsageSample",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlresourceusage",
                "title": "MTLResourceUsage",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtlresourceid",
                "title": "MTLResourceID",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/resource-fundamentals",
            "title": "Resource Fundamentals",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "General Purpose Buffers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Texture That Shares Buffer Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/maketexture(descriptor:offset:bytesperrow:)",
                    "title": "- newTextureWithDescriptor:offset:bytesPerRow:",
                    "type": "method"
                  },
                  {
                    "title": "Reading the Buffer’s Data on the CPU",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/contents()",
                    "title": "- contents",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Data to the GPU for Managed Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/didmodifyrange:",
                    "title": "- didModifyRange:",
                    "type": "method"
                  },
                  {
                    "title": "Debugging Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/adddebugmarker:range:",
                    "title": "- addDebugMarker:range:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/removealldebugmarkers()",
                    "title": "- removeAllDebugMarkers",
                    "type": "method"
                  },
                  {
                    "title": "Reading Buffer Length",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/length",
                    "title": "length",
                    "type": "property"
                  },
                  {
                    "title": "Creating Views of Buffers on Other GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/makeremotebufferview(_:)",
                    "title": "- newRemoteBufferViewForDevice:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/remotestoragebuffer",
                    "title": "remoteStorageBuffer",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/gpuaddress",
                    "title": "gpuAddress",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlbuffer",
                "title": "MTLBuffer",
                "type": "protocol"
              },
              {
                "title": "Argument Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-cpu-performance-by-using-argument-buffers",
                "title": "Improving CPU Performance by Using Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/managing-groups-of-resources-with-argument-buffers",
                "title": "Managing groups of resources with argument buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/tracking-the-resource-residency-of-argument-buffers",
                "title": "Tracking the Resource Residency of Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/indexing-argument-buffers",
                "title": "Indexing Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-terrain-dynamically-with-argument-buffers",
                "title": "Rendering Terrain Dynamically with Argument Buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-argument-buffers-on-the-gpu",
                "title": "Encoding Argument Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializing an Argument Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/argumentdescriptor",
                    "title": "+ argumentDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Setting the Descriptor’s Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/datatype",
                    "title": "dataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/index",
                    "title": "index",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/access",
                    "title": "access",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/arraylength",
                    "title": "arrayLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/constantblockalignment",
                    "title": "constantBlockAlignment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/texturetype",
                    "title": "textureType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlargumentdescriptor",
                "title": "MTLArgumentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Argument Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setargumentbuffer(_:offset:)",
                    "title": "- setArgumentBuffer:offset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setargumentbuffer(_:startoffset:arrayelement:)",
                    "title": "- setArgumentBuffer:startOffset:arrayElement:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/encodedlength",
                    "title": "encodedLength",
                    "type": "property"
                  },
                  {
                    "title": "Encoding Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setbuffer(_:offset:index:)",
                    "title": "- setBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setbuffers:offsets:withrange:",
                    "title": "- setBuffers:offsets:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Textures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/settexture(_:index:)",
                    "title": "- setTexture:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/settextures:withrange:",
                    "title": "- setTextures:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Samplers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setsamplerstate(_:index:)",
                    "title": "- setSamplerState:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setsamplerstates:withrange:",
                    "title": "- setSamplerStates:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Pipeline States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setrenderpipelinestate(_:index:)",
                    "title": "- setRenderPipelineState:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setrenderpipelinestates:withrange:",
                    "title": "- setRenderPipelineStates:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setcomputepipelinestate(_:index:)",
                    "title": "- setComputePipelineState:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setcomputepipelinestates:withrange:",
                    "title": "- setComputePipelineStates:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Inlined Constant Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/constantdata(at:)",
                    "title": "- constantDataAtIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setindirectcommandbuffer(_:index:)",
                    "title": "- setIndirectCommandBuffer:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setindirectcommandbuffers:withrange:",
                    "title": "- setIndirectCommandBuffers:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Acceleration Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setaccelerationstructure(_:index:)",
                    "title": "- setAccelerationStructure:atIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Function Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setvisiblefunctiontable(_:index:)",
                    "title": "- setVisibleFunctionTable:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setvisiblefunctiontables:withrange:",
                    "title": "- setVisibleFunctionTables:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setintersectionfunctiontable(_:index:)",
                    "title": "- setIntersectionFunctionTable:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setintersectionfunctiontables:withrange:",
                    "title": "- setIntersectionFunctionTables:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Creating a Nested Argument Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/makeargumentencoderforbuffer(atindex:)",
                    "title": "- newArgumentEncoderForBufferAtIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Querying Alignment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/alignment",
                    "title": "alignment",
                    "type": "property"
                  },
                  {
                    "title": "Identifying the Argument Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/device",
                    "title": "device",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlargumentencoder",
                "title": "MTLArgumentEncoder",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlattributestridestatic",
                "title": "MTLAttributeStrideStatic",
                "type": "var"
              },
              {
                "title": "Model I/O Interoperability",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmesh",
                "title": "MTKMesh",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmeshbuffer",
                "title": "MTKMeshBuffer",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmeshbufferallocator",
                "title": "MTKMeshBufferAllocator",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtksubmesh",
                "title": "MTKSubmesh",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmodelerror",
                "title": "MTKModelError",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmetalvertexformatfrommodelio(_:)",
                "title": "MTKMetalVertexFormatFromModelIO",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmodeliovertexformatfrommetal(_:)",
                "title": "MTKModelIOVertexFormatFromMetal",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmetalvertexdescriptorfrommodelio(_:)",
                "title": "MTKMetalVertexDescriptorFromModelIO",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmodeliovertexdescriptorfrommetal(_:)",
                "title": "MTKModelIOVertexDescriptorFromMetal",
                "type": "func"
              }
            ],
            "path": "/documentation/metal/buffers",
            "title": "Buffers",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Texture Basics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/understanding-color-renderable-pixel-format-sizes",
                "title": "Understanding Color-Renderable Pixel Format Sizes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/optimizing-texture-data",
                "title": "Optimizing Texture Data",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Copying Data into a Texture Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/replace(region:mipmaplevel:slice:withbytes:bytesperrow:bytesperimage:)",
                    "title": "- replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/replace(region:mipmaplevel:withbytes:bytesperrow:)",
                    "title": "- replaceRegion:mipmapLevel:withBytes:bytesPerRow:",
                    "type": "method"
                  },
                  {
                    "title": "Copying Data from a Texture Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/getbytes(_:bytesperrow:bytesperimage:from:mipmaplevel:slice:)",
                    "title": "- getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/getbytes(_:bytesperrow:from:mipmaplevel:)",
                    "title": "- getBytes:bytesPerRow:fromRegion:mipmapLevel:",
                    "type": "method"
                  },
                  {
                    "title": "Creating Textures by Reinterpreting Existing Texture Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/maketextureview(pixelformat:)",
                    "title": "- newTextureViewWithPixelFormat:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/newtextureviewwithpixelformat:texturetype:levels:slices:",
                    "title": "- newTextureViewWithPixelFormat:textureType:levels:slices:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/newtextureviewwithpixelformat:texturetype:levels:slices:swizzle:",
                    "title": "- newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:",
                    "type": "method"
                  },
                  {
                    "title": "Querying Texture Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/texturetype",
                    "title": "textureType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/pixelformat",
                    "title": "pixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/width",
                    "title": "width",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/height",
                    "title": "height",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/depth",
                    "title": "depth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/mipmaplevelcount",
                    "title": "mipmapLevelCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/arraylength",
                    "title": "arrayLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/samplecount",
                    "title": "sampleCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/isframebufferonly",
                    "title": "framebufferOnly",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/usage",
                    "title": "usage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/allowgpuoptimizedcontents",
                    "title": "allowGPUOptimizedContents",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/isshareable",
                    "title": "shareable",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/swizzle",
                    "title": "swizzle",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Texture Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1d",
                        "title": "MTLTextureType1D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1darray",
                        "title": "MTLTextureType1DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2d",
                        "title": "MTLTextureType2D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2darray",
                        "title": "MTLTextureType2DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisample",
                        "title": "MTLTextureType2DMultisample",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecube",
                        "title": "MTLTextureTypeCube",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecubearray",
                        "title": "MTLTextureTypeCubeArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type3d",
                        "title": "MTLTextureType3D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisamplearray",
                        "title": "MTLTextureType2DMultisampleArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typetexturebuffer",
                        "title": "MTLTextureTypeTextureBuffer",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltexturetype",
                    "title": "MTLTextureType",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Texture Usage Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/unknown",
                        "title": "MTLTextureUsageUnknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderread",
                        "title": "MTLTextureUsageShaderRead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderwrite",
                        "title": "MTLTextureUsageShaderWrite",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/rendertarget",
                        "title": "MTLTextureUsageRenderTarget",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/pixelformatview",
                        "title": "MTLTextureUsagePixelFormatView",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderatomic",
                        "title": "MTLTextureUsageShaderAtomic",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureusage",
                    "title": "MTLTextureUsage",
                    "type": "enum"
                  },
                  {
                    "title": "Getting Information about the IOSurface the Texture Was Created From",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/iosurface",
                    "title": "iosurface",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/iosurfaceplane",
                    "title": "iosurfacePlane",
                    "type": "property"
                  },
                  {
                    "title": "Getting Information about Ancestor Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/parent",
                    "title": "parentTexture",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/parentrelativelevel",
                    "title": "parentRelativeLevel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/parentrelativeslice",
                    "title": "parentRelativeSlice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/buffer",
                    "title": "buffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/bufferoffset",
                    "title": "bufferOffset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/bufferbytesperrow",
                    "title": "bufferBytesPerRow",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtltexture/rootresource",
                    "title": "rootResource",
                    "type": "property"
                  },
                  {
                    "title": "Creating a Shared Texture Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/makesharedtexturehandle()",
                    "title": "- newSharedTextureHandle",
                    "type": "method"
                  },
                  {
                    "title": "Creating Views of Textures on Other GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/makeremotetextureview(_:)",
                    "title": "- newRemoteTextureViewForDevice:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/remotestoragetexture",
                    "title": "remoteStorageTexture",
                    "type": "property"
                  },
                  {
                    "title": "Querying Sparse Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/issparse",
                    "title": "isSparse",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/firstmipmapintail",
                    "title": "firstMipmapInTail",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/tailsizeinbytes",
                    "title": "tailSizeInBytes",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/compressiontype",
                    "title": "compressionType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexture",
                "title": "MTLTexture",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturecompressiontype/lossless",
                    "title": "MTLTextureCompressionTypeLossless",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtltexturecompressiontype/lossy",
                    "title": "MTLTextureCompressionTypeLossy",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtltexturecompressiontype",
                "title": "MTLTextureCompressionType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating Texture Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texture2ddescriptor(pixelformat:width:height:mipmapped:)",
                    "title": "+ texture2DDescriptorWithPixelFormat:width:height:mipmapped:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texturecubedescriptor(pixelformat:size:mipmapped:)",
                    "title": "+ textureCubeDescriptorWithPixelFormat:size:mipmapped:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texturebufferdescriptor(with:width:resourceoptions:usage:)",
                    "title": "+ textureBufferDescriptorWithPixelFormat:width:resourceOptions:usage:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Texture Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texturetype",
                    "title": "textureType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/pixelformat",
                    "title": "pixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/width",
                    "title": "width",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/height",
                    "title": "height",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/depth",
                    "title": "depth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/mipmaplevelcount",
                    "title": "mipmapLevelCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/samplecount",
                    "title": "sampleCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/arraylength",
                    "title": "arrayLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/resourceoptions",
                    "title": "resourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/cpucachemode",
                    "title": "cpuCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/storagemode",
                    "title": "storageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/hazardtrackingmode",
                    "title": "hazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/allowgpuoptimizedcontents",
                    "title": "allowGPUOptimizedContents",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/usage",
                    "title": "usage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/swizzle",
                    "title": "swizzle",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Swizzle Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/red",
                        "title": "red",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/green",
                        "title": "green",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/blue",
                        "title": "blue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/alpha",
                        "title": "alpha",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureswizzlechannels",
                    "title": "MTLTextureSwizzleChannels",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/metal/mtltextureswizzlechannelsmake",
                    "title": "MTLTextureSwizzleChannelsMake",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Swizzle Channels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/alpha",
                        "title": "MTLTextureSwizzleAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/blue",
                        "title": "MTLTextureSwizzleBlue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/green",
                        "title": "MTLTextureSwizzleGreen",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/red",
                        "title": "MTLTextureSwizzleRed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/one",
                        "title": "MTLTextureSwizzleOne",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/zero",
                        "title": "MTLTextureSwizzleZero",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureswizzle",
                    "title": "MTLTextureSwizzle",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Texture Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1d",
                        "title": "MTLTextureType1D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1darray",
                        "title": "MTLTextureType1DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2d",
                        "title": "MTLTextureType2D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2darray",
                        "title": "MTLTextureType2DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisample",
                        "title": "MTLTextureType2DMultisample",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecube",
                        "title": "MTLTextureTypeCube",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecubearray",
                        "title": "MTLTextureTypeCubeArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type3d",
                        "title": "MTLTextureType3D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisamplearray",
                        "title": "MTLTextureType2DMultisampleArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typetexturebuffer",
                        "title": "MTLTextureTypeTextureBuffer",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltexturetype",
                    "title": "MTLTextureType",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Texture Usage Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/unknown",
                        "title": "MTLTextureUsageUnknown",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderread",
                        "title": "MTLTextureUsageShaderRead",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderwrite",
                        "title": "MTLTextureUsageShaderWrite",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/rendertarget",
                        "title": "MTLTextureUsageRenderTarget",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/pixelformatview",
                        "title": "MTLTextureUsagePixelFormatView",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderatomic",
                        "title": "MTLTextureUsageShaderAtomic",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureusage",
                    "title": "MTLTextureUsage",
                    "type": "enum"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/compressiontype",
                    "title": "compressionType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexturedescriptor",
                "title": "MTLTextureDescriptor",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader",
                "title": "MTKTextureLoader",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Shared Texture Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedtexturehandle/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedtexturehandle/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsharedtexturehandle",
                "title": "MTLSharedTextureHandle",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Ordinary 8-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/a8unorm",
                    "title": "MTLPixelFormatA8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8unorm",
                    "title": "MTLPixelFormatR8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8unorm_srgb",
                    "title": "MTLPixelFormatR8Unorm_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8snorm",
                    "title": "MTLPixelFormatR8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8uint",
                    "title": "MTLPixelFormatR8Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8sint",
                    "title": "MTLPixelFormatR8Sint",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 16-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16unorm",
                    "title": "MTLPixelFormatR16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16snorm",
                    "title": "MTLPixelFormatR16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16uint",
                    "title": "MTLPixelFormatR16Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16sint",
                    "title": "MTLPixelFormatR16Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16float",
                    "title": "MTLPixelFormatR16Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8unorm",
                    "title": "MTLPixelFormatRG8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8unorm_srgb",
                    "title": "MTLPixelFormatRG8Unorm_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8snorm",
                    "title": "MTLPixelFormatRG8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8uint",
                    "title": "MTLPixelFormatRG8Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8sint",
                    "title": "MTLPixelFormatRG8Sint",
                    "type": "case"
                  },
                  {
                    "title": "Packed 16-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/b5g6r5unorm",
                    "title": "MTLPixelFormatB5G6R5Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/a1bgr5unorm",
                    "title": "MTLPixelFormatA1BGR5Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/abgr4unorm",
                    "title": "MTLPixelFormatABGR4Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr5a1unorm",
                    "title": "MTLPixelFormatBGR5A1Unorm",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 32-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r32uint",
                    "title": "MTLPixelFormatR32Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r32sint",
                    "title": "MTLPixelFormatR32Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r32float",
                    "title": "MTLPixelFormatR32Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16unorm",
                    "title": "MTLPixelFormatRG16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16snorm",
                    "title": "MTLPixelFormatRG16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16uint",
                    "title": "MTLPixelFormatRG16Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16sint",
                    "title": "MTLPixelFormatRG16Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16float",
                    "title": "MTLPixelFormatRG16Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8unorm",
                    "title": "MTLPixelFormatRGBA8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8unorm_srgb",
                    "title": "MTLPixelFormatRGBA8Unorm_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8snorm",
                    "title": "MTLPixelFormatRGBA8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8uint",
                    "title": "MTLPixelFormatRGBA8Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8sint",
                    "title": "MTLPixelFormatRGBA8Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra8unorm",
                    "title": "MTLPixelFormatBGRA8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra8unorm_srgb",
                    "title": "MTLPixelFormatBGRA8Unorm_sRGB",
                    "type": "case"
                  },
                  {
                    "title": "Packed 32-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr10a2unorm",
                    "title": "MTLPixelFormatBGR10A2Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgb10a2unorm",
                    "title": "MTLPixelFormatRGB10A2Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgb10a2uint",
                    "title": "MTLPixelFormatRGB10A2Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg11b10float",
                    "title": "MTLPixelFormatRG11B10Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgb9e5float",
                    "title": "MTLPixelFormatRGB9E5Float",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 64-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg32uint",
                    "title": "MTLPixelFormatRG32Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg32sint",
                    "title": "MTLPixelFormatRG32Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg32float",
                    "title": "MTLPixelFormatRG32Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16unorm",
                    "title": "MTLPixelFormatRGBA16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16snorm",
                    "title": "MTLPixelFormatRGBA16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16uint",
                    "title": "MTLPixelFormatRGBA16Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16sint",
                    "title": "MTLPixelFormatRGBA16Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16float",
                    "title": "MTLPixelFormatRGBA16Float",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 128-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba32uint",
                    "title": "MTLPixelFormatRGBA32Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba32sint",
                    "title": "MTLPixelFormatRGBA32Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba32float",
                    "title": "MTLPixelFormatRGBA32Float",
                    "type": "case"
                  },
                  {
                    "title": "Compressed PVRTC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_2bpp",
                    "title": "MTLPixelFormatPVRTC_RGB_2BPP",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_2bpp_srgb",
                    "title": "MTLPixelFormatPVRTC_RGB_2BPP_sRGB",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_4bpp",
                    "title": "MTLPixelFormatPVRTC_RGB_4BPP",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_4bpp_srgb",
                    "title": "MTLPixelFormatPVRTC_RGB_4BPP_sRGB",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_2bpp",
                    "title": "MTLPixelFormatPVRTC_RGBA_2BPP",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_2bpp_srgb",
                    "title": "MTLPixelFormatPVRTC_RGBA_2BPP_sRGB",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_4bpp",
                    "title": "MTLPixelFormatPVRTC_RGBA_4BPP",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_4bpp_srgb",
                    "title": "MTLPixelFormatPVRTC_RGBA_4BPP_sRGB",
                    "type": "case"
                  },
                  {
                    "title": "Compressed EAC/ETC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_r11unorm",
                    "title": "MTLPixelFormatEAC_R11Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_r11snorm",
                    "title": "MTLPixelFormatEAC_R11Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rg11unorm",
                    "title": "MTLPixelFormatEAC_RG11Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rg11snorm",
                    "title": "MTLPixelFormatEAC_RG11Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rgba8",
                    "title": "MTLPixelFormatEAC_RGBA8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rgba8_srgb",
                    "title": "MTLPixelFormatEAC_RGBA8_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8",
                    "title": "MTLPixelFormatETC2_RGB8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8_srgb",
                    "title": "MTLPixelFormatETC2_RGB8_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8a1",
                    "title": "MTLPixelFormatETC2_RGB8A1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8a1_srgb",
                    "title": "MTLPixelFormatETC2_RGB8A1_sRGB",
                    "type": "case"
                  },
                  {
                    "title": "Compressed ASTC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_4x4_srgb",
                    "title": "MTLPixelFormatASTC_4x4_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x4_srgb",
                    "title": "MTLPixelFormatASTC_5x4_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x5_srgb",
                    "title": "MTLPixelFormatASTC_5x5_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x5_srgb",
                    "title": "MTLPixelFormatASTC_6x5_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x6_srgb",
                    "title": "MTLPixelFormatASTC_6x6_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x5_srgb",
                    "title": "MTLPixelFormatASTC_8x5_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x6_srgb",
                    "title": "MTLPixelFormatASTC_8x6_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x8_srgb",
                    "title": "MTLPixelFormatASTC_8x8_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x5_srgb",
                    "title": "MTLPixelFormatASTC_10x5_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x6_srgb",
                    "title": "MTLPixelFormatASTC_10x6_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x8_srgb",
                    "title": "MTLPixelFormatASTC_10x8_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x10_srgb",
                    "title": "MTLPixelFormatASTC_10x10_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x10_srgb",
                    "title": "MTLPixelFormatASTC_12x10_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x12_srgb",
                    "title": "MTLPixelFormatASTC_12x12_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_4x4_ldr",
                    "title": "MTLPixelFormatASTC_4x4_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x4_ldr",
                    "title": "MTLPixelFormatASTC_5x4_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x5_ldr",
                    "title": "MTLPixelFormatASTC_5x5_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x5_ldr",
                    "title": "MTLPixelFormatASTC_6x5_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x6_ldr",
                    "title": "MTLPixelFormatASTC_6x6_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x5_ldr",
                    "title": "MTLPixelFormatASTC_8x5_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x6_ldr",
                    "title": "MTLPixelFormatASTC_8x6_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x8_ldr",
                    "title": "MTLPixelFormatASTC_8x8_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x5_ldr",
                    "title": "MTLPixelFormatASTC_10x5_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x6_ldr",
                    "title": "MTLPixelFormatASTC_10x6_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x8_ldr",
                    "title": "MTLPixelFormatASTC_10x8_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x10_ldr",
                    "title": "MTLPixelFormatASTC_10x10_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x10_ldr",
                    "title": "MTLPixelFormatASTC_12x10_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x12_ldr",
                    "title": "MTLPixelFormatASTC_12x12_LDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_4x4_hdr",
                    "title": "MTLPixelFormatASTC_4x4_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x4_hdr",
                    "title": "MTLPixelFormatASTC_5x4_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x5_hdr",
                    "title": "MTLPixelFormatASTC_5x5_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x5_hdr",
                    "title": "MTLPixelFormatASTC_6x5_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x6_hdr",
                    "title": "MTLPixelFormatASTC_6x6_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x5_hdr",
                    "title": "MTLPixelFormatASTC_8x5_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x6_hdr",
                    "title": "MTLPixelFormatASTC_8x6_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x8_hdr",
                    "title": "MTLPixelFormatASTC_8x8_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x5_hdr",
                    "title": "MTLPixelFormatASTC_10x5_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x6_hdr",
                    "title": "MTLPixelFormatASTC_10x6_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x8_hdr",
                    "title": "MTLPixelFormatASTC_10x8_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x10_hdr",
                    "title": "MTLPixelFormatASTC_10x10_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x10_hdr",
                    "title": "MTLPixelFormatASTC_12x10_HDR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x12_hdr",
                    "title": "MTLPixelFormatASTC_12x12_HDR",
                    "type": "case"
                  },
                  {
                    "title": "Compressed BC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc1_rgba",
                    "title": "MTLPixelFormatBC1_RGBA",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc1_rgba_srgb",
                    "title": "MTLPixelFormatBC1_RGBA_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc2_rgba",
                    "title": "MTLPixelFormatBC2_RGBA",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc2_rgba_srgb",
                    "title": "MTLPixelFormatBC2_RGBA_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc3_rgba",
                    "title": "MTLPixelFormatBC3_RGBA",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc3_rgba_srgb",
                    "title": "MTLPixelFormatBC3_RGBA_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc4_runorm",
                    "title": "MTLPixelFormatBC4_RUnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc4_rsnorm",
                    "title": "MTLPixelFormatBC4_RSnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc5_rgunorm",
                    "title": "MTLPixelFormatBC5_RGUnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc5_rgsnorm",
                    "title": "MTLPixelFormatBC5_RGSnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc6h_rgbfloat",
                    "title": "MTLPixelFormatBC6H_RGBFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc6h_rgbufloat",
                    "title": "MTLPixelFormatBC6H_RGBUfloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc7_rgbaunorm",
                    "title": "MTLPixelFormatBC7_RGBAUnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc7_rgbaunorm_srgb",
                    "title": "MTLPixelFormatBC7_RGBAUnorm_sRGB",
                    "type": "case"
                  },
                  {
                    "title": "YUV Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/gbgr422",
                    "title": "MTLPixelFormatGBGR422",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgrg422",
                    "title": "MTLPixelFormatBGRG422",
                    "type": "case"
                  },
                  {
                    "title": "Depth and Stencil Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth16unorm",
                    "title": "MTLPixelFormatDepth16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth32float",
                    "title": "MTLPixelFormatDepth32Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/stencil8",
                    "title": "MTLPixelFormatStencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth24unorm_stencil8",
                    "title": "MTLPixelFormatDepth24Unorm_Stencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth32float_stencil8",
                    "title": "MTLPixelFormatDepth32Float_Stencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/x32_stencil8",
                    "title": "MTLPixelFormatX32_Stencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/x24_stencil8",
                    "title": "MTLPixelFormatX24_Stencil8",
                    "type": "case"
                  },
                  {
                    "title": "Extended Range and Wide Color Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra10_xr",
                    "title": "MTLPixelFormatBGRA10_XR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra10_xr_srgb",
                    "title": "MTLPixelFormatBGRA10_XR_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr10_xr",
                    "title": "MTLPixelFormatBGR10_XR",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr10_xr_srgb",
                    "title": "MTLPixelFormatBGR10_XR_sRGB",
                    "type": "case"
                  },
                  {
                    "title": "Invalid Pixel Format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/invalid",
                    "title": "MTLPixelFormatInvalid",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlpixelformat",
                "title": "MTLPixelFormat",
                "type": "enum"
              },
              {
                "title": "Texture Samplers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-and-sampling-textures",
                "title": "Creating and Sampling Textures",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Sampler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerstate/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerstate/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerstate/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsamplerstate",
                "title": "MTLSamplerState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Declaring the Coordinate Space",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/normalizedcoordinates",
                    "title": "normalizedCoordinates",
                    "type": "property"
                  },
                  {
                    "title": "Declaring Addressing Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/raddressmode",
                    "title": "rAddressMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/saddressmode",
                    "title": "sAddressMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/taddressmode",
                    "title": "tAddressMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/bordercolor",
                    "title": "borderColor",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Address Mode Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/clamptoedge",
                        "title": "MTLSamplerAddressModeClampToEdge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/mirrorclamptoedge",
                        "title": "MTLSamplerAddressModeMirrorClampToEdge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/repeat",
                        "title": "MTLSamplerAddressModeRepeat",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/mirrorrepeat",
                        "title": "MTLSamplerAddressModeMirrorRepeat",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/clamptozero",
                        "title": "MTLSamplerAddressModeClampToZero",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/clamptobordercolor",
                        "title": "MTLSamplerAddressModeClampToBorderColor",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlsampleraddressmode",
                    "title": "MTLSamplerAddressMode",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Border Color Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerbordercolor/transparentblack",
                        "title": "MTLSamplerBorderColorTransparentBlack",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerbordercolor/opaqueblack",
                        "title": "MTLSamplerBorderColorOpaqueBlack",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerbordercolor/opaquewhite",
                        "title": "MTLSamplerBorderColorOpaqueWhite",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlsamplerbordercolor",
                    "title": "MTLSamplerBorderColor",
                    "type": "enum"
                  },
                  {
                    "title": "Declaring Filter Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/minfilter",
                    "title": "minFilter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/magfilter",
                    "title": "magFilter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/mipfilter",
                    "title": "mipFilter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/lodminclamp",
                    "title": "lodMinClamp",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/lodmaxclamp",
                    "title": "lodMaxClamp",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/lodaverage",
                    "title": "lodAverage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/maxanisotropy",
                    "title": "maxAnisotropy",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Filter options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerminmagfilter/nearest",
                        "title": "MTLSamplerMinMagFilterNearest",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerminmagfilter/linear",
                        "title": "MTLSamplerMinMagFilterLinear",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlsamplerminmagfilter",
                    "title": "MTLSamplerMinMagFilter",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Mip Filter Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplermipfilter/notmipmapped",
                        "title": "MTLSamplerMipFilterNotMipmapped",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplermipfilter/nearest",
                        "title": "MTLSamplerMipFilterNearest",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplermipfilter/linear",
                        "title": "MTLSamplerMipFilterLinear",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlsamplermipfilter",
                    "title": "MTLSamplerMipFilter",
                    "type": "enum"
                  },
                  {
                    "title": "Declaring the Depth Comparison Mode",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/comparefunction",
                    "title": "compareFunction",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Compare function options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/never",
                        "title": "MTLCompareFunctionNever",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/less",
                        "title": "MTLCompareFunctionLess",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/equal",
                        "title": "MTLCompareFunctionEqual",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/lessequal",
                        "title": "MTLCompareFunctionLessEqual",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/greater",
                        "title": "MTLCompareFunctionGreater",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/notequal",
                        "title": "MTLCompareFunctionNotEqual",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/greaterequal",
                        "title": "MTLCompareFunctionGreaterEqual",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/always",
                        "title": "MTLCompareFunctionAlways",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlcomparefunction",
                    "title": "MTLCompareFunction",
                    "type": "enum"
                  },
                  {
                    "title": "Declaring Whether the Sampler Can Be Used in Argument Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/supportargumentbuffers",
                    "title": "supportArgumentBuffers",
                    "type": "property"
                  },
                  {
                    "title": "Identifying the Sampler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsamplerdescriptor",
                "title": "MTLSamplerDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsampleposition/x",
                    "title": "x",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsampleposition/y",
                    "title": "y",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsampleposition",
                "title": "MTLSamplePosition",
                "type": "struct"
              },
              {
                "title": "Texture Mipmapping",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-texture-sampling-quality-and-performance-with-mipmaps",
                "title": "Improving Texture Sampling Quality and Performance with Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-a-mipmapped-texture",
                "title": "Creating a Mipmapped Texture",
                "type": "article"
              },
              {
                "path": "/documentation/metal/copying-data-into-or-out-of-mipmaps",
                "title": "Copying Data into or out of Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/generating-mipmap-data",
                "title": "Generating Mipmap Data",
                "type": "article"
              },
              {
                "path": "/documentation/metal/adding-mipmap-filtering-to-samplers",
                "title": "Adding Mipmap Filtering to Samplers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/restricting-access-to-specific-mipmaps",
                "title": "Restricting Access to Specific Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/predicting-which-mips-the-gpu-samples-with-level-of-detail-queries",
                "title": "Predicting Which Mips the GPU Samples with Level-of-Detail Queries",
                "type": "article"
              },
              {
                "path": "/documentation/metal/dynamically-adjusting-texture-level-of-detail",
                "title": "Dynamically Adjusting Texture Level of Detail",
                "type": "article"
              },
              {
                "title": "Sparse Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/managing-sparse-texture-memory",
                "title": "Managing Sparse Texture Memory",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-sparse-heaps-and-sparse-textures",
                "title": "Creating Sparse Heaps and Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/converting-between-pixel-regions-and-sparse-tile-regions",
                "title": "Converting Between Pixel Regions and Sparse Tile Regions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/assigning-memory-to-sparse-textures",
                "title": "Assigning Memory to Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/reading-and-writing-to-sparse-textures",
                "title": "Reading and Writing to Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/estimating-how-often-a-texture-region-is-accessed",
                "title": "Estimating How Often a Texture Region Is Accessed",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating a Resource State Pass Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepassdescriptor/resourcestatepassdescriptor",
                    "title": "+ resourceStatePassDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Sample Buffers for GPU Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepassdescriptor/samplebufferattachments",
                    "title": "sampleBufferAttachments",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatepassdescriptor",
                "title": "MTLResourceStatePassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "sampleBuffer",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "startOfEncoderSampleIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "endOfEncoderSampleIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor",
                "title": "MTLResourceStatePassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptorarray/setobject:atindexedsubscript:",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptorarray",
                "title": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Updating Texture Memory Assignments",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/updatetexturemapping(_:mode:region:miplevel:slice:)",
                    "title": "- updateTextureMapping:mode:region:mipLevel:slice:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/updatetexturemappings(_:mode:regions:miplevels:slices:numregions:)",
                    "title": "- updateTextureMappings:mode:regions:mipLevels:slices:numRegions:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Mapping Mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsparsetexturemappingmode/map",
                        "title": "MTLSparseTextureMappingModeMap",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsparsetexturemappingmode/unmap",
                        "title": "MTLSparseTextureMappingModeUnmap",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlsparsetexturemappingmode",
                    "title": "MTLSparseTextureMappingMode",
                    "type": "enum"
                  },
                  {
                    "title": "Updating Texture Memory Assignments Indirectly",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/updatetexturemapping(_:mode:indirectbuffer:indirectbufferoffset:)",
                    "title": "- updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:",
                    "type": "method"
                  },
                  {
                    "title": "Performing Fence Operations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/update(_:)",
                    "title": "- updateFence:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/wait(for:)",
                    "title": "- waitForFence:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/movetexturemappings(sourcetexture:sourceslice:sourcelevel:sourceorigin:sourcesize:destinationtexture:destinationslice:destinationlevel:destinationorigin:)",
                    "title": "- moveTextureMappingsFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatecommandencoder",
                "title": "MTLResourceStateCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Specifying Region Origin",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionoriginx",
                    "title": "regionOriginX",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionoriginy",
                    "title": "regionOriginY",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionoriginz",
                    "title": "regionOriginZ",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Region Dimensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionsizewidth",
                    "title": "regionSizeWidth",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionsizeheight",
                    "title": "regionSizeHeight",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionsizedepth",
                    "title": "regionSizeDepth",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Texture Location",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/mipmaplevel",
                    "title": "mipMapLevel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/sliceid",
                    "title": "sliceId",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlmapindirectarguments",
                "title": "MTLMapIndirectArguments",
                "type": "struct"
              },
              {
                "title": "Texture Loading",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader",
                "title": "MTKTextureLoader",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/error",
                "title": "MTKTextureLoaderError",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/option",
                "title": "MTKTextureLoaderOption",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/callback",
                "title": "MTKTextureLoaderCallback",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/arraycallback",
                "title": "MTKTextureLoaderArrayCallback",
                "type": "typealias"
              }
            ],
            "path": "/documentation/metal/textures",
            "title": "Textures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Resource Memory Allocation and Management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Heap",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Querying Heap Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/storagemode",
                    "title": "storageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/cpucachemode",
                    "title": "cpuCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/hazardtrackingmode",
                    "title": "hazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/resourceoptions",
                    "title": "resourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/size",
                    "title": "size",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/usedsize",
                    "title": "usedSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/currentallocatedsize",
                    "title": "currentAllocatedSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/maxavailablesize(alignment:)",
                    "title": "- maxAvailableSizeWithAlignment:",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Heap Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlheaptype/automatic",
                        "title": "MTLHeapTypeAutomatic",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlheaptype/placement",
                        "title": "MTLHeapTypePlacement",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlheaptype/sparse",
                        "title": "MTLHeapTypeSparse",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlheaptype",
                    "title": "MTLHeapType",
                    "type": "enum"
                  },
                  {
                    "title": "Setting the Purgeable State of the Resource",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/setpurgeablestate(_:)",
                    "title": "- setPurgeableState:",
                    "type": "method"
                  },
                  {
                    "title": "Creating Resources on the Heap",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makebuffer(length:options:)",
                    "title": "- newBufferWithLength:options:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/maketexture(descriptor:)",
                    "title": "- newTextureWithDescriptor:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makebuffer(length:options:offset:)",
                    "title": "- newBufferWithLength:options:offset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/maketexture(descriptor:offset:)",
                    "title": "- newTextureWithDescriptor:offset:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(descriptor:)",
                    "title": "- newAccelerationStructureWithDescriptor:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(descriptor:offset:)",
                    "title": "- newAccelerationStructureWithDescriptor:offset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(size:)",
                    "title": "- newAccelerationStructureWithSize:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(size:offset:)",
                    "title": "- newAccelerationStructureWithSize:offset:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlheap",
                "title": "MTLHeap",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Heap",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/storagemode",
                    "title": "storageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/cpucachemode",
                    "title": "cpuCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/hazardtrackingmode",
                    "title": "hazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/resourceoptions",
                    "title": "resourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/size",
                    "title": "size",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/sparsepagesize",
                    "title": "sparsePageSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlheapdescriptor",
                "title": "MTLHeapDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Heap Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheaptype/automatic",
                    "title": "MTLHeapTypeAutomatic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlheaptype/placement",
                    "title": "MTLHeapTypePlacement",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlheaptype/sparse",
                    "title": "MTLHeapTypeSparse",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlheaptype",
                "title": "MTLHeapType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Size and Alignment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsizeandalign/size",
                    "title": "size",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsizeandalign/align",
                    "title": "align",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsizeandalign",
                "title": "MTLSizeAndAlign",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/memory-heaps",
            "title": "Memory Heaps",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "I/O Command Queues",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Input/Output Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/makecommandbuffer()",
                    "title": "- commandBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/makecommandbufferwithunretainedreferences()",
                    "title": "- commandBufferWithUnretainedReferences",
                    "type": "method"
                  },
                  {
                    "title": "Adding a Barrier to the Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/enqueuebarrier()",
                    "title": "- enqueueBarrier",
                    "type": "method"
                  },
                  {
                    "title": "Naming the Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtliocommandqueue",
                "title": "MTLIOCommandQueue",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Input/Output Command Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/priority",
                    "title": "priority",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/maxcommandsinflight",
                    "title": "maxCommandsInFlight",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/maxcommandbuffercount",
                    "title": "maxCommandBufferCount",
                    "type": "property"
                  },
                  {
                    "title": "Providing your own  a Scratch Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/scratchbufferallocator",
                    "title": "scratchBufferAllocator",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtliocommandqueuedescriptor",
                "title": "MTLIOCommandQueueDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "I/O Command Queue Priorities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliopriority/normal",
                    "title": "MTLIOPriorityNormal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliopriority/low",
                    "title": "MTLIOPriorityLow",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliopriority/high",
                    "title": "MTLIOPriorityHigh",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtliopriority",
                "title": "MTLIOPriority",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "I/O Command Queue Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuetype/concurrent",
                    "title": "MTLIOCommandQueueTypeConcurrent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuetype/serial",
                    "title": "MTLIOCommandQueueTypeSerial",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtliocommandqueuetype",
                "title": "MTLIOCommandQueueType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Providing Scratch Memory to a Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioscratchbufferallocator/makescratchbuffer(minimumsize:)",
                    "title": "- newScratchBufferWithMinimumSize:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlioscratchbufferallocator",
                "title": "MTLIOScratchBufferAllocator",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Wrapping a Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioscratchbuffer/buffer",
                    "title": "buffer",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlioscratchbuffer",
                "title": "MTLIOScratchBuffer",
                "type": "protocol"
              },
              {
                "title": "I/O Command Buffers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Loading Assets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/load(_:offset:size:sourcehandle:sourcehandleoffset:)",
                    "title": "- loadBuffer:offset:size:sourceHandle:sourceHandleOffset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/load(_:slice:level:size:sourcebytesperrow:sourcebytesperimage:destinationorigin:sourcehandle:sourcehandleoffset:)",
                    "title": "- loadTexture:slice:level:size:sourceBytesPerRow:sourceBytesPerImage:destinationOrigin:sourceHandle:sourceHandleOffset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/loadbytes(_:size:sourcehandle:sourcehandleoffset:)",
                    "title": "- loadBytes:size:sourceHandle:sourceHandleOffset:",
                    "type": "method"
                  },
                  {
                    "title": "Adding a Barrier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/addbarrier()",
                    "title": "- addBarrier",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/signalevent(_:value:)",
                    "title": "- signalEvent:value:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/waitforevent(_:value:)",
                    "title": "- waitForEvent:value:",
                    "type": "method"
                  },
                  {
                    "title": "Adding Final Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/copystatus(buffer:offset:)",
                    "title": "- copyStatusToBuffer:offset:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/addcompletedhandler(_:)",
                    "title": "- addCompletedHandler:",
                    "type": "method"
                  },
                  {
                    "title": "Submitting a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/commit()",
                    "title": "- commit",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/enqueue()",
                    "title": "- enqueue",
                    "type": "method"
                  },
                  {
                    "title": "Canceling a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/trycancel()",
                    "title": "- tryCancel",
                    "type": "method"
                  },
                  {
                    "title": "Waiting for a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/waituntilcompleted()",
                    "title": "- waitUntilCompleted",
                    "type": "method"
                  },
                  {
                    "title": "Checking the State of a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/status",
                    "title": "status",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/error",
                    "title": "error",
                    "type": "property"
                  },
                  {
                    "title": "Debugging a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/pushdebuggroup(_:)",
                    "title": "- pushDebugGroup:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/popdebuggroup()",
                    "title": "- popDebugGroup",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtliocommandbuffer",
                "title": "MTLIOCommandBuffer",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Naming a File Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliofilehandle/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtliofilehandle",
                "title": "MTLIOFileHandle",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtliocommandbufferhandler",
                "title": "MTLIOCommandBufferHandler",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "I/O Command Queue States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/pending",
                    "title": "MTLIOStatusPending",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/complete",
                    "title": "MTLIOStatusComplete",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/cancelled",
                    "title": "MTLIOStatusCancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/error",
                    "title": "MTLIOStatusError",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtliostatus",
                "title": "MTLIOStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/urlinvalid",
                    "title": "MTLIOErrorURLInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/internal",
                    "title": "MTLIOErrorInternal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/urlinvalid",
                    "title": "MTLIOErrorURLInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/internal",
                    "title": "MTLIOErrorInternal",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlioerror-swift.struct/code",
                "title": "MTLIOError",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtlioerrordomain",
                "title": "MTLIOErrorDomain",
                "type": "var"
              },
              {
                "title": "Asset Compression",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Compression Codecs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/zlib",
                    "title": "MTLIOCompressionMethodZlib",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lzfse",
                    "title": "MTLIOCompressionMethodLZFSE",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lz4",
                    "title": "MTLIOCompressionMethodLZ4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lzma",
                    "title": "MTLIOCompressionMethodLZMA",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lzbitmap",
                    "title": "MTLIOCompressionMethodLZBitmap",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtliocompressionmethod",
                "title": "MTLIOCompressionMethod",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtliocompressioncontextdefaultchunksize()",
                "title": "MTLIOCompressionContextDefaultChunkSize",
                "type": "func"
              },
              {
                "path": "/documentation/metal/mtliocompressioncontext",
                "title": "MTLIOCompressionContext",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtliocompressioncontextappenddata(_:_:_:)",
                "title": "MTLIOCompressionContextAppendData",
                "type": "func"
              },
              {
                "path": "/documentation/metal/mtlioflushanddestroycompressioncontext(_:)",
                "title": "MTLIOFlushAndDestroyCompressionContext",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Compression Result States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionstatus/complete",
                    "title": "MTLIOCompressionStatusComplete",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionstatus/error",
                    "title": "MTLIOCompressionStatusError",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtliocompressionstatus",
                "title": "MTLIOCompressionStatus",
                "type": "enum"
              }
            ],
            "path": "/documentation/metal/resource-loading",
            "title": "Resource Loading",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Synchronization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/synchronizing-cpu-and-gpu-work",
                "title": "Synchronizing CPU and GPU Work",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Render Pass Stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/object",
                    "title": "MTLRenderStageObject",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/mesh",
                    "title": "MTLRenderStageMesh",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/vertex",
                    "title": "MTLRenderStageVertex",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/fragment",
                    "title": "MTLRenderStageFragment",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/tile",
                    "title": "MTLRenderStageTile",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlrenderstages",
                "title": "MTLRenderStages",
                "type": "enum"
              },
              {
                "title": "Memory Barriers and Fences",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbarrierscope/buffers",
                    "title": "MTLBarrierScopeBuffers",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbarrierscope/rendertargets",
                    "title": "MTLBarrierScopeRenderTargets",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbarrierscope/textures",
                    "title": "MTLBarrierScopeTextures",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlbarrierscope",
                "title": "MTLBarrierScope",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Fence",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfence/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfence/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Render Stages",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Render Pass Stages",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/object",
                        "title": "MTLRenderStageObject",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/mesh",
                        "title": "MTLRenderStageMesh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/vertex",
                        "title": "MTLRenderStageVertex",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/fragment",
                        "title": "MTLRenderStageFragment",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/tile",
                        "title": "MTLRenderStageTile",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlrenderstages",
                    "title": "MTLRenderStages",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlfence",
                "title": "MTLFence",
                "type": "protocol"
              },
              {
                "title": "Signal Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/about-synchronization-events",
                "title": "About Synchronization Events",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-within-a-single-device",
                "title": "Synchronizing Events Within a Single Device",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-across-multiple-devices-or-processes",
                "title": "Synchronizing Events Across Multiple Devices or Processes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-between-a-gpu-and-the-cpu",
                "title": "Synchronizing Events Between a GPU and the CPU",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Event",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlevent/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlevent/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlevent",
                "title": "MTLEvent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Synchronizing a Shareable Event",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/signaledvalue",
                    "title": "signaledValue",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/notify(_:atvalue:block:)",
                    "title": "- notifyListener:atValue:block:",
                    "type": "method"
                  },
                  {
                    "title": "Creating a Shared Event Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/makesharedeventhandle()",
                    "title": "- newSharedEventHandle",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/wait(untilsignaledvalue:timeoutms:)",
                    "title": "- waitUntilSignaledValue:timeoutMS:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlsharedevent",
                "title": "MTLSharedEvent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Shareable Event Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventhandle/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsharedeventhandle",
                "title": "MTLSharedEventHandle",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Shareable Event Listener",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventlistener/init()",
                    "title": "- init",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventlistener/init(dispatchqueue:)",
                    "title": "- initWithDispatchQueue:",
                    "type": "method"
                  },
                  {
                    "title": "Getting the Dispatch Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventlistener/dispatchqueue",
                    "title": "dispatchQueue",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsharedeventlistener",
                "title": "MTLSharedEventListener",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlsharedeventnotificationblock",
                "title": "MTLSharedEventNotificationBlock",
                "type": "typealias"
              }
            ],
            "path": "/documentation/metal/resource-synchronization",
            "title": "Resource Synchronization",
            "type": "collection"
          },
          {
            "title": "Shaders",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/stepping-through-code-and-inspecting-variables-to-isolate-bugs",
            "title": "Stepping through code and inspecting variables to isolate bugs",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/optimizing-gpu-performance",
            "title": "Optimizing GPU performance",
            "type": "article"
          },
          {
            "path": "/documentation/metal/logging-shader-debug-messages",
            "title": "Logging shader debug messages",
            "type": "article"
          },
          {
            "path": "/documentation/metal/using-function-specialization-to-build-pipeline-variants",
            "title": "Using Function Specialization to Build Pipeline Variants",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Shader Compilation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Intermediate Representation Libraries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/building-a-shader-library-by-precompiling-source-files",
                    "title": "Building a Shader Library by Precompiling Source Files",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/minimizing-the-binary-size-of-a-shader-library",
                    "title": "Minimizing the Binary Size of a Shader Library",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/generating-and-loading-a-metal-library-symbol-file",
                    "title": "Generating and Loading a Metal Library Symbol File",
                    "type": "article"
                  }
                ],
                "path": "/documentation/metal/metal-libraries",
                "title": "Metal Libraries",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Dynamic Libraries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/compiling-and-linking-metal-dynamic-libraries",
                    "title": "Compiling and Linking Metal Dynamic Libraries",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/creating-a-metal-dynamic-library",
                    "title": "Creating a Metal Dynamic Library",
                    "type": "sampleCode"
                  }
                ],
                "path": "/documentation/metal/metal-dynamic-libraries",
                "title": "Metal Dynamic Libraries",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Binary Archives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/creating-binary-archives-from-device-built-pipeline-state-objects",
                    "title": "Creating Binary Archives from Device-Built Pipeline State Objects",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/manipulating-metal-binary-archives",
                    "title": "Manipulating Metal Binary Archives",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/compiling-binary-archives-from-a-custom-configuration-script",
                    "title": "Compiling Binary Archives from a Custom Configuration Script",
                    "type": "article"
                  }
                ],
                "path": "/documentation/metal/metal-binary-archives",
                "title": "Metal Binary Archives",
                "type": "collection"
              },
              {
                "title": "Shader Library Management",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Querying Basic Library Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/installname",
                    "title": "installName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "title": "Querying Library Contents",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/functionnames",
                    "title": "functionNames",
                    "type": "property"
                  },
                  {
                    "title": "Creating Shader Function Objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(name:)",
                    "title": "- newFunctionWithName:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(name:constantvalues:completionhandler:)",
                    "title": "- newFunctionWithName:constantValues:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(name:constantvalues:)",
                    "title": "- newFunctionWithName:constantValues:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(descriptor:completionhandler:)",
                    "title": "- newFunctionWithDescriptor:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(descriptor:)",
                    "title": "- newFunctionWithDescriptor:error:",
                    "type": "method"
                  },
                  {
                    "title": "Creating Intersection Function Objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makeintersectionfunction(descriptor:completionhandler:)",
                    "title": "- newIntersectionFunctionWithDescriptor:completionHandler:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makeintersectionfunction(descriptor:)",
                    "title": "- newIntersectionFunctionWithDescriptor:error:",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Library",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/label",
                    "title": "label",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtllibrary",
                "title": "MTLLibrary",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Library",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/installname",
                    "title": "installName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Saving a Dynamic Library to a File",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/serialize(to:)",
                    "title": "- serializeToURL:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtldynamiclibrary",
                "title": "MTLDynamicLibrary",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Archive",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "title": "Adding Pipeline Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addcomputepipelinefunctions(descriptor:)",
                    "title": "- addComputePipelineFunctionsWithDescriptor:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addrenderpipelinefunctions(descriptor:)",
                    "title": "- addRenderPipelineFunctionsWithDescriptor:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addtilerenderpipelinefunctions(descriptor:)",
                    "title": "- addTileRenderPipelineFunctionsWithDescriptor:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addfunction(descriptor:library:)",
                    "title": "- addFunctionWithDescriptor:library:error:",
                    "type": "method"
                  },
                  {
                    "title": "Serializing Archives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/serialize(to:)",
                    "title": "- serializeToURL:error:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addlibrary(descriptor:)",
                    "title": "- addLibraryWithDescriptor:error:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addmeshrenderpipelinefunctions(descriptor:)",
                    "title": "- addMeshRenderPipelineFunctionsWithDescriptor:error:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlbinaryarchive",
                "title": "MTLBinaryArchive",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Compiler Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/enablelogging",
                    "title": "enableLogging",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Supporting Types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Modes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlmathmode/fast",
                            "title": "MTLMathModeFast",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlmathmode/relaxed",
                            "title": "MTLMathModeRelaxed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlmathmode/safe",
                            "title": "MTLMathModeSafe",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlmathmode",
                        "title": "MTLMathMode",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlcompileoptions/mathmode",
                    "title": "mathMode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Supporting Types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Function Sets",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlmathfloatingpointfunctions/fast",
                            "title": "MTLMathFloatingPointFunctionsFast",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlmathfloatingpointfunctions/precise",
                            "title": "MTLMathFloatingPointFunctionsPrecise",
                            "type": "case"
                          }
                        ],
                        "path": "/documentation/metal/mtlmathfloatingpointfunctions",
                        "title": "MTLMathFloatingPointFunctions",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlcompileoptions/mathfloatingpointfunctions",
                    "title": "mathFloatingPointFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/preserveinvariance",
                    "title": "preserveInvariance",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/languageversion",
                    "title": "languageVersion",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/preprocessormacros",
                    "title": "preprocessorMacros",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/optimizationlevel",
                    "title": "optimizationLevel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/libraries",
                    "title": "libraries",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcompileoptions/fastmathenabled",
                    "title": "fastMathEnabled",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Library Output Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/librarytype",
                    "title": "libraryType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/installname",
                    "title": "installName",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/allowreferencingundefinedsymbols",
                    "title": "allowReferencingUndefinedSymbols",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/compilesymbolvisibility",
                    "title": "compileSymbolVisibility",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/maxtotalthreadsperthreadgroup",
                    "title": "maxTotalThreadsPerThreadgroup",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcompileoptions",
                "title": "MTLCompileOptions",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Library Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrarytype/executable",
                    "title": "MTLLibraryTypeExecutable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibrarytype/dynamic",
                    "title": "MTLLibraryTypeDynamic",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtllibrarytype",
                "title": "MTLLibraryType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Version Numbers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version1_1",
                    "title": "MTLLanguageVersion1_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version1_2",
                    "title": "MTLLanguageVersion1_2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_0",
                    "title": "MTLLanguageVersion2_0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_1",
                    "title": "MTLLanguageVersion2_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_2",
                    "title": "MTLLanguageVersion2_2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_3",
                    "title": "MTLLanguageVersion2_3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_4",
                    "title": "MTLLanguageVersion2_4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version3_0",
                    "title": "MTLLanguageVersion3_0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version3_1",
                    "title": "MTLLanguageVersion3_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version3_2",
                    "title": "MTLLanguageVersion3_2",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtllanguageversion/version1_0",
                    "title": "MTLLanguageVersion1_0",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtllanguageversion",
                "title": "MTLLanguageVersion",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompilesymbolvisibility/default",
                    "title": "MTLCompileSymbolVisibilityDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcompilesymbolvisibility/hidden",
                    "title": "MTLCompileSymbolVisibilityHidden",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlcompilesymbolvisibility",
                "title": "MTLCompileSymbolVisibility",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Optimization Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryoptimizationlevel/default",
                    "title": "MTLLibraryOptimizationLevelDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryoptimizationlevel/size",
                    "title": "MTLLibraryOptimizationLevelSize",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtllibraryoptimizationlevel",
                "title": "MTLLibraryOptimizationLevel",
                "type": "enum"
              },
              {
                "title": "Shader Functions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Function Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/functiondescriptor",
                    "title": "+ functionDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying the Function Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/specializedname",
                    "title": "specializedName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/constantvalues",
                    "title": "constantValues",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/options",
                    "title": "options",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/binaryarchives",
                    "title": "binaryArchives",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Function Option Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/mtlfunctionoptionnone",
                        "title": "MTLFunctionOptionNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/compiletobinary",
                        "title": "MTLFunctionOptionCompileToBinary",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/failonbinaryarchivemiss",
                        "title": "MTLFunctionOptionFailOnBinaryArchiveMiss",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalpipelinesscript",
                        "title": "MTLFunctionOptionStoreFunctionInMetalPipelinesScript",
                        "type": "case"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalscript",
                        "title": "MTLFunctionOptionStoreFunctionInMetalScript",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionoptions",
                    "title": "MTLFunctionOptions",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a Linked Functions Object",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/linkedfunctions",
                        "title": "+ linkedFunctions",
                        "type": "method"
                      },
                      {
                        "title": "Specifying Related Functions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/functions",
                        "title": "functions",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/binaryfunctions",
                        "title": "binaryFunctions",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/groups",
                        "title": "groups",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/privatefunctions",
                        "title": "privateFunctions",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtllinkedfunctions",
                    "title": "MTLLinkedFunctions",
                    "type": "class"
                  }
                ],
                "path": "/documentation/metal/mtlfunctiondescriptor",
                "title": "MTLFunctionDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying Shader Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/functiontype",
                    "title": "functionType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Function Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/vertex",
                        "title": "MTLFunctionTypeVertex",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/fragment",
                        "title": "MTLFunctionTypeFragment",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/kernel",
                        "title": "MTLFunctionTypeKernel",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/intersection",
                        "title": "MTLFunctionTypeIntersection",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/visible",
                        "title": "MTLFunctionTypeVisible",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/mesh",
                        "title": "MTLFunctionTypeMesh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/object",
                        "title": "MTLFunctionTypeObject",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctiontype",
                    "title": "MTLFunctionType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/options",
                    "title": "options",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Function Option Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/mtlfunctionoptionnone",
                        "title": "MTLFunctionOptionNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/compiletobinary",
                        "title": "MTLFunctionOptionCompileToBinary",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/failonbinaryarchivemiss",
                        "title": "MTLFunctionOptionFailOnBinaryArchiveMiss",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalpipelinesscript",
                        "title": "MTLFunctionOptionStoreFunctionInMetalPipelinesScript",
                        "type": "case"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalscript",
                        "title": "MTLFunctionOptionStoreFunctionInMetalScript",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionoptions",
                    "title": "MTLFunctionOptions",
                    "type": "enum"
                  },
                  {
                    "title": "Identifying the Tessellation Patch",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/patchtype",
                    "title": "patchType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/patchcontrolpointcount",
                    "title": "patchControlPointCount",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Patch types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlpatchtype/none",
                        "title": "MTLPatchTypeNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpatchtype/triangle",
                        "title": "MTLPatchTypeTriangle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpatchtype/quad",
                        "title": "MTLPatchTypeQuad",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlpatchtype",
                    "title": "MTLPatchType",
                    "type": "enum"
                  },
                  {
                    "title": "Retrieving Function Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/vertexattributes",
                    "title": "vertexAttributes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/stageinputattributes",
                    "title": "stageInputAttributes",
                    "type": "property"
                  },
                  {
                    "title": "Retrieving Function Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/functionconstantsdictionary",
                    "title": "functionConstantsDictionary",
                    "type": "property"
                  },
                  {
                    "title": "Creating Argument Encoders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/makeargumentencoder(bufferindex:)",
                    "title": "- newArgumentEncoderWithBufferIndex:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlfunction/makeargumentencoder(bufferindex:reflection:)",
                    "title": "- newArgumentEncoderWithBufferIndex:reflection:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlfunction",
                "title": "MTLFunction",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Querying Handle Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionhandle/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionhandle/functiontype",
                    "title": "functionType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionhandle/name",
                    "title": "name",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionhandle",
                "title": "MTLFunctionHandle",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating a Visible Function Table Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontabledescriptor/visiblefunctiontabledescriptor",
                    "title": "+ visibleFunctionTableDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Function Table",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontabledescriptor/functioncount",
                    "title": "functionCount",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvisiblefunctiontabledescriptor",
                "title": "MTLVisibleFunctionTableDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting a Table Entry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontable/setfunction(_:index:)",
                    "title": "- setFunction:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontable/setfunctions:withrange:",
                    "title": "- setFunctions:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontable/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvisiblefunctiontable",
                "title": "MTLVisibleFunctionTable",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlintersectionfunctiondescriptor",
                "title": "MTLIntersectionFunctionDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Intersection Function Table Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor/intersectionfunctiontabledescriptor",
                    "title": "+ intersectionFunctionTableDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Configuring the Table’s Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor/functioncount",
                    "title": "functionCount",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor",
                "title": "MTLIntersectionFunctionTableDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting a Table Entry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunction(_:index:)",
                    "title": "- setFunction:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunctions:withrange:",
                    "title": "- setFunctions:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Arguments for Intersection Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffer(_:offset:index:)",
                    "title": "- setBuffer:offset:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffers:offsets:withrange:",
                    "title": "- setBuffers:offsets:withRange:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontable(_:bufferindex:)",
                    "title": "- setVisibleFunctionTable:atBufferIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontables:withbufferrange:",
                    "title": "- setVisibleFunctionTables:withBufferRange:",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Opaque Triangle Intersection Testing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:index:)",
                    "title": "- setOpaqueTriangleIntersectionFunctionWithSignature:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:range:)",
                    "title": "- setOpaqueTriangleIntersectionFunctionWithSignature:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/gpuresourceid",
                    "title": "gpuResourceID",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:index:)",
                    "title": "- setOpaqueCurveIntersectionFunctionWithSignature:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:range:)",
                    "title": "- setOpaqueCurveIntersectionFunctionWithSignature:withRange:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontable",
                "title": "MTLIntersectionFunctionTable",
                "type": "protocol"
              },
              {
                "title": "Stitched Function Libraries",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/customizing-shaders-using-function-pointers-and-stitching",
                "title": "Customizing shaders using function pointers and stitching",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Stitched Library",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/functions",
                    "title": "functions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/functiongraphs",
                    "title": "functionGraphs",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/binaryarchives",
                    "title": "binaryArchives",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/options",
                    "title": "options",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlstitchedlibrarydescriptor",
                "title": "MTLStitchedLibraryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Function Graph",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/init(functionname:nodes:outputnode:attributes:)",
                    "title": "- initWithFunctionName:nodes:outputNode:attributes:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring a Function Graph",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/functionname",
                    "title": "functionName",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/nodes",
                    "title": "nodes",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/outputnode",
                    "title": "outputNode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/attributes",
                    "title": "attributes",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionstitchinggraph",
                "title": "MTLFunctionStitchingGraph",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an Input Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinginputnode/init(argumentindex:)",
                    "title": "- initWithArgumentIndex:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring an Input Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinginputnode/argumentindex",
                    "title": "argumentIndex",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionstitchinginputnode",
                "title": "MTLFunctionStitchingInputNode",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Function Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/init(name:arguments:controldependencies:)",
                    "title": "- initWithName:arguments:controlDependencies:",
                    "type": "method"
                  },
                  {
                    "title": "Configuring a Function Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/arguments",
                    "title": "arguments",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/controldependencies",
                    "title": "controlDependencies",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionstitchingfunctionnode",
                "title": "MTLFunctionStitchingFunctionNode",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlfunctionstitchingnode",
                "title": "MTLFunctionStitchingNode",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlfunctionstitchingattributealwaysinline",
                "title": "MTLFunctionStitchingAttributeAlwaysInline",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlfunctionstitchingattribute",
                "title": "MTLFunctionStitchingAttribute",
                "type": "protocol"
              },
              {
                "title": "Compile-Time Variant Functions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Reading the Function Constant’s Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/index",
                    "title": "index",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/required",
                    "title": "required",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionconstant",
                "title": "MTLFunctionConstant",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting Constant Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/setconstantvalue(_:type:index:)",
                    "title": "- setConstantValue:type:atIndex:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/setconstantvalue(_:type:withname:)",
                    "title": "- setConstantValue:type:withName:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/setconstantvalues:type:withrange:",
                    "title": "- setConstantValues:type:withRange:",
                    "type": "method"
                  },
                  {
                    "title": "Resetting Constant Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/reset()",
                    "title": "- reset",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionconstantvalues",
                "title": "MTLFunctionConstantValues",
                "type": "class"
              },
              {
                "title": "Introspection Data",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Obtaining the Arguments of the Compute Function",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcomputepipelinereflection/arguments",
                    "title": "arguments",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinereflection/bindings",
                    "title": "bindings",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepipelinereflection",
                "title": "MTLComputePipelineReflection",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlautoreleasedcomputepipelinereflection",
                "title": "MTLAutoreleasedComputePipelineReflection",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting a Shader’s Parameter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/fragmentbindings",
                    "title": "fragmentBindings",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/meshbindings",
                    "title": "meshBindings",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/objectbindings",
                    "title": "objectBindings",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/tilebindings",
                    "title": "tileBindings",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/vertexbindings",
                    "title": "vertexBindings",
                    "type": "property"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinereflection/vertexarguments",
                    "title": "vertexArguments",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinereflection/fragmentarguments",
                    "title": "fragmentArguments",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinereflection/tilearguments",
                    "title": "tileArguments",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinereflection",
                "title": "MTLRenderPipelineReflection",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlautoreleasedrenderpipelinereflection",
                "title": "MTLAutoreleasedRenderPipelineReflection",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/buffer",
                    "title": "MTLBindingTypeBuffer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/imageblock",
                    "title": "MTLBindingTypeImageblock",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/imageblockdata",
                    "title": "MTLBindingTypeImageblockData",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/instanceaccelerationstructure",
                    "title": "MTLBindingTypeInstanceAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/intersectionfunctiontable",
                    "title": "MTLBindingTypeIntersectionFunctionTable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/objectpayload",
                    "title": "MTLBindingTypeObjectPayload",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/primitiveaccelerationstructure",
                    "title": "MTLBindingTypePrimitiveAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/sampler",
                    "title": "MTLBindingTypeSampler",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/texture",
                    "title": "MTLBindingTypeTexture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/threadgroupmemory",
                    "title": "MTLBindingTypeThreadgroupMemory",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/visiblefunctiontable",
                    "title": "MTLBindingTypeVisibleFunctionTable",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlbindingtype",
                "title": "MTLBindingType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/access",
                    "title": "access",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/index",
                    "title": "index",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/isargument",
                    "title": "argument",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/isused",
                    "title": "used",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/type",
                    "title": "type",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlbinding",
                "title": "MTLBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlbindingaccess/mtlargumentaccessreadonly",
                    "title": "MTLArgumentAccessReadOnly",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlbindingaccess/mtlargumentaccessreadwrite",
                    "title": "MTLArgumentAccessReadWrite",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlbindingaccess/mtlargumentaccesswriteonly",
                    "title": "MTLArgumentAccessWriteOnly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingaccess/readonly",
                    "title": "MTLBindingAccessReadOnly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingaccess/readwrite",
                    "title": "MTLBindingAccessReadWrite",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingaccess/writeonly",
                    "title": "MTLBindingAccessWriteOnly",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlbindingaccess",
                "title": "MTLBindingAccess",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferalignment",
                    "title": "bufferAlignment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferdatasize",
                    "title": "bufferDataSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferdatatype",
                    "title": "bufferDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferpointertype",
                    "title": "bufferPointerType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferstructtype",
                    "title": "bufferStructType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlbufferbinding",
                "title": "MTLBufferBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/arraylength",
                    "title": "arrayLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/isdepthtexture",
                    "title": "depthTexture",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/texturedatatype",
                    "title": "textureDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/texturetype",
                    "title": "textureType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexturebinding",
                "title": "MTLTextureBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlthreadgroupbinding/threadgroupmemoryalignment",
                    "title": "threadgroupMemoryAlignment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlthreadgroupbinding/threadgroupmemorydatasize",
                    "title": "threadgroupMemoryDataSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlthreadgroupbinding",
                "title": "MTLThreadgroupBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlobjectpayloadbinding/objectpayloadalignment",
                    "title": "objectPayloadAlignment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlobjectpayloadbinding/objectpayloaddatasize",
                    "title": "objectPayloadDataSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlobjectpayloadbinding",
                "title": "MTLObjectPayloadBinding",
                "type": "protocol"
              },
              {
                "title": "Function Arguments",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Reading an Attribute’s Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/attributeindex",
                    "title": "attributeIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/attributetype",
                    "title": "attributeType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/isactive",
                    "title": "active",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/ispatchcontrolpointdata",
                    "title": "patchControlPointData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/ispatchdata",
                    "title": "patchData",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlattribute",
                "title": "MTLAttribute",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Attribute",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/attributeindex",
                    "title": "attributeIndex",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/attributetype",
                    "title": "attributeType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/isactive",
                    "title": "active",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/ispatchcontrolpointdata",
                    "title": "patchControlPointData",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/ispatchdata",
                    "title": "patchData",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvertexattribute",
                "title": "MTLVertexAttribute",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/isactive",
                    "title": "active",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/index",
                    "title": "index",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/access",
                    "title": "access",
                    "type": "property"
                  },
                  {
                    "title": "Describing a Buffer Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferalignment",
                    "title": "bufferAlignment",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferdatasize",
                    "title": "bufferDataSize",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferdatatype",
                    "title": "bufferDataType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferstructtype",
                    "title": "bufferStructType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferpointertype",
                    "title": "bufferPointerType",
                    "type": "property"
                  },
                  {
                    "title": "Describing a Texture Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/texturedatatype",
                    "title": "textureDataType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/texturetype",
                    "title": "textureType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/isdepthtexture",
                    "title": "isDepthTexture",
                    "type": "property"
                  },
                  {
                    "title": "Describing an Array Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/arraylength",
                    "title": "arrayLength",
                    "type": "property"
                  },
                  {
                    "title": "Describing a Threadgroup Memory Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/threadgroupmemoryalignment",
                    "title": "threadgroupMemoryAlignment",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/threadgroupmemorydatasize",
                    "title": "threadgroupMemoryDataSize",
                    "type": "property"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/metal/mtlargument",
                "title": "MTLArgument",
                "type": "class"
              },
              {
                "deprecated": true,
                "path": "/documentation/metal/mtlautoreleasedargument",
                "title": "MTLAutoreleasedArgument",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Argument Types",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/buffer",
                    "title": "MTLArgumentTypeBuffer",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/threadgroupmemory",
                    "title": "MTLArgumentTypeThreadgroupMemory",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/texture",
                    "title": "MTLArgumentTypeTexture",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/sampler",
                    "title": "MTLArgumentTypeSampler",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/imageblock",
                    "title": "MTLArgumentTypeImageblock",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/imageblockdata",
                    "title": "MTLArgumentTypeImageblockData",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/visiblefunctiontable",
                    "title": "MTLArgumentTypeVisibleFunctionTable",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/intersectionfunctiontable",
                    "title": "MTLArgumentTypeIntersectionFunctionTable",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/primitiveaccelerationstructure",
                    "title": "MTLArgumentTypePrimitiveAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/instanceaccelerationstructure",
                    "title": "MTLArgumentTypeInstanceAccelerationStructure",
                    "type": "case"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/metal/mtlargumenttype",
                "title": "MTLArgumentType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Specifying Access Options",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlbindingaccess/mtlargumentaccessreadonly",
                    "title": "MTLArgumentAccessReadOnly",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlbindingaccess/mtlargumentaccesswriteonly",
                    "title": "MTLArgumentAccessWriteOnly",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlbindingaccess/mtlargumentaccessreadwrite",
                    "title": "MTLArgumentAccessReadWrite",
                    "type": "case"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/metal/mtlargumentaccess",
                "title": "MTLArgumentAccess",
                "type": "typealias"
              },
              {
                "title": "Shader Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Data Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltype/datatype",
                    "title": "dataType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltype",
                "title": "MTLType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Boolean Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool",
                    "title": "MTLDataTypeBool",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool2",
                    "title": "MTLDataTypeBool2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool3",
                    "title": "MTLDataTypeBool3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool4",
                    "title": "MTLDataTypeBool4",
                    "type": "case"
                  },
                  {
                    "title": "8-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char",
                    "title": "MTLDataTypeChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char2",
                    "title": "MTLDataTypeChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char3",
                    "title": "MTLDataTypeChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char4",
                    "title": "MTLDataTypeChar4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar",
                    "title": "MTLDataTypeUChar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar2",
                    "title": "MTLDataTypeUChar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar3",
                    "title": "MTLDataTypeUChar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar4",
                    "title": "MTLDataTypeUChar4",
                    "type": "case"
                  },
                  {
                    "title": "16-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short",
                    "title": "MTLDataTypeShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short2",
                    "title": "MTLDataTypeShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short3",
                    "title": "MTLDataTypeShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short4",
                    "title": "MTLDataTypeShort4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort",
                    "title": "MTLDataTypeUShort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort2",
                    "title": "MTLDataTypeUShort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort3",
                    "title": "MTLDataTypeUShort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort4",
                    "title": "MTLDataTypeUShort4",
                    "type": "case"
                  },
                  {
                    "title": "16-bit Floating-Point Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half",
                    "title": "MTLDataTypeHalf",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2",
                    "title": "MTLDataTypeHalf2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3",
                    "title": "MTLDataTypeHalf3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4",
                    "title": "MTLDataTypeHalf4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2x2",
                    "title": "MTLDataTypeHalf2x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2x3",
                    "title": "MTLDataTypeHalf2x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2x4",
                    "title": "MTLDataTypeHalf2x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3x2",
                    "title": "MTLDataTypeHalf3x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3x3",
                    "title": "MTLDataTypeHalf3x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3x4",
                    "title": "MTLDataTypeHalf3x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4x2",
                    "title": "MTLDataTypeHalf4x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4x3",
                    "title": "MTLDataTypeHalf4x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4x4",
                    "title": "MTLDataTypeHalf4x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat",
                    "title": "MTLDataTypeBFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat2",
                    "title": "MTLDataTypeBFloat2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat3",
                    "title": "MTLDataTypeBFloat3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat4",
                    "title": "MTLDataTypeBFloat4",
                    "type": "case"
                  },
                  {
                    "title": "32-bit Floating-Point Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float",
                    "title": "MTLDataTypeFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2",
                    "title": "MTLDataTypeFloat2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3",
                    "title": "MTLDataTypeFloat3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4",
                    "title": "MTLDataTypeFloat4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2x2",
                    "title": "MTLDataTypeFloat2x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2x3",
                    "title": "MTLDataTypeFloat2x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2x4",
                    "title": "MTLDataTypeFloat2x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3x2",
                    "title": "MTLDataTypeFloat3x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3x3",
                    "title": "MTLDataTypeFloat3x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3x4",
                    "title": "MTLDataTypeFloat3x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4x2",
                    "title": "MTLDataTypeFloat4x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4x3",
                    "title": "MTLDataTypeFloat4x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4x4",
                    "title": "MTLDataTypeFloat4x4",
                    "type": "case"
                  },
                  {
                    "title": "32-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int",
                    "title": "MTLDataTypeInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int2",
                    "title": "MTLDataTypeInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int3",
                    "title": "MTLDataTypeInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int4",
                    "title": "MTLDataTypeInt4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint",
                    "title": "MTLDataTypeUInt",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint2",
                    "title": "MTLDataTypeUInt2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint3",
                    "title": "MTLDataTypeUInt3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint4",
                    "title": "MTLDataTypeUInt4",
                    "type": "case"
                  },
                  {
                    "title": "64-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long",
                    "title": "MTLDataTypeLong",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long2",
                    "title": "MTLDataTypeLong2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long3",
                    "title": "MTLDataTypeLong3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long4",
                    "title": "MTLDataTypeLong4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong",
                    "title": "MTLDataTypeULong",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong2",
                    "title": "MTLDataTypeULong2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong3",
                    "title": "MTLDataTypeULong3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong4",
                    "title": "MTLDataTypeULong4",
                    "type": "case"
                  },
                  {
                    "title": "8-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r8snorm",
                    "title": "MTLDataTypeR8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r8unorm",
                    "title": "MTLDataTypeR8Unorm",
                    "type": "case"
                  },
                  {
                    "title": "16-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg8snorm",
                    "title": "MTLDataTypeRG8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg8unorm",
                    "title": "MTLDataTypeRG8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r16snorm",
                    "title": "MTLDataTypeR16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r16unorm",
                    "title": "MTLDataTypeR16Unorm",
                    "type": "case"
                  },
                  {
                    "title": "32-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba8snorm",
                    "title": "MTLDataTypeRGBA8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba8unorm",
                    "title": "MTLDataTypeRGBA8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba8unorm_srgb",
                    "title": "MTLDataTypeRGBA8Unorm_sRGB",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg16snorm",
                    "title": "MTLDataTypeRG16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg16unorm",
                    "title": "MTLDataTypeRG16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgb10a2unorm",
                    "title": "MTLDataTypeRGB10A2Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgb9e5float",
                    "title": "MTLDataTypeRGB9E5Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg11b10float",
                    "title": "MTLDataTypeRG11B10Float",
                    "type": "case"
                  },
                  {
                    "title": "64-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba16snorm",
                    "title": "MTLDataTypeRGBA16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba16unorm",
                    "title": "MTLDataTypeRGBA16Unorm",
                    "type": "case"
                  },
                  {
                    "title": "Metal Resource Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/texture",
                    "title": "MTLDataTypeTexture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/indirectcommandbuffer",
                    "title": "MTLDataTypeIndirectCommandBuffer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/visiblefunctiontable",
                    "title": "MTLDataTypeVisibleFunctionTable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/intersectionfunctiontable",
                    "title": "MTLDataTypeIntersectionFunctionTable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/primitiveaccelerationstructure",
                    "title": "MTLDataTypePrimitiveAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/instanceaccelerationstructure",
                    "title": "MTLDataTypeInstanceAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "title": "Metal State Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/sampler",
                    "title": "MTLDataTypeSampler",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/renderpipeline",
                    "title": "MTLDataTypeRenderPipeline",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/computepipeline",
                    "title": "MTLDataTypeComputePipeline",
                    "type": "case"
                  },
                  {
                    "title": "Collection Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/struct",
                    "title": "MTLDataTypeStruct",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/array",
                    "title": "MTLDataTypeArray",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/pointer",
                    "title": "MTLDataTypePointer",
                    "type": "case"
                  },
                  {
                    "title": "Invalid Data Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/none",
                    "title": "MTLDataTypeNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtldatatype",
                "title": "MTLDataType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Describing the Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/arraylength",
                    "title": "arrayLength",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementtype",
                    "title": "elementType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/stride",
                    "title": "stride",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/argumentindexstride",
                    "title": "argumentIndexStride",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining Details for Complex Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/element()",
                    "title": "- elementArrayType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementstructtype()",
                    "title": "- elementStructType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementpointertype()",
                    "title": "- elementPointerType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementtexturereferencetype()",
                    "title": "- elementTextureReferenceType",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlarraytype",
                "title": "MTLArrayType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining Information about Struct Members",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstructtype/members",
                    "title": "members",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructtype/memberbyname(_:)",
                    "title": "- memberByName:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlstructtype",
                "title": "MTLStructType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Struct Member",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/datatype",
                    "title": "dataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/offset",
                    "title": "offset",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/argumentindex",
                    "title": "argumentIndex",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining Struct Member Details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/arraytype()",
                    "title": "- arrayType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/structtype()",
                    "title": "- structType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/pointertype()",
                    "title": "- pointerType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/texturereferencetype()",
                    "title": "- textureReferenceType",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlstructmember",
                "title": "MTLStructMember",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Pointer Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/alignment",
                    "title": "alignment",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/datasize",
                    "title": "dataSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementtype",
                    "title": "elementType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/access",
                    "title": "access",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementisargumentbuffer",
                    "title": "elementIsArgumentBuffer",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining Details for Complex Pointer Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementarraytype()",
                    "title": "- elementArrayType",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementstructtype()",
                    "title": "- elementStructType",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlpointertype",
                "title": "MTLPointerType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Texture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/texturetype",
                    "title": "textureType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/texturedatatype",
                    "title": "textureDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/access",
                    "title": "access",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/isdepthtexture",
                    "title": "isDepthTexture",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexturereferencetype",
                "title": "MTLTextureReferenceType",
                "type": "class"
              },
              {
                "title": "Shader Logging",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllogstatedescriptor/buffersize",
                    "title": "bufferSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllogstatedescriptor/level",
                    "title": "level",
                    "type": "property"
                  },
                  {
                    "title": "Log Levels",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/debug",
                        "title": "MTLLogLevelDebug",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/info",
                        "title": "MTLLogLevelInfo",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/notice",
                        "title": "MTLLogLevelNotice",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/error",
                        "title": "MTLLogLevelError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/fault",
                        "title": "MTLLogLevelFault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/undefined",
                        "title": "MTLLogLevelUndefined",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlloglevel",
                    "title": "MTLLogLevel",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtllogstatedescriptor",
                "title": "MTLLogStateDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllogstate/addloghandler(_:)",
                    "title": "- addLogHandler:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtllogstate",
                "title": "MTLLogState",
                "type": "protocol"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/unsupported",
                    "title": "MTLLibraryErrorUnsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/internal",
                    "title": "MTLLibraryErrorInternal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilefailure",
                    "title": "MTLLibraryErrorCompileFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilewarning",
                    "title": "MTLLibraryErrorCompileWarning",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/filenotfound",
                    "title": "MTLLibraryErrorFileNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/functionnotfound",
                    "title": "MTLLibraryErrorFunctionNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/unsupported",
                    "title": "MTLLibraryErrorUnsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/internal",
                    "title": "MTLLibraryErrorInternal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilefailure",
                    "title": "MTLLibraryErrorCompileFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilewarning",
                    "title": "MTLLibraryErrorCompileWarning",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/filenotfound",
                    "title": "MTLLibraryErrorFileNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/functionnotfound",
                    "title": "MTLLibraryErrorFunctionNotFound",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtllibraryerror-swift.struct/code",
                "title": "MTLLibraryError",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtllibraryerrordomain",
                "title": "MTLLibraryErrorDomain",
                "type": "var"
              }
            ],
            "path": "/documentation/metal/shader-libraries",
            "title": "Shader Libraries",
            "type": "collection"
          },
          {
            "title": "Presentation",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Presenting with Core Animation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-custom-metal-view",
                "title": "Creating a Custom Metal View",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/reading-pixel-data-from-a-drawable-texture",
                "title": "Reading Pixel Data from a Drawable Texture",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/achieving-smooth-frame-rates-with-metal-s-display-link",
                "title": "Achieving smooth frame rates with Metal’s display link",
                "type": "sampleCode"
              },
              {
                "external": true,
                "path": "/documentation/quartzcore/cametallayer",
                "title": "CAMetalLayer",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/quartzcore/cametaldrawable",
                "title": "CAMetalDrawable",
                "type": "protocol"
              },
              {
                "title": "Presenting with MetalKit",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
                "title": "Using Metal to Draw a View’s Contents",
                "type": "sampleCode"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkview",
                "title": "MTKView",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkviewdelegate",
                "title": "MTKViewDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/metal/onscreen-presentation",
            "title": "Onscreen Presentation",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "High Dynamic Range Content",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-hdr-images-with-metal",
                "title": "Processing HDR Images with Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/displaying-hdr-content-in-a-metal-layer",
                "title": "Displaying HDR Content in a Metal Layer",
                "type": "article"
              },
              {
                "path": "/documentation/metal/determining-support-for-edr-values",
                "title": "Determining Support for EDR Values",
                "type": "article"
              },
              {
                "path": "/documentation/metal/using-color-spaces-to-display-hdr-content",
                "title": "Using Color Spaces to Display HDR Content",
                "type": "article"
              },
              {
                "path": "/documentation/metal/using-system-tone-mapping-on-video-content",
                "title": "Using System Tone Mapping on Video Content",
                "type": "article"
              },
              {
                "path": "/documentation/metal/performing-your-own-tone-mapping",
                "title": "Performing Your Own Tone Mapping",
                "type": "article"
              },
              {
                "path": "/documentation/metal/implementing-tone-mapping-on-reference-displays",
                "title": "Implementing Tone Mapping on Reference Displays",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/hdr-content",
            "title": "HDR Content",
            "type": "collection"
          },
          {
            "title": "User Interface",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/metal/managing-your-game-window-for-metal-in-macos",
            "title": "Managing your game window for Metal in macOS",
            "type": "article"
          },
          {
            "path": "/documentation/metal/adapting-your-game-interface-for-smaller-screens",
            "title": "Adapting your game interface for smaller screens",
            "type": "article"
          },
          {
            "title": "Developer Tools",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/metal-developer-workflows",
            "title": "Metal developer workflows",
            "type": "collection"
          },
          {
            "external": true,
            "path": "/documentation/xcode/metal-debugger",
            "title": "Metal debugger",
            "type": "collection"
          },
          {
            "path": "/documentation/metal/improving-your-games-graphics-performance-and-settings",
            "title": "Improving your game’s graphics performance and settings",
            "type": "article"
          },
          {
            "path": "/documentation/metal/capturing-metal-commands-programmatically",
            "title": "Capturing Metal Commands Programmatically",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/supporting-simulator-in-a-metal-app",
            "title": "Supporting Simulator in a Metal app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/xcode/analyzing-the-memory-usage-of-your-metal-app",
            "title": "Analyzing the memory usage of your Metal app",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/analyzing-the-performance-of-your-metal-app",
            "title": "Analyzing the performance of your Metal app",
            "type": "article"
          },
          {
            "path": "/documentation/metal/developing-metal-apps-that-run-in-simulator",
            "title": "Developing Metal apps that run in Simulator",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Counters and Counter Sets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/confirming-which-counters-and-counter-sets-a-gpu-supports",
                "title": "Confirming which Counters and Counter Sets a GPU Supports",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Counter Set",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterset/name",
                    "title": "name",
                    "type": "property"
                  },
                  {
                    "title": "Checking Which Counters a GPU Supports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterset/counters",
                    "title": "counters",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcounterset",
                "title": "MTLCounterSet",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Common Counter Set Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounterset/timestamp",
                    "title": "MTLCommonCounterSetTimestamp",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounterset/stageutilization",
                    "title": "MTLCommonCounterSetStageUtilization",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounterset/statistic",
                    "title": "MTLCommonCounterSetStatistic",
                    "type": "var"
                  }
                ],
                "path": "/documentation/metal/mtlcommoncounterset",
                "title": "MTLCommonCounterSet",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Counter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounter/name",
                    "title": "name",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcounter",
                "title": "MTLCounter",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Common Counter Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/timestamp",
                    "title": "MTLCommonCounterTimestamp",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/tessellationinputpatches",
                    "title": "MTLCommonCounterTessellationInputPatches",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/vertexinvocations",
                    "title": "MTLCommonCounterVertexInvocations",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/posttessellationvertexinvocations",
                    "title": "MTLCommonCounterPostTessellationVertexInvocations",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/clipperinvocations",
                    "title": "MTLCommonCounterClipperInvocations",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/clipperprimitivesout",
                    "title": "MTLCommonCounterClipperPrimitivesOut",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/fragmentinvocations",
                    "title": "MTLCommonCounterFragmentInvocations",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/fragmentspassed",
                    "title": "MTLCommonCounterFragmentsPassed",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/computekernelinvocations",
                    "title": "MTLCommonCounterComputeKernelInvocations",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/totalcycles",
                    "title": "MTLCommonCounterTotalCycles",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/vertexcycles",
                    "title": "MTLCommonCounterVertexCycles",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/posttessellationvertexcycles",
                    "title": "MTLCommonCounterPostTessellationVertexCycles",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/fragmentcycles",
                    "title": "MTLCommonCounterFragmentCycles",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/tessellationcycles",
                    "title": "MTLCommonCounterTessellationCycles",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/rendertargetwritecycles",
                    "title": "MTLCommonCounterRenderTargetWriteCycles",
                    "type": "var"
                  }
                ],
                "path": "/documentation/metal/mtlcommoncounter",
                "title": "MTLCommonCounter",
                "type": "typealias"
              },
              {
                "title": "Counter Sample Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-counter-sample-buffer-to-store-a-gpus-counter-data-during-a-pass",
                "title": "Creating a Counter Sample Buffer to Store a GPU’s Counter Data During a Pass",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Descriptor for a Counter Sample Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/counterset",
                    "title": "counterSet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/samplecount",
                    "title": "sampleCount",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/storagemode",
                    "title": "storageMode",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcountersamplebufferdescriptor",
                "title": "MTLCounterSampleBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Resolving the Counter Sample Buffer’s Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/resolvecounterrange:",
                    "title": "- resolveCounterRange:",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting the Counter Sample Buffer’s Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/samplecount",
                    "title": "sampleCount",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcountersamplebuffer",
                "title": "MTLCounterSampleBuffer",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/sampling-gpu-data-into-counter-sample-buffers",
                "title": "Sampling GPU Data into Counter Sample Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/mtlcounterdontsample",
                "title": "MTLCounterDontSample",
                "type": "macro"
              },
              {
                "title": "Counter Sample Data Output",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/converting-a-gpus-counter-data-into-a-readable-format",
                "title": "Converting a GPU’s Counter Data into a Readable Format",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Timestamp Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresulttimestamp/timestamp",
                    "title": "timestamp",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcounterresulttimestamp",
                "title": "MTLCounterResultTimestamp",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Statistics Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/tessellationinputpatches",
                    "title": "tessellationInputPatches",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/vertexinvocations",
                    "title": "vertexInvocations",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/posttessellationvertexinvocations",
                    "title": "postTessellationVertexInvocations",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/clipperinvocations",
                    "title": "clipperInvocations",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/clipperprimitivesout",
                    "title": "clipperPrimitivesOut",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/fragmentinvocations",
                    "title": "fragmentInvocations",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/fragmentspassed",
                    "title": "fragmentsPassed",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/computekernelinvocations",
                    "title": "computeKernelInvocations",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcounterresultstatistic",
                "title": "MTLCounterResultStatistic",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Stage Utilization Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/totalcycles",
                    "title": "totalCycles",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/vertexcycles",
                    "title": "vertexCycles",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/tessellationcycles",
                    "title": "tessellationCycles",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/posttessellationvertexcycles",
                    "title": "postTessellationVertexCycles",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/fragmentcycles",
                    "title": "fragmentCycles",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/rendertargetcycles",
                    "title": "renderTargetCycles",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcounterresultstageutilization",
                "title": "MTLCounterResultStageUtilization",
                "type": "struct"
              },
              {
                "path": "/documentation/metal/mtlcountererrorvalue",
                "title": "MTLCounterErrorValue",
                "type": "macro"
              },
              {
                "title": "Timestamp Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/converting-gpu-timestamps-into-cpu-time",
                "title": "Converting GPU Timestamps into CPU Time",
                "type": "article"
              },
              {
                "path": "/documentation/metal/mtltimestamp",
                "title": "MTLTimestamp",
                "type": "typealias"
              },
              {
                "title": "Counter Sample Buffer Errors",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/metal/gpu-counters-and-counter-sample-buffers",
            "title": "GPU Counters and Counter Sample Buffers",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Frame Capture",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting Capture Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedescriptor/captureobject",
                    "title": "captureObject",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedescriptor/destination",
                    "title": "destination",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedescriptor/outputurl",
                    "title": "outputURL",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcapturedescriptor",
                "title": "MTLCaptureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining the Shared Capture Manager",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/shared()",
                    "title": "+ sharedCaptureManager",
                    "type": "method"
                  },
                  {
                    "title": "Querying Support for a Capture Destination",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/supportsdestination(_:)",
                    "title": "- supportsDestination:",
                    "type": "method"
                  },
                  {
                    "title": "Creating a Capture Scope",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/makecapturescope(device:)",
                    "title": "- newCaptureScopeWithDevice:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/makecapturescope(commandqueue:)",
                    "title": "- newCaptureScopeWithCommandQueue:",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/defaultcapturescope",
                    "title": "defaultCaptureScope",
                    "type": "property"
                  },
                  {
                    "title": "Starting Capture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(with:)",
                    "title": "- startCaptureWithDescriptor:error:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(device:)",
                    "title": "- startCaptureWithDevice:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(commandqueue:)",
                    "title": "- startCaptureWithCommandQueue:",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(scope:)",
                    "title": "- startCaptureWithScope:",
                    "type": "method"
                  },
                  {
                    "title": "Stopping Capture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/stopcapture()",
                    "title": "- stopCapture",
                    "type": "method"
                  },
                  {
                    "title": "Monitoring Capture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/iscapturing",
                    "title": "isCapturing",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/init",
                    "title": "- init",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcapturemanager",
                "title": "MTLCaptureManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Choosing a Destination",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedestination/developertools",
                    "title": "MTLCaptureDestinationDeveloperTools",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedestination/gputracedocument",
                    "title": "MTLCaptureDestinationGPUTraceDocument",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlcapturedestination",
                "title": "MTLCaptureDestination",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Defining Capture Scope Boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/begin()",
                    "title": "- beginScope",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/end()",
                    "title": "- endScope",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Capture Scope",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/label",
                    "title": "label",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/device",
                    "title": "device",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/commandqueue",
                    "title": "commandQueue",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcapturescope",
                "title": "MTLCaptureScope",
                "type": "protocol"
              },
              {
                "title": "Capture Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcaptureerror/alreadycapturing",
                    "title": "MTLCaptureErrorAlreadyCapturing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcaptureerror/invaliddescriptor",
                    "title": "MTLCaptureErrorInvalidDescriptor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcaptureerror/notsupported",
                    "title": "MTLCaptureErrorNotSupported",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlcaptureerror",
                "title": "MTLCaptureError",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtlcaptureerrordomain",
                "title": "MTLCaptureErrorDomain",
                "type": "var"
              },
              {
                "title": "Shader Logs",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the Log Messsage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/type",
                    "title": "type",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogtype/validation",
                        "title": "MTLFunctionLogTypeValidation",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionlogtype",
                    "title": "MTLFunctionLogType",
                    "type": "enum"
                  },
                  {
                    "title": "Getting Execution Details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/debuglocation",
                    "title": "debugLocation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/encoderlabel",
                    "title": "encoderLabel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/function",
                    "title": "function",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting the Location Details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/functionname",
                        "title": "functionName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/url",
                        "title": "URL",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/line",
                        "title": "line",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/column",
                        "title": "column",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionlogdebuglocation",
                    "title": "MTLFunctionLogDebugLocation",
                    "type": "protocol"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionlog",
                "title": "MTLFunctionLog",
                "type": "protocol"
              }
            ],
            "path": "/documentation/metal/metal-debugging-types",
            "title": "Metal Debugging Types",
            "type": "collection"
          },
          {
            "title": "Apple Silicon",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/apple-silicon/porting-your-metal-code-to-apple-silicon",
            "title": "Porting Your Metal Code to Apple Silicon",
            "type": "article"
          },
          {
            "path": "/documentation/metal/tailor-your-apps-for-apple-gpus-and-tile-based-deferred-rendering",
            "title": "Tailor Your Apps for Apple GPUs and Tile-Based Deferred Rendering",
            "type": "article"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/pivot",
                    "title": "pivot",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/rotation",
                    "title": "rotation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/scale",
                    "title": "scale",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/shear",
                    "title": "shear",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/translation",
                    "title": "translation",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomponenttransform",
                "title": "MTLComponentTransform",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/w",
                    "title": "w",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/x",
                    "title": "x",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/y",
                    "title": "y",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/z",
                    "title": "z",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlpackedfloatquaternion",
                "title": "MTLPackedFloatQuaternion",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibraryoptions/mtlstitchedlibraryoptionnone",
                    "title": "MTLStitchedLibraryOptionNone",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibraryoptions/failonbinaryarchivemiss",
                    "title": "MTLStitchedLibraryOptionFailOnBinaryArchiveMiss",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibraryoptions/storelibraryinmetalpipelinesscript",
                    "title": "MTLStitchedLibraryOptionStoreLibraryInMetalPipelinesScript",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlstitchedlibraryoptions",
                "title": "MTLStitchedLibraryOptions",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/nsdevicecertification",
                "title": "NSDeviceCertification",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/nsprocessperformanceprofile",
                "title": "NSProcessPerformanceProfile",
                "type": "typealias"
              }
            ],
            "path": "/documentation/metal/metal-structures",
            "title": "Metal Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentbufferstier/tier1",
                    "title": "MTLArgumentBuffersTier1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentbufferstier/tier2",
                    "title": "MTLArgumentBuffersTier2",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlargumentbufferstier",
                "title": "MTLArgumentBuffersTier",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllogstateerror/invalid",
                    "title": "MTLLogStateErrorInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllogstateerror/invalidsize",
                    "title": "MTLLogStateErrorInvalidSize",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtllogstateerror",
                "title": "MTLLogStateError",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Function Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmathfloatingpointfunctions/fast",
                    "title": "MTLMathFloatingPointFunctionsFast",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmathfloatingpointfunctions/precise",
                    "title": "MTLMathFloatingPointFunctionsPrecise",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlmathfloatingpointfunctions",
                "title": "MTLMathFloatingPointFunctions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmathmode/fast",
                    "title": "MTLMathModeFast",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmathmode/relaxed",
                    "title": "MTLMathModeRelaxed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmathmode/safe",
                    "title": "MTLMathModeSafe",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlmathmode",
                "title": "MTLMathMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmatrixlayout/columnmajor",
                    "title": "MTLMatrixLayoutColumnMajor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmatrixlayout/rowmajor",
                    "title": "MTLMatrixLayoutRowMajor",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlmatrixlayout",
                "title": "MTLMatrixLayout",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlreadwritetexturetier/tier1",
                    "title": "MTLReadWriteTextureTier1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlreadwritetexturetier/tier2",
                    "title": "MTLReadWriteTextureTier2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlreadwritetexturetier/tiernone",
                    "title": "MTLReadWriteTextureTierNone",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlreadwritetexturetier",
                "title": "MTLReadWriteTextureTier",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Validation States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlshadervalidation/default",
                    "title": "MTLShaderValidationDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlshadervalidation/disabled",
                    "title": "MTLShaderValidationDisabled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlshadervalidation/enabled",
                    "title": "MTLShaderValidationEnabled",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtlshadervalidation",
                "title": "MTLShaderValidation",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltransformtype/component",
                    "title": "MTLTransformTypeComponent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtltransformtype/packedfloat4x3",
                    "title": "MTLTransformTypePackedFloat4x3",
                    "type": "case"
                  }
                ],
                "path": "/documentation/metal/mtltransformtype",
                "title": "MTLTransformType",
                "type": "enum"
              }
            ],
            "path": "/documentation/metal/metal-enumerations",
            "title": "Metal Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/mtllogstateerrordomain",
                "title": "MTLLogStateErrorDomain",
                "type": "var"
              }
            ],
            "path": "/documentation/metal/metal-constants",
            "title": "Metal Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/nsdevicecertification",
                "title": "NSDeviceCertification",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/nsprocessperformanceprofile",
                "title": "NSProcessPerformanceProfile",
                "type": "typealias"
              }
            ],
            "path": "/documentation/metal/metal-data-types",
            "title": "Metal Data Types",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Global Variables",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/mtlresourcecpucachemodemask",
                "title": "MTLResourceCPUCacheModeMask",
                "type": "macro"
              },
              {
                "path": "/documentation/metal/mtlresourcecpucachemodeshift",
                "title": "MTLResourceCPUCacheModeShift",
                "type": "macro"
              },
              {
                "path": "/documentation/metal/mtlresourcehazardtrackingmodemask",
                "title": "MTLResourceHazardTrackingModeMask",
                "type": "macro"
              },
              {
                "path": "/documentation/metal/mtlresourcehazardtrackingmodeshift",
                "title": "MTLResourceHazardTrackingModeShift",
                "type": "macro"
              },
              {
                "path": "/documentation/metal/mtlresourcestoragemodemask",
                "title": "MTLResourceStorageModeMask",
                "type": "macro"
              },
              {
                "path": "/documentation/metal/mtlresourcestoragemodeshift",
                "title": "MTLResourceStorageModeShift",
                "type": "macro"
              },
              {
                "path": "/documentation/metal/nsdevicecertification/iphoneperformancegaming",
                "title": "NSDeviceCertificationiPhonePerformanceGaming",
                "type": "var"
              },
              {
                "path": "/documentation/metal/nsprocessperformanceprofile/default",
                "title": "NSProcessPerformanceProfileDefault",
                "type": "var"
              },
              {
                "path": "/documentation/metal/nsprocessperformanceprofile/sustained",
                "title": "NSProcessPerformanceProfileSustained",
                "type": "var"
              }
            ],
            "path": "/documentation/metal/metal-variables",
            "title": "Metal Variables",
            "type": "collection"
          }
        ],
        "path": "/documentation/metal",
        "title": "Metal",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/metal/performing-calculations-on-a-gpu",
            "title": "Performing Calculations on a GPU",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
            "title": "Using Metal to Draw a View’s Contents",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
            "title": "Using a Render Pipeline to Render Primitives",
            "type": "sampleCode"
          },
          {
            "title": "Samples",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Compute Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/performing-calculations-on-a-gpu",
                "title": "Performing Calculations on a GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/selecting-device-objects-for-compute-processing",
                "title": "Selecting Device Objects for Compute Processing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-a-tensorflow-operation",
                "title": "Customizing a TensorFlow operation",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-a-pytorch-operation",
                "title": "Customizing a PyTorch operation",
                "type": "sampleCode"
              },
              {
                "title": "Render Workflows",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
                "title": "Using Metal to Draw a View’s Contents",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
                "title": "Using a Render Pipeline to Render Primitives",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/selecting-device-objects-for-graphics-rendering",
                "title": "Selecting Device Objects for Graphics Rendering",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-render-pass-setup",
                "title": "Customizing Render Pass Setup",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-a-custom-metal-view",
                "title": "Creating a Custom Metal View",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/calculating-primitive-visibility-using-depth-testing",
                "title": "Calculating Primitive Visibility Using Depth Testing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-cpu",
                "title": "Encoding Indirect Command Buffers on the CPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-order-independent-transparency-with-image-blocks",
                "title": "Implementing Order-Independent Transparency with Image Blocks",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/loading-textures-and-models-using-metal-fast-resource-loading",
                "title": "Loading textures and models using Metal fast resource loading",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/adjusting-the-level-of-detail-using-metal-mesh-shaders",
                "title": "Adjusting the level of detail using Metal mesh shaders",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-a-3d-application-with-hydra-rendering",
                "title": "Creating a 3D application with Hydra rendering",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/culling-occluded-geometry-using-the-visibility-result-buffer",
                "title": "Culling occluded geometry using the visibility result buffer",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/improving-edge-rendering-quality-with-multisample-antialiasing-msaa",
                "title": "Improving edge-rendering quality with multisample antialiasing (MSAA)",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/achieving-smooth-frame-rates-with-metal-s-display-link",
                "title": "Achieving smooth frame rates with Metal’s display link",
                "type": "sampleCode"
              },
              {
                "title": "Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-a-texture-in-a-compute-function",
                "title": "Processing a Texture in a Compute Function",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/reading-pixel-data-from-a-drawable-texture",
                "title": "Reading Pixel Data from a Drawable Texture",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/creating-and-sampling-textures",
                "title": "Creating and Sampling Textures",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/streaming-large-images-with-metal-sparse-textures",
                "title": "Streaming large images with Metal sparse textures",
                "type": "sampleCode"
              },
              {
                "title": "Argument Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/managing-groups-of-resources-with-argument-buffers",
                "title": "Managing groups of resources with argument buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-argument-buffers-on-the-gpu",
                "title": "Encoding Argument Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-terrain-dynamically-with-argument-buffers",
                "title": "Rendering Terrain Dynamically with Argument Buffers",
                "type": "sampleCode"
              },
              {
                "title": "Shaders",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-metal-dynamic-library",
                "title": "Creating a Metal Dynamic Library",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-function-specialization-to-build-pipeline-variants",
                "title": "Using Function Specialization to Build Pipeline Variants",
                "type": "sampleCode"
              },
              {
                "title": "Synchronization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/synchronizing-cpu-and-gpu-work",
                "title": "Synchronizing CPU and GPU Work",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "title": "Lighting Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-forward-plus-lighting-using-tile-shaders",
                "title": "Rendering a Scene with Forward Plus Lighting Using Tile Shaders",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-objective-c",
                "title": "Rendering a Scene with Deferred Lighting in Objective-C",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-swift",
                "title": "Rendering a Scene with Deferred Lighting in Swift",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-scene-with-deferred-lighting-in-c++",
                "title": "Rendering a Scene with Deferred Lighting in C++",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-reflections-with-fewer-render-passes",
                "title": "Rendering Reflections with Fewer Render Passes",
                "type": "sampleCode"
              },
              {
                "title": "Multiple Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/modern-rendering-with-metal",
                "title": "Modern Rendering with Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-gpu",
                "title": "Encoding Indirect Command Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "title": "Ray Tracing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-reflections-in-real-time-using-ray-tracing",
                "title": "Rendering reflections in real time using ray tracing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-using-metal",
                "title": "Accelerating ray tracing using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/control-the-ray-tracing-process-using-intersection-queries",
                "title": "Control the Ray Tracing Process Using Intersection Queries",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-and-motion-blur-using-metal",
                "title": "Accelerating ray tracing and motion blur using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-curve-primitive-in-a-ray-tracing-scene",
                "title": "Rendering a curve primitive in a ray tracing scene",
                "type": "sampleCode"
              },
              {
                "title": "HDR",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-hdr-images-with-metal",
                "title": "Processing HDR Images with Metal",
                "type": "sampleCode"
              },
              {
                "title": "OpenGL",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/migrating-opengl-code-to-metal",
                "title": "Migrating OpenGL Code to Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/mixing-metal-and-opengl-rendering-in-a-view",
                "title": "Mixing Metal and OpenGL Rendering in a View",
                "type": "sampleCode"
              }
            ],
            "path": "/documentation/metal/metal-sample-code-library",
            "title": "Metal Sample Code Library",
            "type": "collection"
          },
          {
            "title": "GPU Devices",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Locating and Inspecting a GPU Device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/getting-the-default-gpu",
                "title": "Getting the Default GPU",
                "type": "article"
              },
              {
                "path": "/documentation/metal/detecting-gpu-features-and-metal-software-versions",
                "title": "Detecting GPU Features and Metal Software Versions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/mtlcreatesystemdefaultdevice()",
                "title": "func MTLCreateSystemDefaultDevice() -> (any MTLDevice)?",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Working with GPU Devices",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Checking a GPU Device’s Feature Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsfamily(_:)",
                        "title": "func supportsFamily(MTLGPUFamily) -> Bool",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Checking for Common GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/metal3",
                            "title": "case metal3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/common3",
                            "title": "case common3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/common2",
                            "title": "case common2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/common1",
                            "title": "case common1",
                            "type": "case"
                          },
                          {
                            "title": "Checking for Apple Family GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple9",
                            "title": "case apple9",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple8",
                            "title": "case apple8",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple7",
                            "title": "case apple7",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple6",
                            "title": "case apple6",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple5",
                            "title": "case apple5",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple4",
                            "title": "case apple4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple3",
                            "title": "case apple3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple2",
                            "title": "case apple2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/apple1",
                            "title": "case apple1",
                            "type": "case"
                          },
                          {
                            "title": "Checking for macOS Family GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/mac2",
                            "title": "case mac2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlgpufamily/mac1",
                            "title": "case mac1",
                            "type": "case"
                          },
                          {
                            "title": "Checking for Mac Catalyst Family GPU Support",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlgpufamily/maccatalyst2",
                            "title": "case macCatalyst2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlgpufamily/maccatalyst1",
                            "title": "case macCatalyst1",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlgpufamily/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlgpufamily",
                        "title": "MTLGPUFamily",
                        "type": "enum"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/supportsfeatureset(_:)",
                        "title": "func supportsFeatureSet(MTLFeatureSet) -> Bool",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "iOS GPU Family 5",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily5_v1",
                            "title": "case iOS_GPUFamily5_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 4",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily4_v2",
                            "title": "case iOS_GPUFamily4_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily4_v1",
                            "title": "case iOS_GPUFamily4_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 3",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v4",
                            "title": "case iOS_GPUFamily3_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v3",
                            "title": "case iOS_GPUFamily3_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v2",
                            "title": "case iOS_GPUFamily3_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily3_v1",
                            "title": "case iOS_GPUFamily3_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v5",
                            "title": "case iOS_GPUFamily2_v5",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v4",
                            "title": "case iOS_GPUFamily2_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v3",
                            "title": "case iOS_GPUFamily2_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v2",
                            "title": "case iOS_GPUFamily2_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily2_v1",
                            "title": "case iOS_GPUFamily2_v1",
                            "type": "case"
                          },
                          {
                            "title": "iOS GPU Family 1",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v5",
                            "title": "case iOS_GPUFamily1_v5",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v4",
                            "title": "case iOS_GPUFamily1_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v3",
                            "title": "case iOS_GPUFamily1_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v2",
                            "title": "case iOS_GPUFamily1_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/ios_gpufamily1_v1",
                            "title": "case iOS_GPUFamily1_v1",
                            "type": "case"
                          },
                          {
                            "title": "tvOS GPU Family 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily2_v2",
                            "title": "case tvOS_GPUFamily2_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily2_v1",
                            "title": "case tvOS_GPUFamily2_v1",
                            "type": "case"
                          },
                          {
                            "title": "tvOS GPU Family 1",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v4",
                            "title": "case tvOS_GPUFamily1_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v3",
                            "title": "case tvOS_GPUFamily1_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v2",
                            "title": "case tvOS_GPUFamily1_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v1-swift.enum.case",
                            "title": "case tvOS_GPUFamily1_v1",
                            "type": "case"
                          },
                          {
                            "title": "macOS GPU Family 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily2_v1",
                            "title": "case macOS_GPUFamily2_v1",
                            "type": "case"
                          },
                          {
                            "title": "macOS GPU Family 1",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v4",
                            "title": "case macOS_GPUFamily1_v4",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v3",
                            "title": "case macOS_GPUFamily1_v3",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v2",
                            "title": "case macOS_GPUFamily1_v2",
                            "type": "case"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_gpufamily1_v1",
                            "title": "case macOS_GPUFamily1_v1",
                            "type": "case"
                          },
                          {
                            "title": "macOS Tier 2",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/macos_readwritetexturetier2",
                            "title": "case macOS_ReadWriteTextureTier2",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          },
                          {
                            "title": "Type Properties",
                            "type": "groupMarker"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/osx_gpufamily1_v1",
                            "title": "static var osx_GPUFamily1_v1: MTLFeatureSet",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/osx_gpufamily1_v2",
                            "title": "static var osx_GPUFamily1_v2: MTLFeatureSet",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/osx_readwritetexturetier2",
                            "title": "static var osx_ReadWriteTextureTier2: MTLFeatureSet",
                            "type": "property"
                          },
                          {
                            "deprecated": true,
                            "path": "/documentation/metal/mtlfeatureset/tvos_gpufamily1_v1-swift.type.property",
                            "title": "static var tvos_GPUFamily1_v1: MTLFeatureSet",
                            "type": "property"
                          }
                        ],
                        "deprecated": true,
                        "path": "/documentation/metal/mtlfeatureset",
                        "title": "MTLFeatureSet",
                        "type": "enum"
                      },
                      {
                        "title": "Checking Compute Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxthreadgroupmemorylength",
                        "title": "var maxThreadgroupMemoryLength: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxthreadsperthreadgroup",
                        "title": "var maxThreadsPerThreadgroup: MTLSize",
                        "type": "property"
                      },
                      {
                        "title": "Checking Render Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsraytracing",
                        "title": "var supportsRaytracing: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsprimitivemotionblur",
                        "title": "var supportsPrimitiveMotionBlur: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsraytracingfromrender",
                        "title": "var supportsRaytracingFromRender: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supports32bitmsaa",
                        "title": "var supports32BitMSAA: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportspullmodelinterpolation",
                        "title": "var supportsPullModelInterpolation: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsshaderbarycentriccoordinates",
                        "title": "var supportsShaderBarycentricCoordinates: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsvertexamplificationcount(_:)",
                        "title": "func supportsVertexAmplificationCount(Int) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/areprogrammablesamplepositionssupported",
                        "title": "var areProgrammableSamplePositionsSupported: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/arerasterordergroupssupported",
                        "title": "var areRasterOrderGroupsSupported: Bool",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/arebarycentriccoordssupported",
                        "title": "var areBarycentricCoordsSupported: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Checking Texture and Sampler Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supports32bitfloatfiltering",
                        "title": "var supports32BitFloatFiltering: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsbctexturecompression",
                        "title": "var supportsBCTextureCompression: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/isdepth24stencil8pixelformatsupported",
                        "title": "var isDepth24Stencil8PixelFormatSupported: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsquerytexturelod",
                        "title": "var supportsQueryTextureLOD: Bool",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Read-Write Texture Tiers",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlreadwritetexturetier/tier1",
                                "title": "case tier1",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlreadwritetexturetier/tier2",
                                "title": "case tier2",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlreadwritetexturetier/tiernone",
                                "title": "case tierNone",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlreadwritetexturetier/init(rawvalue:)",
                                "title": "init?(rawValue: UInt)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/metal/mtlreadwritetexturetier",
                            "title": "MTLReadWriteTextureTier",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/metal/mtldevice/readwritetexturesupport",
                        "title": "var readWriteTextureSupport: MTLReadWriteTextureTier",
                        "type": "property"
                      },
                      {
                        "title": "Checking Function Pointer Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsfunctionpointers",
                        "title": "var supportsFunctionPointers: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsfunctionpointersfromrender",
                        "title": "var supportsFunctionPointersFromRender: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Checking a GPU Device’s Memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/currentallocatedsize",
                        "title": "var currentAllocatedSize: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/recommendedmaxworkingsetsize",
                        "title": "var recommendedMaxWorkingSetSize: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/hasunifiedmemory",
                        "title": "var hasUnifiedMemory: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxtransferrate",
                        "title": "var maxTransferRate: UInt64",
                        "type": "property"
                      },
                      {
                        "title": "Sampling a GPU Device’s Counters",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/countersets",
                        "title": "var counterSets: [any MTLCounterSet]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportscountersampling(_:)",
                        "title": "func supportsCounterSampling(MTLCounterSamplingPoint) -> Bool",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Reading Sampling Boundary Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atblitboundary",
                            "title": "case atBlitBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atdispatchboundary",
                            "title": "case atDispatchBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atdrawboundary",
                            "title": "case atDrawBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/atstageboundary",
                            "title": "case atStageBoundary",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/attiledispatchboundary",
                            "title": "case atTileDispatchBoundary",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlcountersamplingpoint/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlcountersamplingpoint",
                        "title": "MTLCounterSamplingPoint",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecountersamplebuffer(descriptor:)",
                        "title": "func makeCounterSampleBuffer(descriptor: MTLCounterSampleBufferDescriptor) throws -> any MTLCounterSampleBuffer",
                        "type": "method"
                      },
                      {
                        "title": "Sampling GPU and CPU Timestamps Simultaneously",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sampletimestamps()",
                        "title": "func sampleTimestamps() -> (cpu: MTLTimestamp, gpu: MTLTimestamp)",
                        "type": "method"
                      },
                      {
                        "title": "Identifying a GPU Device",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/name",
                        "title": "var name: String",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/architecture",
                        "title": "var architecture: MTLArchitecture",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting a GPU Device’s Architecture Details",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlarchitecture/name",
                            "title": "var name: String",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/metal/mtlarchitecture",
                        "title": "MTLArchitecture",
                        "type": "class"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/registryid",
                        "title": "var registryID: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/location",
                        "title": "var location: MTLDeviceLocation",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Determining the GPU’s Location",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/builtin",
                            "title": "case builtIn",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/slot",
                            "title": "case slot",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/external",
                            "title": "case external",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/unspecified",
                            "title": "case unspecified",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldevicelocation/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtldevicelocation",
                        "title": "MTLDeviceLocation",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/locationnumber",
                        "title": "var locationNumber: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/islowpower",
                        "title": "var isLowPower: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/isremovable",
                        "title": "var isRemovable: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/isheadless",
                        "title": "var isHeadless: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/peergroupid",
                        "title": "var peerGroupID: UInt64",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/peercount",
                        "title": "var peerCount: UInt32",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/peerindex",
                        "title": "var peerIndex: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/device-inspection",
                    "title": "Device Inspection",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Command Queues",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecommandqueue()",
                        "title": "func makeCommandQueue() -> (any MTLCommandQueue)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecommandqueue(maxcommandbuffercount:)",
                        "title": "func makeCommandQueue(maxCommandBufferCount: Int) -> (any MTLCommandQueue)?",
                        "type": "method"
                      },
                      {
                        "title": "Creating Residency Sets",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeresidencyset(descriptor:)",
                        "title": "func makeResidencySet(descriptor: MTLResidencySetDescriptor) throws -> any MTLResidencySet",
                        "type": "method"
                      },
                      {
                        "title": "Creating I/O Command Queues",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeiocommandqueue(descriptor:)",
                        "title": "func makeIOCommandQueue(descriptor: MTLIOCommandQueueDescriptor) throws -> any MTLIOCommandQueue",
                        "type": "method"
                      },
                      {
                        "title": "Creating I/O File Handles",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeiofilehandle(url:)",
                        "title": "func makeIOFileHandle(url: URL) throws -> any MTLIOFileHandle",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeiofilehandle(url:compressionmethod:)",
                        "title": "func makeIOFileHandle(url: URL, compressionMethod: MTLIOCompressionMethod) throws -> any MTLIOFileHandle",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/makeiohandle(url:)",
                        "title": "func makeIOHandle(url: URL) throws -> any MTLIOFileHandle",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/makeiohandle(url:compressionmethod:)",
                        "title": "func makeIOHandle(url: URL, compressionMethod: MTLIOCompressionMethod) throws -> any MTLIOFileHandle",
                        "type": "method"
                      },
                      {
                        "title": "Creating Indirect Command Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeindirectcommandbuffer(descriptor:maxcommandcount:options:)",
                        "title": "func makeIndirectCommandBuffer(descriptor: MTLIndirectCommandBufferDescriptor, maxCommandCount: Int, options: MTLResourceOptions) -> (any MTLIndirectCommandBuffer)?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/work-submission",
                    "title": "Work Submission",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Render Pipeline States with Vertex Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:)",
                        "title": "func makeRenderPipelineState(descriptor: MTLRenderPipelineDescriptor) throws -> any MTLRenderPipelineState",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:completionhandler:)",
                        "title": "func makeRenderPipelineState(descriptor: MTLRenderPipelineDescriptor, completionHandler: MTLNewRenderPipelineStateCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:)-89vxc",
                        "title": "func makeRenderPipelineState(descriptor: MTLRenderPipelineDescriptor, options: MTLPipelineOption) throws -> (any MTLRenderPipelineState, MTLRenderPipelineReflection?)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:reflection:)",
                        "title": "func makeRenderPipelineState(descriptor: MTLRenderPipelineDescriptor, options: MTLPipelineOption, reflection: AutoreleasingUnsafeMutablePointer<MTLAutoreleasedRenderPipelineReflection?>?) throws -> any MTLRenderPipelineState",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:completionhandler:)-5gdww",
                        "title": "func makeRenderPipelineState(descriptor: MTLRenderPipelineDescriptor, options: MTLPipelineOption, completionHandler: MTLNewRenderPipelineStateWithReflectionCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "title": "Creating Render Pipeline States with Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:)-yrak",
                        "title": "func makeRenderPipelineState(descriptor: MTLMeshRenderPipelineDescriptor, options: MTLPipelineOption) throws -> (any MTLRenderPipelineState, MTLRenderPipelineReflection?)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(descriptor:options:completionhandler:)-1wvya",
                        "title": "func makeRenderPipelineState(descriptor: MTLMeshRenderPipelineDescriptor, options: MTLPipelineOption, completionHandler: MTLNewRenderPipelineStateWithReflectionCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "title": "Creating Tile Render Pipeline States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(tiledescriptor:options:)",
                        "title": "func makeRenderPipelineState(tileDescriptor: MTLTileRenderPipelineDescriptor, options: MTLPipelineOption) throws -> (any MTLRenderPipelineState, MTLRenderPipelineReflection?)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(tiledescriptor:options:reflection:)",
                        "title": "func makeRenderPipelineState(tileDescriptor: MTLTileRenderPipelineDescriptor, options: MTLPipelineOption, reflection: AutoreleasingUnsafeMutablePointer<MTLAutoreleasedRenderPipelineReflection?>?) throws -> any MTLRenderPipelineState",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerenderpipelinestate(tiledescriptor:options:completionhandler:)",
                        "title": "func makeRenderPipelineState(tileDescriptor: MTLTileRenderPipelineDescriptor, options: MTLPipelineOption, completionHandler: MTLNewRenderPipelineStateWithReflectionCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "title": "Creating Compute Pipeline States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(descriptor:options:reflection:)",
                        "title": "func makeComputePipelineState(descriptor: MTLComputePipelineDescriptor, options: MTLPipelineOption, reflection: AutoreleasingUnsafeMutablePointer<MTLAutoreleasedComputePipelineReflection?>?) throws -> any MTLComputePipelineState",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(descriptor:options:completionhandler:)",
                        "title": "func makeComputePipelineState(descriptor: MTLComputePipelineDescriptor, options: MTLPipelineOption, completionHandler: MTLNewComputePipelineStateWithReflectionCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:)",
                        "title": "func makeComputePipelineState(function: any MTLFunction) throws -> any MTLComputePipelineState",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:completionhandler:)",
                        "title": "func makeComputePipelineState(function: any MTLFunction, completionHandler: MTLNewComputePipelineStateCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:options:reflection:)",
                        "title": "func makeComputePipelineState(function: any MTLFunction, options: MTLPipelineOption, reflection: AutoreleasingUnsafeMutablePointer<MTLAutoreleasedComputePipelineReflection?>?) throws -> any MTLComputePipelineState",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makecomputepipelinestate(function:options:completionhandler:)",
                        "title": "func makeComputePipelineState(function: any MTLFunction, options: MTLPipelineOption, completionHandler: MTLNewComputePipelineStateWithReflectionCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "title": "Creating Depth and Stencil States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedepthstencilstate(descriptor:)",
                        "title": "func makeDepthStencilState(descriptor: MTLDepthStencilDescriptor) -> (any MTLDepthStencilState)?",
                        "type": "method"
                      },
                      {
                        "title": "Supporting Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlnewrenderpipelinestatecompletionhandler",
                        "title": "MTLNewRenderPipelineStateCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/metal/mtlnewrenderpipelinestatewithreflectioncompletionhandler",
                        "title": "MTLNewRenderPipelineStateWithReflectionCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/metal/mtlnewcomputepipelinestatecompletionhandler",
                        "title": "MTLNewComputePipelineStateCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/metal/mtlnewcomputepipelinestatewithreflectioncompletionhandler",
                        "title": "MTLNewComputePipelineStateWithReflectionCompletionHandler",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/metal/pipeline-state-creation",
                    "title": "Pipeline State Creation",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Working with Resource Heaps",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeheap(descriptor:)",
                        "title": "func makeHeap(descriptor: MTLHeapDescriptor) -> (any MTLHeap)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heapbuffersizeandalign(length:options:)",
                        "title": "func heapBufferSizeAndAlign(length: Int, options: MTLResourceOptions) -> MTLSizeAndAlign",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heaptexturesizeandalign(descriptor:)",
                        "title": "func heapTextureSizeAndAlign(descriptor: MTLTextureDescriptor) -> MTLSizeAndAlign",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heapaccelerationstructuresizeandalign(size:)",
                        "title": "func heapAccelerationStructureSizeAndAlign(size: Int) -> MTLSizeAndAlign",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/heapaccelerationstructuresizeandalign(descriptor:)",
                        "title": "func heapAccelerationStructureSizeAndAlign(descriptor: MTLAccelerationStructureDescriptor) -> MTLSizeAndAlign",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing the Size and Alignment",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsizeandalign/size",
                            "title": "var size: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlsizeandalign/align",
                            "title": "var align: Int",
                            "type": "property"
                          },
                          {
                            "title": "Creating Instances",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsizeandalign/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/metal/mtlsizeandalign/init(size:align:)",
                            "title": "init(size: Int, align: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlsizeandalign",
                        "title": "MTLSizeAndAlign",
                        "type": "struct"
                      },
                      {
                        "title": "Creating Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxbufferlength",
                        "title": "var maxBufferLength: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebuffer(length:options:)",
                        "title": "func makeBuffer(length: Int, options: MTLResourceOptions) -> (any MTLBuffer)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebuffer(bytes:length:options:)",
                        "title": "func makeBuffer(bytes: UnsafeRawPointer, length: Int, options: MTLResourceOptions) -> (any MTLBuffer)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebuffer(bytesnocopy:length:options:deallocator:)",
                        "title": "func makeBuffer(bytesNoCopy: UnsafeMutableRawPointer, length: Int, options: MTLResourceOptions, deallocator: ((UnsafeMutableRawPointer, Int) -> Void)?) -> (any MTLBuffer)?",
                        "type": "method"
                      },
                      {
                        "title": "Creating Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maketexture(descriptor:)",
                        "title": "func makeTexture(descriptor: MTLTextureDescriptor) -> (any MTLTexture)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maketexture(descriptor:iosurface:plane:)",
                        "title": "func makeTexture(descriptor: MTLTextureDescriptor, iosurface: IOSurfaceRef, plane: Int) -> (any MTLTexture)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedtexture(descriptor:)",
                        "title": "func makeSharedTexture(descriptor: MTLTextureDescriptor) -> (any MTLTexture)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedtexture(handle:)",
                        "title": "func makeSharedTexture(handle: MTLSharedTextureHandle) -> (any MTLTexture)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/minimumlineartexturealignment(for:)",
                        "title": "func minimumLinearTextureAlignment(for: MTLPixelFormat) -> Int",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/minimumtexturebufferalignment(for:)",
                        "title": "func minimumTextureBufferAlignment(for: MTLPixelFormat) -> Int",
                        "type": "method"
                      },
                      {
                        "title": "Creating Samplers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportstexturesamplecount(_:)",
                        "title": "func supportsTextureSampleCount(Int) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesamplerstate(descriptor:)",
                        "title": "func makeSamplerState(descriptor: MTLSamplerDescriptor) -> (any MTLSamplerState)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/getdefaultsamplepositions(samplecount:)",
                        "title": "func getDefaultSamplePositions(sampleCount: Int) -> [MTLSamplePosition]",
                        "type": "method"
                      },
                      {
                        "title": "Working with Sparse Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesize(texturetype:pixelformat:samplecount:sparsepagesize:)",
                        "title": "func sparseTileSize(textureType: MTLTextureType, pixelFormat: MTLPixelFormat, sampleCount: Int, sparsePageSize: MTLSparsePageSize) -> MTLSize",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesize(with:pixelformat:samplecount:)",
                        "title": "func sparseTileSize(with: MTLTextureType, pixelFormat: MTLPixelFormat, sampleCount: Int) -> MTLSize",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesizeinbytes(sparsepagesize:)",
                        "title": "func sparseTileSizeInBytes(sparsePageSize: MTLSparsePageSize) -> Int",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/sparsetilesizeinbytes",
                        "title": "var sparseTileSizeInBytes: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/convertsparsepixelregions(_:totileregions:withtilesize:alignmentmode:numregions:)",
                        "title": "func convertSparsePixelRegions(UnsafePointer<MTLRegion>, toTileRegions: UnsafeMutablePointer<MTLRegion>, withTileSize: MTLSize, alignmentMode: MTLSparseTextureRegionAlignmentMode, numRegions: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/convertsparsetileregions(_:topixelregions:withtilesize:numregions:)",
                        "title": "func convertSparseTileRegions(UnsafePointer<MTLRegion>, toPixelRegions: UnsafeMutablePointer<MTLRegion>, withTileSize: MTLSize, numRegions: Int)",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Sparse Texture Page Sizes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsepagesize/size16",
                            "title": "case size16",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsepagesize/size64",
                            "title": "case size64",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsepagesize/size256",
                            "title": "case size256",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsepagesize/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlsparsepagesize",
                        "title": "MTLSparsePageSize",
                        "type": "enum"
                      },
                      {
                        "children": [
                          {
                            "title": "Specifying the Alignment Mode",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsetextureregionalignmentmode/outward",
                            "title": "case outward",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsetextureregionalignmentmode/inward",
                            "title": "case inward",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlsparsetextureregionalignmentmode/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlsparsetextureregionalignmentmode",
                        "title": "MTLSparseTextureRegionAlignmentMode",
                        "type": "enum"
                      },
                      {
                        "title": "Creating Acceleration Structures for Ray Tracing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeaccelerationstructure(descriptor:)",
                        "title": "func makeAccelerationStructure(descriptor: MTLAccelerationStructureDescriptor) -> (any MTLAccelerationStructure)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeaccelerationstructure(size:)",
                        "title": "func makeAccelerationStructure(size: Int) -> (any MTLAccelerationStructure)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/accelerationstructuresizes(descriptor:)",
                        "title": "func accelerationStructureSizes(descriptor: MTLAccelerationStructureDescriptor) -> MTLAccelerationStructureSizes",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Retrieving the Sizes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/accelerationstructuresize",
                            "title": "var accelerationStructureSize: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/buildscratchbuffersize",
                            "title": "var buildScratchBufferSize: Int",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/refitscratchbuffersize",
                            "title": "var refitScratchBufferSize: Int",
                            "type": "property"
                          },
                          {
                            "title": "Creating an Acceleration Size Structure",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/metal/mtlaccelerationstructuresizes/init(accelerationstructuresize:buildscratchbuffersize:refitscratchbuffersize:)",
                            "title": "init(accelerationStructureSize: Int, buildScratchBufferSize: Int, refitScratchBufferSize: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlaccelerationstructuresizes",
                        "title": "MTLAccelerationStructureSizes",
                        "type": "struct"
                      },
                      {
                        "title": "Creating Argument Buffer Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Argument Buffer Tiers",
                            "type": "groupMarker"
                          },
                          {
                            "children": [
                              {
                                "title": "Enumeration Cases",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlargumentbufferstier/tier1",
                                "title": "case tier1",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlargumentbufferstier/tier2",
                                "title": "case tier2",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlargumentbufferstier/init(rawvalue:)",
                                "title": "init?(rawValue: UInt)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/metal/mtlargumentbufferstier",
                            "title": "MTLArgumentBuffersTier",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/metal/mtldevice/argumentbufferssupport",
                        "title": "var argumentBuffersSupport: MTLArgumentBuffersTier",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/maxargumentbuffersamplercount",
                        "title": "var maxArgumentBufferSamplerCount: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeargumentencoder(arguments:)",
                        "title": "func makeArgumentEncoder(arguments: [MTLArgumentDescriptor]) -> (any MTLArgumentEncoder)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeargumentencoder(bufferbinding:)",
                        "title": "func makeArgumentEncoder(bufferBinding: any MTLBufferBinding) -> any MTLArgumentEncoder",
                        "type": "method"
                      },
                      {
                        "title": "Creating Fences and Events",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makefence()",
                        "title": "func makeFence() -> (any MTLFence)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makeevent()",
                        "title": "func makeEvent() -> (any MTLEvent)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedevent()",
                        "title": "func makeSharedEvent() -> (any MTLSharedEvent)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makesharedevent(handle:)",
                        "title": "func makeSharedEvent(handle: MTLSharedEventHandle) -> (any MTLSharedEvent)?",
                        "type": "method"
                      },
                      {
                        "title": "Creating Rasterization Rate Maps",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsrasterizationratemap(layercount:)",
                        "title": "func supportsRasterizationRateMap(layerCount: Int) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makerasterizationratemap(descriptor:)",
                        "title": "func makeRasterizationRateMap(descriptor: MTLRasterizationRateMapDescriptor) -> (any MTLRasterizationRateMap)?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/resource-creation",
                    "title": "Resource Creation",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Shader Libraries",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedefaultlibrary()",
                        "title": "func makeDefaultLibrary() -> (any MTLLibrary)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedefaultlibrary(bundle:)",
                        "title": "func makeDefaultLibrary(bundle: Bundle) throws -> any MTLLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(url:)",
                        "title": "func makeLibrary(URL: URL) throws -> any MTLLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(source:options:)",
                        "title": "func makeLibrary(source: String, options: MTLCompileOptions?) throws -> any MTLLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(source:options:completionhandler:)",
                        "title": "func makeLibrary(source: String, options: MTLCompileOptions?, completionHandler: MTLNewLibraryCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(stitcheddescriptor:)",
                        "title": "func makeLibrary(stitchedDescriptor: MTLStitchedLibraryDescriptor) throws -> any MTLLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(stitcheddescriptor:completionhandler:)",
                        "title": "func makeLibrary(stitchedDescriptor: MTLStitchedLibraryDescriptor, completionHandler: MTLNewLibraryCompletionHandler)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(data:)-7khmh",
                        "title": "func makeLibrary(data: DispatchData) throws -> any MTLLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makelibrary(data:)",
                        "title": "func makeLibrary(data: dispatch_data_t) throws -> any MTLLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlnewlibrarycompletionhandler",
                        "title": "MTLNewLibraryCompletionHandler",
                        "type": "typealias"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtldevice/makelibrary(filepath:)",
                        "title": "func makeLibrary(filepath: String) throws -> any MTLLibrary",
                        "type": "method"
                      },
                      {
                        "title": "Creating Dynamic Shader Libraries",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsdynamiclibraries",
                        "title": "var supportsDynamicLibraries: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/supportsrenderdynamiclibraries",
                        "title": "var supportsRenderDynamicLibraries: Bool",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedynamiclibrary(library:)",
                        "title": "func makeDynamicLibrary(library: any MTLLibrary) throws -> any MTLDynamicLibrary",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makedynamiclibrary(url:)",
                        "title": "func makeDynamicLibrary(url: URL) throws -> any MTLDynamicLibrary",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/none",
                            "title": "case none",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/invalidfile",
                            "title": "case invalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/compilationfailure",
                            "title": "case compilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unresolvedinstallname",
                            "title": "case unresolvedInstallName",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/dependencyloadfailure",
                            "title": "case dependencyLoadFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unsupported",
                            "title": "case unsupported",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/none",
                            "title": "case none",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/invalidfile",
                            "title": "case invalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/compilationfailure",
                            "title": "case compilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unresolvedinstallname",
                            "title": "case unresolvedInstallName",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/dependencyloadfailure",
                            "title": "case dependencyLoadFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unsupported",
                            "title": "case unsupported",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code",
                        "title": "MTLDynamicLibraryError.Code",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibrarydomain",
                        "title": "let MTLDynamicLibraryDomain: String",
                        "type": "var"
                      },
                      {
                        "title": "Creating Binary Shader Archives",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevice/makebinaryarchive(descriptor:)",
                        "title": "func makeBinaryArchive(descriptor: MTLBinaryArchiveDescriptor) throws -> any MTLBinaryArchive",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Choosing an Archive File",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchivedescriptor/url",
                            "title": "var url: URL?",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/metal/mtlbinaryarchivedescriptor",
                        "title": "MTLBinaryArchiveDescriptor",
                        "type": "class"
                      },
                      {
                        "children": [
                          {
                            "title": "Error Codes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/none",
                            "title": "case none",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/invalidfile",
                            "title": "case invalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/compilationfailure",
                            "title": "case compilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/unexpectedelement",
                            "title": "case unexpectedElement",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/internalerror",
                            "title": "case internalError",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/none",
                            "title": "case none",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/invalidfile",
                            "title": "case invalidFile",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/compilationfailure",
                            "title": "case compilationFailure",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/unexpectedelement",
                            "title": "case unexpectedElement",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/internalerror",
                            "title": "case internalError",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code",
                        "title": "MTLBinaryArchiveError.Code",
                        "type": "enum"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchivedomain",
                        "title": "let MTLBinaryArchiveDomain: String",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/metal/shader-library-and-archive-creation",
                    "title": "Shader Library and Archive Creation",
                    "type": "collection"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/maximumconcurrentcompilationtaskcount",
                    "title": "var maximumConcurrentCompilationTaskCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/shouldmaximizeconcurrentcompilation",
                    "title": "var shouldMaximizeConcurrentCompilation: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/makecommandqueue(descriptor:)",
                    "title": "func makeCommandQueue(descriptor: MTLCommandQueueDescriptor) -> (any MTLCommandQueue)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldevice/makelogstate(descriptor:)",
                    "title": "func makeLogState(descriptor: MTLLogStateDescriptor) throws -> any MTLLogState",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtldevice",
                "title": "MTLDevice",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Locating GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/finding-multiple-gpus-on-an-intel-based-mac",
                    "title": "Finding Multiple GPUs on an Intel-based Mac",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/getting-the-gpu-that-drives-a-views-display",
                    "title": "Getting the GPU that Drives a View’s Display",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/mtlcopyalldevices()",
                    "title": "func MTLCopyAllDevices() -> [any MTLDevice]",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlcopyalldeviceswithobserver(handler:)",
                    "title": "func MTLCopyAllDevicesWithObserver(handler: MTLDeviceNotificationHandler) -> (devices: [any MTLDevice], observer: NSObject)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlremovedeviceobserver(_:)",
                    "title": "func MTLRemoveDeviceObserver(any NSObjectProtocol)",
                    "type": "func"
                  },
                  {
                    "external": true,
                    "path": "/documentation/coregraphics/1493900-cgdirectdisplaycopycurrentmetald",
                    "title": "func CGDirectDisplayCopyCurrentMetalDevice(CGDirectDisplayID) -> (any MTLDevice)?",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtldevicenotificationhandler",
                    "title": "MTLDeviceNotificationHandler",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a notification name",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldevicenotificationname/wasadded",
                        "title": "static let wasAdded: MTLDeviceNotificationName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevicenotificationname/removalrequested",
                        "title": "static let removalRequested: MTLDeviceNotificationName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevicenotificationname/wasremoved",
                        "title": "static let wasRemoved: MTLDeviceNotificationName",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtldevicenotificationname/init(rawvalue:)",
                        "title": "init(rawValue: String)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtldevicenotificationname",
                    "title": "MTLDeviceNotificationName",
                    "type": "struct"
                  },
                  {
                    "title": "Selecting GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/adjusting-for-gpu-memory-bandwidth-tradeoffs",
                    "title": "Adjusting for GPU Memory Bandwidth Tradeoffs",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/assessing-multi-gpu-and-multi-display-setups-on-an-intel-based-mac",
                    "title": "Assessing Multi-GPU and Multi-Display Setups on an Intel-Based Mac",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/selecting-device-objects-for-graphics-rendering",
                    "title": "Selecting Device Objects for Graphics Rendering",
                    "type": "sampleCode"
                  },
                  {
                    "path": "/documentation/metal/selecting-device-objects-for-compute-processing",
                    "title": "Selecting Device Objects for Compute Processing",
                    "type": "sampleCode"
                  },
                  {
                    "title": "Working with External GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/handling-external-gpu-additions-and-removals",
                    "title": "Handling External GPU Additions and Removals",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/transferring-data-between-connected-gpus",
                    "title": "Transferring Data Between Connected GPUs",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/transferring-data-with-infinity-fabric-link",
                    "title": "Transferring Data with Infinity Fabric Link",
                    "type": "sampleCode"
                  }
                ],
                "path": "/documentation/metal/multi-gpu-systems",
                "title": "Multi-GPU Systems",
                "type": "collection"
              },
              {
                "title": "Submitting Work to a GPU",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/setting-up-a-command-structure",
                "title": "Setting Up a Command Structure",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/makecommandbuffer(descriptor:)",
                    "title": "func makeCommandBuffer(descriptor: MTLCommandBufferDescriptor) -> (any MTLCommandBuffer)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/makecommandbuffer()",
                    "title": "func makeCommandBuffer() -> (any MTLCommandBuffer)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/makecommandbufferwithunretainedreferences()",
                    "title": "func makeCommandBufferWithUnretainedReferences() -> (any MTLCommandBuffer)?",
                    "type": "method"
                  },
                  {
                    "title": "Attaching Residency Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/addresidencyset(_:)",
                    "title": "func addResidencySet(any MTLResidencySet)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/addresidencysets(_:)",
                    "title": "func addResidencySets([any MTLResidencySet])",
                    "type": "method"
                  },
                  {
                    "title": "Detaching Residency Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/removeresidencyset(_:)",
                    "title": "func removeResidencySet(any MTLResidencySet)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/removeresidencysets(_:)",
                    "title": "func removeResidencySets([any MTLResidencySet])",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Command Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueue/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcommandqueue/insertdebugcaptureboundary()",
                    "title": "func insertDebugCaptureBoundary()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcommandqueue",
                "title": "MTLCommandQueue",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueuedescriptor/logstate",
                    "title": "var logState: (any MTLLogState)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandqueuedescriptor/maxcommandbuffercount",
                    "title": "var maxCommandBufferCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcommandqueuedescriptor",
                "title": "MTLCommandQueueDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating Command Encoders",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Render Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makerendercommandencoder(descriptor:)",
                        "title": "func makeRenderCommandEncoder(descriptor: MTLRenderPassDescriptor) -> (any MTLRenderCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "title": "Creating Parallel Render Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeparallelrendercommandencoder(descriptor:)",
                        "title": "func makeParallelRenderCommandEncoder(descriptor: MTLRenderPassDescriptor) -> (any MTLParallelRenderCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "title": "Creating Acceleration Structure Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeaccelerationstructurecommandencoder(descriptor:)",
                        "title": "func makeAccelerationStructureCommandEncoder(descriptor: MTLAccelerationStructurePassDescriptor) -> any MTLAccelerationStructureCommandEncoder",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeaccelerationstructurecommandencoder()",
                        "title": "func makeAccelerationStructureCommandEncoder() -> (any MTLAccelerationStructureCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "title": "Creating Compute Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makecomputecommandencoder(descriptor:)",
                        "title": "func makeComputeCommandEncoder(descriptor: MTLComputePassDescriptor) -> (any MTLComputeCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makecomputecommandencoder()",
                        "title": "func makeComputeCommandEncoder() -> (any MTLComputeCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makecomputecommandencoder(dispatchtype:)",
                        "title": "func makeComputeCommandEncoder(dispatchType: MTLDispatchType) -> (any MTLComputeCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "children": [
                          {
                            "title": "Execution Dispatch Types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldispatchtype/concurrent",
                            "title": "case concurrent",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtldispatchtype/serial",
                            "title": "case serial",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtldispatchtype/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtldispatchtype",
                        "title": "MTLDispatchType",
                        "type": "enum"
                      },
                      {
                        "title": "Creating Blit Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeblitcommandencoder()",
                        "title": "func makeBlitCommandEncoder() -> (any MTLBlitCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeblitcommandencoder(descriptor:)",
                        "title": "func makeBlitCommandEncoder(descriptor: MTLBlitPassDescriptor) -> (any MTLBlitCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "title": "Creating Resource State Encoders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/resourcestatecommandencoder(with:)",
                        "title": "func resourceStateCommandEncoder(with: MTLResourceStatePassDescriptor) -> (any MTLResourceStateCommandEncoder)?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/makeresourcestatecommandencoder()",
                        "title": "func makeResourceStateCommandEncoder() -> (any MTLResourceStateCommandEncoder)?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/command-encoder-factory-methods",
                    "title": "Command Encoder Factory Methods",
                    "type": "collection"
                  },
                  {
                    "title": "Attaching Residency Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/useresidencyset(_:)",
                    "title": "func useResidencySet(any MTLResidencySet)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/useresidencysets(_:)",
                    "title": "func useResidencySets([any MTLResidencySet])",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Passes with Events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/encodewaitforevent(_:value:)",
                    "title": "func encodeWaitForEvent(any MTLEvent, value: UInt64)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/encodesignalevent(_:value:)",
                    "title": "func encodeSignalEvent(any MTLEvent, value: UInt64)",
                    "type": "method"
                  },
                  {
                    "title": "Presenting a Drawable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/present(_:)",
                    "title": "func present(any MTLDrawable)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/present(_:attime:)",
                    "title": "func present(any MTLDrawable, atTime: CFTimeInterval)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/present(_:afterminimumduration:)",
                    "title": "func present(any MTLDrawable, afterMinimumDuration: CFTimeInterval)",
                    "type": "method"
                  },
                  {
                    "title": "Registering State Change Handlers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/addscheduledhandler(_:)",
                    "title": "func addScheduledHandler(MTLCommandBufferHandler)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/addcompletedhandler(_:)",
                    "title": "func addCompletedHandler(MTLCommandBufferHandler)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferhandler",
                    "title": "MTLCommandBufferHandler",
                    "type": "typealias"
                  },
                  {
                    "title": "Submitting a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/enqueue()",
                    "title": "func enqueue()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/commit()",
                    "title": "func commit()",
                    "type": "method"
                  },
                  {
                    "title": "Waiting for State Changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/waituntilscheduled()",
                    "title": "func waitUntilScheduled()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/waituntilcompleted()",
                    "title": "func waitUntilCompleted()",
                    "type": "method"
                  },
                  {
                    "title": "Troubleshooting a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffer/status",
                    "title": "var status: MTLCommandBufferStatus",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Command Buffer States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/notenqueued",
                        "title": "case notEnqueued",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/enqueued",
                        "title": "case enqueued",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/committed",
                        "title": "case committed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/scheduled",
                        "title": "case scheduled",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/completed",
                        "title": "case completed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/error",
                        "title": "case error",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferstatus/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcommandbufferstatus",
                    "title": "MTLCommandBufferStatus",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Identifying the Command Buffer",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/label",
                        "title": "var label: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/commandqueue",
                        "title": "var commandQueue: any MTLCommandQueue",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/device",
                        "title": "var device: any MTLDevice",
                        "type": "property"
                      },
                      {
                        "title": "Grouping Commands within a GPU Frame Capture",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/pushdebuggroup(_:)",
                        "title": "func pushDebugGroup(String)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/popdebuggroup()",
                        "title": "func popDebugGroup()",
                        "type": "method"
                      },
                      {
                        "title": "Getting Error Details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/error",
                        "title": "var error: (any Error)?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/erroroptions",
                        "title": "var errorOptions: MTLCommandBufferErrorOption",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Inspecting Execution Information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlcommandbufferencoderinfo/label",
                            "title": "var label: String",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlcommandbufferencoderinfo/debugsignposts",
                            "title": "var debugSignposts: [String]",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlcommandbufferencoderinfo/errorstate",
                            "title": "var errorState: MTLCommandEncoderErrorState",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Getting the Error State",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/completed",
                                "title": "case completed",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/pending",
                                "title": "case pending",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/affected",
                                "title": "case affected",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/faulted",
                                "title": "case faulted",
                                "type": "case"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/unknown",
                                "title": "case unknown",
                                "type": "case"
                              },
                              {
                                "title": "Initializers",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlcommandencodererrorstate/init(rawvalue:)",
                                "title": "init?(rawValue: Int)",
                                "type": "init"
                              }
                            ],
                            "path": "/documentation/metal/mtlcommandencodererrorstate",
                            "title": "MTLCommandEncoderErrorState",
                            "type": "enum"
                          }
                        ],
                        "path": "/documentation/metal/mtlcommandbufferencoderinfo",
                        "title": "MTLCommandBufferEncoderInfo",
                        "type": "protocol"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbufferencoderinfoerrorkey",
                        "title": "let MTLCommandBufferEncoderInfoErrorKey: String",
                        "type": "var"
                      },
                      {
                        "title": "Reading the Runtime Message Logs",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/logs-518l2",
                        "title": "var logs: MTLLogContainer",
                        "type": "property"
                      },
                      {
                        "title": "Checking Scheduling Times on the CPU",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/kernelstarttime",
                        "title": "var kernelStartTime: CFTimeInterval",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/kernelendtime",
                        "title": "var kernelEndTime: CFTimeInterval",
                        "type": "property"
                      },
                      {
                        "title": "Checking Execution Times on the GPU",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/gpustarttime",
                        "title": "var gpuStartTime: CFTimeInterval",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/gpuendtime",
                        "title": "var gpuEndTime: CFTimeInterval",
                        "type": "property"
                      },
                      {
                        "title": "Determining Whether to Maintain Strong References",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffer/retainedreferences",
                        "title": "var retainedReferences: Bool",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/command-buffer-debugging",
                    "title": "Command Buffer Debugging",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/metal/mtlcommandbuffer",
                "title": "MTLCommandBuffer",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferdescriptor/logstate",
                    "title": "var logState: (any MTLLogState)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferdescriptor/retainedreferences",
                    "title": "var retainedReferences: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbufferdescriptor/erroroptions",
                    "title": "var errorOptions: MTLCommandBufferErrorOption",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Buffer Error Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererroroption/encoderexecutionstatus",
                        "title": "static var encoderExecutionStatus: MTLCommandBufferErrorOption",
                        "type": "property"
                      },
                      {
                        "title": "Protocol Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererroroption/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcommandbuffererroroption",
                    "title": "MTLCommandBufferErrorOption",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/metal/mtlcommandbufferdescriptor",
                "title": "MTLCommandBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Errors Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/none",
                    "title": "static var none: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/timeout",
                    "title": "static var timeout: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/pagefault",
                    "title": "static var pageFault: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/notpermitted",
                    "title": "static var notPermitted: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/outofmemory",
                    "title": "static var outOfMemory: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/invalidresource",
                    "title": "static var invalidResource: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/memoryless",
                    "title": "static var memoryless: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/deviceremoved",
                    "title": "static var deviceRemoved: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/stackoverflow",
                    "title": "static var stackOverflow: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/accessrevoked",
                    "title": "static var accessRevoked: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/internal",
                    "title": "static var `internal`: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/timeout",
                        "title": "case timeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/pagefault",
                        "title": "case pageFault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/notpermitted",
                        "title": "case notPermitted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/invalidresource",
                        "title": "case invalidResource",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/memoryless",
                        "title": "case memoryless",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/deviceremoved",
                        "title": "case deviceRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/stackoverflow",
                        "title": "case stackOverflow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/accessrevoked",
                        "title": "static var accessRevoked: MTLCommandBufferError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/timeout",
                        "title": "case timeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/pagefault",
                        "title": "case pageFault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/notpermitted",
                        "title": "case notPermitted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/invalidresource",
                        "title": "case invalidResource",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/memoryless",
                        "title": "case memoryless",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/deviceremoved",
                        "title": "case deviceRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/stackoverflow",
                        "title": "case stackOverflow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "title": "Deprecated",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/blacklisted",
                        "title": "case blacklisted",
                        "type": "case"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/blacklisted",
                        "title": "case blacklisted",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code",
                    "title": "MTLCommandBufferError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererrordomain",
                    "title": "let MTLCommandBufferErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/blacklisted",
                    "title": "static var blacklisted: MTLCommandBufferError.Code",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcommandbuffererror-swift.struct",
                "title": "MTLCommandBufferError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Ending Command Encoding",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/endencoding()",
                    "title": "func endEncoding()",
                    "type": "method"
                  },
                  {
                    "title": "Annotating the Command Buffer with Debug Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/insertdebugsignpost(_:)",
                    "title": "func insertDebugSignpost(String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/pushdebuggroup(_:)",
                    "title": "func pushDebugGroup(String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/popdebuggroup()",
                    "title": "func popDebugGroup()",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Command Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandencoder/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcommandencoder",
                "title": "MTLCommandEncoder",
                "type": "protocol"
              },
              {
                "title": "Suspending Work on a GPU",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/preparing-your-metal-app-to-run-in-the-background",
                "title": "Preparing Your Metal App to Run in the Background",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/gpu-devices-and-work-submission",
            "title": "GPU Devices and Work Submission",
            "type": "collection"
          },
          {
            "title": "Command Encoders",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Encoding a Render Pass",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Encoding Configuration Commands",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Configuring Pipeline State",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setrenderpipelinestate(_:)",
                        "title": "func setRenderPipelineState(any MTLRenderPipelineState)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring the Actions for Attachments",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setcolorstoreaction(_:index:)",
                        "title": "func setColorStoreAction(MTLStoreAction, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setcolorstoreactionoptions(_:index:)",
                        "title": "func setColorStoreActionOptions(MTLStoreActionOptions, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthstoreaction(_:)",
                        "title": "func setDepthStoreAction(MTLStoreAction)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthstoreactionoptions(_:)",
                        "title": "func setDepthStoreActionOptions(MTLStoreActionOptions)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilstoreaction(_:)",
                        "title": "func setStencilStoreAction(MTLStoreAction)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilstoreactionoptions(_:)",
                        "title": "func setStencilStoreActionOptions(MTLStoreActionOptions)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Blend Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setblendcolor(red:green:blue:alpha:)",
                        "title": "func setBlendColor(red: Float, green: Float, blue: Float, alpha: Float)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Rendering Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settrianglefillmode(_:)",
                        "title": "func setTriangleFillMode(MTLTriangleFillMode)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfrontfacing(_:)",
                        "title": "func setFrontFacing(MTLWinding)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setcullmode(_:)",
                        "title": "func setCullMode(MTLCullMode)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Depth and Stencil Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthstencilstate(_:)",
                        "title": "func setDepthStencilState((any MTLDepthStencilState)?)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthbias(_:slopescale:clamp:)",
                        "title": "func setDepthBias(Float, slopeScale: Float, clamp: Float)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setdepthclipmode(_:)",
                        "title": "func setDepthClipMode(MTLDepthClipMode)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilreferencevalue(_:)",
                        "title": "func setStencilReferenceValue(UInt32)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setstencilreferencevalues(front:back:)",
                        "title": "func setStencilReferenceValues(front: UInt32, back: UInt32)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Viewport and Scissor Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setviewport(_:)",
                        "title": "func setViewport(MTLViewport)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setviewports(_:)",
                        "title": "func setViewports([MTLViewport])",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setscissorrect(_:)",
                        "title": "func setScissorRect(MTLScissorRect)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setscissorrects(_:)",
                        "title": "func setScissorRects([MTLScissorRect])",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Visibility Testing",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvisibilityresultmode(_:offset:)",
                        "title": "func setVisibilityResultMode(MTLVisibilityResultMode, offset: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Vertex Amplification",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexamplificationcount(_:viewmappings:)",
                        "title": "func setVertexAmplificationCount(Int, viewMappings: UnsafePointer<MTLVertexAmplificationViewMapping>?)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Tessellation Factors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settessellationfactorscale(_:)",
                        "title": "func setTessellationFactorScale(Float)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settessellationfactorbuffer(_:offset:instancestride:)",
                        "title": "func setTessellationFactorBuffer((any MTLBuffer)?, offset: Int, instanceStride: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Configuring Persistent Threadgroup Memory",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectthreadgroupmemorylength(_:index:)",
                        "title": "func setObjectThreadgroupMemoryLength(Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setthreadgroupmemorylength(_:offset:index:)",
                        "title": "func setThreadgroupMemoryLength(Int, offset: Int, index: Int)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/render-pass-configuration",
                    "title": "Render Pass Configuration",
                    "type": "collection"
                  },
                  {
                    "title": "Encoding Resource Preparation Commands",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers for Object Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectbuffer(_:offset:index:)",
                        "title": "func setObjectBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectbuffers(_:offsets:range:)",
                        "title": "func setObjectBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectbytes(_:length:index:)",
                        "title": "func setObjectBytes(UnsafeRawPointer, length: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectbufferoffset(_:index:)",
                        "title": "func setObjectBufferOffset(Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures for Object Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjecttexture(_:index:)",
                        "title": "func setObjectTexture((any MTLTexture)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjecttextures(_:range:)",
                        "title": "func setObjectTextures([(any MTLTexture)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States for Object Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectsamplerstate(_:index:)",
                        "title": "func setObjectSamplerState((any MTLSamplerState)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "func setObjectSamplerState((any MTLSamplerState)?, lodMinClamp: Float, lodMaxClamp: Float, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectsamplerstates(_:range:)",
                        "title": "func setObjectSamplerStates([(any MTLSamplerState)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setobjectsamplerstates(_:lodminclamps:lodmaxclamps:range:)",
                        "title": "func setObjectSamplerStates([(any MTLSamplerState)?], lodMinClamps: [Float], lodMaxClamps: [Float], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Buffers for Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshbuffer(_:offset:index:)",
                        "title": "func setMeshBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshbuffers(_:offsets:range:)",
                        "title": "func setMeshBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshbytes(_:length:index:)",
                        "title": "func setMeshBytes(UnsafeRawPointer, length: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshbufferoffset(_:index:)",
                        "title": "func setMeshBufferOffset(Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures for Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshtexture(_:index:)",
                        "title": "func setMeshTexture((any MTLTexture)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshtextures(_:range:)",
                        "title": "func setMeshTextures([(any MTLTexture)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States for Mesh Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshsamplerstate(_:index:)",
                        "title": "func setMeshSamplerState((any MTLSamplerState)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "func setMeshSamplerState((any MTLSamplerState)?, lodMinClamp: Float, lodMaxClamp: Float, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshsamplerstates(_:range:)",
                        "title": "func setMeshSamplerStates([(any MTLSamplerState)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setmeshsamplerstates(_:lodminclamps:lodmaxclamps:range:)",
                        "title": "func setMeshSamplerStates([(any MTLSamplerState)?], lodMinClamps: [Float], lodMaxClamps: [Float], range: Range<Int>)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/mesh-and-object-shader-resource-preparation-commands",
                    "title": "Mesh and Object Shader Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexbuffer(_:offset:index:)",
                        "title": "func setVertexBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexbuffers(_:offsets:range:)",
                        "title": "func setVertexBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexbytes(_:length:index:)",
                        "title": "func setVertexBytes(UnsafeRawPointer, length: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexbufferoffset(_:index:)",
                        "title": "func setVertexBufferOffset(Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertextexture(_:index:)",
                        "title": "func setVertexTexture((any MTLTexture)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertextextures(_:range:)",
                        "title": "func setVertexTextures([(any MTLTexture)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexsamplerstate(_:index:)",
                        "title": "func setVertexSamplerState((any MTLSamplerState)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "func setVertexSamplerState((any MTLSamplerState)?, lodMinClamp: Float, lodMaxClamp: Float, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexsamplerstates(_:range:)",
                        "title": "func setVertexSamplerStates([(any MTLSamplerState)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexsamplerstates(_:lodminclamps:lodmaxclamps:range:)",
                        "title": "func setVertexSamplerStates([(any MTLSamplerState)?], lodMinClamps: [Float], lodMaxClamps: [Float], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Acceleration Structures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexaccelerationstructure(_:bufferindex:)",
                        "title": "func setVertexAccelerationStructure((any MTLAccelerationStructure)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Visible Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexvisiblefunctiontable(_:bufferindex:)",
                        "title": "func setVertexVisibleFunctionTable((any MTLVisibleFunctionTable)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexvisiblefunctiontables(_:bufferrange:)",
                        "title": "func setVertexVisibleFunctionTables([(any MTLVisibleFunctionTable)?], bufferRange: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Intersection Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexintersectionfunctiontable(_:bufferindex:)",
                        "title": "func setVertexIntersectionFunctionTable((any MTLIntersectionFunctionTable)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setvertexintersectionfunctiontables(_:bufferrange:)",
                        "title": "func setVertexIntersectionFunctionTables([(any MTLIntersectionFunctionTable)?], bufferRange: Range<Int>)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/vertex-shader-resource-preparation-commands",
                    "title": "Vertex Shader Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentbuffer(_:offset:index:)",
                        "title": "func setFragmentBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentbuffers(_:offsets:range:)",
                        "title": "func setFragmentBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentbytes(_:length:index:)",
                        "title": "func setFragmentBytes(UnsafeRawPointer, length: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentbufferoffset(_:index:)",
                        "title": "func setFragmentBufferOffset(Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmenttexture(_:index:)",
                        "title": "func setFragmentTexture((any MTLTexture)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmenttextures(_:range:)",
                        "title": "func setFragmentTextures([(any MTLTexture)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentsamplerstate(_:index:)",
                        "title": "func setFragmentSamplerState((any MTLSamplerState)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "func setFragmentSamplerState((any MTLSamplerState)?, lodMinClamp: Float, lodMaxClamp: Float, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentsamplerstates(_:range:)",
                        "title": "func setFragmentSamplerStates([(any MTLSamplerState)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentsamplerstates(_:lodminclamps:lodmaxclamps:range:)",
                        "title": "func setFragmentSamplerStates([(any MTLSamplerState)?], lodMinClamps: [Float], lodMaxClamps: [Float], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Acceleration Structures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentaccelerationstructure(_:bufferindex:)",
                        "title": "func setFragmentAccelerationStructure((any MTLAccelerationStructure)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Visible Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentvisiblefunctiontable(_:bufferindex:)",
                        "title": "func setFragmentVisibleFunctionTable((any MTLVisibleFunctionTable)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentvisiblefunctiontables(_:bufferrange:)",
                        "title": "func setFragmentVisibleFunctionTables([(any MTLVisibleFunctionTable)?], bufferRange: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Intersection Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentintersectionfunctiontable(_:bufferindex:)",
                        "title": "func setFragmentIntersectionFunctionTable((any MTLIntersectionFunctionTable)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/setfragmentintersectionfunctiontables(_:bufferrange:)",
                        "title": "func setFragmentIntersectionFunctionTables([(any MTLIntersectionFunctionTable)?], bufferRange: Range<Int>)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/fragment-shader-resource-preparation-commands",
                    "title": "Fragment Shader Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Assigning Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilebuffer(_:offset:index:)",
                        "title": "func setTileBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilebuffers(_:offsets:range:)",
                        "title": "func setTileBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilebytes(_:length:index:)",
                        "title": "func setTileBytes(UnsafeRawPointer, length: Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilebufferoffset(_:index:)",
                        "title": "func setTileBufferOffset(Int, index: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Textures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settiletexture(_:index:)",
                        "title": "func setTileTexture((any MTLTexture)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settiletextures(_:range:)",
                        "title": "func setTileTextures([(any MTLTexture)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Sampler States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilesamplerstate(_:index:)",
                        "title": "func setTileSamplerState((any MTLSamplerState)?, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilesamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                        "title": "func setTileSamplerState((any MTLSamplerState)?, lodMinClamp: Float, lodMaxClamp: Float, index: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilesamplerstates(_:range:)",
                        "title": "func setTileSamplerStates([(any MTLSamplerState)?], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilesamplerstates(_:lodminclamps:lodmaxclamps:range:)",
                        "title": "func setTileSamplerStates([(any MTLSamplerState)?], lodMinClamps: [Float], lodMaxClamps: [Float], range: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Acceleration Structures",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settileaccelerationstructure(_:bufferindex:)",
                        "title": "func setTileAccelerationStructure((any MTLAccelerationStructure)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Visible Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilevisiblefunctiontable(_:bufferindex:)",
                        "title": "func setTileVisibleFunctionTable((any MTLVisibleFunctionTable)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settilevisiblefunctiontables(_:bufferrange:)",
                        "title": "func setTileVisibleFunctionTables([(any MTLVisibleFunctionTable)?], bufferRange: Range<Int>)",
                        "type": "method"
                      },
                      {
                        "title": "Assigning Intersection Function Tables",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settileintersectionfunctiontable(_:bufferindex:)",
                        "title": "func setTileIntersectionFunctionTable((any MTLIntersectionFunctionTable)?, bufferIndex: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/settileintersectionfunctiontables(_:bufferrange:)",
                        "title": "func setTileIntersectionFunctionTables([(any MTLIntersectionFunctionTable)?], bufferRange: Range<Int>)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/tile-shaders-resource-preparation-commands",
                    "title": "Tile Shaders Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Loading Individual Resources for Argument Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/useresource(_:usage:stages:)",
                        "title": "func useResource(any MTLResource, usage: MTLResourceUsage, stages: MTLRenderStages)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/useresources(_:usage:stages:)",
                        "title": "func useResources([any MTLResource], usage: MTLResourceUsage, stages: MTLRenderStages)",
                        "type": "method"
                      },
                      {
                        "title": "Loading Heaps and the Resources They Contain for Argument Buffers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/useheap(_:stages:)",
                        "title": "func useHeap(any MTLHeap, stages: MTLRenderStages)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/useheaps(_:stages:)",
                        "title": "func useHeaps([any MTLHeap], stages: MTLRenderStages)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/argument-buffer-resource-preparation-commands",
                    "title": "Argument Buffer Resource Preparation Commands",
                    "type": "collection"
                  },
                  {
                    "title": "Encoding Draw Commands",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Drawing with Meshes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawmeshthreads(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                        "title": "func drawMeshThreads(MTLSize, threadsPerObjectThreadgroup: MTLSize, threadsPerMeshThreadgroup: MTLSize)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawmeshthreadgroups(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                        "title": "func drawMeshThreadgroups(MTLSize, threadsPerObjectThreadgroup: MTLSize, threadsPerMeshThreadgroup: MTLSize)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawmeshthreadgroups(indirectbuffer:indirectbufferoffset:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                        "title": "func drawMeshThreadgroups(indirectBuffer: any MTLBuffer, indirectBufferOffset: Int, threadsPerObjectThreadgroup: MTLSize, threadsPerMeshThreadgroup: MTLSize)",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Vertices",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:vertexstart:vertexcount:)",
                        "title": "func drawPrimitives(type: MTLPrimitiveType, vertexStart: Int, vertexCount: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:vertexstart:vertexcount:instancecount:)",
                        "title": "func drawPrimitives(type: MTLPrimitiveType, vertexStart: Int, vertexCount: Int, instanceCount: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:vertexstart:vertexcount:instancecount:baseinstance:)",
                        "title": "func drawPrimitives(type: MTLPrimitiveType, vertexStart: Int, vertexCount: Int, instanceCount: Int, baseInstance: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawprimitives(type:indirectbuffer:indirectbufferoffset:)",
                        "title": "func drawPrimitives(type: MTLPrimitiveType, indirectBuffer: any MTLBuffer, indirectBufferOffset: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Indexed Vertices",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indexcount:indextype:indexbuffer:indexbufferoffset:)",
                        "title": "func drawIndexedPrimitives(type: MTLPrimitiveType, indexCount: Int, indexType: MTLIndexType, indexBuffer: any MTLBuffer, indexBufferOffset: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indexcount:indextype:indexbuffer:indexbufferoffset:instancecount:)",
                        "title": "func drawIndexedPrimitives(type: MTLPrimitiveType, indexCount: Int, indexType: MTLIndexType, indexBuffer: any MTLBuffer, indexBufferOffset: Int, instanceCount: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indexcount:indextype:indexbuffer:indexbufferoffset:instancecount:basevertex:baseinstance:)",
                        "title": "func drawIndexedPrimitives(type: MTLPrimitiveType, indexCount: Int, indexType: MTLIndexType, indexBuffer: any MTLBuffer, indexBufferOffset: Int, instanceCount: Int, baseVertex: Int, baseInstance: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedprimitives(type:indextype:indexbuffer:indexbufferoffset:indirectbuffer:indirectbufferoffset:)",
                        "title": "func drawIndexedPrimitives(type: MTLPrimitiveType, indexType: MTLIndexType, indexBuffer: any MTLBuffer, indexBufferOffset: Int, indirectBuffer: any MTLBuffer, indirectBufferOffset: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Tessellation Patches",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawpatches(numberofpatchcontrolpoints:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:instancecount:baseinstance:)",
                        "title": "func drawPatches(numberOfPatchControlPoints: Int, patchStart: Int, patchCount: Int, patchIndexBuffer: (any MTLBuffer)?, patchIndexBufferOffset: Int, instanceCount: Int, baseInstance: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawpatches(numberofpatchcontrolpoints:patchindexbuffer:patchindexbufferoffset:indirectbuffer:indirectbufferoffset:)",
                        "title": "func drawPatches(numberOfPatchControlPoints: Int, patchIndexBuffer: (any MTLBuffer)?, patchIndexBufferOffset: Int, indirectBuffer: any MTLBuffer, indirectBufferOffset: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Indexed Tessellation Patches",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedpatches(numberofpatchcontrolpoints:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:controlpointindexbuffer:controlpointindexbufferoffset:instancecount:baseinstance:)",
                        "title": "func drawIndexedPatches(numberOfPatchControlPoints: Int, patchStart: Int, patchCount: Int, patchIndexBuffer: (any MTLBuffer)?, patchIndexBufferOffset: Int, controlPointIndexBuffer: any MTLBuffer, controlPointIndexBufferOffset: Int, instanceCount: Int, baseInstance: Int)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/drawindexedpatches(numberofpatchcontrolpoints:patchindexbuffer:patchindexbufferoffset:controlpointindexbuffer:controlpointindexbufferoffset:indirectbuffer:indirectbufferoffset:)",
                        "title": "func drawIndexedPatches(numberOfPatchControlPoints: Int, patchIndexBuffer: (any MTLBuffer)?, patchIndexBufferOffset: Int, controlPointIndexBuffer: any MTLBuffer, controlPointIndexBufferOffset: Int, indirectBuffer: any MTLBuffer, indirectBufferOffset: Int)",
                        "type": "method"
                      },
                      {
                        "title": "Drawing with Tile Shaders",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/dispatchthreadspertile(_:)",
                        "title": "func dispatchThreadsPerTile(MTLSize)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/tilewidth",
                        "title": "var tileWidth: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlrendercommandencoder/tileheight",
                        "title": "var tileHeight: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/render-pass-drawing-commands",
                    "title": "Render Pass Drawing Commands",
                    "type": "collection"
                  },
                  {
                    "title": "Encoding Resource Synchronization Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/waitforfence(_:before:)",
                    "title": "func waitForFence(any MTLFence, before: MTLRenderStages)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/updatefence(_:after:)",
                    "title": "func updateFence(any MTLFence, after: MTLRenderStages)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/memorybarrier(resources:after:before:)",
                    "title": "func memoryBarrier(resources: [any MTLResource], after: MTLRenderStages, before: MTLRenderStages)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/memorybarrier(scope:after:before:)",
                    "title": "func memoryBarrier(scope: MTLBarrierScope, after: MTLRenderStages, before: MTLRenderStages)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Commands that Run Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/executecommandsinbuffer(_:range:)",
                    "title": "func executeCommandsInBuffer(any MTLIndirectCommandBuffer, range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/executecommandsinbuffer(_:indirectbuffer:offset:)",
                    "title": "func executeCommandsInBuffer(any MTLIndirectCommandBuffer, indirectBuffer: any MTLBuffer, offset: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Data Sampling Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "func sampleCounters(sampleBuffer: any MTLCounterSampleBuffer, sampleIndex: Int, barrier: Bool)",
                    "type": "method"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Deprecated Methods",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/useresource(_:usage:)",
                        "title": "func useResource(any MTLResource, usage: MTLResourceUsage)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/use(_:usage:stages:)",
                        "title": "func use(any MTLResource, usage: MTLResourceUsage, stages: MTLRenderStages)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/useresources(_:usage:)",
                        "title": "func useResources([any MTLResource], usage: MTLResourceUsage)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/use(_:count:usage:stages:)",
                        "title": "func use(UnsafePointer<any MTLResource>, count: Int, usage: MTLResourceUsage, stages: MTLRenderStages)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/useheap(_:)",
                        "title": "func useHeap(any MTLHeap)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/use(_:stages:)",
                        "title": "func use(any MTLHeap, stages: MTLRenderStages)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/useheaps(_:)",
                        "title": "func useHeaps([any MTLHeap])",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/use(_:count:stages:)",
                        "title": "func use(UnsafePointer<any MTLHeap>, count: Int, stages: MTLRenderStages)",
                        "type": "method"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlrendercommandencoder/texturebarrier()",
                        "title": "func textureBarrier()",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/metal/deprecated-symbols",
                    "title": "Deprecated Symbols",
                    "type": "collection"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbuffer(_:offset:attributestride:index:)",
                    "title": "func setVertexBuffer((any MTLBuffer)?, offset: Int, attributeStride: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbufferoffset(offset:attributestride:index:)",
                    "title": "func setVertexBufferOffset(offset: Int, attributeStride: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbuffers(_:offsets:attributestrides:range:)",
                    "title": "func setVertexBuffers([(any MTLBuffer)?], offsets: [Int], attributeStrides: [Int], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrendercommandencoder/setvertexbytes(_:length:attributestride:index:)",
                    "title": "func setVertexBytes(UnsafeRawPointer, length: Int, attributeStride: Int, index: Int)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrendercommandencoder",
                "title": "MTLRenderCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltrianglefillmode/fill",
                    "title": "case fill",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtltrianglefillmode/lines",
                    "title": "case lines",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltrianglefillmode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtltrianglefillmode",
                "title": "MTLTriangleFillMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlwinding/clockwise",
                    "title": "case clockwise",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlwinding/counterclockwise",
                    "title": "case counterClockwise",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlwinding/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlwinding",
                "title": "MTLWinding",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcullmode/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcullmode/front",
                    "title": "case front",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcullmode/back",
                    "title": "case back",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcullmode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcullmode",
                "title": "MTLCullMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/point",
                    "title": "case point",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/line",
                    "title": "case line",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/linestrip",
                    "title": "case lineStrip",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/triangle",
                    "title": "case triangle",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/trianglestrip",
                    "title": "case triangleStrip",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitivetype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlprimitivetype",
                "title": "MTLPrimitiveType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindextype/uint16",
                    "title": "case uint16",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlindextype/uint32",
                    "title": "case uint32",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindextype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlindextype",
                "title": "MTLIndexType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthclipmode/clip",
                    "title": "case clip",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldepthclipmode/clamp",
                    "title": "case clamp",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthclipmode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtldepthclipmode",
                "title": "MTLDepthClipMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisibilityresultmode/disabled",
                    "title": "case disabled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlvisibilityresultmode/boolean",
                    "title": "case boolean",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlvisibilityresultmode/counting",
                    "title": "case counting",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisibilityresultmode/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlvisibilityresultmode",
                "title": "MTLVisibilityResultMode",
                "type": "enum"
              },
              {
                "title": "Encoding a Render Pass in Parallel",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Render Command Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/makerendercommandencoder()",
                    "title": "func makeRenderCommandEncoder() -> (any MTLRenderCommandEncoder)?",
                    "type": "method"
                  },
                  {
                    "title": "Setting Render Pass State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setcolorstoreaction(_:index:)",
                    "title": "func setColorStoreAction(MTLStoreAction, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setcolorstoreactionoptions(_:index:)",
                    "title": "func setColorStoreActionOptions(MTLStoreActionOptions, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setdepthstoreaction(_:)",
                    "title": "func setDepthStoreAction(MTLStoreAction)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setdepthstoreactionoptions(_:)",
                    "title": "func setDepthStoreActionOptions(MTLStoreActionOptions)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setstencilstoreaction(_:)",
                    "title": "func setStencilStoreAction(MTLStoreAction)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlparallelrendercommandencoder/setstencilstoreactionoptions(_:)",
                    "title": "func setStencilStoreActionOptions(MTLStoreActionOptions)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlparallelrendercommandencoder",
                "title": "MTLParallelRenderCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlloadaction/dontcare",
                    "title": "case dontCare",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlloadaction/load",
                    "title": "case load",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlloadaction/clear",
                    "title": "case clear",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlloadaction/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlloadaction",
                "title": "MTLLoadAction",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/dontcare",
                    "title": "case dontCare",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/store",
                    "title": "case store",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/multisampleresolve",
                    "title": "case multisampleResolve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/storeandmultisampleresolve",
                    "title": "case storeAndMultisampleResolve",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/customsampledepthstore",
                    "title": "case customSampleDepthStore",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreaction/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlstoreaction",
                "title": "MTLStoreAction",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreactionoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreactionoptions/customsamplepositions",
                    "title": "static var customSamplePositions: MTLStoreActionOptions",
                    "type": "property"
                  },
                  {
                    "title": "Using Programmable Sample Positions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstoreactionoptions/customsamplepositions",
                    "title": "static var customSamplePositions: MTLStoreActionOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlstoreactionoptions",
                "title": "MTLStoreActionOptions",
                "type": "struct"
              },
              {
                "title": "Configuring a Render Command Encoder",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Attachments for a Rendering Pass",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/colorattachments",
                    "title": "var colorAttachments: MTLRenderPassColorAttachmentDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/depthattachment",
                    "title": "var depthAttachment: MTLRenderPassDepthAttachmentDescriptor!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/stencilattachment",
                    "title": "var stencilAttachment: MTLRenderPassStencilAttachmentDescriptor!",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Visibility Result Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/visibilityresultbuffer",
                    "title": "var visibilityResultBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "title": "Layered Rendering",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rendertargetarraylength",
                    "title": "var renderTargetArrayLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rendertargetwidth",
                    "title": "var renderTargetWidth: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rendertargetheight",
                    "title": "var renderTargetHeight: Int",
                    "type": "property"
                  },
                  {
                    "title": "Using Programmable Sample Positions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplepositionmake(_:_:)",
                    "title": "func MTLSamplePositionMake(Float, Float) -> MTLSamplePosition",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/setsamplepositions(_:)",
                    "title": "func setSamplePositions([MTLSamplePosition])",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/getsamplepositions()",
                    "title": "func getSamplePositions() -> [MTLSamplePosition]",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Tile Shading Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/imageblocksamplelength",
                    "title": "var imageblockSampleLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/threadgroupmemorylength",
                    "title": "var threadgroupMemoryLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/tilewidth",
                    "title": "var tileWidth: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/tileheight",
                    "title": "var tileHeight: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Sample Counts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/defaultrastersamplecount",
                    "title": "var defaultRasterSampleCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying a Rasterization Rate Map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/rasterizationratemap",
                    "title": "var rasterizationRateMap: (any MTLRasterizationRateMap)?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Sample Buffers for GPU Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdescriptor/samplebufferattachments",
                    "title": "var sampleBufferAttachments: MTLRenderPassSampleBufferAttachmentDescriptorArray",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassdescriptor",
                "title": "MTLRenderPassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Texture for the Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/texture",
                    "title": "var texture: (any MTLTexture)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/level",
                    "title": "var level: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/slice",
                    "title": "var slice: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/depthplane",
                    "title": "var depthPlane: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rendering Pass Actions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/loadaction",
                    "title": "var loadAction: MTLLoadAction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/storeaction",
                    "title": "var storeAction: MTLStoreAction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/storeactionoptions",
                    "title": "var storeActionOptions: MTLStoreActionOptions",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Texture to Resolve Multisample Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolvetexture",
                    "title": "var resolveTexture: (any MTLTexture)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolvelevel",
                    "title": "var resolveLevel: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolveslice",
                    "title": "var resolveSlice: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassattachmentdescriptor/resolvedepthplane",
                    "title": "var resolveDepthPlane: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassattachmentdescriptor",
                "title": "MTLRenderPassAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Description of a Color Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLRenderPassColorAttachmentDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptorarray",
                "title": "MTLRenderPassColorAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Clearing Value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptor/clearcolor",
                    "title": "var clearColor: MTLClearColor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolormake(_:_:_:_:)",
                    "title": "func MTLClearColorMake(Double, Double, Double, Double) -> MTLClearColor",
                    "type": "func"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasscolorattachmentdescriptor",
                "title": "MTLRenderPassColorAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Fields",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/init(red:green:blue:alpha:)",
                    "title": "init(red: Double, green: Double, blue: Double, alpha: Double)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/alpha",
                    "title": "var alpha: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/blue",
                    "title": "var blue: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/green",
                    "title": "var green: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/red",
                    "title": "var red: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/green",
                    "title": "var green: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/blue",
                    "title": "var blue: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlclearcolor/alpha",
                    "title": "var alpha: Double",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlclearcolor",
                "title": "MTLClearColor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying Clearing Value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdepthattachmentdescriptor/cleardepth",
                    "title": "var clearDepth: Double",
                    "type": "property"
                  },
                  {
                    "title": "MSAA Depth Resolve",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassdepthattachmentdescriptor/depthresolvefilter",
                    "title": "var depthResolveFilter: MTLMultisampleDepthResolveFilter",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassdepthattachmentdescriptor",
                "title": "MTLRenderPassDepthAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisampledepthresolvefilter/sample0",
                    "title": "case sample0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisampledepthresolvefilter/min",
                    "title": "case min",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisampledepthresolvefilter/max",
                    "title": "case max",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisampledepthresolvefilter/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlmultisampledepthresolvefilter",
                "title": "MTLMultisampleDepthResolveFilter",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLTileRenderPipelineColorAttachmentDescriptor",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptorarray",
                "title": "MTLTileRenderPipelineColorAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Resolve Filter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassstencilattachmentdescriptor/stencilresolvefilter",
                    "title": "var stencilResolveFilter: MTLMultisampleStencilResolveFilter",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Stencil Clear Value",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpassstencilattachmentdescriptor/clearstencil",
                    "title": "var clearStencil: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpassstencilattachmentdescriptor",
                "title": "MTLRenderPassStencilAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisamplestencilresolvefilter/depthresolvedsample",
                    "title": "case depthResolvedSample",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisamplestencilresolvefilter/sample0",
                    "title": "case sample0",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmultisamplestencilresolvefilter/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlmultisamplestencilresolvefilter",
                "title": "MTLMultisampleStencilResolveFilter",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLRenderPassSampleBufferAttachmentDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptorarray",
                "title": "MTLRenderPassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "var sampleBuffer: (any MTLCounterSampleBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/startofvertexsampleindex",
                    "title": "var startOfVertexSampleIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/endofvertexsampleindex",
                    "title": "var endOfVertexSampleIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/startoffragmentsampleindex",
                    "title": "var startOfFragmentSampleIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor/endoffragmentsampleindex",
                    "title": "var endOfFragmentSampleIndex: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpasssamplebufferattachmentdescriptor",
                "title": "MTLRenderPassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "title": "Render Pipeline States",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  },
                  {
                    "title": "Checking Object Shader Memory Requirements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadsperobjectthreadgroup",
                    "title": "var maxTotalThreadsPerObjectThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/objectthreadexecutionwidth",
                    "title": "var objectThreadExecutionWidth: Int",
                    "type": "property"
                  },
                  {
                    "title": "Checking Mesh Shader Memory Requirements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadspermeshthreadgroup",
                    "title": "var maxTotalThreadsPerMeshThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadgroupspermeshgrid",
                    "title": "var maxTotalThreadgroupsPerMeshGrid: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/meshthreadexecutionwidth",
                    "title": "var meshThreadExecutionWidth: Int",
                    "type": "property"
                  },
                  {
                    "title": "Checking Tile Shader Memory Requirements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/maxtotalthreadsperthreadgroup",
                    "title": "var maxTotalThreadsPerThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/threadgroupsizematchestilesize",
                    "title": "var threadgroupSizeMatchesTileSize: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/imageblocksamplelength",
                    "title": "var imageblockSampleLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/imageblockmemorylength(fordimensions:)",
                    "title": "func imageblockMemoryLength(forDimensions: MTLSize) -> Int",
                    "type": "method"
                  },
                  {
                    "title": "Checking Feature Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/supportindirectcommandbuffers",
                    "title": "var supportIndirectCommandBuffers: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Checking Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/shadervalidation",
                    "title": "var shaderValidation: MTLShaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Creating Function Handles and Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/functionhandle(function:stage:)",
                    "title": "func functionHandle(function: any MTLFunction, stage: MTLRenderStages) -> (any MTLFunctionHandle)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/makevisiblefunctiontable(descriptor:stage:)",
                    "title": "func makeVisibleFunctionTable(descriptor: MTLVisibleFunctionTableDescriptor, stage: MTLRenderStages) -> (any MTLVisibleFunctionTable)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/makeintersectionfunctiontable(descriptor:stage:)",
                    "title": "func makeIntersectionFunctionTable(descriptor: MTLIntersectionFunctionTableDescriptor, stage: MTLRenderStages) -> (any MTLIntersectionFunctionTable)?",
                    "type": "method"
                  },
                  {
                    "title": "Creating Modified Clones of the Render Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinestate/makerenderpipelinestate(additionalbinaryfunctions:)",
                    "title": "func makeRenderPipelineState(additionalBinaryFunctions: MTLRenderPipelineFunctionsDescriptor) throws -> any MTLRenderPipelineState",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinestate",
                "title": "MTLRenderPipelineState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Render Pipeline State Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Graphics Functions and Associated Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexfunction",
                    "title": "var vertexFunction: (any MTLFunction)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentfunction",
                    "title": "var fragmentFunction: (any MTLFunction)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxvertexcallstackdepth",
                    "title": "var maxVertexCallStackDepth: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxfragmentcallstackdepth",
                    "title": "var maxFragmentCallStackDepth: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Buffer Layouts and Fetch Behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexdescriptor",
                    "title": "var vertexDescriptor: MTLVertexDescriptor?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexbuffers",
                    "title": "var vertexBuffers: MTLPipelineBufferDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentbuffers",
                    "title": "var fragmentBuffers: MTLPipelineBufferDescriptorArray",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rendering Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/reset()",
                    "title": "func reset()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/colorattachments",
                    "title": "var colorAttachments: MTLRenderPipelineColorAttachmentDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/depthattachmentpixelformat",
                    "title": "var depthAttachmentPixelFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/stencilattachmentpixelformat",
                    "title": "var stencilAttachmentPixelFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rasterization and Visibility State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/isalphatocoverageenabled",
                    "title": "var isAlphaToCoverageEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/isalphatooneenabled",
                    "title": "var isAlphaToOneEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/israsterizationenabled",
                    "title": "var isRasterizationEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/inputprimitivetopology",
                    "title": "var inputPrimitiveTopology: MTLPrimitiveTopologyClass",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/rastersamplecount",
                    "title": "var rasterSampleCount: Int",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/unspecified",
                        "title": "case unspecified",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/point",
                        "title": "case point",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/line",
                        "title": "case line",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/triangle",
                        "title": "case triangle",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlprimitivetopologyclass/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlprimitivetopologyclass",
                    "title": "MTLPrimitiveTopologyClass",
                    "type": "enum"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/samplecount",
                    "title": "var sampleCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Tessellation State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxtessellationfactor",
                    "title": "var maxTessellationFactor: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/istessellationfactorscaleenabled",
                    "title": "var isTessellationFactorScaleEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationfactorformat",
                    "title": "var tessellationFactorFormat: MTLTessellationFactorFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationcontrolpointindextype",
                    "title": "var tessellationControlPointIndexType: MTLTessellationControlPointIndexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationfactorstepfunction",
                    "title": "var tessellationFactorStepFunction: MTLTessellationFactorStepFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationoutputwindingorder",
                    "title": "var tessellationOutputWindingOrder: MTLWinding",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/tessellationpartitionmode",
                    "title": "var tessellationPartitionMode: MTLTessellationPartitionMode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorformat/half",
                        "title": "case half",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorformat/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationfactorformat",
                    "title": "MTLTessellationFactorFormat",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationcontrolpointindextype/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationcontrolpointindextype/uint16",
                        "title": "case uint16",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationcontrolpointindextype/uint32",
                        "title": "case uint32",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationcontrolpointindextype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationcontrolpointindextype",
                    "title": "MTLTessellationControlPointIndexType",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/constant",
                        "title": "case constant",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/perpatch",
                        "title": "case perPatch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/perinstance",
                        "title": "case perInstance",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/perpatchandperinstance",
                        "title": "case perPatchAndPerInstance",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationfactorstepfunction/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationfactorstepfunction",
                    "title": "MTLTessellationFactorStepFunction",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/pow2",
                        "title": "case pow2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/integer",
                        "title": "case integer",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/fractionalodd",
                        "title": "case fractionalOdd",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/fractionaleven",
                        "title": "case fractionalEven",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltessellationpartitionmode/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtltessellationpartitionmode",
                    "title": "MTLTessellationPartitionMode",
                    "type": "enum"
                  },
                  {
                    "title": "Specifying Indirect Command Buffers Usage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/supportindirectcommandbuffers",
                    "title": "var supportIndirectCommandBuffers: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Maximum Vertex Amplification Count",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/maxvertexamplificationcount",
                    "title": "var maxVertexAmplificationCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Precompiled Shader Binaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/supportaddingvertexbinaryfunctions",
                    "title": "var supportAddingVertexBinaryFunctions: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/supportaddingfragmentbinaryfunctions",
                    "title": "var supportAddingFragmentBinaryFunctions: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/binaryarchives",
                    "title": "var binaryArchives: [any MTLBinaryArchive]?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Callable Functions for the Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexlinkedfunctions",
                    "title": "var vertexLinkedFunctions: MTLLinkedFunctions!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentlinkedfunctions",
                    "title": "var fragmentLinkedFunctions: MTLLinkedFunctions!",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/shadervalidation",
                    "title": "var shaderValidation: MTLShaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/fragmentpreloadedlibraries",
                    "title": "var fragmentPreloadedLibraries: [any MTLDynamicLibrary]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinedescriptor/vertexpreloadedlibraries",
                    "title": "var vertexPreloadedLibraries: [any MTLDynamicLibrary]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinedescriptor",
                "title": "MTLRenderPipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Descriptor’s Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor/vertexadditionalbinaryfunctions",
                    "title": "var vertexAdditionalBinaryFunctions: [any MTLFunction]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor/fragmentadditionalbinaryfunctions",
                    "title": "var fragmentAdditionalBinaryFunctions: [any MTLFunction]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor/tileadditionalbinaryfunctions",
                    "title": "var tileAdditionalBinaryFunctions: [any MTLFunction]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinefunctionsdescriptor",
                "title": "MTLRenderPipelineFunctionsDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/binaryarchives",
                    "title": "var binaryArchives: [any MTLBinaryArchive]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/colorattachments",
                    "title": "var colorAttachments: MTLRenderPipelineColorAttachmentDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/depthattachmentpixelformat",
                    "title": "var depthAttachmentPixelFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/fragmentbuffers",
                    "title": "var fragmentBuffers: MTLPipelineBufferDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/fragmentfunction",
                    "title": "var fragmentFunction: (any MTLFunction)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/fragmentlinkedfunctions",
                    "title": "var fragmentLinkedFunctions: MTLLinkedFunctions!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/isalphatocoverageenabled",
                    "title": "var isAlphaToCoverageEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/isalphatooneenabled",
                    "title": "var isAlphaToOneEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/israsterizationenabled",
                    "title": "var isRasterizationEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxtotalthreadgroupspermeshgrid",
                    "title": "var maxTotalThreadgroupsPerMeshGrid: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxtotalthreadspermeshthreadgroup",
                    "title": "var maxTotalThreadsPerMeshThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxtotalthreadsperobjectthreadgroup",
                    "title": "var maxTotalThreadsPerObjectThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/maxvertexamplificationcount",
                    "title": "var maxVertexAmplificationCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshbuffers",
                    "title": "var meshBuffers: MTLPipelineBufferDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshfunction",
                    "title": "var meshFunction: (any MTLFunction)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshlinkedfunctions",
                    "title": "var meshLinkedFunctions: MTLLinkedFunctions!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/meshthreadgroupsizeismultipleofthreadexecutionwidth",
                    "title": "var meshThreadgroupSizeIsMultipleOfThreadExecutionWidth: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectbuffers",
                    "title": "var objectBuffers: MTLPipelineBufferDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectfunction",
                    "title": "var objectFunction: (any MTLFunction)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectlinkedfunctions",
                    "title": "var objectLinkedFunctions: MTLLinkedFunctions!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/objectthreadgroupsizeismultipleofthreadexecutionwidth",
                    "title": "var objectThreadgroupSizeIsMultipleOfThreadExecutionWidth: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/payloadmemorylength",
                    "title": "var payloadMemoryLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/rastersamplecount",
                    "title": "var rasterSampleCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/shadervalidation",
                    "title": "var shaderValidation: MTLShaderValidation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/stencilattachmentpixelformat",
                    "title": "var stencilAttachmentPixelFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/supportindirectcommandbuffers",
                    "title": "var supportIndirectCommandBuffers: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor/reset()",
                    "title": "func reset()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlmeshrenderpipelinedescriptor",
                "title": "MTLMeshRenderPipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptor/mutability",
                    "title": "var mutability: MTLMutability",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/default",
                        "title": "case `default`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/mutable",
                        "title": "case mutable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/immutable",
                        "title": "case immutable",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlmutability",
                    "title": "MTLMutability",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptor",
                "title": "MTLPipelineBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLPipelineBufferDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptorarray",
                "title": "MTLPipelineBufferDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Render Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/pixelformat",
                    "title": "var pixelFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/writemask",
                    "title": "var writeMask: MTLColorWriteMask",
                    "type": "property"
                  },
                  {
                    "title": "Controlling the Blend Operation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/isblendingenabled",
                    "title": "var isBlendingEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/alphablendoperation",
                    "title": "var alphaBlendOperation: MTLBlendOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/rgbblendoperation",
                    "title": "var rgbBlendOperation: MTLBlendOperation",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Blend Factors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/destinationalphablendfactor",
                    "title": "var destinationAlphaBlendFactor: MTLBlendFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/destinationrgbblendfactor",
                    "title": "var destinationRGBBlendFactor: MTLBlendFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/sourcealphablendfactor",
                    "title": "var sourceAlphaBlendFactor: MTLBlendFactor",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor/sourcergbblendfactor",
                    "title": "var sourceRGBBlendFactor: MTLBlendFactor",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/add",
                        "title": "case add",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/subtract",
                        "title": "case subtract",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/reversesubtract",
                        "title": "case reverseSubtract",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/min",
                        "title": "case min",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/max",
                        "title": "case max",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlblendoperation/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlblendoperation",
                    "title": "MTLBlendOperation",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/zero",
                        "title": "case zero",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/one",
                        "title": "case one",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/sourcecolor",
                        "title": "case sourceColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussourcecolor",
                        "title": "case oneMinusSourceColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/sourcealpha",
                        "title": "case sourceAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussourcealpha",
                        "title": "case oneMinusSourceAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/destinationcolor",
                        "title": "case destinationColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusdestinationcolor",
                        "title": "case oneMinusDestinationColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/destinationalpha",
                        "title": "case destinationAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusdestinationalpha",
                        "title": "case oneMinusDestinationAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/sourcealphasaturated",
                        "title": "case sourceAlphaSaturated",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/blendcolor",
                        "title": "case blendColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusblendcolor",
                        "title": "case oneMinusBlendColor",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/blendalpha",
                        "title": "case blendAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminusblendalpha",
                        "title": "case oneMinusBlendAlpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/source1color",
                        "title": "case source1Color",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussource1color",
                        "title": "case oneMinusSource1Color",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/source1alpha",
                        "title": "case source1Alpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/oneminussource1alpha",
                        "title": "case oneMinusSource1Alpha",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlblendfactor/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlblendfactor",
                    "title": "MTLBlendFactor",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/red",
                        "title": "static var red: MTLColorWriteMask",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/green",
                        "title": "static var green: MTLColorWriteMask",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/blue",
                        "title": "static var blue: MTLColorWriteMask",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/alpha",
                        "title": "static var alpha: MTLColorWriteMask",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcolorwritemask/all",
                        "title": "static var all: MTLColorWriteMask",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtlcolorwritemask",
                    "title": "MTLColorWriteMask",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptor",
                "title": "MTLRenderPipelineColorAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Render Pipeline State for a Color Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLRenderPipelineColorAttachmentDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinecolorattachmentdescriptorarray",
                "title": "MTLRenderPipelineColorAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Render Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Graphics Functions and Associated Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/tilefunction",
                    "title": "var tileFunction: any MTLFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/tilebuffers",
                    "title": "var tileBuffers: MTLPipelineBufferDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/maxcallstackdepth",
                    "title": "var maxCallStackDepth: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rasterization and Visibility State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/threadgroupsizematchestilesize",
                    "title": "var threadgroupSizeMatchesTileSize: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/rastersamplecount",
                    "title": "var rasterSampleCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Rendering Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/reset()",
                    "title": "func reset()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/colorattachments",
                    "title": "var colorAttachments: MTLTileRenderPipelineColorAttachmentDescriptorArray",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Threads per Threadgroup",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/maxtotalthreadsperthreadgroup",
                    "title": "var maxTotalThreadsPerThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Precompiled Shader Binaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/supportaddingbinaryfunctions",
                    "title": "var supportAddingBinaryFunctions: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/binaryarchives",
                    "title": "var binaryArchives: [any MTLBinaryArchive]?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Callable Functions for the Pipeline",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/linkedfunctions",
                    "title": "var linkedFunctions: MTLLinkedFunctions!",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/shadervalidation",
                    "title": "var shaderValidation: MTLShaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinedescriptor/preloadedlibraries",
                    "title": "var preloadedLibraries: [any MTLDynamicLibrary]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltilerenderpipelinedescriptor",
                "title": "MTLTileRenderPipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Pixel Format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptor/pixelformat",
                    "title": "var pixelFormat: MTLPixelFormat",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltilerenderpipelinecolorattachmentdescriptor",
                "title": "MTLTileRenderPipelineColorAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Retrieving Argument Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/buffertypeinfo",
                    "title": "static var bufferTypeInfo: MTLPipelineOption",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/failonbinaryarchivemiss",
                    "title": "static var failOnBinaryArchiveMiss: MTLPipelineOption",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpipelineoption/argumentinfo",
                    "title": "static var argumentInfo: MTLPipelineOption",
                    "type": "property"
                  },
                  {
                    "title": "Creating Compilation Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/bindinginfo",
                    "title": "static var bindingInfo: MTLPipelineOption",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlpipelineoption",
                "title": "MTLPipelineOption",
                "type": "struct"
              },
              {
                "title": "Dynamic Render Pipeline States",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Viewport",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/init(originx:originy:width:height:znear:zfar:)",
                    "title": "init(originX: Double, originY: Double, width: Double, height: Double, znear: Double, zfar: Double)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying Viewport Boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/originx",
                    "title": "var originX: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/originy",
                    "title": "var originY: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/width",
                    "title": "var width: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/height",
                    "title": "var height: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/znear",
                    "title": "var znear: Double",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlviewport/zfar",
                    "title": "var zfar: Double",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlviewport",
                "title": "MTLViewport",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a Scissor Rectangle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/init(x:y:width:height:)",
                    "title": "init(x: Int, y: Int, width: Int, height: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying Scissor Boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/height",
                    "title": "var height: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/width",
                    "title": "var width: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/x",
                    "title": "var x: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlscissorrect/y",
                    "title": "var y: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlscissorrect",
                "title": "MTLScissorRect",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a View Mapping",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexamplificationviewmapping/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexamplificationviewmapping/init(viewportarrayindexoffset:rendertargetarrayindexoffset:)",
                    "title": "init(viewportArrayIndexOffset: UInt32, renderTargetArrayIndexOffset: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying Mapping Offsets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexamplificationviewmapping/rendertargetarrayindexoffset",
                    "title": "var renderTargetArrayIndexOffset: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexamplificationviewmapping/viewportarrayindexoffset",
                    "title": "var viewportArrayIndexOffset: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvertexamplificationviewmapping",
                "title": "MTLVertexAmplificationViewMapping",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Fields",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlquadtessellationfactorshalf/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlquadtessellationfactorshalf/init(edgetessellationfactor:insidetessellationfactor:)",
                    "title": "init(edgeTessellationFactor: (UInt16, UInt16, UInt16, UInt16), insideTessellationFactor: (UInt16, UInt16))",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlquadtessellationfactorshalf/edgetessellationfactor",
                    "title": "var edgeTessellationFactor: (UInt16, UInt16, UInt16, UInt16)",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlquadtessellationfactorshalf/insidetessellationfactor",
                    "title": "var insideTessellationFactor: (UInt16, UInt16)",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlquadtessellationfactorshalf",
                "title": "MTLQuadTessellationFactorsHalf",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Fields",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltriangletessellationfactorshalf/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtltriangletessellationfactorshalf/init(edgetessellationfactor:insidetessellationfactor:)",
                    "title": "init(edgeTessellationFactor: (UInt16, UInt16, UInt16), insideTessellationFactor: UInt16)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltriangletessellationfactorshalf/edgetessellationfactor",
                    "title": "var edgeTessellationFactor: (UInt16, UInt16, UInt16)",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltriangletessellationfactorshalf/insidetessellationfactor",
                    "title": "var insideTessellationFactor: UInt16",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltriangletessellationfactorshalf",
                "title": "MTLTriangleTessellationFactorsHalf",
                "type": "struct"
              },
              {
                "title": "Render Pass Inputs",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting Default Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexdescriptor/reset()",
                    "title": "func reset()",
                    "type": "method"
                  },
                  {
                    "title": "Accessing the Vertex Buffer Layouts and Vertex Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexdescriptor/attributes",
                    "title": "var attributes: MTLVertexAttributeDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexdescriptor/layouts",
                    "title": "var layouts: MTLVertexBufferLayoutDescriptorArray",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvertexdescriptor",
                "title": "MTLVertexDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Organizing the Vertex Attribute",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptor/format",
                    "title": "var format: MTLVertexFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptor/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptor/bufferindex",
                    "title": "var bufferIndex: Int",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar",
                        "title": "case uchar",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar2",
                        "title": "case uchar2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar3",
                        "title": "case uchar3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar4",
                        "title": "case uchar4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char",
                        "title": "case char",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char2",
                        "title": "case char2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char3",
                        "title": "case char3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char4",
                        "title": "case char4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ucharnormalized",
                        "title": "case ucharNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar2normalized",
                        "title": "case uchar2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar3normalized",
                        "title": "case uchar3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar4normalized",
                        "title": "case uchar4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/charnormalized",
                        "title": "case charNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char2normalized",
                        "title": "case char2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char3normalized",
                        "title": "case char3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/char4normalized",
                        "title": "case char4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort",
                        "title": "case ushort",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort2",
                        "title": "case ushort2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort3",
                        "title": "case ushort3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort4",
                        "title": "case ushort4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short",
                        "title": "case short",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short2",
                        "title": "case short2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short3",
                        "title": "case short3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short4",
                        "title": "case short4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushortnormalized",
                        "title": "case ushortNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort2normalized",
                        "title": "case ushort2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort3normalized",
                        "title": "case ushort3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/ushort4normalized",
                        "title": "case ushort4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/shortnormalized",
                        "title": "case shortNormalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short2normalized",
                        "title": "case short2Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short3normalized",
                        "title": "case short3Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/short4normalized",
                        "title": "case short4Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half",
                        "title": "case half",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half2",
                        "title": "case half2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half3",
                        "title": "case half3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/half4",
                        "title": "case half4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float",
                        "title": "case float",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float2",
                        "title": "case float2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float3",
                        "title": "case float3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/float4",
                        "title": "case float4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint",
                        "title": "case uint",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint2",
                        "title": "case uint2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint3",
                        "title": "case uint3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint4",
                        "title": "case uint4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int",
                        "title": "case int",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int2",
                        "title": "case int2",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int3",
                        "title": "case int3",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int4",
                        "title": "case int4",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/int1010102normalized",
                        "title": "case int1010102Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uint1010102normalized",
                        "title": "case uint1010102Normalized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/uchar4normalized_bgra",
                        "title": "case uchar4Normalized_bgra",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/floatrg11b10",
                        "title": "case floatRG11B10",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/floatrgb9e5",
                        "title": "case floatRGB9E5",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexformat/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlvertexformat",
                    "title": "MTLVertexFormat",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlvertexattributedescriptor",
                "title": "MTLVertexAttributeDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Specified Vertex Attribute",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattributedescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLVertexAttributeDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlvertexattributedescriptorarray",
                "title": "MTLVertexAttributeDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Organizing the Vertex Buffer Layout",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor/stepfunction",
                    "title": "var stepFunction: MTLVertexStepFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor/steprate",
                    "title": "var stepRate: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor/stride",
                    "title": "var stride: Int",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/constant",
                        "title": "case constant",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/pervertex",
                        "title": "case perVertex",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/perinstance",
                        "title": "case perInstance",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/perpatch",
                        "title": "case perPatch",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/perpatchcontrolpoint",
                        "title": "case perPatchControlPoint",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlvertexstepfunction/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlvertexstepfunction",
                    "title": "MTLVertexStepFunction",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlvertexbufferlayoutdescriptor",
                "title": "MTLVertexBufferLayoutDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Specified Vertex Buffer Layout",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexbufferlayoutdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLVertexBufferLayoutDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlvertexbufferlayoutdescriptorarray",
                "title": "MTLVertexBufferLayoutDescriptorArray",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlbufferlayoutstridedynamic",
                "title": "let MTLBufferLayoutStrideDynamic: Int",
                "type": "var"
              },
              {
                "title": "Render Pass Outputs",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Drawable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/drawableid",
                    "title": "var drawableID: Int",
                    "type": "property"
                  },
                  {
                    "title": "Presenting the Drawable",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/present()",
                    "title": "func present()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/present(afterminimumduration:)",
                    "title": "func present(afterMinimumDuration: CFTimeInterval)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/present(at:)",
                    "title": "func present(at: CFTimeInterval)",
                    "type": "method"
                  },
                  {
                    "title": "Getting Presentation Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/addpresentedhandler(_:)",
                    "title": "func addPresentedHandler(MTLDrawablePresentedHandler)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtldrawable/presentedtime",
                    "title": "var presentedTime: CFTimeInterval",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawable",
                "title": "MTLDrawable",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtldrawablepresentedhandler",
                "title": "MTLDrawablePresentedHandler",
                "type": "typealias"
              },
              {
                "title": "Depth Testing",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/calculating-primitive-visibility-using-depth-testing",
                "title": "Calculating Primitive Visibility Using Depth Testing",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Identifying Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencilstate/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencilstate/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldepthstencilstate",
                "title": "MTLDepthStencilState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Specifying Depth Operations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/depthcomparefunction",
                    "title": "var depthCompareFunction: MTLCompareFunction",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/isdepthwriteenabled",
                    "title": "var isDepthWriteEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Stencil Descriptors for Primitives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/backfacestencil",
                    "title": "var backFaceStencil: MTLStencilDescriptor!",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/frontfacestencil",
                    "title": "var frontFaceStencil: MTLStencilDescriptor!",
                    "type": "property"
                  },
                  {
                    "title": "Identifying Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldepthstencildescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldepthstencildescriptor",
                "title": "MTLDepthStencilDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Stencil Functions and Operations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/stencilfailureoperation",
                    "title": "var stencilFailureOperation: MTLStencilOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/depthfailureoperation",
                    "title": "var depthFailureOperation: MTLStencilOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/depthstencilpassoperation",
                    "title": "var depthStencilPassOperation: MTLStencilOperation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/stencilcomparefunction",
                    "title": "var stencilCompareFunction: MTLCompareFunction",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Stencil Bit Mask Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/readmask",
                    "title": "var readMask: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstencildescriptor/writemask",
                    "title": "var writeMask: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/keep",
                        "title": "case keep",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/zero",
                        "title": "case zero",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/replace",
                        "title": "case replace",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/incrementclamp",
                        "title": "case incrementClamp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/decrementclamp",
                        "title": "case decrementClamp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/invert",
                        "title": "case invert",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/incrementwrap",
                        "title": "case incrementWrap",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/decrementwrap",
                        "title": "case decrementWrap",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlstenciloperation/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlstenciloperation",
                    "title": "MTLStencilOperation",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlstencildescriptor",
                "title": "MTLStencilDescriptor",
                "type": "class"
              },
              {
                "title": "Rasterization Settings",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/rendering-at-different-rasterization-rates",
                "title": "Rendering at Different Rasterization Rates",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-a-rasterization-rate-map",
                "title": "Creating a Rasterization Rate Map",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-with-a-rasterization-rate-map",
                "title": "Rendering with a Rasterization Rate Map",
                "type": "article"
              },
              {
                "path": "/documentation/metal/scaling-variable-rasterization-rate-content",
                "title": "Scaling Variable Rasterization Rate Content",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Creating Rate Map Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/init(screensize:label:)",
                    "title": "convenience init(screenSize: MTLSize, label: String?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/init(screensize:layer:label:)",
                    "title": "convenience init(screenSize: MTLSize, layer: MTLRasterizationRateLayerDescriptor, label: String?)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/init(screensize:layers:label:)",
                    "title": "convenience init(screenSize: MTLSize, layers: [MTLRasterizationRateLayerDescriptor], label: String?)",
                    "type": "init"
                  },
                  {
                    "title": "Identifying the Rate Map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Viewport Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/screensize",
                    "title": "var screenSize: MTLSize",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Rate Map Layers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/layercount",
                    "title": "var layerCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/layer(at:)",
                    "title": "func layer(at: Int) -> MTLRasterizationRateLayerDescriptor?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/setlayer(_:at:)",
                    "title": "func setLayer(MTLRasterizationRateLayerDescriptor?, at: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemapdescriptor/layers",
                    "title": "var layers: MTLRasterizationRateLayerArray",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Members of the Array",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrasterizationratelayerarray/subscript(_:)",
                        "title": "subscript(Int) -> MTLRasterizationRateLayerDescriptor?",
                        "type": "subscript"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Layer Rasterization Rate Descriptor",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/init(samplecount:)",
                            "title": "init(sampleCount: MTLSize)",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/init(horizontal:vertical:)",
                            "title": "convenience init(horizontal: [Float], vertical: [Float])",
                            "type": "init"
                          },
                          {
                            "title": "Inspecting the Layer Rate Function Parameters",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/samplecount",
                            "title": "var sampleCount: MTLSize",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/maxsamplecount",
                            "title": "var maxSampleCount: MTLSize",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/horizontal",
                            "title": "var horizontal: MTLRasterizationRateSampleArray",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/metal/mtlrasterizationratelayerdescriptor/vertical",
                            "title": "var vertical: MTLRasterizationRateSampleArray",
                            "type": "property"
                          },
                          {
                            "children": [
                              {
                                "title": "Accessing the Array",
                                "type": "groupMarker"
                              },
                              {
                                "path": "/documentation/metal/mtlrasterizationratesamplearray/subscript(_:)",
                                "title": "subscript(Int) -> Float",
                                "type": "subscript"
                              }
                            ],
                            "path": "/documentation/metal/mtlrasterizationratesamplearray",
                            "title": "MTLRasterizationRateSampleArray",
                            "type": "class"
                          }
                        ],
                        "path": "/documentation/metal/mtlrasterizationratelayerdescriptor",
                        "title": "MTLRasterizationRateLayerDescriptor",
                        "type": "class"
                      }
                    ],
                    "path": "/documentation/metal/mtlrasterizationratelayerarray",
                    "title": "MTLRasterizationRateLayerArray",
                    "type": "class"
                  }
                ],
                "path": "/documentation/metal/mtlrasterizationratemapdescriptor",
                "title": "MTLRasterizationRateMapDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Rate Map",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting Geometric and Rendering Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/layercount",
                    "title": "var layerCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/screensize",
                    "title": "var screenSize: MTLSize",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/physicalsize(layer:)",
                    "title": "func physicalSize(layer: Int) -> MTLSize",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/physicalgranularity",
                    "title": "var physicalGranularity: MTLSize",
                    "type": "property"
                  },
                  {
                    "title": "Converting Between Viewport and Physical Coordinates",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/physicalcoordinates(screencoordinates:layer:)",
                    "title": "func physicalCoordinates(screenCoordinates: MTLCoordinate2D, layer: Int) -> MTLCoordinate2D",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/screencoordinates(physicalcoordinates:layer:)",
                    "title": "func screenCoordinates(physicalCoordinates: MTLCoordinate2D, layer: Int) -> MTLCoordinate2D",
                    "type": "method"
                  },
                  {
                    "title": "Obtaining Coordinate Transformation Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/parameterdatasizeandalign",
                    "title": "var parameterDataSizeAndAlign: MTLSizeAndAlign",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrasterizationratemap/copyparameterdata(buffer:offset:)",
                    "title": "func copyParameterData(buffer: any MTLBuffer, offset: Int)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlrasterizationratemap",
                "title": "MTLRasterizationRateMap",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlcoordinate2d",
                "title": "MTLCoordinate2D",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlcoordinate2dmake(_:_:)",
                "title": "func MTLCoordinate2DMake(Float, Float) -> MTLCoordinate2D",
                "type": "func"
              },
              {
                "title": "Optimizing Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/specifying-drawing-and-dispatch-arguments-indirectly",
                "title": "Specifying Drawing and Dispatch Arguments Indirectly",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-to-multiple-viewports-in-a-draw-command",
                "title": "Rendering to Multiple Viewports in a Draw Command",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-to-multiple-texture-slices-in-a-draw-command",
                "title": "Rendering to Multiple Texture Slices in a Draw Command",
                "type": "article"
              },
              {
                "title": "Advanced Multisampling",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/positioning-samples-programmatically",
                "title": "Positioning Samples Programmatically",
                "type": "article"
              },
              {
                "path": "/documentation/metal/storing-data-a-pass-makes-with-custom-sample-positions-for-a-subsequent-pass",
                "title": "Storing Data a Pass Makes with Custom Sample Positions for a Subsequent Pass",
                "type": "article"
              },
              {
                "title": "Applying Rendering Techniques",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-a-render-pipeline-to-render-primitives",
                "title": "Using a Render Pipeline to Render Primitives",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/customizing-render-pass-setup",
                "title": "Customizing Render Pass Setup",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/setting-load-and-store-actions",
                "title": "Setting Load and Store Actions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/improving-rendering-performance-with-vertex-amplification",
                "title": "Improving Rendering Performance with Vertex Amplification",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/render-passes",
            "title": "Render Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Essentials",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/performing-calculations-on-a-gpu",
                "title": "Performing Calculations on a GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/processing-a-texture-in-a-compute-function",
                "title": "Processing a Texture in a Compute Function",
                "type": "sampleCode"
              },
              {
                "title": "Encoding a Compute Pass",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-threads-and-threadgroups",
                "title": "Creating Threads and Threadgroups",
                "type": "article"
              },
              {
                "path": "/documentation/metal/calculating-threadgroup-and-grid-sizes",
                "title": "Calculating Threadgroup and Grid Sizes",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setcomputepipelinestate(_:)",
                    "title": "func setComputePipelineState(any MTLComputePipelineState)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchtype",
                    "title": "var dispatchType: MTLDispatchType",
                    "type": "property"
                  },
                  {
                    "title": "Encoding Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffer(_:offset:index:)",
                    "title": "func setBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffer(_:offset:attributestride:index:)",
                    "title": "func setBuffer(any MTLBuffer, offset: Int, attributeStride: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffers(_:offsets:range:)",
                    "title": "func setBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbuffers(_:offsets:attributestrides:range:)",
                    "title": "func setBuffers([(any MTLBuffer)?], offsets: [Int], attributeStrides: [Int], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbufferoffset(_:index:)",
                    "title": "func setBufferOffset(Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbufferoffset(offset:attributestride:index:)",
                    "title": "func setBufferOffset(offset: Int, attributeStride: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Raw Bytes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbytes(_:length:index:)",
                    "title": "func setBytes(UnsafeRawPointer, length: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setbytes(_:length:attributestride:index:)",
                    "title": "func setBytes(UnsafeRawPointer, length: Int, attributeStride: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Textures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/settexture(_:index:)",
                    "title": "func setTexture((any MTLTexture)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/settextures(_:range:)",
                    "title": "func setTextures([(any MTLTexture)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Texture Sampler States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstate(_:index:)",
                    "title": "func setSamplerState((any MTLSamplerState)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstate(_:lodminclamp:lodmaxclamp:index:)",
                    "title": "func setSamplerState((any MTLSamplerState)?, lodMinClamp: Float, lodMaxClamp: Float, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstates(_:range:)",
                    "title": "func setSamplerStates([(any MTLSamplerState)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setsamplerstates(_:lodminclamps:lodmaxclamps:range:)",
                    "title": "func setSamplerStates([(any MTLSamplerState)?], lodMinClamps: [Float], lodMaxClamps: [Float], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Function Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setvisiblefunctiontable(_:bufferindex:)",
                    "title": "func setVisibleFunctionTable((any MTLVisibleFunctionTable)?, bufferIndex: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setvisiblefunctiontables(_:bufferrange:)",
                    "title": "func setVisibleFunctionTables([(any MTLVisibleFunctionTable)?], bufferRange: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setintersectionfunctiontables(_:bufferrange:)",
                    "title": "func setIntersectionFunctionTables([(any MTLIntersectionFunctionTable)?], bufferRange: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Acceleration Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setaccelerationstructure(_:bufferindex:)",
                    "title": "func setAccelerationStructure((any MTLAccelerationStructure)?, bufferIndex: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setintersectionfunctiontable(_:bufferindex:)",
                    "title": "func setIntersectionFunctionTable((any MTLIntersectionFunctionTable)?, bufferIndex: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Resident Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useresource(_:usage:)",
                    "title": "func useResource(any MTLResource, usage: MTLResourceUsage)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useresources(_:usage:)",
                    "title": "func useResources([any MTLResource], usage: MTLResourceUsage)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useheap(_:)",
                    "title": "func useHeap(any MTLHeap)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/useheaps(_:)",
                    "title": "func useHeaps([any MTLHeap])",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Tile Memory Usage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setthreadgroupmemorylength(_:index:)",
                    "title": "func setThreadgroupMemoryLength(Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setimageblockwidth(_:height:)",
                    "title": "func setImageblockWidth(Int, height: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Stage-in Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setstageinregion(_:)",
                    "title": "func setStageInRegion(MTLRegion)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/setstageinregionwithindirectbuffer(_:indirectbufferoffset:)",
                    "title": "func setStageInRegionWithIndirectBuffer(any MTLBuffer, indirectBufferOffset: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Dispatching Kernel Calls Directly",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchthreads(_:threadsperthreadgroup:)",
                    "title": "func dispatchThreads(MTLSize, threadsPerThreadgroup: MTLSize)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchthreadgroups(_:threadsperthreadgroup:)",
                    "title": "func dispatchThreadgroups(MTLSize, threadsPerThreadgroup: MTLSize)",
                    "type": "method"
                  },
                  {
                    "title": "Dispatching from Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/dispatchthreadgroups(indirectbuffer:indirectbufferoffset:threadsperthreadgroup:)",
                    "title": "func dispatchThreadgroups(indirectBuffer: any MTLBuffer, indirectBufferOffset: Int, threadsPerThreadgroup: MTLSize)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/executecommandsinbuffer(_:range:)",
                    "title": "func executeCommandsInBuffer(any MTLIndirectCommandBuffer, range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/executecommandsinbuffer(_:indirectbuffer:offset:)",
                    "title": "func executeCommandsInBuffer(any MTLIndirectCommandBuffer, indirectBuffer: any MTLBuffer, offset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/executecommands(in:indirectbuffer:indirectbufferoffset:)",
                    "title": "func executeCommands(in: any MTLIndirectCommandBuffer, indirectBuffer: any MTLBuffer, indirectBufferOffset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/executecommands(in:with:)",
                    "title": "func executeCommands(in: any MTLIndirectCommandBuffer, with: NSRange)",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Across Command Execution",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/waitforfence(_:)",
                    "title": "func waitForFence(any MTLFence)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/updatefence(_:)",
                    "title": "func updateFence(any MTLFence)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/memorybarrier(scope:)",
                    "title": "func memoryBarrier(scope: MTLBarrierScope)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/memorybarrier(resources:)",
                    "title": "func memoryBarrier(resources: [any MTLResource])",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Sample Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputecommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "func sampleCounters(sampleBuffer: any MTLCounterSampleBuffer, sampleIndex: Int, barrier: Bool)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcomputecommandencoder",
                "title": "MTLComputeCommandEncoder",
                "type": "protocol"
              },
              {
                "title": "Configuring a Compute Pipeline State",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Compute Execution Environment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/computefunction",
                    "title": "var computeFunction: (any MTLFunction)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/threadgroupsizeismultipleofthreadexecutionwidth",
                    "title": "var threadGroupSizeIsMultipleOfThreadExecutionWidth: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/maxtotalthreadsperthreadgroup",
                    "title": "var maxTotalThreadsPerThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/maxcallstackdepth",
                    "title": "var maxCallStackDepth: Int",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Compute Pass Inputs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/stageinputdescriptor",
                    "title": "var stageInputDescriptor: MTLStageInputOutputDescriptor?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Defining Attribute Location",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptor/bufferindex",
                        "title": "var bufferIndex: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptor/offset",
                        "title": "var offset: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptor/format",
                        "title": "var format: MTLAttributeFormat",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Invalid format",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/invalid",
                            "title": "case invalid",
                            "type": "case"
                          },
                          {
                            "title": "Character data formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar",
                            "title": "case uchar",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar2",
                            "title": "case uchar2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar3",
                            "title": "case uchar3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar4",
                            "title": "case uchar4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char",
                            "title": "case char",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char2",
                            "title": "case char2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char3",
                            "title": "case char3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char4",
                            "title": "case char4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ucharnormalized",
                            "title": "case ucharNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar2normalized",
                            "title": "case uchar2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar3normalized",
                            "title": "case uchar3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar4normalized",
                            "title": "case uchar4Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/charnormalized",
                            "title": "case charNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char2normalized",
                            "title": "case char2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char3normalized",
                            "title": "case char3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/char4normalized",
                            "title": "case char4Normalized",
                            "type": "case"
                          },
                          {
                            "title": "16- bit integer data formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort",
                            "title": "case ushort",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort2",
                            "title": "case ushort2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort3",
                            "title": "case ushort3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort4",
                            "title": "case ushort4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short",
                            "title": "case short",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short2",
                            "title": "case short2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short3",
                            "title": "case short3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short4",
                            "title": "case short4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushortnormalized",
                            "title": "case ushortNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort2normalized",
                            "title": "case ushort2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort3normalized",
                            "title": "case ushort3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/ushort4normalized",
                            "title": "case ushort4Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/shortnormalized",
                            "title": "case shortNormalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short2normalized",
                            "title": "case short2Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short3normalized",
                            "title": "case short3Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/short4normalized",
                            "title": "case short4Normalized",
                            "type": "case"
                          },
                          {
                            "title": "32-bit integer data formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint",
                            "title": "case uint",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint2",
                            "title": "case uint2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint3",
                            "title": "case uint3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint4",
                            "title": "case uint4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int",
                            "title": "case int",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int2",
                            "title": "case int2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int3",
                            "title": "case int3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int4",
                            "title": "case int4",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/int1010102normalized",
                            "title": "case int1010102Normalized",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uint1010102normalized",
                            "title": "case uint1010102Normalized",
                            "type": "case"
                          },
                          {
                            "title": "16-bit floating point formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half",
                            "title": "case half",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half2",
                            "title": "case half2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half3",
                            "title": "case half3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/half4",
                            "title": "case half4",
                            "type": "case"
                          },
                          {
                            "title": "32-bit floating point formats",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float",
                            "title": "case float",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float2",
                            "title": "case float2",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float3",
                            "title": "case float3",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/float4",
                            "title": "case float4",
                            "type": "case"
                          },
                          {
                            "title": "Pixel data types",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/uchar4normalized_bgra",
                            "title": "case uchar4Normalized_bgra",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/floatrg11b10",
                            "title": "case floatRG11B10",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/floatrgb9e5",
                            "title": "case floatRGB9E5",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlattributeformat/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlattributeformat",
                        "title": "MTLAttributeFormat",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlattributedescriptor",
                    "title": "MTLAttributeDescriptor",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessing Attribute State Objects",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlattributedescriptorarray/subscript(_:)",
                        "title": "subscript(Int) -> MTLAttributeDescriptor!",
                        "type": "subscript"
                      }
                    ],
                    "path": "/documentation/metal/mtlattributedescriptorarray",
                    "title": "MTLAttributeDescriptorArray",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Describing Fetch Behavior",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptor/stride",
                        "title": "var stride: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptor/stepfunction",
                        "title": "var stepFunction: MTLStepFunction",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptor/steprate",
                        "title": "var stepRate: Int",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Step options",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/constant",
                            "title": "case constant",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/perinstance",
                            "title": "case perInstance",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/perpatch",
                            "title": "case perPatch",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/perpatchcontrolpoint",
                            "title": "case perPatchControlPoint",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/pervertex",
                            "title": "case perVertex",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridx",
                            "title": "case threadPositionInGridX",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridy",
                            "title": "case threadPositionInGridY",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridxindexed",
                            "title": "case threadPositionInGridXIndexed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/threadpositioningridyindexed",
                            "title": "case threadPositionInGridYIndexed",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlstepfunction/init(rawvalue:)",
                            "title": "init?(rawValue: UInt)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlstepfunction",
                        "title": "MTLStepFunction",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlbufferlayoutdescriptor",
                    "title": "MTLBufferLayoutDescriptor",
                    "type": "class"
                  },
                  {
                    "children": [
                      {
                        "title": "Array Accessors",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlbufferlayoutdescriptorarray/subscript(_:)",
                        "title": "subscript(Int) -> MTLBufferLayoutDescriptor!",
                        "type": "subscript"
                      }
                    ],
                    "path": "/documentation/metal/mtlbufferlayoutdescriptorarray",
                    "title": "MTLBufferLayoutDescriptorArray",
                    "type": "class"
                  },
                  {
                    "title": "Configuring Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/buffers",
                    "title": "var buffers: MTLPipelineBufferDescriptorArray",
                    "type": "property"
                  },
                  {
                    "title": "Identifying the Pipeline State Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/supportindirectcommandbuffers",
                    "title": "var supportIndirectCommandBuffers: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Configuring Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/shadervalidation",
                    "title": "var shaderValidation: MTLShaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Reset to Defaults",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/reset()",
                    "title": "func reset()",
                    "type": "method"
                  },
                  {
                    "title": "Loading Dynamic Libraries to Link at Runtime",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/preloadedlibraries",
                    "title": "var preloadedLibraries: [any MTLDynamicLibrary]",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/insertlibraries",
                    "title": "var insertLibraries: [any MTLDynamicLibrary]?",
                    "type": "property"
                  },
                  {
                    "title": "Setting Callable Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/linkedfunctions",
                    "title": "var linkedFunctions: MTLLinkedFunctions?",
                    "type": "property"
                  },
                  {
                    "title": "Loading Binary Archives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/supportaddingbinaryfunctions",
                    "title": "var supportAddingBinaryFunctions: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinedescriptor/binaryarchives",
                    "title": "var binaryArchives: [any MTLBinaryArchive]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepipelinedescriptor",
                "title": "MTLComputePipelineDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Pipeline State",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Checking Threadgroup Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/maxtotalthreadsperthreadgroup",
                    "title": "var maxTotalThreadsPerThreadgroup: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/threadexecutionwidth",
                    "title": "var threadExecutionWidth: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/staticthreadgroupmemorylength",
                    "title": "var staticThreadgroupMemoryLength: Int",
                    "type": "property"
                  },
                  {
                    "title": "Checking Imageblock Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/imageblockmemorylength(fordimensions:)",
                    "title": "func imageblockMemoryLength(forDimensions: MTLSize) -> Int",
                    "type": "method"
                  },
                  {
                    "title": "Checking Indirect Command Buffer Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/supportindirectcommandbuffers",
                    "title": "var supportIndirectCommandBuffers: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Checking Shader Validation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/shadervalidation",
                    "title": "var shaderValidation: MTLShaderValidation",
                    "type": "property"
                  },
                  {
                    "title": "Creating Function Handles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/functionhandle(function:)",
                    "title": "func functionHandle(function: any MTLFunction) -> (any MTLFunctionHandle)?",
                    "type": "method"
                  },
                  {
                    "title": "Adding Visible Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/makecomputepipelinestatewithadditionalbinaryfunctions(functions:)",
                    "title": "func makeComputePipelineStateWithAdditionalBinaryFunctions(functions: [any MTLFunction]) throws -> any MTLComputePipelineState",
                    "type": "method"
                  },
                  {
                    "title": "Creating Function Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/makevisiblefunctiontable(descriptor:)",
                    "title": "func makeVisibleFunctionTable(descriptor: MTLVisibleFunctionTableDescriptor) -> (any MTLVisibleFunctionTable)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinestate/makeintersectionfunctiontable(descriptor:)",
                    "title": "func makeIntersectionFunctionTable(descriptor: MTLIntersectionFunctionTableDescriptor) -> (any MTLIntersectionFunctionTable)?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepipelinestate",
                "title": "MTLComputePipelineState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Describing Argument Layouts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/attributes",
                    "title": "var attributes: MTLAttributeDescriptorArray",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/layouts",
                    "title": "var layouts: MTLBufferLayoutDescriptorArray",
                    "type": "property"
                  },
                  {
                    "title": "Declaring Index Buffers for Indirect Compute Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/indexbufferindex",
                    "title": "var indexBufferIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/indextype",
                    "title": "var indexType: MTLIndexType",
                    "type": "property"
                  },
                  {
                    "title": "Resetting the Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinputoutputdescriptor/reset()",
                    "title": "func reset()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlstageinputoutputdescriptor",
                "title": "MTLStageInputOutputDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting Buffer Mutability",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptor/mutability",
                    "title": "var mutability: MTLMutability",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/default",
                        "title": "case `default`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/mutable",
                        "title": "case mutable",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/immutable",
                        "title": "case immutable",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmutability/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlmutability",
                    "title": "MTLMutability",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptor",
                "title": "MTLPipelineBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelinebufferdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLPipelineBufferDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlpipelinebufferdescriptorarray",
                "title": "MTLPipelineBufferDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Retrieving Argument Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/buffertypeinfo",
                    "title": "static var bufferTypeInfo: MTLPipelineOption",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/failonbinaryarchivemiss",
                    "title": "static var failOnBinaryArchiveMiss: MTLPipelineOption",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpipelineoption/argumentinfo",
                    "title": "static var argumentInfo: MTLPipelineOption",
                    "type": "property"
                  },
                  {
                    "title": "Creating Compilation Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpipelineoption/bindinginfo",
                    "title": "static var bindingInfo: MTLPipelineOption",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlpipelineoption",
                "title": "MTLPipelineOption",
                "type": "struct"
              },
              {
                "title": "Configuring a Compute Pass",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Dispatch Mechanism",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepassdescriptor/dispatchtype",
                    "title": "var dispatchType: MTLDispatchType",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Sample Buffers for GPU Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepassdescriptor/samplebufferattachments",
                    "title": "var sampleBufferAttachments: MTLComputePassSampleBufferAttachmentDescriptorArray",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepassdescriptor",
                "title": "MTLComputePassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Execution Dispatch Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchtype/concurrent",
                    "title": "case concurrent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchtype/serial",
                    "title": "case serial",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchtype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtldispatchtype",
                "title": "MTLDispatchType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Size of the Threadgroup",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/init(threadgroupspergrid:)",
                    "title": "init(threadgroupsPerGrid: (UInt32, UInt32, UInt32))",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/threadgroupspergrid",
                    "title": "var threadgroupsPerGrid: (UInt32, UInt32, UInt32)",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments",
                "title": "MTLDispatchThreadgroupsIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "var sampleBuffer: (any MTLCounterSampleBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "var startOfEncoderSampleIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "var endOfEncoderSampleIndex: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptor",
                "title": "MTLComputePassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLComputePassSampleBufferAttachmentDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepasssamplebufferattachmentdescriptorarray",
                "title": "MTLComputePassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              }
            ],
            "path": "/documentation/metal/compute-passes",
            "title": "Compute Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Encoding a Blit Pass",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Filling Buffers with Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/fill(buffer:range:value:)",
                    "title": "func fill(buffer: any MTLBuffer, range: Range<Int>, value: UInt8)",
                    "type": "method"
                  },
                  {
                    "title": "Generating Texture Mipmaps",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/generatemipmaps(for:)",
                    "title": "func generateMipmaps(for: any MTLTexture)",
                    "type": "method"
                  },
                  {
                    "title": "Copying Buffer Data to Another Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceoffset:to:destinationoffset:size:)",
                    "title": "func copy(from: any MTLBuffer, sourceOffset: Int, to: any MTLBuffer, destinationOffset: Int, size: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Copying Texture Data to Another Texture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:to:)",
                    "title": "func copy(from: any MTLTexture, to: any MTLTexture)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:to:destinationslice:destinationlevel:slicecount:levelcount:)",
                    "title": "func copy(from: any MTLTexture, sourceSlice: Int, sourceLevel: Int, to: any MTLTexture, destinationSlice: Int, destinationLevel: Int, sliceCount: Int, levelCount: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:sourceorigin:sourcesize:to:destinationslice:destinationlevel:destinationorigin:)",
                    "title": "func copy(from: any MTLTexture, sourceSlice: Int, sourceLevel: Int, sourceOrigin: MTLOrigin, sourceSize: MTLSize, to: any MTLTexture, destinationSlice: Int, destinationLevel: Int, destinationOrigin: MTLOrigin)",
                    "type": "method"
                  },
                  {
                    "title": "Copying Buffer Data to a Texture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceoffset:sourcebytesperrow:sourcebytesperimage:sourcesize:to:destinationslice:destinationlevel:destinationorigin:)",
                    "title": "func copy(from: any MTLBuffer, sourceOffset: Int, sourceBytesPerRow: Int, sourceBytesPerImage: Int, sourceSize: MTLSize, to: any MTLTexture, destinationSlice: Int, destinationLevel: Int, destinationOrigin: MTLOrigin)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceoffset:sourcebytesperrow:sourcebytesperimage:sourcesize:to:destinationslice:destinationlevel:destinationorigin:options:)",
                    "title": "func copy(from: any MTLBuffer, sourceOffset: Int, sourceBytesPerRow: Int, sourceBytesPerImage: Int, sourceSize: MTLSize, to: any MTLTexture, destinationSlice: Int, destinationLevel: Int, destinationOrigin: MTLOrigin, options: MTLBlitOption)",
                    "type": "method"
                  },
                  {
                    "title": "Copying Texture Data to a Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:sourceorigin:sourcesize:to:destinationoffset:destinationbytesperrow:destinationbytesperimage:)",
                    "title": "func copy(from: any MTLTexture, sourceSlice: Int, sourceLevel: Int, sourceOrigin: MTLOrigin, sourceSize: MTLSize, to: any MTLBuffer, destinationOffset: Int, destinationBytesPerRow: Int, destinationBytesPerImage: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copy(from:sourceslice:sourcelevel:sourceorigin:sourcesize:to:destinationoffset:destinationbytesperrow:destinationbytesperimage:options:)",
                    "title": "func copy(from: any MTLTexture, sourceSlice: Int, sourceLevel: Int, sourceOrigin: MTLOrigin, sourceSize: MTLSize, to: any MTLBuffer, destinationOffset: Int, destinationBytesPerRow: Int, destinationBytesPerImage: Int, options: MTLBlitOption)",
                    "type": "method"
                  },
                  {
                    "title": "Working with Textures on the GPU",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforgpuaccess(texture:)",
                    "title": "func optimizeContentsForGPUAccess(texture: any MTLTexture)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforgpuaccess(texture:slice:level:)",
                    "title": "func optimizeContentsForGPUAccess(texture: any MTLTexture, slice: Int, level: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Working with Textures on the CPU",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforcpuaccess(texture:)",
                    "title": "func optimizeContentsForCPUAccess(texture: any MTLTexture)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizecontentsforcpuaccess(texture:slice:level:)",
                    "title": "func optimizeContentsForCPUAccess(texture: any MTLTexture, slice: Int, level: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Working with Managed Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/synchronize(resource:)",
                    "title": "func synchronize(resource: any MTLResource)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/synchronize(texture:slice:level:)",
                    "title": "func synchronize(texture: any MTLTexture, slice: Int, level: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Working with Fences",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/waitforfence(_:)",
                    "title": "func waitForFence(any MTLFence)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/updatefence(_:)",
                    "title": "func updateFence(any MTLFence)",
                    "type": "method"
                  },
                  {
                    "title": "Working with Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/copyindirectcommandbuffer(_:sourcerange:destination:destinationindex:)",
                    "title": "func copyIndirectCommandBuffer(any MTLIndirectCommandBuffer, sourceRange: Range<Int>, destination: any MTLIndirectCommandBuffer, destinationIndex: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/resetcommandsinbuffer(_:range:)",
                    "title": "func resetCommandsInBuffer(any MTLIndirectCommandBuffer, range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/optimizeindirectcommandbuffer(_:range:)",
                    "title": "func optimizeIndirectCommandBuffer(any MTLIndirectCommandBuffer, range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Working with Sample Counter Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "func sampleCounters(sampleBuffer: any MTLCounterSampleBuffer, sampleIndex: Int, barrier: Bool)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/resolvecounters(_:range:destinationbuffer:destinationoffset:)",
                    "title": "func resolveCounters(any MTLCounterSampleBuffer, range: Range<Int>, destinationBuffer: any MTLBuffer, destinationOffset: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Working with Sparse Texture Access Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/gettextureaccesscounters(_:region:miplevel:slice:resetcounters:countersbuffer:countersbufferoffset:)",
                    "title": "func getTextureAccessCounters(any MTLTexture, region: MTLRegion, mipLevel: Int, slice: Int, resetCounters: Bool, countersBuffer: any MTLBuffer, countersBufferOffset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlblitcommandencoder/resettextureaccesscounters(_:region:miplevel:slice:)",
                    "title": "func resetTextureAccessCounters(any MTLTexture, region: MTLRegion, mipLevel: Int, slice: Int)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlblitcommandencoder",
                "title": "MTLBlitCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Depth and Stencil Buffer Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/depthfromdepthstencil",
                    "title": "static var depthFromDepthStencil: MTLBlitOption",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/stencilfromdepthstencil",
                    "title": "static var stencilFromDepthStencil: MTLBlitOption",
                    "type": "property"
                  },
                  {
                    "title": "Texture Compression Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/rowlinearpvrtc",
                    "title": "static var rowLinearPVRTC: MTLBlitOption",
                    "type": "property"
                  },
                  {
                    "title": "Clearing Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitoption/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlblitoption",
                "title": "MTLBlitOption",
                "type": "struct"
              },
              {
                "title": "Configuring a Blit Command Encoder",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Configuring Sample Buffer Attachment Descriptors for a Blit Pass",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpassdescriptor/samplebufferattachments",
                    "title": "var sampleBufferAttachments: MTLBlitPassSampleBufferAttachmentDescriptorArray",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlblitpassdescriptor",
                "title": "MTLBlitPassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "var sampleBuffer: (any MTLCounterSampleBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "var startOfEncoderSampleIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "var endOfEncoderSampleIndex: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptor",
                "title": "MTLBlitPassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLBlitPassSampleBufferAttachmentDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlblitpasssamplebufferattachmentdescriptorarray",
                "title": "MTLBlitPassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              }
            ],
            "path": "/documentation/metal/blit-passes",
            "title": "Blit Passes",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Indirect Command Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-an-indirect-command-buffer",
                "title": "Creating an Indirect Command Buffer",
                "type": "article"
              },
              {
                "path": "/documentation/metal/specifying-drawing-and-dispatch-arguments-indirectly",
                "title": "Specifying Drawing and Dispatch Arguments Indirectly",
                "type": "article"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-cpu",
                "title": "Encoding Indirect Command Buffers on the CPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-indirect-command-buffers-on-the-gpu",
                "title": "Encoding Indirect Command Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Determining the Maximum Number of Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/size",
                    "title": "var size: Int",
                    "type": "property"
                  },
                  {
                    "title": "Retrieving Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/indirectrendercommandat(_:)",
                    "title": "func indirectRenderCommandAt(Int) -> any MTLIndirectRenderCommand",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/indirectcomputecommandat(_:)",
                    "title": "func indirectComputeCommandAt(Int) -> any MTLIndirectComputeCommand",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/indirectcomputecommand(at:)",
                    "title": "func indirectComputeCommand(at: Int) -> any MTLIndirectComputeCommand",
                    "type": "method"
                  },
                  {
                    "title": "Resetting Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/reset(_:)",
                    "title": "func reset(Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbuffer/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandbuffer",
                "title": "MTLIndirectCommandBuffer",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Declaring Command Types to Encode",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/commandtypes",
                    "title": "var commandTypes: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "title": "Declaring Command Inheritance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/inheritbuffers",
                    "title": "var inheritBuffers: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/inheritpipelinestate",
                    "title": "var inheritPipelineState: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Declaring the Maximum Number of Argument Buffers Per Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxvertexbufferbindcount",
                    "title": "var maxVertexBufferBindCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxfragmentbufferbindcount",
                    "title": "var maxFragmentBufferBindCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxkernelbufferbindcount",
                    "title": "var maxKernelBufferBindCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxkernelthreadgroupmemorybindcount",
                    "title": "var maxKernelThreadgroupMemoryBindCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxmeshbufferbindcount",
                    "title": "var maxMeshBufferBindCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxobjectbufferbindcount",
                    "title": "var maxObjectBufferBindCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/maxobjectthreadgroupmemorybindcount",
                    "title": "var maxObjectThreadgroupMemoryBindCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/supportdynamicattributestride",
                    "title": "var supportDynamicAttributeStride: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferdescriptor/supportraytracing",
                    "title": "var supportRayTracing: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandbufferdescriptor",
                "title": "MTLIndirectCommandBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating a Set of Command Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying Command Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/draw",
                    "title": "static var draw: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawindexed",
                    "title": "static var drawIndexed: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawpatches",
                    "title": "static var drawPatches: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawindexedpatches",
                    "title": "static var drawIndexedPatches: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/concurrentdispatch",
                    "title": "static var concurrentDispatch: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/concurrentdispatchthreads",
                    "title": "static var concurrentDispatchThreads: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawmeshthreadgroups",
                    "title": "static var drawMeshThreadgroups: MTLIndirectCommandType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandtype/drawmeshthreads",
                    "title": "static var drawMeshThreads: MTLIndirectCommandType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandtype",
                "title": "MTLIndirectCommandType",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating a Command Execution Range",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange/init(location:length:)",
                    "title": "init(location: UInt32, length: UInt32)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrangemake(_:_:)",
                    "title": "func MTLIndirectCommandBufferExecutionRangeMake(UInt32, UInt32) -> MTLIndirectCommandBufferExecutionRange",
                    "type": "func"
                  },
                  {
                    "title": "Examining the Range",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange/location",
                    "title": "var location: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange/length",
                    "title": "var length: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcommandbufferexecutionrange",
                "title": "MTLIndirectCommandBufferExecutionRange",
                "type": "struct"
              },
              {
                "path": "/documentation/metal/mtlindirectcommandbufferexecutionrangemake(_:_:)",
                "title": "func MTLIndirectCommandBufferExecutionRangeMake(UInt32, UInt32) -> MTLIndirectCommandBufferExecutionRange",
                "type": "func"
              },
              {
                "title": "Indirect Compute Commands",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting a Command’s Arguments",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setcomputepipelinestate(_:)",
                    "title": "func setComputePipelineState(any MTLComputePipelineState)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setimageblockwidth(_:height:)",
                    "title": "func setImageblockWidth(Int, height: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setkernelbuffer(_:offset:at:)",
                    "title": "func setKernelBuffer(any MTLBuffer, offset: Int, at: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setthreadgroupmemorylength(_:index:)",
                    "title": "func setThreadgroupMemoryLength(Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setthreadgroupmemorylength(_:at:)",
                    "title": "func setThreadgroupMemoryLength(Int, at: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setstageinregion(_:)",
                    "title": "func setStageInRegion(MTLRegion)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setstagein(_:)",
                    "title": "func setStageIn(MTLRegion)",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Command Execution",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setbarrier()",
                    "title": "func setBarrier()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/clearbarrier()",
                    "title": "func clearBarrier()",
                    "type": "method"
                  },
                  {
                    "title": "Encoding a Compute Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/concurrentdispatchthreadgroups(_:threadsperthreadgroup:)",
                    "title": "func concurrentDispatchThreadgroups(MTLSize, threadsPerThreadgroup: MTLSize)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/concurrentdispatchthreads(_:threadsperthreadgroup:)",
                    "title": "func concurrentDispatchThreads(MTLSize, threadsPerThreadgroup: MTLSize)",
                    "type": "method"
                  },
                  {
                    "title": "Resetting a Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/reset()",
                    "title": "func reset()",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectcomputecommand/setkernelbuffer(_:offset:attributestride:at:)",
                    "title": "func setKernelBuffer(any MTLBuffer, offset: Int, attributeStride: Int, at: Int)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlindirectcomputecommand",
                "title": "MTLIndirectComputeCommand",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating Regions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlregion/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlregion/init(origin:size:)",
                    "title": "init(origin: MTLOrigin, size: MTLSize)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlregionmake1d(_:_:)",
                    "title": "func MTLRegionMake1D(Int, Int) -> MTLRegion",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlregionmake2d(_:_:_:_:)",
                    "title": "func MTLRegionMake2D(Int, Int, Int, Int) -> MTLRegion",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/metal/mtlregionmake3d(_:_:_:_:_:_:)",
                    "title": "func MTLRegionMake3D(Int, Int, Int, Int, Int, Int) -> MTLRegion",
                    "type": "func"
                  },
                  {
                    "title": "Getting and Setting Region Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlregion/origin",
                    "title": "var origin: MTLOrigin",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlregion/size",
                    "title": "var size: MTLSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlregion",
                "title": "MTLRegion",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating Sizes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/init(width:height:depth:)",
                    "title": "init(width: Int, height: Int, depth: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlsizemake(_:_:_:)",
                    "title": "func MTLSizeMake(Int, Int, Int) -> MTLSize",
                    "type": "func"
                  },
                  {
                    "title": "Getting and Setting Dimensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/width",
                    "title": "var width: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/height",
                    "title": "var height: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsize/depth",
                    "title": "var depth: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsize",
                "title": "MTLSize",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating Origin Points",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/init(x:y:z:)",
                    "title": "init(x: Int, y: Int, z: Int)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtloriginmake(_:_:_:)",
                    "title": "func MTLOriginMake(Int, Int, Int) -> MTLOrigin",
                    "type": "func"
                  },
                  {
                    "title": "Getting and Setting Coordinate Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/x",
                    "title": "var x: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/y",
                    "title": "var y: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlorigin/z",
                    "title": "var z: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlorigin",
                "title": "MTLOrigin",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinregionindirectarguments/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinregionindirectarguments/init(stageinorigin:stageinsize:)",
                    "title": "init(stageInOrigin: (UInt32, UInt32, UInt32), stageInSize: (UInt32, UInt32, UInt32))",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinregionindirectarguments/stageinorigin",
                    "title": "var stageInOrigin: (UInt32, UInt32, UInt32)",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstageinregionindirectarguments/stageinsize",
                    "title": "var stageInSize: (UInt32, UInt32, UInt32)",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlstageinregionindirectarguments",
                "title": "MTLStageInRegionIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Size of the Threadgroup",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/init(threadgroupspergrid:)",
                    "title": "init(threadgroupsPerGrid: (UInt32, UInt32, UInt32))",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments/threadgroupspergrid",
                    "title": "var threadgroupsPerGrid: (UInt32, UInt32, UInt32)",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldispatchthreadgroupsindirectarguments",
                "title": "MTLDispatchThreadgroupsIndirectArguments",
                "type": "struct"
              },
              {
                "title": "Render Compute Commands",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting Command Arguments",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setrenderpipelinestate(_:)",
                    "title": "func setRenderPipelineState(any MTLRenderPipelineState)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setvertexbuffer(_:offset:at:)",
                    "title": "func setVertexBuffer(any MTLBuffer, offset: Int, at: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setfragmentbuffer(_:offset:at:)",
                    "title": "func setFragmentBuffer(any MTLBuffer, offset: Int, at: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding a Drawing Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawprimitives(_:vertexstart:vertexcount:instancecount:baseinstance:)",
                    "title": "func drawPrimitives(MTLPrimitiveType, vertexStart: Int, vertexCount: Int, instanceCount: Int, baseInstance: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawindexedprimitives(_:indexcount:indextype:indexbuffer:indexbufferoffset:instancecount:basevertex:baseinstance:)",
                    "title": "func drawIndexedPrimitives(MTLPrimitiveType, indexCount: Int, indexType: MTLIndexType, indexBuffer: any MTLBuffer, indexBufferOffset: Int, instanceCount: Int, baseVertex: Int, baseInstance: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawpatches(_:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:instancecount:baseinstance:tessellationfactorbuffer:tessellationfactorbufferoffset:tessellationfactorbufferinstancestride:)",
                    "title": "func drawPatches(Int, patchStart: Int, patchCount: Int, patchIndexBuffer: (any MTLBuffer)?, patchIndexBufferOffset: Int, instanceCount: Int, baseInstance: Int, tessellationFactorBuffer: any MTLBuffer, tessellationFactorBufferOffset: Int, tessellationFactorBufferInstanceStride: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawindexedpatches(_:patchstart:patchcount:patchindexbuffer:patchindexbufferoffset:controlpointindexbuffer:controlpointindexbufferoffset:instancecount:baseinstance:tessellationfactorbuffer:tessellationfactorbufferoffset:tessellationfactorbu-4mdz8",
                    "title": "func drawIndexedPatches(Int, patchStart: Int, patchCount: Int, patchIndexBuffer: (any MTLBuffer)?, patchIndexBufferOffset: Int, controlPointIndexBuffer: any MTLBuffer, controlPointIndexBufferOffset: Int, instanceCount: Int, baseInstance: Int, tessellationFactorBuffer: any MTLBuffer, tessellationFactorBufferOffset: Int, tessellationFactorBufferInstanceStride: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Resetting a Command",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/reset()",
                    "title": "func reset()",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/clearbarrier()",
                    "title": "func clearBarrier()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawmeshthreadgroups(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                    "title": "func drawMeshThreadgroups(MTLSize, threadsPerObjectThreadgroup: MTLSize, threadsPerMeshThreadgroup: MTLSize)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/drawmeshthreads(_:threadsperobjectthreadgroup:threadspermeshthreadgroup:)",
                    "title": "func drawMeshThreads(MTLSize, threadsPerObjectThreadgroup: MTLSize, threadsPerMeshThreadgroup: MTLSize)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setbarrier()",
                    "title": "func setBarrier()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setmeshbuffer(_:offset:at:)",
                    "title": "func setMeshBuffer(any MTLBuffer, offset: Int, at: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setobjectbuffer(_:offset:at:)",
                    "title": "func setObjectBuffer(any MTLBuffer, offset: Int, at: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setobjectthreadgroupmemorylength(_:index:)",
                    "title": "func setObjectThreadgroupMemoryLength(Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectrendercommand/setvertexbuffer(_:offset:attributestride:at:)",
                    "title": "func setVertexBuffer(any MTLBuffer, offset: Int, attributeStride: Int, at: Int)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlindirectrendercommand",
                "title": "MTLIndirectRenderCommand",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Fields",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/init(patchcount:instancecount:patchstart:baseinstance:)",
                    "title": "init(patchCount: UInt32, instanceCount: UInt32, patchStart: UInt32, baseInstance: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/baseinstance",
                    "title": "var baseInstance: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/instancecount",
                    "title": "var instanceCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/patchcount",
                    "title": "var patchCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/instancecount",
                    "title": "var instanceCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/patchstart",
                    "title": "var patchStart: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawpatchindirectarguments/baseinstance",
                    "title": "var baseInstance: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawpatchindirectarguments",
                "title": "MTLDrawPatchIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Fields",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/init(vertexcount:instancecount:vertexstart:baseinstance:)",
                    "title": "init(vertexCount: UInt32, instanceCount: UInt32, vertexStart: UInt32, baseInstance: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/baseinstance",
                    "title": "var baseInstance: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/instancecount",
                    "title": "var instanceCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/vertexcount",
                    "title": "var vertexCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/instancecount",
                    "title": "var instanceCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/vertexstart",
                    "title": "var vertexStart: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawprimitivesindirectarguments/baseinstance",
                    "title": "var baseInstance: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawprimitivesindirectarguments",
                "title": "MTLDrawPrimitivesIndirectArguments",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Fields",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/init(indexcount:instancecount:indexstart:basevertex:baseinstance:)",
                    "title": "init(indexCount: UInt32, instanceCount: UInt32, indexStart: UInt32, baseVertex: Int32, baseInstance: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/baseinstance",
                    "title": "var baseInstance: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/basevertex",
                    "title": "var baseVertex: Int32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/indexcount",
                    "title": "var indexCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/indexstart",
                    "title": "var indexStart: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/instancecount",
                    "title": "var instanceCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/indexstart",
                    "title": "var indexStart: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/basevertex",
                    "title": "var baseVertex: Int32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments/baseinstance",
                    "title": "var baseInstance: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtldrawindexedprimitivesindirectarguments",
                "title": "MTLDrawIndexedPrimitivesIndirectArguments",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/indirect-command-encoding",
            "title": "Indirect Command Encoding",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Ray Tracing Samples",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/accelerating-ray-tracing-using-metal",
                "title": "Accelerating ray tracing using Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/control-the-ray-tracing-process-using-intersection-queries",
                "title": "Control the Ray Tracing Process Using Intersection Queries",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-reflections-in-real-time-using-ray-tracing",
                "title": "Rendering reflections in real time using ray tracing",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/rendering-a-curve-primitive-in-a-ray-tracing-scene",
                "title": "Rendering a curve primitive in a ray tracing scene",
                "type": "sampleCode"
              },
              {
                "title": "Acceleration Structures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-ray-tracing-data-access-using-per-primitive-data",
                "title": "Improving Ray-Tracing Data Access Using Per-Primitive Data",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Reading the Structure’s Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructure/size",
                    "title": "var size: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructure/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructure",
                "title": "MTLAccelerationStructure",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Specifying Usage Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuredescriptor/usage",
                    "title": "var usage: MTLAccelerationStructureUsage",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuredescriptor",
                "title": "MTLAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying Geometry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/geometrydescriptors",
                    "title": "var geometryDescriptors: [MTLAccelerationStructureGeometryDescriptor]?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Behavior",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionkeyframecount",
                    "title": "var motionKeyframeCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionstarttime",
                    "title": "var motionStartTime: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionendtime",
                    "title": "var motionEndTime: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionstartbordermode",
                    "title": "var motionStartBorderMode: MTLMotionBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor/motionendbordermode",
                    "title": "var motionEndBorderMode: MTLMotionBorderMode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Motion Modes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmotionbordermode/clamp",
                        "title": "case clamp",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlmotionbordermode/vanish",
                        "title": "case vanish",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlmotionbordermode/init(rawvalue:)",
                        "title": "init?(rawValue: UInt32)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlmotionbordermode",
                    "title": "MTLMotionBorderMode",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtlprimitiveaccelerationstructuredescriptor",
                "title": "MTLPrimitiveAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Instance Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptortype",
                    "title": "var instanceDescriptorType: MTLAccelerationStructureInstanceDescriptorType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedaccelerationstructures",
                    "title": "var instancedAccelerationStructures: [any MTLAccelerationStructure]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Instance Descriptor Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/default",
                        "title": "case `default`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/userid",
                        "title": "case userID",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/motion",
                        "title": "case motion",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/indirect",
                        "title": "case indirect",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/indirectmotion",
                        "title": "case indirectMotion",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptortype",
                    "title": "MTLAccelerationStructureInstanceDescriptorType",
                    "type": "enum"
                  },
                  {
                    "title": "Specifying the List of Instances",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancecount",
                    "title": "var instanceCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptorbuffer",
                    "title": "var instanceDescriptorBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptorbufferoffset",
                    "title": "var instanceDescriptorBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancedescriptorstride",
                    "title": "var instanceDescriptorStride: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformcount",
                    "title": "var motionTransformCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformbuffer",
                    "title": "var motionTransformBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformbufferoffset",
                    "title": "var motionTransformBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/instancetransformationmatrixlayout",
                    "title": "var instanceTransformationMatrixLayout: MTLMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformstride",
                    "title": "var motionTransformStride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor/motiontransformtype",
                    "title": "var motionTransformType: MTLTransformType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlinstanceaccelerationstructuredescriptor",
                "title": "MTLInstanceAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Building an Acceleration Structure",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/build(accelerationstructure:descriptor:scratchbuffer:scratchbufferoffset:)",
                    "title": "func build(accelerationStructure: any MTLAccelerationStructure, descriptor: MTLAccelerationStructureDescriptor, scratchBuffer: any MTLBuffer, scratchBufferOffset: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Copying an Acceleration Structure",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/copy(sourceaccelerationstructure:destinationaccelerationstructure:)",
                    "title": "func copy(sourceAccelerationStructure: any MTLAccelerationStructure, destinationAccelerationStructure: any MTLAccelerationStructure)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/writecompactedsize(accelerationstructure:buffer:offset:)",
                    "title": "func writeCompactedSize(accelerationStructure: any MTLAccelerationStructure, buffer: any MTLBuffer, offset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/writecompactedsize(accelerationstructure:buffer:offset:sizedatatype:)",
                    "title": "func writeCompactedSize(accelerationStructure: any MTLAccelerationStructure, buffer: any MTLBuffer, offset: Int, sizeDataType: MTLDataType)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/copyandcompact(sourceaccelerationstructure:destinationaccelerationstructure:)",
                    "title": "func copyAndCompact(sourceAccelerationStructure: any MTLAccelerationStructure, destinationAccelerationStructure: any MTLAccelerationStructure)",
                    "type": "method"
                  },
                  {
                    "title": "Refitting an Acceleration Structure",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/refit(sourceaccelerationstructure:descriptor:destinationaccelerationstructure:scratchbuffer:scratchbufferoffset:)",
                    "title": "func refit(sourceAccelerationStructure: any MTLAccelerationStructure, descriptor: MTLAccelerationStructureDescriptor, destinationAccelerationStructure: (any MTLAccelerationStructure)?, scratchBuffer: (any MTLBuffer)?, scratchBufferOffset: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Command Execution for Untracked Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/updatefence(_:)",
                    "title": "func updateFence(any MTLFence)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/waitforfence(_:)",
                    "title": "func waitForFence(any MTLFence)",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Resource Usage for Argument Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useheap(_:)",
                    "title": "func useHeap(any MTLHeap)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useheaps(_:)",
                    "title": "func useHeaps([any MTLHeap])",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useresource(_:usage:)",
                    "title": "func useResource(any MTLResource, usage: MTLResourceUsage)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/useresources(_:usage:)",
                    "title": "func useResources([any MTLResource], usage: MTLResourceUsage)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlresourceusage/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlresourceusage/read",
                        "title": "static var read: MTLResourceUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlresourceusage/write",
                        "title": "static var write: MTLResourceUsage",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlresourceusage/sample",
                        "title": "static var sample: MTLResourceUsage",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtlresourceusage",
                    "title": "MTLResourceUsage",
                    "type": "struct"
                  },
                  {
                    "title": "Sampling Acceleration Structure Execution Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/samplecounters(samplebuffer:sampleindex:barrier:)",
                    "title": "func sampleCounters(sampleBuffer: any MTLCounterSampleBuffer, sampleIndex: Int, barrier: Bool)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecommandencoder/refit(sourceaccelerationstructure:descriptor:destinationaccelerationstructure:scratchbuffer:scratchbufferoffset:options:)",
                    "title": "func refit(sourceAccelerationStructure: any MTLAccelerationStructure, descriptor: MTLAccelerationStructureDescriptor, destinationAccelerationStructure: (any MTLAccelerationStructure)?, scratchBuffer: (any MTLBuffer)?, scratchBufferOffset: Int, options: MTLAccelerationStructureRefitOptions)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurecommandencoder",
                "title": "MTLAccelerationStructureCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating Usage Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Usage Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/refit",
                    "title": "static var refit: MTLAccelerationStructureUsage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/preferfastbuild",
                    "title": "static var preferFastBuild: MTLAccelerationStructureUsage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureusage/extendedlimits",
                    "title": "static var extendedLimits: MTLAccelerationStructureUsage",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureusage",
                "title": "MTLAccelerationStructureUsage",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurerefitoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurerefitoptions/perprimitivedata",
                    "title": "static var perPrimitiveData: MTLAccelerationStructureRefitOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurerefitoptions/vertexdata",
                    "title": "static var vertexData: MTLAccelerationStructureRefitOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurerefitoptions",
                "title": "MTLAccelerationStructureRefitOptions",
                "type": "struct"
              },
              {
                "title": "Acceleration Structures Passes",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepassdescriptor/samplebufferattachments",
                    "title": "var sampleBufferAttachments: MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurepassdescriptor",
                "title": "MTLAccelerationStructurePassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "var endOfEncoderSampleIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "var sampleBuffer: (any MTLCounterSampleBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "var startOfEncoderSampleIndex: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptor",
                "title": "MTLAccelerationStructurePassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Subscripts",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLAccelerationStructurePassSampleBufferAttachmentDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurepasssamplebufferattachmentdescriptorarray",
                "title": "MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "title": "Geometry Descriptors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying Base Geometry Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/intersectionfunctiontableoffset",
                    "title": "var intersectionFunctionTableOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/opaque",
                    "title": "var opaque: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/allowduplicateintersectionfunctioninvocation",
                    "title": "var allowDuplicateIntersectionFunctionInvocation: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedatabuffer",
                    "title": "var primitiveDataBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedatabufferoffset",
                    "title": "var primitiveDataBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedataelementsize",
                    "title": "var primitiveDataElementSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor/primitivedatastride",
                    "title": "var primitiveDataStride: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuregeometrydescriptor",
                "title": "MTLAccelerationStructureGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Number of Triangles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/trianglecount",
                    "title": "var triangleCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Index Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/indexbuffer",
                    "title": "var indexBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/indextype",
                    "title": "var indexType: MTLIndexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/indexbufferoffset",
                    "title": "var indexBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Vertex Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexbuffer",
                    "title": "var vertexBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexbufferoffset",
                    "title": "var vertexBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexstride",
                    "title": "var vertexStride: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/transformationmatrixbuffer",
                    "title": "var transformationMatrixBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/transformationmatrixbufferoffset",
                    "title": "var transformationMatrixBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/transformationmatrixlayout",
                    "title": "var transformationMatrixLayout: MTLMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor/vertexformat",
                    "title": "var vertexFormat: MTLAttributeFormat",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuretrianglegeometrydescriptor",
                "title": "MTLAccelerationStructureTriangleGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointbuffer",
                    "title": "var controlPointBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointbufferoffset",
                    "title": "var controlPointBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointcount",
                    "title": "var controlPointCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointformat",
                    "title": "var controlPointFormat: MTLAttributeFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/controlpointstride",
                    "title": "var controlPointStride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/curvebasis",
                    "title": "var curveBasis: MTLCurveBasis",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/curveendcaps",
                    "title": "var curveEndCaps: MTLCurveEndCaps",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/curvetype",
                    "title": "var curveType: MTLCurveType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/indexbuffer",
                    "title": "var indexBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/indexbufferoffset",
                    "title": "var indexBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/indextype",
                    "title": "var indexType: MTLIndexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusbuffer",
                    "title": "var radiusBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusbufferoffset",
                    "title": "var radiusBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusformat",
                    "title": "var radiusFormat: MTLAttributeFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/radiusstride",
                    "title": "var radiusStride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/segmentcontrolpointcount",
                    "title": "var segmentControlPointCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor/segmentcount",
                    "title": "var segmentCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructurecurvegeometrydescriptor",
                "title": "MTLAccelerationStructureCurveGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvetype/flat",
                    "title": "case flat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvetype/round",
                    "title": "case round",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvetype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcurvetype",
                "title": "MTLCurveType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/bspline",
                    "title": "case bSpline",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/bezier",
                    "title": "case bezier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/catmullrom",
                    "title": "case catmullRom",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/linear",
                    "title": "case linear",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurvebasis/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcurvebasis",
                "title": "MTLCurveBasis",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurveendcaps/disk",
                    "title": "case disk",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurveendcaps/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcurveendcaps/sphere",
                    "title": "case sphere",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcurveendcaps/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcurveendcaps",
                "title": "MTLCurveEndCaps",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Number of Bounding Boxes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxcount",
                    "title": "var boundingBoxCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Bounding Boxes Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxbuffer",
                    "title": "var boundingBoxBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxbufferoffset",
                    "title": "var boundingBoxBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor/boundingboxstride",
                    "title": "var boundingBoxStride: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureboundingboxgeometrydescriptor",
                "title": "MTLAccelerationStructureBoundingBoxGeometryDescriptor",
                "type": "class"
              },
              {
                "title": "Motion Geometry Descriptors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Number of Triangles",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/trianglecount",
                    "title": "var triangleCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Index Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/indexbuffer",
                    "title": "var indexBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/indextype",
                    "title": "var indexType: MTLIndexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/indexbufferoffset",
                    "title": "var indexBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Vertex Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/vertexbuffers",
                    "title": "var vertexBuffers: [MTLMotionKeyframeData]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/vertexstride",
                    "title": "var vertexStride: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/transformationmatrixbuffer",
                    "title": "var transformationMatrixBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/transformationmatrixbufferoffset",
                    "title": "var transformationMatrixBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/transformationmatrixlayout",
                    "title": "var transformationMatrixLayout: MTLMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor/vertexformat",
                    "title": "var vertexFormat: MTLAttributeFormat",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotiontrianglegeometrydescriptor",
                "title": "MTLAccelerationStructureMotionTriangleGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointbuffers",
                    "title": "var controlPointBuffers: [MTLMotionKeyframeData]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointcount",
                    "title": "var controlPointCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointformat",
                    "title": "var controlPointFormat: MTLAttributeFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/controlpointstride",
                    "title": "var controlPointStride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/curvebasis",
                    "title": "var curveBasis: MTLCurveBasis",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/curveendcaps",
                    "title": "var curveEndCaps: MTLCurveEndCaps",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/curvetype",
                    "title": "var curveType: MTLCurveType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/indexbuffer",
                    "title": "var indexBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/indexbufferoffset",
                    "title": "var indexBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/indextype",
                    "title": "var indexType: MTLIndexType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/radiusbuffers",
                    "title": "var radiusBuffers: [MTLMotionKeyframeData]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/radiusformat",
                    "title": "var radiusFormat: MTLAttributeFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/radiusstride",
                    "title": "var radiusStride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/segmentcontrolpointcount",
                    "title": "var segmentControlPointCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor/segmentcount",
                    "title": "var segmentCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotioncurvegeometrydescriptor",
                "title": "MTLAccelerationStructureMotionCurveGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Number of Bounding Boxes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor/boundingboxcount",
                    "title": "var boundingBoxCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Bounding Boxes Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor/boundingboxbuffers",
                    "title": "var boundingBoxBuffers: [MTLMotionKeyframeData]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor/boundingboxstride",
                    "title": "var boundingBoxStride: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotionboundingboxgeometrydescriptor",
                "title": "MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Keyframe Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmotionkeyframedata/buffer",
                    "title": "var buffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmotionkeyframedata/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlmotionkeyframedata",
                "title": "MTLMotionKeyframeData",
                "type": "class"
              },
              {
                "title": "Instance Descriptors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating an Instance Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/init(transformationmatrix:options:mask:intersectionfunctiontableoffset:accelerationstructureindex:)",
                    "title": "init(transformationMatrix: MTLPackedFloat4x3, options: MTLAccelerationStructureInstanceOptions, mask: UInt32, intersectionFunctionTableOffset: UInt32, accelerationStructureIndex: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/accelerationstructureindex",
                    "title": "var accelerationStructureIndex: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Instance Transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/transformationmatrix",
                    "title": "var transformationMatrix: MTLPackedFloat4x3",
                    "type": "property"
                  },
                  {
                    "title": "Customizing Intersection and Hit Tests for the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/intersectionfunctiontableoffset",
                    "title": "var intersectionFunctionTableOffset: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/options",
                    "title": "var options: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor/mask",
                    "title": "var mask: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureinstancedescriptor",
                "title": "MTLAccelerationStructureInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating an Instance Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/init(transformationmatrix:options:mask:intersectionfunctiontableoffset:accelerationstructureindex:userid:)",
                    "title": "init(transformationMatrix: MTLPackedFloat4x3, options: MTLAccelerationStructureInstanceOptions, mask: UInt32, intersectionFunctionTableOffset: UInt32, accelerationStructureIndex: UInt32, userID: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/accelerationstructureindex",
                    "title": "var accelerationStructureIndex: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the Instance Transform",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/transformationmatrix",
                    "title": "var transformationMatrix: MTLPackedFloat4x3",
                    "type": "property"
                  },
                  {
                    "title": "Customizing Intersection and Hit Tests for the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/intersectionfunctiontableoffset",
                    "title": "var intersectionFunctionTableOffset: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/options",
                    "title": "var options: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/mask",
                    "title": "var mask: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the User Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor/userid",
                    "title": "var userID: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureuseridinstancedescriptor",
                "title": "MTLAccelerationStructureUserIDInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating an Instance Descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/init(options:mask:intersectionfunctiontableoffset:accelerationstructureindex:userid:motiontransformsstartindex:motiontransformscount:motionstartbordermode:motionendbordermode:motionstarttime:motionendtime:)",
                    "title": "init(options: MTLAccelerationStructureInstanceOptions, mask: UInt32, intersectionFunctionTableOffset: UInt32, accelerationStructureIndex: UInt32, userID: UInt32, motionTransformsStartIndex: UInt32, motionTransformsCount: UInt32, motionStartBorderMode: MTLMotionBorderMode, motionEndBorderMode: MTLMotionBorderMode, motionStartTime: Float, motionEndTime: Float)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/accelerationstructureindex",
                    "title": "var accelerationStructureIndex: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionstarttime",
                    "title": "var motionStartTime: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionendtime",
                    "title": "var motionEndTime: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionstartbordermode",
                    "title": "var motionStartBorderMode: MTLMotionBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motionendbordermode",
                    "title": "var motionEndBorderMode: MTLMotionBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motiontransformsstartindex",
                    "title": "var motionTransformsStartIndex: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/motiontransformscount",
                    "title": "var motionTransformsCount: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Customizing Intersection and Hit Tests for the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/intersectionfunctiontableoffset",
                    "title": "var intersectionFunctionTableOffset: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/options",
                    "title": "var options: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/mask",
                    "title": "var mask: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the User Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor/userid",
                    "title": "var userID: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructuremotioninstancedescriptor",
                "title": "MTLAccelerationStructureMotionInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating Instance Flags",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Usage Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/disabletriangleculling",
                    "title": "static var disableTriangleCulling: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/trianglefrontfacingwindingcounterclockwise",
                    "title": "static var triangleFrontFacingWindingCounterClockwise: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/opaque",
                    "title": "static var opaque: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions/nonopaque",
                    "title": "static var nonOpaque: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlaccelerationstructureinstanceoptions",
                "title": "MTLAccelerationStructureInstanceOptions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancecountbuffer",
                    "title": "var instanceCountBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancecountbufferoffset",
                    "title": "var instanceCountBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptorbuffer",
                    "title": "var instanceDescriptorBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptorbufferoffset",
                    "title": "var instanceDescriptorBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptorstride",
                    "title": "var instanceDescriptorStride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancedescriptortype",
                    "title": "var instanceDescriptorType: MTLAccelerationStructureInstanceDescriptorType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/instancetransformationmatrixlayout",
                    "title": "var instanceTransformationMatrixLayout: MTLMatrixLayout",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/maxinstancecount",
                    "title": "var maxInstanceCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/maxmotiontransformcount",
                    "title": "var maxMotionTransformCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformbuffer",
                    "title": "var motionTransformBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformbufferoffset",
                    "title": "var motionTransformBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformcountbuffer",
                    "title": "var motionTransformCountBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformcountbufferoffset",
                    "title": "var motionTransformCountBufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformstride",
                    "title": "var motionTransformStride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor/motiontransformtype",
                    "title": "var motionTransformType: MTLTransformType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectinstanceaccelerationstructuredescriptor",
                "title": "MTLIndirectInstanceAccelerationStructureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/init(transformationmatrix:options:mask:intersectionfunctiontableoffset:userid:accelerationstructureid:)",
                    "title": "init(transformationMatrix: MTLPackedFloat4x3, options: MTLAccelerationStructureInstanceOptions, mask: UInt32, intersectionFunctionTableOffset: UInt32, userID: UInt32, accelerationStructureID: MTLResourceID)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/accelerationstructureid",
                    "title": "var accelerationStructureID: MTLResourceID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/intersectionfunctiontableoffset",
                    "title": "var intersectionFunctionTableOffset: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/mask",
                    "title": "var mask: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/options",
                    "title": "var options: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/transformationmatrix",
                    "title": "var transformationMatrix: MTLPackedFloat4x3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor/userid",
                    "title": "var userID: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectaccelerationstructureinstancedescriptor",
                "title": "MTLIndirectAccelerationStructureInstanceDescriptor",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/accelerationstructureid",
                    "title": "var accelerationStructureID: MTLResourceID",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Motion Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionstarttime",
                    "title": "var motionStartTime: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionstartbordermode",
                    "title": "var motionStartBorderMode: MTLMotionBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionendtime",
                    "title": "var motionEndTime: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motionendbordermode",
                    "title": "var motionEndBorderMode: MTLMotionBorderMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motiontransformscount",
                    "title": "var motionTransformsCount: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/motiontransformsstartindex",
                    "title": "var motionTransformsStartIndex: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying the User Identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/userid",
                    "title": "var userID: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/init(options:mask:intersectionfunctiontableoffset:userid:accelerationstructureid:motiontransformsstartindex:motiontransformscount:motionstartbordermode:motionendbordermode:motionstarttime:motionendtime:)",
                    "title": "init(options: MTLAccelerationStructureInstanceOptions, mask: UInt32, intersectionFunctionTableOffset: UInt32, userID: UInt32, accelerationStructureID: MTLResourceID, motionTransformsStartIndex: UInt32, motionTransformsCount: UInt32, motionStartBorderMode: MTLMotionBorderMode, motionEndBorderMode: MTLMotionBorderMode, motionStartTime: Float, motionEndTime: Float)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/intersectionfunctiontableoffset",
                    "title": "var intersectionFunctionTableOffset: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/mask",
                    "title": "var mask: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor/options",
                    "title": "var options: MTLAccelerationStructureInstanceOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlindirectaccelerationstructuremotioninstancedescriptor",
                "title": "MTLIndirectAccelerationStructureMotionInstanceDescriptor",
                "type": "struct"
              },
              {
                "title": "Intersection Function Tables",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting a Table Entry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunction(_:index:)",
                    "title": "func setFunction((any MTLFunctionHandle)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunctions(_:range:)",
                    "title": "func setFunctions([(any MTLFunctionHandle)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Arguments for Intersection Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffer(_:offset:index:)",
                    "title": "func setBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffers(_:offsets:range:)",
                    "title": "func setBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontable(_:bufferindex:)",
                    "title": "func setVisibleFunctionTable((any MTLVisibleFunctionTable)?, bufferIndex: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontables(_:bufferrange:)",
                    "title": "func setVisibleFunctionTables([(any MTLVisibleFunctionTable)?], bufferRange: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Opaque Triangle Intersection Testing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:index:)",
                    "title": "func setOpaqueTriangleIntersectionFunction(signature: MTLIntersectionFunctionSignature, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:range:)",
                    "title": "func setOpaqueTriangleIntersectionFunction(signature: MTLIntersectionFunctionSignature, range: NSRange)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:index:)",
                    "title": "func setOpaqueCurveIntersectionFunction(signature: MTLIntersectionFunctionSignature, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:range:)",
                    "title": "func setOpaqueCurveIntersectionFunction(signature: MTLIntersectionFunctionSignature, range: NSRange)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontable",
                "title": "MTLIntersectionFunctionTable",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Table’s Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor/functioncount",
                    "title": "var functionCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor",
                "title": "MTLIntersectionFunctionTableDescriptor",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlintersectionfunctiondescriptor",
                "title": "MTLIntersectionFunctionDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing the Intersection Function Signature",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying the Intersection Function Signature",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/instancing",
                    "title": "static var instancing: MTLIntersectionFunctionSignature",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/triangledata",
                    "title": "static var triangleData: MTLIntersectionFunctionSignature",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/worldspacedata",
                    "title": "static var worldSpaceData: MTLIntersectionFunctionSignature",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/curvedata",
                    "title": "static var curveData: MTLIntersectionFunctionSignature",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/extendedlimits",
                    "title": "static var extendedLimits: MTLIntersectionFunctionSignature",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/instancemotion",
                    "title": "static var instanceMotion: MTLIntersectionFunctionSignature",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/maxlevels",
                    "title": "static var maxLevels: MTLIntersectionFunctionSignature",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctionsignature/primitivemotion",
                    "title": "static var primitiveMotion: MTLIntersectionFunctionSignature",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctionsignature",
                "title": "MTLIntersectionFunctionSignature",
                "type": "struct"
              },
              {
                "title": "Supporting Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/mtlaxisalignedboundingbox",
                "title": "MTLAxisAlignedBoundingBox",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlpackedfloat3",
                "title": "MTLPackedFloat3",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlpackedfloat4x3",
                "title": "MTLPackedFloat4x3",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtlpackedfloat3make(_:_:_:)",
                "title": "func MTLPackedFloat3Make(Float, Float, Float) -> MTLPackedFloat3",
                "type": "func"
              }
            ],
            "path": "/documentation/metal/ray-tracing-with-acceleration-structures",
            "title": "Ray Tracing with Acceleration Structures",
            "type": "collection"
          },
          {
            "title": "Resources",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Resource Management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/setting-resource-storage-modes",
                "title": "Setting Resource Storage Modes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/choosing-a-resource-storage-mode-for-apple-gpus",
                "title": "Choosing a Resource Storage Mode for Apple GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/choosing-a-resource-storage-mode-for-intel-and-amd-gpus",
                "title": "Choosing a Resource Storage Mode for Intel and AMD GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/copying-data-to-a-private-resource",
                "title": "Copying Data to a Private Resource",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-a-managed-resource-in-macos",
                "title": "Synchronizing a Managed Resource in macOS",
                "type": "article"
              },
              {
                "path": "/documentation/metal/transferring-data-between-connected-gpus",
                "title": "Transferring Data Between Connected GPUs",
                "type": "article"
              },
              {
                "path": "/documentation/metal/reducing-the-memory-footprint-of-metal-apps",
                "title": "Reducing the Memory Footprint of Metal Apps",
                "type": "article"
              },
              {
                "title": "Residency Sets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/simplifying-gpu-resource-management-with-residency-sets",
                "title": "Simplifying GPU Resource Management with Residency Sets",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Adding Allocations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/addallocation(_:)",
                    "title": "func addAllocation(any MTLAllocation)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/addallocations(_:)",
                    "title": "func addAllocations([any MTLAllocation])",
                    "type": "method"
                  },
                  {
                    "title": "Removing Allocations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/removeallallocations()",
                    "title": "func removeAllAllocations()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/removeallocation(_:)",
                    "title": "func removeAllocation(any MTLAllocation)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/removeallocations(_:)",
                    "title": "func removeAllocations([any MTLAllocation])",
                    "type": "method"
                  },
                  {
                    "title": "Finalizing Pending Allocation Changes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/commit()",
                    "title": "func commit()",
                    "type": "method"
                  },
                  {
                    "title": "Requesting Residency for the Allocations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/requestresidency()",
                    "title": "func requestResidency()",
                    "type": "method"
                  },
                  {
                    "title": "Releasing the Allocations from Residency",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/endresidency()",
                    "title": "func endResidency()",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting a Residency Set",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/containsallocation(_:)",
                    "title": "func containsAllocation(any MTLAllocation) -> Bool",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/allallocations",
                    "title": "var allAllocations: [any MTLAllocation]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/allocationcount",
                    "title": "var allocationCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencyset/allocatedsize",
                    "title": "var allocatedSize: UInt64",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresidencyset",
                "title": "MTLResidencySet",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Residency Set",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencysetdescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresidencysetdescriptor/initialcapacity",
                    "title": "var initialCapacity: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresidencysetdescriptor",
                "title": "MTLResidencySetDescriptor",
                "type": "class"
              },
              {
                "title": "Common Resource Functionality",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Inspecting an Allocation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlallocation/allocatedsize",
                    "title": "var allocatedSize: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlallocation",
                "title": "MTLAllocation",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Resource",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Reading Memory and Storage Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/cpucachemode",
                    "title": "var cpuCacheMode: MTLCPUCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/storagemode",
                    "title": "var storageMode: MTLStorageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/hazardtrackingmode",
                    "title": "var hazardTrackingMode: MTLHazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/resourceoptions",
                    "title": "var resourceOptions: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Cache Mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcpucachemode/defaultcache",
                        "title": "case defaultCache",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcpucachemode/writecombined",
                        "title": "case writeCombined",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcpucachemode/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcpucachemode",
                    "title": "MTLCPUCacheMode",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Storage Mode Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/shared",
                        "title": "case shared",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/managed",
                        "title": "case managed",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/private",
                        "title": "case `private`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/memoryless",
                        "title": "case memoryless",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlstoragemode/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlstoragemode",
                    "title": "MTLStorageMode",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Tracking Mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlhazardtrackingmode/default",
                        "title": "case `default`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlhazardtrackingmode/untracked",
                        "title": "case untracked",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlhazardtrackingmode/tracked",
                        "title": "case tracked",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlhazardtrackingmode/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlhazardtrackingmode",
                    "title": "MTLHazardTrackingMode",
                    "type": "enum"
                  },
                  {
                    "title": "Setting the Purgeable State of the Resource",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/setpurgeablestate(_:)",
                    "title": "func setPurgeableState(MTLPurgeableState) -> MTLPurgeableState",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Purgeable States",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/keepcurrent",
                        "title": "case keepCurrent",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/nonvolatile",
                        "title": "case nonVolatile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/volatile",
                        "title": "case volatile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/empty",
                        "title": "case empty",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlpurgeablestate/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlpurgeablestate",
                    "title": "MTLPurgeableState",
                    "type": "enum"
                  },
                  {
                    "title": "Managing Heap Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/heapoffset",
                    "title": "var heapOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/heap",
                    "title": "var heap: (any MTLHeap)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/makealiasable()",
                    "title": "func makeAliasable()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/isaliasable()",
                    "title": "func isAliasable() -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Querying the Allocated Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresource/allocatedsize",
                    "title": "var allocatedSize: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresource",
                "title": "MTLResource",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Initializing Resource Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying CPU Cache Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/cpucachemodewritecombined",
                    "title": "static var cpuCacheModeWriteCombined: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Storage Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodeshared",
                    "title": "static var storageModeShared: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodemanaged",
                    "title": "static var storageModeManaged: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodeprivate",
                    "title": "static var storageModePrivate: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/storagemodememoryless",
                    "title": "static var storageModeMemoryless: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Hazard Tracking",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/hazardtrackingmodetracked",
                    "title": "static var hazardTrackingModeTracked: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceoptions/hazardtrackingmodeuntracked",
                    "title": "static var hazardTrackingModeUntracked: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "title": "Deprecated Options",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlresourceoptions/optioncpucachemodewritecombined",
                    "title": "static var optionCPUCacheModeWriteCombined: MTLResourceOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresourceoptions",
                "title": "MTLResourceOptions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceusage/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceusage/read",
                    "title": "static var read: MTLResourceUsage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceusage/write",
                    "title": "static var write: MTLResourceUsage",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlresourceusage/sample",
                    "title": "static var sample: MTLResourceUsage",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresourceusage",
                "title": "MTLResourceUsage",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourceid/init()",
                    "title": "init()",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlresourceid",
                "title": "MTLResourceID",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/resource-fundamentals",
            "title": "Resource Fundamentals",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "General Purpose Buffers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Texture That Shares Buffer Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/maketexture(descriptor:offset:bytesperrow:)",
                    "title": "func makeTexture(descriptor: MTLTextureDescriptor, offset: Int, bytesPerRow: Int) -> (any MTLTexture)?",
                    "type": "method"
                  },
                  {
                    "title": "Reading the Buffer’s Data on the CPU",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/contents()",
                    "title": "func contents() -> UnsafeMutableRawPointer",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing Data to the GPU for Managed Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/didmodifyrange(_:)",
                    "title": "func didModifyRange(Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Debugging Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/adddebugmarker(_:range:)",
                    "title": "func addDebugMarker(String, range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/removealldebugmarkers()",
                    "title": "func removeAllDebugMarkers()",
                    "type": "method"
                  },
                  {
                    "title": "Reading Buffer Length",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/length",
                    "title": "var length: Int",
                    "type": "property"
                  },
                  {
                    "title": "Creating Views of Buffers on Other GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/makeremotebufferview(_:)",
                    "title": "func makeRemoteBufferView(any MTLDevice) -> (any MTLBuffer)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/remotestoragebuffer",
                    "title": "var remoteStorageBuffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbuffer/gpuaddress",
                    "title": "var gpuAddress: UInt64",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlbuffer",
                "title": "MTLBuffer",
                "type": "protocol"
              },
              {
                "title": "Argument Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-cpu-performance-by-using-argument-buffers",
                "title": "Improving CPU Performance by Using Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/managing-groups-of-resources-with-argument-buffers",
                "title": "Managing groups of resources with argument buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/tracking-the-resource-residency-of-argument-buffers",
                "title": "Tracking the Resource Residency of Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/indexing-argument-buffers",
                "title": "Indexing Argument Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/rendering-terrain-dynamically-with-argument-buffers",
                "title": "Rendering Terrain Dynamically with Argument Buffers",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/encoding-argument-buffers-on-the-gpu",
                "title": "Encoding Argument Buffers on the GPU",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Setting the Descriptor’s Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/datatype",
                    "title": "var dataType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/index",
                    "title": "var index: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/access",
                    "title": "var access: MTLBindingAccess",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/arraylength",
                    "title": "var arrayLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/constantblockalignment",
                    "title": "var constantBlockAlignment: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentdescriptor/texturetype",
                    "title": "var textureType: MTLTextureType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlargumentdescriptor",
                "title": "MTLArgumentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Creating an Argument Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setargumentbuffer(_:offset:)",
                    "title": "func setArgumentBuffer((any MTLBuffer)?, offset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setargumentbuffer(_:startoffset:arrayelement:)",
                    "title": "func setArgumentBuffer((any MTLBuffer)?, startOffset: Int, arrayElement: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/encodedlength",
                    "title": "var encodedLength: Int",
                    "type": "property"
                  },
                  {
                    "title": "Encoding Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setbuffer(_:offset:index:)",
                    "title": "func setBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setbuffers(_:offsets:range:)",
                    "title": "func setBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Textures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/settexture(_:index:)",
                    "title": "func setTexture((any MTLTexture)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/settextures(_:range:)",
                    "title": "func setTextures([(any MTLTexture)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Samplers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setsamplerstate(_:index:)",
                    "title": "func setSamplerState((any MTLSamplerState)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setsamplerstates(_:range:)",
                    "title": "func setSamplerStates([(any MTLSamplerState)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Pipeline States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setrenderpipelinestate(_:index:)",
                    "title": "func setRenderPipelineState((any MTLRenderPipelineState)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setrenderpipelinestates(_:range:)",
                    "title": "func setRenderPipelineStates([(any MTLRenderPipelineState)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setcomputepipelinestate(_:index:)",
                    "title": "func setComputePipelineState((any MTLComputePipelineState)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setcomputepipelinestates(_:with:)",
                    "title": "func setComputePipelineStates(UnsafePointer<(any MTLComputePipelineState)?>, with: NSRange)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setcomputepipelinestate(_:at:)",
                    "title": "func setComputePipelineState((any MTLComputePipelineState)?, at: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setcomputepipelinestates(_:range:)",
                    "title": "func setComputePipelineStates([(any MTLComputePipelineState)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Inlined Constant Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/constantdata(at:)",
                    "title": "func constantData(at: Int) -> UnsafeMutableRawPointer",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Indirect Command Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setindirectcommandbuffer(_:index:)",
                    "title": "func setIndirectCommandBuffer((any MTLIndirectCommandBuffer)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setindirectcommandbuffers(_:range:)",
                    "title": "func setIndirectCommandBuffers([(any MTLIndirectCommandBuffer)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Acceleration Structures",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setaccelerationstructure(_:index:)",
                    "title": "func setAccelerationStructure((any MTLAccelerationStructure)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Encoding Function Tables",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setvisiblefunctiontable(_:index:)",
                    "title": "func setVisibleFunctionTable((any MTLVisibleFunctionTable)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setintersectionfunctiontable(_:index:)",
                    "title": "func setIntersectionFunctionTable((any MTLIntersectionFunctionTable)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setintersectionfunctiontables(_:range:)",
                    "title": "func setIntersectionFunctionTables([(any MTLIntersectionFunctionTable)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/setvisiblefunctiontables(_:range:)",
                    "title": "func setVisibleFunctionTables([(any MTLVisibleFunctionTable)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Creating a Nested Argument Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/makeargumentencoderforbuffer(atindex:)",
                    "title": "func makeArgumentEncoderForBuffer(atIndex: Int) -> (any MTLArgumentEncoder)?",
                    "type": "method"
                  },
                  {
                    "title": "Querying Alignment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/alignment",
                    "title": "var alignment: Int",
                    "type": "property"
                  },
                  {
                    "title": "Identifying the Argument Encoder",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentencoder/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlargumentencoder",
                "title": "MTLArgumentEncoder",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlattributestridestatic",
                "title": "let MTLAttributeStrideStatic: Int",
                "type": "var"
              },
              {
                "title": "Model I/O Interoperability",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmesh",
                "title": "MTKMesh",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmeshbuffer",
                "title": "MTKMeshBuffer",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmeshbufferallocator",
                "title": "MTKMeshBufferAllocator",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtksubmesh",
                "title": "MTKSubmesh",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmodelerror",
                "title": "MTKModelError",
                "type": "struct"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmetalvertexformatfrommodelio(_:)",
                "title": "func MTKMetalVertexFormatFromModelIO(MDLVertexFormat) -> MTLVertexFormat",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmodeliovertexformatfrommetal(_:)",
                "title": "func MTKModelIOVertexFormatFromMetal(MTLVertexFormat) -> MDLVertexFormat",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmetalvertexdescriptorfrommodelio(_:)",
                "title": "func MTKMetalVertexDescriptorFromModelIO(MDLVertexDescriptor) -> MTLVertexDescriptor?",
                "type": "func"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkmodeliovertexdescriptorfrommetal(_:)",
                "title": "func MTKModelIOVertexDescriptorFromMetal(MTLVertexDescriptor) -> MDLVertexDescriptor",
                "type": "func"
              }
            ],
            "path": "/documentation/metal/buffers",
            "title": "Buffers",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Texture Basics",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/understanding-color-renderable-pixel-format-sizes",
                "title": "Understanding Color-Renderable Pixel Format Sizes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/optimizing-texture-data",
                "title": "Optimizing Texture Data",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Copying Data into a Texture Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/replace(region:mipmaplevel:slice:withbytes:bytesperrow:bytesperimage:)",
                    "title": "func replace(region: MTLRegion, mipmapLevel: Int, slice: Int, withBytes: UnsafeRawPointer, bytesPerRow: Int, bytesPerImage: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/replace(region:mipmaplevel:withbytes:bytesperrow:)",
                    "title": "func replace(region: MTLRegion, mipmapLevel: Int, withBytes: UnsafeRawPointer, bytesPerRow: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Copying Data from a Texture Image",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/getbytes(_:bytesperrow:bytesperimage:from:mipmaplevel:slice:)",
                    "title": "func getBytes(UnsafeMutableRawPointer, bytesPerRow: Int, bytesPerImage: Int, from: MTLRegion, mipmapLevel: Int, slice: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/getbytes(_:bytesperrow:from:mipmaplevel:)",
                    "title": "func getBytes(UnsafeMutableRawPointer, bytesPerRow: Int, from: MTLRegion, mipmapLevel: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Creating Textures by Reinterpreting Existing Texture Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/maketextureview(pixelformat:)",
                    "title": "func makeTextureView(pixelFormat: MTLPixelFormat) -> (any MTLTexture)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/maketextureview(pixelformat:texturetype:levels:slices:)",
                    "title": "func makeTextureView(pixelFormat: MTLPixelFormat, textureType: MTLTextureType, levels: Range<Int>, slices: Range<Int>) -> (any MTLTexture)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/maketextureview(pixelformat:texturetype:levels:slices:swizzle:)",
                    "title": "func makeTextureView(pixelFormat: MTLPixelFormat, textureType: MTLTextureType, levels: Range<Int>, slices: Range<Int>, swizzle: MTLTextureSwizzleChannels) -> (any MTLTexture)?",
                    "type": "method"
                  },
                  {
                    "title": "Querying Texture Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/texturetype",
                    "title": "var textureType: MTLTextureType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/pixelformat",
                    "title": "var pixelFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/width",
                    "title": "var width: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/height",
                    "title": "var height: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/depth",
                    "title": "var depth: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/mipmaplevelcount",
                    "title": "var mipmapLevelCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/arraylength",
                    "title": "var arrayLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/samplecount",
                    "title": "var sampleCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/isframebufferonly",
                    "title": "var isFramebufferOnly: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/usage",
                    "title": "var usage: MTLTextureUsage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/allowgpuoptimizedcontents",
                    "title": "var allowGPUOptimizedContents: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/isshareable",
                    "title": "var isShareable: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/swizzle",
                    "title": "var swizzle: MTLTextureSwizzleChannels",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Texture Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1d",
                        "title": "case type1D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1darray",
                        "title": "case type1DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2d",
                        "title": "case type2D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2darray",
                        "title": "case type2DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisample",
                        "title": "case type2DMultisample",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecube",
                        "title": "case typeCube",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecubearray",
                        "title": "case typeCubeArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type3d",
                        "title": "case type3D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisamplearray",
                        "title": "case type2DMultisampleArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typetexturebuffer",
                        "title": "case typeTextureBuffer",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtltexturetype",
                    "title": "MTLTextureType",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Texture Usage Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/unknown",
                        "title": "static var unknown: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderread",
                        "title": "static var shaderRead: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderwrite",
                        "title": "static var shaderWrite: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/rendertarget",
                        "title": "static var renderTarget: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/pixelformatview",
                        "title": "static var pixelFormatView: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "title": "Creating Texture Usage Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderatomic",
                        "title": "static var shaderAtomic: MTLTextureUsage",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureusage",
                    "title": "MTLTextureUsage",
                    "type": "struct"
                  },
                  {
                    "title": "Getting Information about the IOSurface the Texture Was Created From",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/iosurface",
                    "title": "var iosurface: IOSurfaceRef?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/iosurfaceplane",
                    "title": "var iosurfacePlane: Int",
                    "type": "property"
                  },
                  {
                    "title": "Getting Information about Ancestor Resources",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/parent",
                    "title": "var parent: (any MTLTexture)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/parentrelativelevel",
                    "title": "var parentRelativeLevel: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/parentrelativeslice",
                    "title": "var parentRelativeSlice: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/buffer",
                    "title": "var buffer: (any MTLBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/bufferoffset",
                    "title": "var bufferOffset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/bufferbytesperrow",
                    "title": "var bufferBytesPerRow: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtltexture/rootresource",
                    "title": "var rootResource: (any MTLResource)?",
                    "type": "property"
                  },
                  {
                    "title": "Creating a Shared Texture Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/makesharedtexturehandle()",
                    "title": "func makeSharedTextureHandle() -> MTLSharedTextureHandle?",
                    "type": "method"
                  },
                  {
                    "title": "Creating Views of Textures on Other GPUs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/makeremotetextureview(_:)",
                    "title": "func makeRemoteTextureView(any MTLDevice) -> (any MTLTexture)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/remotestoragetexture",
                    "title": "var remoteStorageTexture: (any MTLTexture)?",
                    "type": "property"
                  },
                  {
                    "title": "Querying Sparse Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/issparse",
                    "title": "var isSparse: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/firstmipmapintail",
                    "title": "var firstMipmapInTail: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/tailsizeinbytes",
                    "title": "var tailSizeInBytes: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/compressiontype",
                    "title": "var compressionType: MTLTextureCompressionType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexture/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexture",
                "title": "MTLTexture",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturecompressiontype/lossless",
                    "title": "case lossless",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtltexturecompressiontype/lossy",
                    "title": "case lossy",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturecompressiontype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtltexturecompressiontype",
                "title": "MTLTextureCompressionType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Creating Texture Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texture2ddescriptor(pixelformat:width:height:mipmapped:)",
                    "title": "class func texture2DDescriptor(pixelFormat: MTLPixelFormat, width: Int, height: Int, mipmapped: Bool) -> MTLTextureDescriptor",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texturecubedescriptor(pixelformat:size:mipmapped:)",
                    "title": "class func textureCubeDescriptor(pixelFormat: MTLPixelFormat, size: Int, mipmapped: Bool) -> MTLTextureDescriptor",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texturebufferdescriptor(with:width:resourceoptions:usage:)",
                    "title": "class func textureBufferDescriptor(with: MTLPixelFormat, width: Int, resourceOptions: MTLResourceOptions, usage: MTLTextureUsage) -> MTLTextureDescriptor",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Texture Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/texturetype",
                    "title": "var textureType: MTLTextureType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/pixelformat",
                    "title": "var pixelFormat: MTLPixelFormat",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/width",
                    "title": "var width: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/height",
                    "title": "var height: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/depth",
                    "title": "var depth: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/mipmaplevelcount",
                    "title": "var mipmapLevelCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/samplecount",
                    "title": "var sampleCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/arraylength",
                    "title": "var arrayLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/resourceoptions",
                    "title": "var resourceOptions: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/cpucachemode",
                    "title": "var cpuCacheMode: MTLCPUCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/storagemode",
                    "title": "var storageMode: MTLStorageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/hazardtrackingmode",
                    "title": "var hazardTrackingMode: MTLHazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/allowgpuoptimizedcontents",
                    "title": "var allowGPUOptimizedContents: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/usage",
                    "title": "var usage: MTLTextureUsage",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/swizzle",
                    "title": "var swizzle: MTLTextureSwizzleChannels",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a Swizzle Pattern",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/init(red:green:blue:alpha:)",
                        "title": "init(red: MTLTextureSwizzle, green: MTLTextureSwizzle, blue: MTLTextureSwizzle, alpha: MTLTextureSwizzle)",
                        "type": "init"
                      },
                      {
                        "title": "Specifying Swizzle Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/red",
                        "title": "var red: MTLTextureSwizzle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/green",
                        "title": "var green: MTLTextureSwizzle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/blue",
                        "title": "var blue: MTLTextureSwizzle",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzlechannels/alpha",
                        "title": "var alpha: MTLTextureSwizzle",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureswizzlechannels",
                    "title": "MTLTextureSwizzleChannels",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Swizzle Channels",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/alpha",
                        "title": "case alpha",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/blue",
                        "title": "case blue",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/green",
                        "title": "case green",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/red",
                        "title": "case red",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/one",
                        "title": "case one",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/zero",
                        "title": "case zero",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureswizzle/init(rawvalue:)",
                        "title": "init?(rawValue: UInt8)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureswizzle",
                    "title": "MTLTextureSwizzle",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Texture Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1d",
                        "title": "case type1D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type1darray",
                        "title": "case type1DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2d",
                        "title": "case type2D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2darray",
                        "title": "case type2DArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisample",
                        "title": "case type2DMultisample",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecube",
                        "title": "case typeCube",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typecubearray",
                        "title": "case typeCubeArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type3d",
                        "title": "case type3D",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/type2dmultisamplearray",
                        "title": "case type2DMultisampleArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/typetexturebuffer",
                        "title": "case typeTextureBuffer",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltexturetype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtltexturetype",
                    "title": "MTLTextureType",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Texture Usage Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/unknown",
                        "title": "static var unknown: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderread",
                        "title": "static var shaderRead: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderwrite",
                        "title": "static var shaderWrite: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/rendertarget",
                        "title": "static var renderTarget: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/pixelformatview",
                        "title": "static var pixelFormatView: MTLTextureUsage",
                        "type": "property"
                      },
                      {
                        "title": "Creating Texture Usage Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtltextureusage/shaderatomic",
                        "title": "static var shaderAtomic: MTLTextureUsage",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtltextureusage",
                    "title": "MTLTextureUsage",
                    "type": "struct"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturedescriptor/compressiontype",
                    "title": "var compressionType: MTLTextureCompressionType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexturedescriptor",
                "title": "MTLTextureDescriptor",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader",
                "title": "MTKTextureLoader",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Shared Texture Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedtexturehandle/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedtexturehandle/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsharedtexturehandle",
                "title": "MTLSharedTextureHandle",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Ordinary 8-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/a8unorm",
                    "title": "case a8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8unorm",
                    "title": "case r8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8unorm_srgb",
                    "title": "case r8Unorm_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8snorm",
                    "title": "case r8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8uint",
                    "title": "case r8Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r8sint",
                    "title": "case r8Sint",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 16-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16unorm",
                    "title": "case r16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16snorm",
                    "title": "case r16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16uint",
                    "title": "case r16Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16sint",
                    "title": "case r16Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r16float",
                    "title": "case r16Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8unorm",
                    "title": "case rg8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8unorm_srgb",
                    "title": "case rg8Unorm_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8snorm",
                    "title": "case rg8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8uint",
                    "title": "case rg8Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg8sint",
                    "title": "case rg8Sint",
                    "type": "case"
                  },
                  {
                    "title": "Packed 16-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/b5g6r5unorm",
                    "title": "case b5g6r5Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/a1bgr5unorm",
                    "title": "case a1bgr5Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/abgr4unorm",
                    "title": "case abgr4Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr5a1unorm",
                    "title": "case bgr5A1Unorm",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 32-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r32uint",
                    "title": "case r32Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r32sint",
                    "title": "case r32Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/r32float",
                    "title": "case r32Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16unorm",
                    "title": "case rg16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16snorm",
                    "title": "case rg16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16uint",
                    "title": "case rg16Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16sint",
                    "title": "case rg16Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg16float",
                    "title": "case rg16Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8unorm",
                    "title": "case rgba8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8unorm_srgb",
                    "title": "case rgba8Unorm_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8snorm",
                    "title": "case rgba8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8uint",
                    "title": "case rgba8Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba8sint",
                    "title": "case rgba8Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra8unorm",
                    "title": "case bgra8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra8unorm_srgb",
                    "title": "case bgra8Unorm_srgb",
                    "type": "case"
                  },
                  {
                    "title": "Packed 32-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr10a2unorm",
                    "title": "case bgr10a2Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgb10a2unorm",
                    "title": "case rgb10a2Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgb10a2uint",
                    "title": "case rgb10a2Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg11b10float",
                    "title": "case rg11b10Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgb9e5float",
                    "title": "case rgb9e5Float",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 64-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg32uint",
                    "title": "case rg32Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg32sint",
                    "title": "case rg32Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rg32float",
                    "title": "case rg32Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16unorm",
                    "title": "case rgba16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16snorm",
                    "title": "case rgba16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16uint",
                    "title": "case rgba16Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16sint",
                    "title": "case rgba16Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba16float",
                    "title": "case rgba16Float",
                    "type": "case"
                  },
                  {
                    "title": "Ordinary 128-Bit Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba32uint",
                    "title": "case rgba32Uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba32sint",
                    "title": "case rgba32Sint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/rgba32float",
                    "title": "case rgba32Float",
                    "type": "case"
                  },
                  {
                    "title": "Compressed PVRTC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_2bpp",
                    "title": "case pvrtc_rgb_2bpp",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_2bpp_srgb",
                    "title": "case pvrtc_rgb_2bpp_srgb",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_4bpp",
                    "title": "case pvrtc_rgb_4bpp",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgb_4bpp_srgb",
                    "title": "case pvrtc_rgb_4bpp_srgb",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_2bpp",
                    "title": "case pvrtc_rgba_2bpp",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_2bpp_srgb",
                    "title": "case pvrtc_rgba_2bpp_srgb",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_4bpp",
                    "title": "case pvrtc_rgba_4bpp",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlpixelformat/pvrtc_rgba_4bpp_srgb",
                    "title": "case pvrtc_rgba_4bpp_srgb",
                    "type": "case"
                  },
                  {
                    "title": "Compressed EAC/ETC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_r11unorm",
                    "title": "case eac_r11Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_r11snorm",
                    "title": "case eac_r11Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rg11unorm",
                    "title": "case eac_rg11Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rg11snorm",
                    "title": "case eac_rg11Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rgba8",
                    "title": "case eac_rgba8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/eac_rgba8_srgb",
                    "title": "case eac_rgba8_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8",
                    "title": "case etc2_rgb8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8_srgb",
                    "title": "case etc2_rgb8_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8a1",
                    "title": "case etc2_rgb8a1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/etc2_rgb8a1_srgb",
                    "title": "case etc2_rgb8a1_srgb",
                    "type": "case"
                  },
                  {
                    "title": "Compressed ASTC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_4x4_srgb",
                    "title": "case astc_4x4_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x4_srgb",
                    "title": "case astc_5x4_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x5_srgb",
                    "title": "case astc_5x5_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x5_srgb",
                    "title": "case astc_6x5_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x6_srgb",
                    "title": "case astc_6x6_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x5_srgb",
                    "title": "case astc_8x5_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x6_srgb",
                    "title": "case astc_8x6_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x8_srgb",
                    "title": "case astc_8x8_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x5_srgb",
                    "title": "case astc_10x5_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x6_srgb",
                    "title": "case astc_10x6_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x8_srgb",
                    "title": "case astc_10x8_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x10_srgb",
                    "title": "case astc_10x10_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x10_srgb",
                    "title": "case astc_12x10_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x12_srgb",
                    "title": "case astc_12x12_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_4x4_ldr",
                    "title": "case astc_4x4_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x4_ldr",
                    "title": "case astc_5x4_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x5_ldr",
                    "title": "case astc_5x5_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x5_ldr",
                    "title": "case astc_6x5_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x6_ldr",
                    "title": "case astc_6x6_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x5_ldr",
                    "title": "case astc_8x5_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x6_ldr",
                    "title": "case astc_8x6_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x8_ldr",
                    "title": "case astc_8x8_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x5_ldr",
                    "title": "case astc_10x5_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x6_ldr",
                    "title": "case astc_10x6_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x8_ldr",
                    "title": "case astc_10x8_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x10_ldr",
                    "title": "case astc_10x10_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x10_ldr",
                    "title": "case astc_12x10_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x12_ldr",
                    "title": "case astc_12x12_ldr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_4x4_hdr",
                    "title": "case astc_4x4_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x4_hdr",
                    "title": "case astc_5x4_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_5x5_hdr",
                    "title": "case astc_5x5_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x5_hdr",
                    "title": "case astc_6x5_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_6x6_hdr",
                    "title": "case astc_6x6_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x5_hdr",
                    "title": "case astc_8x5_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x6_hdr",
                    "title": "case astc_8x6_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_8x8_hdr",
                    "title": "case astc_8x8_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x5_hdr",
                    "title": "case astc_10x5_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x6_hdr",
                    "title": "case astc_10x6_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x8_hdr",
                    "title": "case astc_10x8_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_10x10_hdr",
                    "title": "case astc_10x10_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x10_hdr",
                    "title": "case astc_12x10_hdr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/astc_12x12_hdr",
                    "title": "case astc_12x12_hdr",
                    "type": "case"
                  },
                  {
                    "title": "Compressed BC Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc1_rgba",
                    "title": "case bc1_rgba",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc1_rgba_srgb",
                    "title": "case bc1_rgba_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc2_rgba",
                    "title": "case bc2_rgba",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc2_rgba_srgb",
                    "title": "case bc2_rgba_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc3_rgba",
                    "title": "case bc3_rgba",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc3_rgba_srgb",
                    "title": "case bc3_rgba_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc4_runorm",
                    "title": "case bc4_rUnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc4_rsnorm",
                    "title": "case bc4_rSnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc5_rgunorm",
                    "title": "case bc5_rgUnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc5_rgsnorm",
                    "title": "case bc5_rgSnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc6h_rgbfloat",
                    "title": "case bc6H_rgbFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc6h_rgbufloat",
                    "title": "case bc6H_rgbuFloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc7_rgbaunorm",
                    "title": "case bc7_rgbaUnorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bc7_rgbaunorm_srgb",
                    "title": "case bc7_rgbaUnorm_srgb",
                    "type": "case"
                  },
                  {
                    "title": "YUV Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/gbgr422",
                    "title": "case gbgr422",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgrg422",
                    "title": "case bgrg422",
                    "type": "case"
                  },
                  {
                    "title": "Depth and Stencil Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth16unorm",
                    "title": "case depth16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth32float",
                    "title": "case depth32Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/stencil8",
                    "title": "case stencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth24unorm_stencil8",
                    "title": "case depth24Unorm_stencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/depth32float_stencil8",
                    "title": "case depth32Float_stencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/x32_stencil8",
                    "title": "case x32_stencil8",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/x24_stencil8",
                    "title": "case x24_stencil8",
                    "type": "case"
                  },
                  {
                    "title": "Extended Range and Wide Color Pixel Formats",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra10_xr",
                    "title": "case bgra10_xr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgra10_xr_srgb",
                    "title": "case bgra10_xr_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr10_xr",
                    "title": "case bgr10_xr",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/bgr10_xr_srgb",
                    "title": "case bgr10_xr_srgb",
                    "type": "case"
                  },
                  {
                    "title": "Invalid Pixel Format",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/invalid",
                    "title": "case invalid",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpixelformat/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlpixelformat",
                "title": "MTLPixelFormat",
                "type": "enum"
              },
              {
                "title": "Texture Samplers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-and-sampling-textures",
                "title": "Creating and Sampling Textures",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Sampler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerstate/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerstate/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerstate/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsamplerstate",
                "title": "MTLSamplerState",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Declaring the Coordinate Space",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/normalizedcoordinates",
                    "title": "var normalizedCoordinates: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Declaring Addressing Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/raddressmode",
                    "title": "var rAddressMode: MTLSamplerAddressMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/saddressmode",
                    "title": "var sAddressMode: MTLSamplerAddressMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/taddressmode",
                    "title": "var tAddressMode: MTLSamplerAddressMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/bordercolor",
                    "title": "var borderColor: MTLSamplerBorderColor",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Address Mode Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/clamptoedge",
                        "title": "case clampToEdge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/mirrorclamptoedge",
                        "title": "case mirrorClampToEdge",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/repeat",
                        "title": "case `repeat`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/mirrorrepeat",
                        "title": "case mirrorRepeat",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/clamptozero",
                        "title": "case clampToZero",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/clamptobordercolor",
                        "title": "case clampToBorderColor",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsampleraddressmode/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlsampleraddressmode",
                    "title": "MTLSamplerAddressMode",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Border Color Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerbordercolor/transparentblack",
                        "title": "case transparentBlack",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerbordercolor/opaqueblack",
                        "title": "case opaqueBlack",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerbordercolor/opaquewhite",
                        "title": "case opaqueWhite",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerbordercolor/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlsamplerbordercolor",
                    "title": "MTLSamplerBorderColor",
                    "type": "enum"
                  },
                  {
                    "title": "Declaring Filter Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/minfilter",
                    "title": "var minFilter: MTLSamplerMinMagFilter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/magfilter",
                    "title": "var magFilter: MTLSamplerMinMagFilter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/mipfilter",
                    "title": "var mipFilter: MTLSamplerMipFilter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/lodminclamp",
                    "title": "var lodMinClamp: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/lodmaxclamp",
                    "title": "var lodMaxClamp: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/lodaverage",
                    "title": "var lodAverage: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/maxanisotropy",
                    "title": "var maxAnisotropy: Int",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Filter options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerminmagfilter/nearest",
                        "title": "case nearest",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerminmagfilter/linear",
                        "title": "case linear",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplerminmagfilter/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlsamplerminmagfilter",
                    "title": "MTLSamplerMinMagFilter",
                    "type": "enum"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Mip Filter Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplermipfilter/notmipmapped",
                        "title": "case notMipmapped",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplermipfilter/nearest",
                        "title": "case nearest",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplermipfilter/linear",
                        "title": "case linear",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsamplermipfilter/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlsamplermipfilter",
                    "title": "MTLSamplerMipFilter",
                    "type": "enum"
                  },
                  {
                    "title": "Declaring the Depth Comparison Mode",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/comparefunction",
                    "title": "var compareFunction: MTLCompareFunction",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Compare function options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/never",
                        "title": "case never",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/less",
                        "title": "case less",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/equal",
                        "title": "case equal",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/lessequal",
                        "title": "case lessEqual",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/greater",
                        "title": "case greater",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/notequal",
                        "title": "case notEqual",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/greaterequal",
                        "title": "case greaterEqual",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/always",
                        "title": "case always",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcomparefunction/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcomparefunction",
                    "title": "MTLCompareFunction",
                    "type": "enum"
                  },
                  {
                    "title": "Declaring Whether the Sampler Can Be Used in Argument Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/supportargumentbuffers",
                    "title": "var supportArgumentBuffers: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Identifying the Sampler",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsamplerdescriptor/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsamplerdescriptor",
                "title": "MTLSamplerDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsampleposition/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlsampleposition/init(x:y:)",
                    "title": "init(x: Float, y: Float)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsampleposition/x",
                    "title": "var x: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsampleposition/y",
                    "title": "var y: Float",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsampleposition",
                "title": "MTLSamplePosition",
                "type": "struct"
              },
              {
                "title": "Texture Mipmapping",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/improving-texture-sampling-quality-and-performance-with-mipmaps",
                "title": "Improving Texture Sampling Quality and Performance with Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-a-mipmapped-texture",
                "title": "Creating a Mipmapped Texture",
                "type": "article"
              },
              {
                "path": "/documentation/metal/copying-data-into-or-out-of-mipmaps",
                "title": "Copying Data into or out of Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/generating-mipmap-data",
                "title": "Generating Mipmap Data",
                "type": "article"
              },
              {
                "path": "/documentation/metal/adding-mipmap-filtering-to-samplers",
                "title": "Adding Mipmap Filtering to Samplers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/restricting-access-to-specific-mipmaps",
                "title": "Restricting Access to Specific Mipmaps",
                "type": "article"
              },
              {
                "path": "/documentation/metal/predicting-which-mips-the-gpu-samples-with-level-of-detail-queries",
                "title": "Predicting Which Mips the GPU Samples with Level-of-Detail Queries",
                "type": "article"
              },
              {
                "path": "/documentation/metal/dynamically-adjusting-texture-level-of-detail",
                "title": "Dynamically Adjusting Texture Level of Detail",
                "type": "article"
              },
              {
                "title": "Sparse Textures",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/managing-sparse-texture-memory",
                "title": "Managing Sparse Texture Memory",
                "type": "article"
              },
              {
                "path": "/documentation/metal/creating-sparse-heaps-and-sparse-textures",
                "title": "Creating Sparse Heaps and Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/converting-between-pixel-regions-and-sparse-tile-regions",
                "title": "Converting Between Pixel Regions and Sparse Tile Regions",
                "type": "article"
              },
              {
                "path": "/documentation/metal/assigning-memory-to-sparse-textures",
                "title": "Assigning Memory to Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/reading-and-writing-to-sparse-textures",
                "title": "Reading and Writing to Sparse Textures",
                "type": "article"
              },
              {
                "path": "/documentation/metal/estimating-how-often-a-texture-region-is-accessed",
                "title": "Estimating How Often a Texture Region Is Accessed",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Specifying Sample Buffers for GPU Counters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepassdescriptor/samplebufferattachments",
                    "title": "var sampleBufferAttachments: MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatepassdescriptor",
                "title": "MTLResourceStatePassDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor/samplebuffer",
                    "title": "var sampleBuffer: (any MTLCounterSampleBuffer)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor/startofencodersampleindex",
                    "title": "var startOfEncoderSampleIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor/endofencodersampleindex",
                    "title": "var endOfEncoderSampleIndex: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptor",
                "title": "MTLResourceStatePassSampleBufferAttachmentDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Accessing a Sample Buffer Attachment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptorarray/subscript(_:)",
                    "title": "subscript(Int) -> MTLResourceStatePassSampleBufferAttachmentDescriptor!",
                    "type": "subscript"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatepasssamplebufferattachmentdescriptorarray",
                "title": "MTLResourceStatePassSampleBufferAttachmentDescriptorArray",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Updating Texture Memory Assignments",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/updatetexturemapping(_:mode:region:miplevel:slice:)",
                    "title": "func updateTextureMapping(any MTLTexture, mode: MTLSparseTextureMappingMode, region: MTLRegion, mipLevel: Int, slice: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/updatetexturemappings(_:mode:regions:miplevels:slices:numregions:)",
                    "title": "func updateTextureMappings(any MTLTexture, mode: MTLSparseTextureMappingMode, regions: UnsafePointer<MTLRegion>, mipLevels: UnsafePointer<Int>, slices: UnsafePointer<Int>, numRegions: Int)",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Mapping Mode",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsparsetexturemappingmode/map",
                        "title": "case map",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlsparsetexturemappingmode/unmap",
                        "title": "case unmap",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlsparsetexturemappingmode/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlsparsetexturemappingmode",
                    "title": "MTLSparseTextureMappingMode",
                    "type": "enum"
                  },
                  {
                    "title": "Updating Texture Memory Assignments Indirectly",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/updatetexturemapping(_:mode:indirectbuffer:indirectbufferoffset:)",
                    "title": "func updateTextureMapping(any MTLTexture, mode: MTLSparseTextureMappingMode, indirectBuffer: any MTLBuffer, indirectBufferOffset: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Performing Fence Operations",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/update(_:)",
                    "title": "func update(any MTLFence)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/wait(for:)",
                    "title": "func wait(for: any MTLFence)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlresourcestatecommandencoder/movetexturemappings(sourcetexture:sourceslice:sourcelevel:sourceorigin:sourcesize:destinationtexture:destinationslice:destinationlevel:destinationorigin:)",
                    "title": "func moveTextureMappings(sourceTexture: any MTLTexture, sourceSlice: Int, sourceLevel: Int, sourceOrigin: MTLOrigin, sourceSize: MTLSize, destinationTexture: any MTLTexture, destinationSlice: Int, destinationLevel: Int, destinationOrigin: MTLOrigin)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlresourcestatecommandencoder",
                "title": "MTLResourceStateCommandEncoder",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Creating Indirect Mapping Arguments",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/init(regionoriginx:regionoriginy:regionoriginz:regionsizewidth:regionsizeheight:regionsizedepth:mipmaplevel:sliceid:)",
                    "title": "init(regionOriginX: UInt32, regionOriginY: UInt32, regionOriginZ: UInt32, regionSizeWidth: UInt32, regionSizeHeight: UInt32, regionSizeDepth: UInt32, mipMapLevel: UInt32, sliceId: UInt32)",
                    "type": "init"
                  },
                  {
                    "title": "Specifying Region Origin",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionoriginx",
                    "title": "var regionOriginX: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionoriginy",
                    "title": "var regionOriginY: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionoriginz",
                    "title": "var regionOriginZ: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Region Dimensions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionsizewidth",
                    "title": "var regionSizeWidth: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionsizeheight",
                    "title": "var regionSizeHeight: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/regionsizedepth",
                    "title": "var regionSizeDepth: UInt32",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Texture Location",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/mipmaplevel",
                    "title": "var mipMapLevel: UInt32",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlmapindirectarguments/sliceid",
                    "title": "var sliceId: UInt32",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlmapindirectarguments",
                "title": "MTLMapIndirectArguments",
                "type": "struct"
              },
              {
                "title": "Texture Loading",
                "type": "groupMarker"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader",
                "title": "MTKTextureLoader",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/error",
                "title": "MTKTextureLoader.Error",
                "type": "struct"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/option",
                "title": "MTKTextureLoader.Option",
                "type": "struct"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/callback",
                "title": "MTKTextureLoader.Callback",
                "type": "typealias"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtktextureloader/arraycallback",
                "title": "MTKTextureLoader.ArrayCallback",
                "type": "typealias"
              }
            ],
            "path": "/documentation/metal/textures",
            "title": "Textures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Resource Memory Allocation and Management",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-argument-buffers-with-resource-heaps",
                "title": "Using Argument Buffers with Resource Heaps",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Heap",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Querying Heap Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/type",
                    "title": "var type: MTLHeapType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/storagemode",
                    "title": "var storageMode: MTLStorageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/cpucachemode",
                    "title": "var cpuCacheMode: MTLCPUCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/hazardtrackingmode",
                    "title": "var hazardTrackingMode: MTLHazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/resourceoptions",
                    "title": "var resourceOptions: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/size",
                    "title": "var size: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/usedsize",
                    "title": "var usedSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/currentallocatedsize",
                    "title": "var currentAllocatedSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/maxavailablesize(alignment:)",
                    "title": "func maxAvailableSize(alignment: Int) -> Int",
                    "type": "method"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying the Heap Type",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlheaptype/automatic",
                        "title": "case automatic",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlheaptype/placement",
                        "title": "case placement",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlheaptype/sparse",
                        "title": "case sparse",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlheaptype/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlheaptype",
                    "title": "MTLHeapType",
                    "type": "enum"
                  },
                  {
                    "title": "Setting the Purgeable State of the Resource",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/setpurgeablestate(_:)",
                    "title": "func setPurgeableState(MTLPurgeableState) -> MTLPurgeableState",
                    "type": "method"
                  },
                  {
                    "title": "Creating Resources on the Heap",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makebuffer(length:options:)",
                    "title": "func makeBuffer(length: Int, options: MTLResourceOptions) -> (any MTLBuffer)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/maketexture(descriptor:)",
                    "title": "func makeTexture(descriptor: MTLTextureDescriptor) -> (any MTLTexture)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makebuffer(length:options:offset:)",
                    "title": "func makeBuffer(length: Int, options: MTLResourceOptions, offset: Int) -> (any MTLBuffer)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/maketexture(descriptor:offset:)",
                    "title": "func makeTexture(descriptor: MTLTextureDescriptor, offset: Int) -> (any MTLTexture)?",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(descriptor:)",
                    "title": "func makeAccelerationStructure(descriptor: MTLAccelerationStructureDescriptor) -> (any MTLAccelerationStructure)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(descriptor:offset:)",
                    "title": "func makeAccelerationStructure(descriptor: MTLAccelerationStructureDescriptor, offset: Int) -> (any MTLAccelerationStructure)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(size:)",
                    "title": "func makeAccelerationStructure(size: Int) -> (any MTLAccelerationStructure)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlheap/makeaccelerationstructure(size:offset:)",
                    "title": "func makeAccelerationStructure(size: Int, offset: Int) -> (any MTLAccelerationStructure)?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlheap",
                "title": "MTLHeap",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Heap",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/type",
                    "title": "var type: MTLHeapType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/storagemode",
                    "title": "var storageMode: MTLStorageMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/cpucachemode",
                    "title": "var cpuCacheMode: MTLCPUCacheMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/hazardtrackingmode",
                    "title": "var hazardTrackingMode: MTLHazardTrackingMode",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/resourceoptions",
                    "title": "var resourceOptions: MTLResourceOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/size",
                    "title": "var size: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlheapdescriptor/sparsepagesize",
                    "title": "var sparsePageSize: MTLSparsePageSize",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlheapdescriptor",
                "title": "MTLHeapDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Heap Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheaptype/automatic",
                    "title": "case automatic",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlheaptype/placement",
                    "title": "case placement",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlheaptype/sparse",
                    "title": "case sparse",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlheaptype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlheaptype",
                "title": "MTLHeapType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Size and Alignment",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsizeandalign/size",
                    "title": "var size: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsizeandalign/align",
                    "title": "var align: Int",
                    "type": "property"
                  },
                  {
                    "title": "Creating Instances",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsizeandalign/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlsizeandalign/init(size:align:)",
                    "title": "init(size: Int, align: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlsizeandalign",
                "title": "MTLSizeAndAlign",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/memory-heaps",
            "title": "Memory Heaps",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "I/O Command Queues",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating a Input/Output Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/makecommandbuffer()",
                    "title": "func makeCommandBuffer() -> any MTLIOCommandBuffer",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/makecommandbufferwithunretainedreferences()",
                    "title": "func makeCommandBufferWithUnretainedReferences() -> any MTLIOCommandBuffer",
                    "type": "method"
                  },
                  {
                    "title": "Adding a Barrier to the Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/enqueuebarrier()",
                    "title": "func enqueueBarrier()",
                    "type": "method"
                  },
                  {
                    "title": "Naming the Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueue/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtliocommandqueue",
                "title": "MTLIOCommandQueue",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Input/Output Command Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/priority",
                    "title": "var priority: MTLIOPriority",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/type",
                    "title": "var type: MTLIOCommandQueueType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/maxcommandsinflight",
                    "title": "var maxCommandsInFlight: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/maxcommandbuffercount",
                    "title": "var maxCommandBufferCount: Int",
                    "type": "property"
                  },
                  {
                    "title": "Providing your own  a Scratch Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuedescriptor/scratchbufferallocator",
                    "title": "var scratchBufferAllocator: (any MTLIOScratchBufferAllocator)?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtliocommandqueuedescriptor",
                "title": "MTLIOCommandQueueDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "I/O Command Queue Priorities",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliopriority/normal",
                    "title": "case normal",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliopriority/low",
                    "title": "case low",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliopriority/high",
                    "title": "case high",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliopriority/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtliopriority",
                "title": "MTLIOPriority",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "I/O Command Queue Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuetype/concurrent",
                    "title": "case concurrent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuetype/serial",
                    "title": "case serial",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandqueuetype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtliocommandqueuetype",
                "title": "MTLIOCommandQueueType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Providing Scratch Memory to a Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioscratchbufferallocator/makescratchbuffer(minimumsize:)",
                    "title": "func makeScratchBuffer(minimumSize: Int) -> (any MTLIOScratchBuffer)?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlioscratchbufferallocator",
                "title": "MTLIOScratchBufferAllocator",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Wrapping a Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioscratchbuffer/buffer",
                    "title": "var buffer: any MTLBuffer",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlioscratchbuffer",
                "title": "MTLIOScratchBuffer",
                "type": "protocol"
              },
              {
                "title": "I/O Command Buffers",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Loading Assets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/load(_:offset:size:sourcehandle:sourcehandleoffset:)",
                    "title": "func load(any MTLBuffer, offset: Int, size: Int, sourceHandle: any MTLIOFileHandle, sourceHandleOffset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/load(_:slice:level:size:sourcebytesperrow:sourcebytesperimage:destinationorigin:sourcehandle:sourcehandleoffset:)",
                    "title": "func load(any MTLTexture, slice: Int, level: Int, size: MTLSize, sourceBytesPerRow: Int, sourceBytesPerImage: Int, destinationOrigin: MTLOrigin, sourceHandle: any MTLIOFileHandle, sourceHandleOffset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/loadbytes(_:size:sourcehandle:sourcehandleoffset:)",
                    "title": "func loadBytes(UnsafeMutableRawPointer, size: Int, sourceHandle: any MTLIOFileHandle, sourceHandleOffset: Int)",
                    "type": "method"
                  },
                  {
                    "title": "Adding a Barrier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/addbarrier()",
                    "title": "func addBarrier()",
                    "type": "method"
                  },
                  {
                    "title": "Synchronizing a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/signalevent(_:value:)",
                    "title": "func signalEvent(any MTLSharedEvent, value: UInt64)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/waitforevent(_:value:)",
                    "title": "func waitForEvent(any MTLSharedEvent, value: UInt64)",
                    "type": "method"
                  },
                  {
                    "title": "Adding Final Commands",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/copystatus(buffer:offset:)",
                    "title": "func copyStatus(buffer: any MTLBuffer, offset: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/addcompletedhandler(_:)",
                    "title": "func addCompletedHandler(MTLIOCommandBufferHandler)",
                    "type": "method"
                  },
                  {
                    "title": "Submitting a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/commit()",
                    "title": "func commit()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/enqueue()",
                    "title": "func enqueue()",
                    "type": "method"
                  },
                  {
                    "title": "Canceling a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/trycancel()",
                    "title": "func tryCancel()",
                    "type": "method"
                  },
                  {
                    "title": "Waiting for a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/waituntilcompleted()",
                    "title": "func waitUntilCompleted()",
                    "type": "method"
                  },
                  {
                    "title": "Checking the State of a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/status",
                    "title": "var status: MTLIOStatus",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/error",
                    "title": "var error: (any Error)?",
                    "type": "property"
                  },
                  {
                    "title": "Debugging a Command Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/pushdebuggroup(_:)",
                    "title": "func pushDebugGroup(String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtliocommandbuffer/popdebuggroup()",
                    "title": "func popDebugGroup()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtliocommandbuffer",
                "title": "MTLIOCommandBuffer",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Naming a File Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliofilehandle/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtliofilehandle",
                "title": "MTLIOFileHandle",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtliocommandbufferhandler",
                "title": "MTLIOCommandBufferHandler",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "I/O Command Queue States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/pending",
                    "title": "case pending",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/complete",
                    "title": "case complete",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/cancelled",
                    "title": "case cancelled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/error",
                    "title": "case error",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliostatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtliostatus",
                "title": "MTLIOStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/urlinvalid",
                    "title": "case urlInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/internal",
                    "title": "case `internal`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/urlinvalid",
                    "title": "case urlInvalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/internal",
                    "title": "case `internal`",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlioerror-swift.struct/code",
                "title": "MTLIOError.Code",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtlioerrordomain",
                "title": "let MTLIOErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Asset Compression",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/mtliocreatecompressioncontext(_:_:_:)",
                "title": "func MTLIOCreateCompressionContext(String, MTLIOCompressionMethod, Int) -> MTLIOCompressionContext?",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Compression Codecs",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/zlib",
                    "title": "case zlib",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lzfse",
                    "title": "case lzfse",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lz4",
                    "title": "case lz4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lzma",
                    "title": "case lzma",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/lzbitmap",
                    "title": "case lzBitmap",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionmethod/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtliocompressionmethod",
                "title": "MTLIOCompressionMethod",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtliocompressioncontextdefaultchunksize()",
                "title": "func MTLIOCompressionContextDefaultChunkSize() -> Int",
                "type": "func"
              },
              {
                "path": "/documentation/metal/mtliocompressioncontext",
                "title": "MTLIOCompressionContext",
                "type": "typealias"
              },
              {
                "path": "/documentation/metal/mtliocompressioncontextappenddata(_:_:_:)",
                "title": "func MTLIOCompressionContextAppendData(MTLIOCompressionContext, UnsafeRawPointer, Int)",
                "type": "func"
              },
              {
                "path": "/documentation/metal/mtlioflushanddestroycompressioncontext(_:)",
                "title": "func MTLIOFlushAndDestroyCompressionContext(MTLIOCompressionContext) -> MTLIOCompressionStatus",
                "type": "func"
              },
              {
                "children": [
                  {
                    "title": "Compression Result States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionstatus/complete",
                    "title": "case complete",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionstatus/error",
                    "title": "case error",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtliocompressionstatus/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtliocompressionstatus",
                "title": "MTLIOCompressionStatus",
                "type": "enum"
              }
            ],
            "path": "/documentation/metal/resource-loading",
            "title": "Resource Loading",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Synchronization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/synchronizing-cpu-and-gpu-work",
                "title": "Synchronizing CPU and GPU Work",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Render Pass Stages",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/object",
                    "title": "static var object: MTLRenderStages",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/mesh",
                    "title": "static var mesh: MTLRenderStages",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/vertex",
                    "title": "static var vertex: MTLRenderStages",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/fragment",
                    "title": "static var fragment: MTLRenderStages",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/tile",
                    "title": "static var tile: MTLRenderStages",
                    "type": "property"
                  },
                  {
                    "title": "Swift Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderstages/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlrenderstages",
                "title": "MTLRenderStages",
                "type": "struct"
              },
              {
                "title": "Memory Barriers and Fences",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-fences",
                "title": "Implementing a Multistage Image Filter Using Heaps and Fences",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbarrierscope/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbarrierscope/buffers",
                    "title": "static var buffers: MTLBarrierScope",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbarrierscope/rendertargets",
                    "title": "static var renderTargets: MTLBarrierScope",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbarrierscope/textures",
                    "title": "static var textures: MTLBarrierScope",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlbarrierscope",
                "title": "MTLBarrierScope",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Fence",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfence/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfence/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Specifying Render Stages",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Render Pass Stages",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/object",
                        "title": "static var object: MTLRenderStages",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/mesh",
                        "title": "static var mesh: MTLRenderStages",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/vertex",
                        "title": "static var vertex: MTLRenderStages",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/fragment",
                        "title": "static var fragment: MTLRenderStages",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/tile",
                        "title": "static var tile: MTLRenderStages",
                        "type": "property"
                      },
                      {
                        "title": "Swift Support",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlrenderstages/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlrenderstages",
                    "title": "MTLRenderStages",
                    "type": "struct"
                  }
                ],
                "path": "/documentation/metal/mtlfence",
                "title": "MTLFence",
                "type": "protocol"
              },
              {
                "title": "Signal Events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/implementing-a-multistage-image-filter-using-heaps-and-events",
                "title": "Implementing a Multistage Image Filter Using Heaps and Events",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/about-synchronization-events",
                "title": "About Synchronization Events",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-within-a-single-device",
                "title": "Synchronizing Events Within a Single Device",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-across-multiple-devices-or-processes",
                "title": "Synchronizing Events Across Multiple Devices or Processes",
                "type": "article"
              },
              {
                "path": "/documentation/metal/synchronizing-events-between-a-gpu-and-the-cpu",
                "title": "Synchronizing Events Between a GPU and the CPU",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Event",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlevent/device",
                    "title": "var device: (any MTLDevice)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlevent/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlevent",
                "title": "MTLEvent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Synchronizing a Shareable Event",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/signaledvalue",
                    "title": "var signaledValue: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/notify(_:atvalue:block:)",
                    "title": "func notify(MTLSharedEventListener, atValue: UInt64, block: MTLSharedEventNotificationBlock)",
                    "type": "method"
                  },
                  {
                    "title": "Creating a Shared Event Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/makesharedeventhandle()",
                    "title": "func makeSharedEventHandle() -> MTLSharedEventHandle",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedevent/wait(untilsignaledvalue:timeoutms:)",
                    "title": "func wait(untilSignaledValue: UInt64, timeoutMS: UInt64) -> Bool",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlsharedevent",
                "title": "MTLSharedEvent",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Shareable Event Handle",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventhandle/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsharedeventhandle",
                "title": "MTLSharedEventHandle",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Shareable Event Listener",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventlistener/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventlistener/init(dispatchqueue:)",
                    "title": "init(dispatchQueue: dispatch_queue_t)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the Dispatch Queue",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlsharedeventlistener/dispatchqueue",
                    "title": "var dispatchQueue: dispatch_queue_t",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlsharedeventlistener",
                "title": "MTLSharedEventListener",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlsharedeventnotificationblock",
                "title": "MTLSharedEventNotificationBlock",
                "type": "typealias"
              }
            ],
            "path": "/documentation/metal/resource-synchronization",
            "title": "Resource Synchronization",
            "type": "collection"
          },
          {
            "title": "Shaders",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/stepping-through-code-and-inspecting-variables-to-isolate-bugs",
            "title": "Stepping through code and inspecting variables to isolate bugs",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/optimizing-gpu-performance",
            "title": "Optimizing GPU performance",
            "type": "article"
          },
          {
            "path": "/documentation/metal/logging-shader-debug-messages",
            "title": "Logging shader debug messages",
            "type": "article"
          },
          {
            "path": "/documentation/metal/using-function-specialization-to-build-pipeline-variants",
            "title": "Using Function Specialization to Build Pipeline Variants",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Shader Compilation",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Intermediate Representation Libraries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/building-a-shader-library-by-precompiling-source-files",
                    "title": "Building a Shader Library by Precompiling Source Files",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/minimizing-the-binary-size-of-a-shader-library",
                    "title": "Minimizing the Binary Size of a Shader Library",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/generating-and-loading-a-metal-library-symbol-file",
                    "title": "Generating and Loading a Metal Library Symbol File",
                    "type": "article"
                  }
                ],
                "path": "/documentation/metal/metal-libraries",
                "title": "Metal Libraries",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Dynamic Libraries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/compiling-and-linking-metal-dynamic-libraries",
                    "title": "Compiling and Linking Metal Dynamic Libraries",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/creating-a-metal-dynamic-library",
                    "title": "Creating a Metal Dynamic Library",
                    "type": "sampleCode"
                  }
                ],
                "path": "/documentation/metal/metal-dynamic-libraries",
                "title": "Metal Dynamic Libraries",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Working with Metal Binary Archives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/creating-binary-archives-from-device-built-pipeline-state-objects",
                    "title": "Creating Binary Archives from Device-Built Pipeline State Objects",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/manipulating-metal-binary-archives",
                    "title": "Manipulating Metal Binary Archives",
                    "type": "article"
                  },
                  {
                    "path": "/documentation/metal/compiling-binary-archives-from-a-custom-configuration-script",
                    "title": "Compiling Binary Archives from a Custom Configuration Script",
                    "type": "article"
                  }
                ],
                "path": "/documentation/metal/metal-binary-archives",
                "title": "Metal Binary Archives",
                "type": "collection"
              },
              {
                "title": "Shader Library Management",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Querying Basic Library Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/installname",
                    "title": "var installName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/type",
                    "title": "var type: MTLLibraryType",
                    "type": "property"
                  },
                  {
                    "title": "Querying Library Contents",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/functionnames",
                    "title": "var functionNames: [String]",
                    "type": "property"
                  },
                  {
                    "title": "Creating Shader Function Objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(name:)",
                    "title": "func makeFunction(name: String) -> (any MTLFunction)?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(name:constantvalues:completionhandler:)",
                    "title": "func makeFunction(name: String, constantValues: MTLFunctionConstantValues, completionHandler: ((any MTLFunction)?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(name:constantvalues:)",
                    "title": "func makeFunction(name: String, constantValues: MTLFunctionConstantValues) throws -> any MTLFunction",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(descriptor:completionhandler:)",
                    "title": "func makeFunction(descriptor: MTLFunctionDescriptor, completionHandler: ((any MTLFunction)?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makefunction(descriptor:)",
                    "title": "func makeFunction(descriptor: MTLFunctionDescriptor) throws -> any MTLFunction",
                    "type": "method"
                  },
                  {
                    "title": "Creating Intersection Function Objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makeintersectionfunction(descriptor:completionhandler:)",
                    "title": "func makeIntersectionFunction(descriptor: MTLIntersectionFunctionDescriptor, completionHandler: ((any MTLFunction)?, (any Error)?) -> Void)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/makeintersectionfunction(descriptor:)",
                    "title": "func makeIntersectionFunction(descriptor: MTLIntersectionFunctionDescriptor) throws -> any MTLFunction",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Library",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibrary/label",
                    "title": "var label: String?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtllibrary",
                "title": "MTLLibrary",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Library",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/installname",
                    "title": "var installName: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Saving a Dynamic Library to a File",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrary/serialize(to:)",
                    "title": "func serialize(to: URL) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtldynamiclibrary",
                "title": "MTLDynamicLibrary",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Archive",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "title": "Adding Pipeline Descriptors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addcomputepipelinefunctions(descriptor:)",
                    "title": "func addComputePipelineFunctions(descriptor: MTLComputePipelineDescriptor) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addrenderpipelinefunctions(descriptor:)",
                    "title": "func addRenderPipelineFunctions(descriptor: MTLRenderPipelineDescriptor) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addtilerenderpipelinefunctions(descriptor:)",
                    "title": "func addTileRenderPipelineFunctions(descriptor: MTLTileRenderPipelineDescriptor) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addfunction(descriptor:library:)",
                    "title": "func addFunction(descriptor: MTLFunctionDescriptor, library: any MTLLibrary) throws",
                    "type": "method"
                  },
                  {
                    "title": "Serializing Archives",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/serialize(to:)",
                    "title": "func serialize(to: URL) throws",
                    "type": "method"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addlibrary(descriptor:)",
                    "title": "func addLibrary(descriptor: MTLStitchedLibraryDescriptor) throws",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchive/addmeshrenderpipelinefunctions(descriptor:)",
                    "title": "func addMeshRenderPipelineFunctions(descriptor: MTLMeshRenderPipelineDescriptor) throws",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlbinaryarchive",
                "title": "MTLBinaryArchive",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Compiler Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/enablelogging",
                    "title": "var enableLogging: Bool",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Supporting Types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Modes",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlmathmode/fast",
                            "title": "case fast",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlmathmode/relaxed",
                            "title": "case relaxed",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlmathmode/safe",
                            "title": "case safe",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlmathmode/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlmathmode",
                        "title": "MTLMathMode",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlcompileoptions/mathmode",
                    "title": "var mathMode: MTLMathMode",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Supporting Types",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Function Sets",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlmathfloatingpointfunctions/fast",
                            "title": "case fast",
                            "type": "case"
                          },
                          {
                            "path": "/documentation/metal/mtlmathfloatingpointfunctions/precise",
                            "title": "case precise",
                            "type": "case"
                          },
                          {
                            "title": "Initializers",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/metal/mtlmathfloatingpointfunctions/init(rawvalue:)",
                            "title": "init?(rawValue: Int)",
                            "type": "init"
                          }
                        ],
                        "path": "/documentation/metal/mtlmathfloatingpointfunctions",
                        "title": "MTLMathFloatingPointFunctions",
                        "type": "enum"
                      }
                    ],
                    "path": "/documentation/metal/mtlcompileoptions/mathfloatingpointfunctions",
                    "title": "var mathFloatingPointFunctions: MTLMathFloatingPointFunctions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/preserveinvariance",
                    "title": "var preserveInvariance: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/languageversion",
                    "title": "var languageVersion: MTLLanguageVersion",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/preprocessormacros",
                    "title": "var preprocessorMacros: [String : NSObject]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/optimizationlevel",
                    "title": "var optimizationLevel: MTLLibraryOptimizationLevel",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/libraries",
                    "title": "var libraries: [any MTLDynamicLibrary]?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcompileoptions/fastmathenabled",
                    "title": "var fastMathEnabled: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Configuring the Library Output Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/librarytype",
                    "title": "var libraryType: MTLLibraryType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/installname",
                    "title": "var installName: String?",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/allowreferencingundefinedsymbols",
                    "title": "var allowReferencingUndefinedSymbols: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/compilesymbolvisibility",
                    "title": "var compileSymbolVisibility: MTLCompileSymbolVisibility",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcompileoptions/maxtotalthreadsperthreadgroup",
                    "title": "var maxTotalThreadsPerThreadgroup: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcompileoptions",
                "title": "MTLCompileOptions",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Library Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrarytype/executable",
                    "title": "case executable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibrarytype/dynamic",
                    "title": "case dynamic",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibrarytype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtllibrarytype",
                "title": "MTLLibraryType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Version Numbers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version1_1",
                    "title": "case version1_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version1_2",
                    "title": "case version1_2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_0",
                    "title": "case version2_0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_1",
                    "title": "case version2_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_2",
                    "title": "case version2_2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_3",
                    "title": "case version2_3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version2_4",
                    "title": "case version2_4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version3_0",
                    "title": "case version3_0",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version3_1",
                    "title": "case version3_1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/version3_2",
                    "title": "case version3_2",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtllanguageversion/version1_0",
                    "title": "case version1_0",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllanguageversion/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtllanguageversion",
                "title": "MTLLanguageVersion",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompilesymbolvisibility/default",
                    "title": "case `default`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcompilesymbolvisibility/hidden",
                    "title": "case hidden",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcompilesymbolvisibility/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcompilesymbolvisibility",
                "title": "MTLCompileSymbolVisibility",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Optimization Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryoptimizationlevel/default",
                    "title": "case `default`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryoptimizationlevel/size",
                    "title": "case size",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryoptimizationlevel/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtllibraryoptimizationlevel",
                "title": "MTLLibraryOptimizationLevel",
                "type": "enum"
              },
              {
                "title": "Shader Functions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Specifying the Function Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/name",
                    "title": "var name: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/specializedname",
                    "title": "var specializedName: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/constantvalues",
                    "title": "var constantValues: MTLFunctionConstantValues?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/options",
                    "title": "var options: MTLFunctionOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctiondescriptor/binaryarchives",
                    "title": "var binaryArchives: [any MTLBinaryArchive]?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Function Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Function Option Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/compiletobinary",
                        "title": "static var compileToBinary: MTLFunctionOptions",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/failonbinaryarchivemiss",
                        "title": "static var failOnBinaryArchiveMiss: MTLFunctionOptions",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalpipelinesscript",
                        "title": "static var storeFunctionInMetalPipelinesScript: MTLFunctionOptions",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalscript",
                        "title": "static var storeFunctionInMetalScript: MTLFunctionOptions",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionoptions",
                    "title": "MTLFunctionOptions",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Specifying Related Functions",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/functions",
                        "title": "var functions: [any MTLFunction]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/binaryfunctions",
                        "title": "var binaryFunctions: [any MTLFunction]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/groups",
                        "title": "var groups: [String : [any MTLFunction]]?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtllinkedfunctions/privatefunctions",
                        "title": "var privateFunctions: [any MTLFunction]?",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtllinkedfunctions",
                    "title": "MTLLinkedFunctions",
                    "type": "class"
                  }
                ],
                "path": "/documentation/metal/mtlfunctiondescriptor",
                "title": "MTLFunctionDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Identifying Shader Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/functiontype",
                    "title": "var functionType: MTLFunctionType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Function Types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/vertex",
                        "title": "case vertex",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/fragment",
                        "title": "case fragment",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/kernel",
                        "title": "case kernel",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/intersection",
                        "title": "case intersection",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/visible",
                        "title": "case visible",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/mesh",
                        "title": "case mesh",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/object",
                        "title": "case object",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctiontype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctiontype",
                    "title": "MTLFunctionType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/options",
                    "title": "var options: MTLFunctionOptions",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating Function Options",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/init(rawvalue:)",
                        "title": "init(rawValue: UInt)",
                        "type": "init"
                      },
                      {
                        "title": "Function Option Values",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/compiletobinary",
                        "title": "static var compileToBinary: MTLFunctionOptions",
                        "type": "property"
                      },
                      {
                        "title": "Type Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/failonbinaryarchivemiss",
                        "title": "static var failOnBinaryArchiveMiss: MTLFunctionOptions",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalpipelinesscript",
                        "title": "static var storeFunctionInMetalPipelinesScript: MTLFunctionOptions",
                        "type": "property"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlfunctionoptions/storefunctioninmetalscript",
                        "title": "static var storeFunctionInMetalScript: MTLFunctionOptions",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionoptions",
                    "title": "MTLFunctionOptions",
                    "type": "struct"
                  },
                  {
                    "title": "Identifying the Tessellation Patch",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/patchtype",
                    "title": "var patchType: MTLPatchType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/patchcontrolpointcount",
                    "title": "var patchControlPointCount: Int",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Patch types",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlpatchtype/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpatchtype/triangle",
                        "title": "case triangle",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlpatchtype/quad",
                        "title": "case quad",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlpatchtype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlpatchtype",
                    "title": "MTLPatchType",
                    "type": "enum"
                  },
                  {
                    "title": "Retrieving Function Attributes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/vertexattributes",
                    "title": "var vertexAttributes: [MTLVertexAttribute]?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/stageinputattributes",
                    "title": "var stageInputAttributes: [MTLAttribute]?",
                    "type": "property"
                  },
                  {
                    "title": "Retrieving Function Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/functionconstantsdictionary",
                    "title": "var functionConstantsDictionary: [String : MTLFunctionConstant]",
                    "type": "property"
                  },
                  {
                    "title": "Creating Argument Encoders",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunction/makeargumentencoder(bufferindex:)",
                    "title": "func makeArgumentEncoder(bufferIndex: Int) -> any MTLArgumentEncoder",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlfunction/makeargumentencoder(bufferindex:reflection:)",
                    "title": "func makeArgumentEncoder(bufferIndex: Int, reflection: AutoreleasingUnsafeMutablePointer<MTLAutoreleasedArgument?>?) -> any MTLArgumentEncoder",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlfunction",
                "title": "MTLFunction",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Querying Handle Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionhandle/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionhandle/functiontype",
                    "title": "var functionType: MTLFunctionType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionhandle/name",
                    "title": "var name: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionhandle",
                "title": "MTLFunctionHandle",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Function Table",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontabledescriptor/functioncount",
                    "title": "var functionCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvisiblefunctiontabledescriptor",
                "title": "MTLVisibleFunctionTableDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting a Table Entry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontable/setfunction(_:index:)",
                    "title": "func setFunction((any MTLFunctionHandle)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontable/setfunctions(_:range:)",
                    "title": "func setFunctions([(any MTLFunctionHandle)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvisiblefunctiontable/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvisiblefunctiontable",
                "title": "MTLVisibleFunctionTable",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlintersectionfunctiondescriptor",
                "title": "MTLIntersectionFunctionDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Configuring the Table’s Size",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor/functioncount",
                    "title": "var functionCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontabledescriptor",
                "title": "MTLIntersectionFunctionTableDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting a Table Entry",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunction(_:index:)",
                    "title": "func setFunction((any MTLFunctionHandle)?, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setfunctions(_:range:)",
                    "title": "func setFunctions([(any MTLFunctionHandle)?], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Arguments for Intersection Functions",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffer(_:offset:index:)",
                    "title": "func setBuffer((any MTLBuffer)?, offset: Int, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setbuffers(_:offsets:range:)",
                    "title": "func setBuffers([(any MTLBuffer)?], offsets: [Int], range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontable(_:bufferindex:)",
                    "title": "func setVisibleFunctionTable((any MTLVisibleFunctionTable)?, bufferIndex: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setvisiblefunctiontables(_:bufferrange:)",
                    "title": "func setVisibleFunctionTables([(any MTLVisibleFunctionTable)?], bufferRange: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Specifying Opaque Triangle Intersection Testing",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:index:)",
                    "title": "func setOpaqueTriangleIntersectionFunction(signature: MTLIntersectionFunctionSignature, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquetriangleintersectionfunction(signature:range:)",
                    "title": "func setOpaqueTriangleIntersectionFunction(signature: MTLIntersectionFunctionSignature, range: NSRange)",
                    "type": "method"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/gpuresourceid",
                    "title": "var gpuResourceID: MTLResourceID",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:index:)",
                    "title": "func setOpaqueCurveIntersectionFunction(signature: MTLIntersectionFunctionSignature, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlintersectionfunctiontable/setopaquecurveintersectionfunction(signature:range:)",
                    "title": "func setOpaqueCurveIntersectionFunction(signature: MTLIntersectionFunctionSignature, range: NSRange)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlintersectionfunctiontable",
                "title": "MTLIntersectionFunctionTable",
                "type": "protocol"
              },
              {
                "title": "Stitched Function Libraries",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/customizing-shaders-using-function-pointers-and-stitching",
                "title": "Customizing shaders using function pointers and stitching",
                "type": "sampleCode"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Stitched Library",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/functions",
                    "title": "var functions: [any MTLFunction]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/functiongraphs",
                    "title": "var functionGraphs: [MTLFunctionStitchingGraph]",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/binaryarchives",
                    "title": "var binaryArchives: [any MTLBinaryArchive]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibrarydescriptor/options",
                    "title": "var options: MTLStitchedLibraryOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlstitchedlibrarydescriptor",
                "title": "MTLStitchedLibraryDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Function Graph",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/init(functionname:nodes:outputnode:attributes:)",
                    "title": "init(functionName: String, nodes: [MTLFunctionStitchingFunctionNode], outputNode: MTLFunctionStitchingFunctionNode?, attributes: [any MTLFunctionStitchingAttribute])",
                    "type": "init"
                  },
                  {
                    "title": "Configuring a Function Graph",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/functionname",
                    "title": "var functionName: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/nodes",
                    "title": "var nodes: [MTLFunctionStitchingFunctionNode]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/outputnode",
                    "title": "var outputNode: MTLFunctionStitchingFunctionNode?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinggraph/attributes",
                    "title": "var attributes: [any MTLFunctionStitchingAttribute]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionstitchinggraph",
                "title": "MTLFunctionStitchingGraph",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing an Input Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinginputnode/init(argumentindex:)",
                    "title": "init(argumentIndex: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Configuring an Input Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchinginputnode/argumentindex",
                    "title": "var argumentIndex: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionstitchinginputnode",
                "title": "MTLFunctionStitchingInputNode",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Initializing a Function Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/init(name:arguments:controldependencies:)",
                    "title": "init(name: String, arguments: [any MTLFunctionStitchingNode], controlDependencies: [MTLFunctionStitchingFunctionNode])",
                    "type": "init"
                  },
                  {
                    "title": "Configuring a Function Node",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/arguments",
                    "title": "var arguments: [any MTLFunctionStitchingNode]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionstitchingfunctionnode/controldependencies",
                    "title": "var controlDependencies: [MTLFunctionStitchingFunctionNode]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionstitchingfunctionnode",
                "title": "MTLFunctionStitchingFunctionNode",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlfunctionstitchingnode",
                "title": "MTLFunctionStitchingNode",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtlfunctionstitchingattributealwaysinline",
                "title": "MTLFunctionStitchingAttributeAlwaysInline",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlfunctionstitchingattribute",
                "title": "MTLFunctionStitchingAttribute",
                "type": "protocol"
              },
              {
                "title": "Compile-Time Variant Functions",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Reading the Function Constant’s Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/type",
                    "title": "var type: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/index",
                    "title": "var index: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstant/required",
                    "title": "var required: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionconstant",
                "title": "MTLFunctionConstant",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Setting Constant Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/setconstantvalue(_:type:index:)",
                    "title": "func setConstantValue(UnsafeRawPointer, type: MTLDataType, index: Int)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/setconstantvalue(_:type:withname:)",
                    "title": "func setConstantValue(UnsafeRawPointer, type: MTLDataType, withName: String)",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/setconstantvalues(_:type:range:)",
                    "title": "func setConstantValues(UnsafeRawPointer, type: MTLDataType, range: Range<Int>)",
                    "type": "method"
                  },
                  {
                    "title": "Resetting Constant Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionconstantvalues/reset()",
                    "title": "func reset()",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionconstantvalues",
                "title": "MTLFunctionConstantValues",
                "type": "class"
              },
              {
                "title": "Introspection Data",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Obtaining the Arguments of the Compute Function",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcomputepipelinereflection/arguments",
                    "title": "var arguments: [MTLArgument]",
                    "type": "property"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomputepipelinereflection/bindings",
                    "title": "var bindings: [any MTLBinding]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomputepipelinereflection",
                "title": "MTLComputePipelineReflection",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlautoreleasedcomputepipelinereflection",
                "title": "MTLAutoreleasedComputePipelineReflection",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Inspecting a Shader’s Parameter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/fragmentbindings",
                    "title": "var fragmentBindings: [any MTLBinding]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/meshbindings",
                    "title": "var meshBindings: [any MTLBinding]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/objectbindings",
                    "title": "var objectBindings: [any MTLBinding]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/tilebindings",
                    "title": "var tileBindings: [any MTLBinding]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlrenderpipelinereflection/vertexbindings",
                    "title": "var vertexBindings: [any MTLBinding]",
                    "type": "property"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinereflection/vertexarguments",
                    "title": "var vertexArguments: [MTLArgument]?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinereflection/fragmentarguments",
                    "title": "var fragmentArguments: [MTLArgument]?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlrenderpipelinereflection/tilearguments",
                    "title": "var tileArguments: [MTLArgument]?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlrenderpipelinereflection",
                "title": "MTLRenderPipelineReflection",
                "type": "class"
              },
              {
                "path": "/documentation/metal/mtlautoreleasedrenderpipelinereflection",
                "title": "MTLAutoreleasedRenderPipelineReflection",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/buffer",
                    "title": "case buffer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/imageblock",
                    "title": "case imageblock",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/imageblockdata",
                    "title": "case imageblockData",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/instanceaccelerationstructure",
                    "title": "case instanceAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/intersectionfunctiontable",
                    "title": "case intersectionFunctionTable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/objectpayload",
                    "title": "case objectPayload",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/primitiveaccelerationstructure",
                    "title": "case primitiveAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/sampler",
                    "title": "case sampler",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/texture",
                    "title": "case texture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/threadgroupmemory",
                    "title": "case threadgroupMemory",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/visiblefunctiontable",
                    "title": "case visibleFunctionTable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingtype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlbindingtype",
                "title": "MTLBindingType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/access",
                    "title": "var access: MTLBindingAccess",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/index",
                    "title": "var index: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/isargument",
                    "title": "var isArgument: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/isused",
                    "title": "var isUsed: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinding/type",
                    "title": "var type: MTLBindingType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlbinding",
                "title": "MTLBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingaccess/readonly",
                    "title": "case readOnly",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingaccess/readwrite",
                    "title": "case readWrite",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingaccess/writeonly",
                    "title": "case writeOnly",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbindingaccess/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlbindingaccess",
                "title": "MTLBindingAccess",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferalignment",
                    "title": "var bufferAlignment: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferdatasize",
                    "title": "var bufferDataSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferdatatype",
                    "title": "var bufferDataType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferpointertype",
                    "title": "var bufferPointerType: MTLPointerType?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbufferbinding/bufferstructtype",
                    "title": "var bufferStructType: MTLStructType?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlbufferbinding",
                "title": "MTLBufferBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/arraylength",
                    "title": "var arrayLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/isdepthtexture",
                    "title": "var isDepthTexture: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/texturedatatype",
                    "title": "var textureDataType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturebinding/texturetype",
                    "title": "var textureType: MTLTextureType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexturebinding",
                "title": "MTLTextureBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlthreadgroupbinding/threadgroupmemoryalignment",
                    "title": "var threadgroupMemoryAlignment: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlthreadgroupbinding/threadgroupmemorydatasize",
                    "title": "var threadgroupMemoryDataSize: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlthreadgroupbinding",
                "title": "MTLThreadgroupBinding",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlobjectpayloadbinding/objectpayloadalignment",
                    "title": "var objectPayloadAlignment: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlobjectpayloadbinding/objectpayloaddatasize",
                    "title": "var objectPayloadDataSize: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlobjectpayloadbinding",
                "title": "MTLObjectPayloadBinding",
                "type": "protocol"
              },
              {
                "title": "Function Arguments",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Reading an Attribute’s Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/attributeindex",
                    "title": "var attributeIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/attributetype",
                    "title": "var attributeType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/isactive",
                    "title": "var isActive: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/ispatchcontrolpointdata",
                    "title": "var isPatchControlPointData: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlattribute/ispatchdata",
                    "title": "var isPatchData: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlattribute",
                "title": "MTLAttribute",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Attribute",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/attributeindex",
                    "title": "var attributeIndex: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/attributetype",
                    "title": "var attributeType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/isactive",
                    "title": "var isActive: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/ispatchcontrolpointdata",
                    "title": "var isPatchControlPointData: Bool",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlvertexattribute/ispatchdata",
                    "title": "var isPatchData: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlvertexattribute",
                "title": "MTLVertexAttribute",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/isactive",
                    "title": "var isActive: Bool",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/index",
                    "title": "var index: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/type",
                    "title": "var type: MTLArgumentType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/access",
                    "title": "var access: MTLBindingAccess",
                    "type": "property"
                  },
                  {
                    "title": "Describing a Buffer Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferalignment",
                    "title": "var bufferAlignment: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferdatasize",
                    "title": "var bufferDataSize: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferdatatype",
                    "title": "var bufferDataType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferstructtype",
                    "title": "var bufferStructType: MTLStructType?",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/bufferpointertype",
                    "title": "var bufferPointerType: MTLPointerType?",
                    "type": "property"
                  },
                  {
                    "title": "Describing a Texture Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/texturedatatype",
                    "title": "var textureDataType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/texturetype",
                    "title": "var textureType: MTLTextureType",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/isdepthtexture",
                    "title": "var isDepthTexture: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Describing an Array Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/arraylength",
                    "title": "var arrayLength: Int",
                    "type": "property"
                  },
                  {
                    "title": "Describing a Threadgroup Memory Argument",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/threadgroupmemoryalignment",
                    "title": "var threadgroupMemoryAlignment: Int",
                    "type": "property"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargument/threadgroupmemorydatasize",
                    "title": "var threadgroupMemoryDataSize: Int",
                    "type": "property"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/metal/mtlargument",
                "title": "MTLArgument",
                "type": "class"
              },
              {
                "deprecated": true,
                "path": "/documentation/metal/mtlautoreleasedargument",
                "title": "MTLAutoreleasedArgument",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Argument Types",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/buffer",
                    "title": "case buffer",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/threadgroupmemory",
                    "title": "case threadgroupMemory",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/texture",
                    "title": "case texture",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/sampler",
                    "title": "case sampler",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/imageblock",
                    "title": "case imageblock",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/imageblockdata",
                    "title": "case imageblockData",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/visiblefunctiontable",
                    "title": "case visibleFunctionTable",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/intersectionfunctiontable",
                    "title": "case intersectionFunctionTable",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/primitiveaccelerationstructure",
                    "title": "case primitiveAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/instanceaccelerationstructure",
                    "title": "case instanceAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlargumenttype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "deprecated": true,
                "path": "/documentation/metal/mtlargumenttype",
                "title": "MTLArgumentType",
                "type": "enum"
              },
              {
                "deprecated": true,
                "path": "/documentation/metal/mtlargumentaccess",
                "title": "MTLArgumentAccess",
                "type": "typealias"
              },
              {
                "title": "Shader Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Identifying the Data Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltype/datatype",
                    "title": "var dataType: MTLDataType",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltype",
                "title": "MTLType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Boolean Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool",
                    "title": "case bool",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool2",
                    "title": "case bool2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool3",
                    "title": "case bool3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bool4",
                    "title": "case bool4",
                    "type": "case"
                  },
                  {
                    "title": "8-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char",
                    "title": "case char",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char2",
                    "title": "case char2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char3",
                    "title": "case char3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/char4",
                    "title": "case char4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar",
                    "title": "case uchar",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar2",
                    "title": "case uchar2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar3",
                    "title": "case uchar3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uchar4",
                    "title": "case uchar4",
                    "type": "case"
                  },
                  {
                    "title": "16-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short",
                    "title": "case short",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short2",
                    "title": "case short2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short3",
                    "title": "case short3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/short4",
                    "title": "case short4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort",
                    "title": "case ushort",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort2",
                    "title": "case ushort2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort3",
                    "title": "case ushort3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ushort4",
                    "title": "case ushort4",
                    "type": "case"
                  },
                  {
                    "title": "16-bit Floating-Point Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half",
                    "title": "case half",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2",
                    "title": "case half2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3",
                    "title": "case half3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4",
                    "title": "case half4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2x2",
                    "title": "case half2x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2x3",
                    "title": "case half2x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half2x4",
                    "title": "case half2x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3x2",
                    "title": "case half3x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3x3",
                    "title": "case half3x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half3x4",
                    "title": "case half3x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4x2",
                    "title": "case half4x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4x3",
                    "title": "case half4x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/half4x4",
                    "title": "case half4x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat",
                    "title": "case bfloat",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat2",
                    "title": "case bfloat2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat3",
                    "title": "case bfloat3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/bfloat4",
                    "title": "case bfloat4",
                    "type": "case"
                  },
                  {
                    "title": "32-bit Floating-Point Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float",
                    "title": "case float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2",
                    "title": "case float2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3",
                    "title": "case float3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4",
                    "title": "case float4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2x2",
                    "title": "case float2x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2x3",
                    "title": "case float2x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float2x4",
                    "title": "case float2x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3x2",
                    "title": "case float3x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3x3",
                    "title": "case float3x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float3x4",
                    "title": "case float3x4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4x2",
                    "title": "case float4x2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4x3",
                    "title": "case float4x3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/float4x4",
                    "title": "case float4x4",
                    "type": "case"
                  },
                  {
                    "title": "32-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int",
                    "title": "case int",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int2",
                    "title": "case int2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int3",
                    "title": "case int3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/int4",
                    "title": "case int4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint",
                    "title": "case uint",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint2",
                    "title": "case uint2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint3",
                    "title": "case uint3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/uint4",
                    "title": "case uint4",
                    "type": "case"
                  },
                  {
                    "title": "64-bit Integer Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long",
                    "title": "case long",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long2",
                    "title": "case long2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long3",
                    "title": "case long3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/long4",
                    "title": "case long4",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong",
                    "title": "case ulong",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong2",
                    "title": "case ulong2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong3",
                    "title": "case ulong3",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/ulong4",
                    "title": "case ulong4",
                    "type": "case"
                  },
                  {
                    "title": "8-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r8snorm",
                    "title": "case r8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r8unorm",
                    "title": "case r8Unorm",
                    "type": "case"
                  },
                  {
                    "title": "16-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg8snorm",
                    "title": "case rg8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg8unorm",
                    "title": "case rg8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r16snorm",
                    "title": "case r16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/r16unorm",
                    "title": "case r16Unorm",
                    "type": "case"
                  },
                  {
                    "title": "32-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba8snorm",
                    "title": "case rgba8Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba8unorm",
                    "title": "case rgba8Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba8unorm_srgb",
                    "title": "case rgba8Unorm_srgb",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg16snorm",
                    "title": "case rg16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg16unorm",
                    "title": "case rg16Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgb10a2unorm",
                    "title": "case rgb10a2Unorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgb9e5float",
                    "title": "case rgb9e5Float",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rg11b10float",
                    "title": "case rg11b10Float",
                    "type": "case"
                  },
                  {
                    "title": "64-bit Pixel Format Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba16snorm",
                    "title": "case rgba16Snorm",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/rgba16unorm",
                    "title": "case rgba16Unorm",
                    "type": "case"
                  },
                  {
                    "title": "Metal Resource Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/texture",
                    "title": "case texture",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/indirectcommandbuffer",
                    "title": "case indirectCommandBuffer",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/visiblefunctiontable",
                    "title": "case visibleFunctionTable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/intersectionfunctiontable",
                    "title": "case intersectionFunctionTable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/primitiveaccelerationstructure",
                    "title": "case primitiveAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/instanceaccelerationstructure",
                    "title": "case instanceAccelerationStructure",
                    "type": "case"
                  },
                  {
                    "title": "Metal State Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/sampler",
                    "title": "case sampler",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/renderpipeline",
                    "title": "case renderPipeline",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/computepipeline",
                    "title": "case computePipeline",
                    "type": "case"
                  },
                  {
                    "title": "Collection Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/struct",
                    "title": "case `struct`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/array",
                    "title": "case array",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/pointer",
                    "title": "case pointer",
                    "type": "case"
                  },
                  {
                    "title": "Invalid Data Types",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/none",
                    "title": "case none",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldatatype/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtldatatype",
                "title": "MTLDataType",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Describing the Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/arraylength",
                    "title": "var arrayLength: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementtype",
                    "title": "var elementType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/stride",
                    "title": "var stride: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/argumentindexstride",
                    "title": "var argumentIndexStride: Int",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining Details for Complex Array Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/element()",
                    "title": "func element() -> MTLArrayType?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementstructtype()",
                    "title": "func elementStructType() -> MTLStructType?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementpointertype()",
                    "title": "func elementPointerType() -> MTLPointerType?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlarraytype/elementtexturereferencetype()",
                    "title": "func elementTextureReferenceType() -> MTLTextureReferenceType?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlarraytype",
                "title": "MTLArrayType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining Information about Struct Members",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstructtype/members",
                    "title": "var members: [MTLStructMember]",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructtype/memberbyname(_:)",
                    "title": "func memberByName(String) -> MTLStructMember?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlstructtype",
                "title": "MTLStructType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Struct Member",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/datatype",
                    "title": "var dataType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/offset",
                    "title": "var offset: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/argumentindex",
                    "title": "var argumentIndex: Int",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining Struct Member Details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/arraytype()",
                    "title": "func arrayType() -> MTLArrayType?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/structtype()",
                    "title": "func structType() -> MTLStructType?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/pointertype()",
                    "title": "func pointerType() -> MTLPointerType?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlstructmember/texturereferencetype()",
                    "title": "func textureReferenceType() -> MTLTextureReferenceType?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlstructmember",
                "title": "MTLStructMember",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Pointer Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/alignment",
                    "title": "var alignment: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/datasize",
                    "title": "var dataSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementtype",
                    "title": "var elementType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/access",
                    "title": "var access: MTLBindingAccess",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementisargumentbuffer",
                    "title": "var elementIsArgumentBuffer: Bool",
                    "type": "property"
                  },
                  {
                    "title": "Obtaining Details for Complex Pointer Elements",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementarraytype()",
                    "title": "func elementArrayType() -> MTLArrayType?",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlpointertype/elementstructtype()",
                    "title": "func elementStructType() -> MTLStructType?",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtlpointertype",
                "title": "MTLPointerType",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Describing the Texture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/texturetype",
                    "title": "var textureType: MTLTextureType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/texturedatatype",
                    "title": "var textureDataType: MTLDataType",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/access",
                    "title": "var access: MTLBindingAccess",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtltexturereferencetype/isdepthtexture",
                    "title": "var isDepthTexture: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtltexturereferencetype",
                "title": "MTLTextureReferenceType",
                "type": "class"
              },
              {
                "title": "Shader Logging",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllogstatedescriptor/buffersize",
                    "title": "var bufferSize: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllogstatedescriptor/level",
                    "title": "var level: MTLLogLevel",
                    "type": "property"
                  },
                  {
                    "title": "Log Levels",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/debug",
                        "title": "case debug",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/info",
                        "title": "case info",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/notice",
                        "title": "case notice",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/error",
                        "title": "case error",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/fault",
                        "title": "case fault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/undefined",
                        "title": "case undefined",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlloglevel/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlloglevel",
                    "title": "MTLLogLevel",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/metal/mtllogstatedescriptor",
                "title": "MTLLogStateDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllogstate/addloghandler(_:)",
                    "title": "func addLogHandler((String?, String?, MTLLogLevel, String) -> Void)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/metal/mtllogstate",
                "title": "MTLLogState",
                "type": "protocol"
              },
              {
                "title": "Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/unsupported",
                    "title": "static var unsupported: MTLLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/internal",
                    "title": "static var `internal`: MTLLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/compilefailure",
                    "title": "static var compileFailure: MTLLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/compilewarning",
                    "title": "static var compileWarning: MTLLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/filenotfound",
                    "title": "static var fileNotFound: MTLLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/functionnotfound",
                    "title": "static var functionNotFound: MTLLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtllibraryerror-swift.struct",
                "title": "MTLLibraryError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/internal",
                    "title": "case `internal`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilefailure",
                    "title": "case compileFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilewarning",
                    "title": "case compileWarning",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/filenotfound",
                    "title": "case fileNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/functionnotfound",
                    "title": "case functionNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/unsupported",
                    "title": "case unsupported",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/internal",
                    "title": "case `internal`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilefailure",
                    "title": "case compileFailure",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/compilewarning",
                    "title": "case compileWarning",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/filenotfound",
                    "title": "case fileNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/functionnotfound",
                    "title": "case functionNotFound",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllibraryerror-swift.struct/code/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtllibraryerror-swift.struct/code",
                "title": "MTLLibraryError.Code",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtllibraryerrordomain",
                "title": "let MTLLibraryErrorDomain: String",
                "type": "var"
              }
            ],
            "path": "/documentation/metal/shader-libraries",
            "title": "Shader Libraries",
            "type": "collection"
          },
          {
            "title": "Presentation",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Presenting with Core Animation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-custom-metal-view",
                "title": "Creating a Custom Metal View",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/reading-pixel-data-from-a-drawable-texture",
                "title": "Reading Pixel Data from a Drawable Texture",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/achieving-smooth-frame-rates-with-metal-s-display-link",
                "title": "Achieving smooth frame rates with Metal’s display link",
                "type": "sampleCode"
              },
              {
                "external": true,
                "path": "/documentation/quartzcore/cametallayer",
                "title": "CAMetalLayer",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/quartzcore/cametaldrawable",
                "title": "CAMetalDrawable",
                "type": "protocol"
              },
              {
                "title": "Presenting with MetalKit",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/using-metal-to-draw-a-view's-contents",
                "title": "Using Metal to Draw a View’s Contents",
                "type": "sampleCode"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkview",
                "title": "MTKView",
                "type": "class"
              },
              {
                "external": true,
                "path": "/documentation/metalkit/mtkviewdelegate",
                "title": "MTKViewDelegate",
                "type": "protocol"
              }
            ],
            "path": "/documentation/metal/onscreen-presentation",
            "title": "Onscreen Presentation",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "High Dynamic Range Content",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/processing-hdr-images-with-metal",
                "title": "Processing HDR Images with Metal",
                "type": "sampleCode"
              },
              {
                "path": "/documentation/metal/displaying-hdr-content-in-a-metal-layer",
                "title": "Displaying HDR Content in a Metal Layer",
                "type": "article"
              },
              {
                "path": "/documentation/metal/determining-support-for-edr-values",
                "title": "Determining Support for EDR Values",
                "type": "article"
              },
              {
                "path": "/documentation/metal/using-color-spaces-to-display-hdr-content",
                "title": "Using Color Spaces to Display HDR Content",
                "type": "article"
              },
              {
                "path": "/documentation/metal/using-system-tone-mapping-on-video-content",
                "title": "Using System Tone Mapping on Video Content",
                "type": "article"
              },
              {
                "path": "/documentation/metal/performing-your-own-tone-mapping",
                "title": "Performing Your Own Tone Mapping",
                "type": "article"
              },
              {
                "path": "/documentation/metal/implementing-tone-mapping-on-reference-displays",
                "title": "Implementing Tone Mapping on Reference Displays",
                "type": "article"
              }
            ],
            "path": "/documentation/metal/hdr-content",
            "title": "HDR Content",
            "type": "collection"
          },
          {
            "title": "User Interface",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/metal/managing-your-game-window-for-metal-in-macos",
            "title": "Managing your game window for Metal in macOS",
            "type": "article"
          },
          {
            "path": "/documentation/metal/adapting-your-game-interface-for-smaller-screens",
            "title": "Adapting your game interface for smaller screens",
            "type": "article"
          },
          {
            "title": "Developer Tools",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/metal-developer-workflows",
            "title": "Metal developer workflows",
            "type": "collection"
          },
          {
            "external": true,
            "path": "/documentation/xcode/metal-debugger",
            "title": "Metal debugger",
            "type": "collection"
          },
          {
            "path": "/documentation/metal/improving-your-games-graphics-performance-and-settings",
            "title": "Improving your game’s graphics performance and settings",
            "type": "article"
          },
          {
            "path": "/documentation/metal/capturing-metal-commands-programmatically",
            "title": "Capturing Metal Commands Programmatically",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/metal/supporting-simulator-in-a-metal-app",
            "title": "Supporting Simulator in a Metal app",
            "type": "sampleCode"
          },
          {
            "external": true,
            "path": "/documentation/xcode/analyzing-the-memory-usage-of-your-metal-app",
            "title": "Analyzing the memory usage of your Metal app",
            "type": "article"
          },
          {
            "external": true,
            "path": "/documentation/xcode/analyzing-the-performance-of-your-metal-app",
            "title": "Analyzing the performance of your Metal app",
            "type": "article"
          },
          {
            "path": "/documentation/metal/developing-metal-apps-that-run-in-simulator",
            "title": "Developing Metal apps that run in Simulator",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Counters and Counter Sets",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/confirming-which-counters-and-counter-sets-a-gpu-supports",
                "title": "Confirming which Counters and Counter Sets a GPU Supports",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Counter Set",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterset/name",
                    "title": "var name: String",
                    "type": "property"
                  },
                  {
                    "title": "Checking Which Counters a GPU Supports",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterset/counters",
                    "title": "var counters: [any MTLCounter]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcounterset",
                "title": "MTLCounterSet",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Common Counter Set Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounterset/timestamp",
                    "title": "static let timestamp: MTLCommonCounterSet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounterset/stageutilization",
                    "title": "static let stageUtilization: MTLCommonCounterSet",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounterset/statistic",
                    "title": "static let statistic: MTLCommonCounterSet",
                    "type": "property"
                  },
                  {
                    "title": "Swift Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounterset/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcommoncounterset",
                "title": "MTLCommonCounterSet",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Identifying a Counter",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounter/name",
                    "title": "var name: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcounter",
                "title": "MTLCounter",
                "type": "protocol"
              },
              {
                "children": [
                  {
                    "title": "Common Counter Names",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/timestamp",
                    "title": "static let timestamp: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/tessellationinputpatches",
                    "title": "static let tessellationInputPatches: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/vertexinvocations",
                    "title": "static let vertexInvocations: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/posttessellationvertexinvocations",
                    "title": "static let postTessellationVertexInvocations: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/clipperinvocations",
                    "title": "static let clipperInvocations: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/clipperprimitivesout",
                    "title": "static let clipperPrimitivesOut: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/fragmentinvocations",
                    "title": "static let fragmentInvocations: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/fragmentspassed",
                    "title": "static let fragmentsPassed: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/computekernelinvocations",
                    "title": "static let computeKernelInvocations: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/totalcycles",
                    "title": "static let totalCycles: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/vertexcycles",
                    "title": "static let vertexCycles: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/posttessellationvertexcycles",
                    "title": "static let postTessellationVertexCycles: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/fragmentcycles",
                    "title": "static let fragmentCycles: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/tessellationcycles",
                    "title": "static let tessellationCycles: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/rendertargetwritecycles",
                    "title": "static let renderTargetWriteCycles: MTLCommonCounter",
                    "type": "property"
                  },
                  {
                    "title": "Swift Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommoncounter/init(rawvalue:)",
                    "title": "init(rawValue: String)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcommoncounter",
                "title": "MTLCommonCounter",
                "type": "struct"
              },
              {
                "title": "Counter Sample Buffers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/creating-a-counter-sample-buffer-to-store-a-gpus-counter-data-during-a-pass",
                "title": "Creating a Counter Sample Buffer to Store a GPU’s Counter Data During a Pass",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Configuring a Descriptor for a Counter Sample Buffer",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/counterset",
                    "title": "var counterSet: (any MTLCounterSet)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/label",
                    "title": "var label: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/samplecount",
                    "title": "var sampleCount: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebufferdescriptor/storagemode",
                    "title": "var storageMode: MTLStorageMode",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcountersamplebufferdescriptor",
                "title": "MTLCounterSampleBufferDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Resolving the Counter Sample Buffer’s Data",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/resolvecounterrange(_:)",
                    "title": "func resolveCounterRange(Range<Int>) throws -> Data?",
                    "type": "method"
                  },
                  {
                    "title": "Inspecting the Counter Sample Buffer’s Configuration",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/label",
                    "title": "var label: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffer/samplecount",
                    "title": "var sampleCount: Int",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcountersamplebuffer",
                "title": "MTLCounterSampleBuffer",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/sampling-gpu-data-into-counter-sample-buffers",
                "title": "Sampling GPU Data into Counter Sample Buffers",
                "type": "article"
              },
              {
                "path": "/documentation/metal/mtlcounterdontsample",
                "title": "var MTLCounterDontSample: Int",
                "type": "var"
              },
              {
                "title": "Counter Sample Data Output",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/converting-a-gpus-counter-data-into-a-readable-format",
                "title": "Converting a GPU’s Counter Data into a Readable Format",
                "type": "article"
              },
              {
                "children": [
                  {
                    "title": "Timestamp Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresulttimestamp/timestamp",
                    "title": "var timestamp: UInt64",
                    "type": "property"
                  },
                  {
                    "title": "Swift Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresulttimestamp/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresulttimestamp/init(timestamp:)",
                    "title": "init(timestamp: UInt64)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcounterresulttimestamp",
                "title": "MTLCounterResultTimestamp",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Statistics Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/tessellationinputpatches",
                    "title": "var tessellationInputPatches: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/vertexinvocations",
                    "title": "var vertexInvocations: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/posttessellationvertexinvocations",
                    "title": "var postTessellationVertexInvocations: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/clipperinvocations",
                    "title": "var clipperInvocations: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/clipperprimitivesout",
                    "title": "var clipperPrimitivesOut: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/fragmentinvocations",
                    "title": "var fragmentInvocations: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/fragmentspassed",
                    "title": "var fragmentsPassed: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/computekernelinvocations",
                    "title": "var computeKernelInvocations: UInt64",
                    "type": "property"
                  },
                  {
                    "title": "Swift Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstatistic/init(tessellationinputpatches:vertexinvocations:posttessellationvertexinvocations:clipperinvocations:clipperprimitivesout:fragmentinvocations:fragmentspassed:computekernelinvocations:)",
                    "title": "init(tessellationInputPatches: UInt64, vertexInvocations: UInt64, postTessellationVertexInvocations: UInt64, clipperInvocations: UInt64, clipperPrimitivesOut: UInt64, fragmentInvocations: UInt64, fragmentsPassed: UInt64, computeKernelInvocations: UInt64)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcounterresultstatistic",
                "title": "MTLCounterResultStatistic",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Stage Utilization Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/totalcycles",
                    "title": "var totalCycles: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/vertexcycles",
                    "title": "var vertexCycles: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/tessellationcycles",
                    "title": "var tessellationCycles: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/posttessellationvertexcycles",
                    "title": "var postTessellationVertexCycles: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/fragmentcycles",
                    "title": "var fragmentCycles: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/rendertargetcycles",
                    "title": "var renderTargetCycles: UInt64",
                    "type": "property"
                  },
                  {
                    "title": "Swift Support",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlcounterresultstageutilization/init(totalcycles:vertexcycles:tessellationcycles:posttessellationvertexcycles:fragmentcycles:rendertargetcycles:)",
                    "title": "init(totalCycles: UInt64, vertexCycles: UInt64, tessellationCycles: UInt64, postTessellationVertexCycles: UInt64, fragmentCycles: UInt64, renderTargetCycles: UInt64)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcounterresultstageutilization",
                "title": "MTLCounterResultStageUtilization",
                "type": "struct"
              },
              {
                "path": "/documentation/metal/mtlcountererrorvalue",
                "title": "var MTLCounterErrorValue: UInt64",
                "type": "var"
              },
              {
                "title": "Timestamp Data",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/converting-gpu-timestamps-into-cpu-time",
                "title": "Converting GPU Timestamps into CPU Time",
                "type": "article"
              },
              {
                "path": "/documentation/metal/mtltimestamp",
                "title": "MTLTimestamp",
                "type": "typealias"
              },
              {
                "title": "Counter Sample Buffer Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error Code Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/outofmemory",
                    "title": "static var outOfMemory: MTLCounterSampleBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/invalid",
                    "title": "static var invalid: MTLCounterSampleBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/internal",
                    "title": "static var `internal`: MTLCounterSampleBufferError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code",
                    "title": "MTLCounterSampleBufferError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountererrordomain",
                    "title": "let MTLCounterErrorDomain: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct",
                "title": "MTLCounterSampleBufferError",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/gpu-counters-and-counter-sample-buffers",
            "title": "GPU Counters and Counter Sample Buffers",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Frame Capture",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Setting Capture Parameters",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedescriptor/captureobject",
                    "title": "var captureObject: Any?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedescriptor/destination",
                    "title": "var destination: MTLCaptureDestination",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedescriptor/outputurl",
                    "title": "var outputURL: URL?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcapturedescriptor",
                "title": "MTLCaptureDescriptor",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Obtaining the Shared Capture Manager",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/shared()",
                    "title": "class func shared() -> MTLCaptureManager",
                    "type": "method"
                  },
                  {
                    "title": "Querying Support for a Capture Destination",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/supportsdestination(_:)",
                    "title": "func supportsDestination(MTLCaptureDestination) -> Bool",
                    "type": "method"
                  },
                  {
                    "title": "Creating a Capture Scope",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/makecapturescope(device:)",
                    "title": "func makeCaptureScope(device: any MTLDevice) -> any MTLCaptureScope",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/makecapturescope(commandqueue:)",
                    "title": "func makeCaptureScope(commandQueue: any MTLCommandQueue) -> any MTLCaptureScope",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/defaultcapturescope",
                    "title": "var defaultCaptureScope: (any MTLCaptureScope)?",
                    "type": "property"
                  },
                  {
                    "title": "Starting Capture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(with:)",
                    "title": "func startCapture(with: MTLCaptureDescriptor) throws",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(device:)",
                    "title": "func startCapture(device: any MTLDevice)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(commandqueue:)",
                    "title": "func startCapture(commandQueue: any MTLCommandQueue)",
                    "type": "method"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcapturemanager/startcapture(scope:)",
                    "title": "func startCapture(scope: any MTLCaptureScope)",
                    "type": "method"
                  },
                  {
                    "title": "Stopping Capture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/stopcapture()",
                    "title": "func stopCapture()",
                    "type": "method"
                  },
                  {
                    "title": "Monitoring Capture",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturemanager/iscapturing",
                    "title": "var isCapturing: Bool",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcapturemanager",
                "title": "MTLCaptureManager",
                "type": "class"
              },
              {
                "children": [
                  {
                    "title": "Choosing a Destination",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedestination/developertools",
                    "title": "case developerTools",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedestination/gputracedocument",
                    "title": "case gpuTraceDocument",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturedestination/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcapturedestination",
                "title": "MTLCaptureDestination",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Defining Capture Scope Boundaries",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/begin()",
                    "title": "func begin()",
                    "type": "method"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/end()",
                    "title": "func end()",
                    "type": "method"
                  },
                  {
                    "title": "Identifying the Capture Scope",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/label",
                    "title": "var label: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/device",
                    "title": "var device: any MTLDevice",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcapturescope/commandqueue",
                    "title": "var commandQueue: (any MTLCommandQueue)?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcapturescope",
                "title": "MTLCaptureScope",
                "type": "protocol"
              },
              {
                "title": "Capture Errors",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcaptureerror/alreadycapturing",
                    "title": "case alreadyCapturing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcaptureerror/invaliddescriptor",
                    "title": "case invalidDescriptor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlcaptureerror/notsupported",
                    "title": "case notSupported",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcaptureerror/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlcaptureerror",
                "title": "MTLCaptureError",
                "type": "enum"
              },
              {
                "path": "/documentation/metal/mtlcaptureerrordomain",
                "title": "let MTLCaptureErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Shader Logs",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Getting the Log Messsage",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/type",
                    "title": "var type: MTLFunctionLogType",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogtype/validation",
                        "title": "case validation",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogtype/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionlogtype",
                    "title": "MTLFunctionLogType",
                    "type": "enum"
                  },
                  {
                    "title": "Getting Execution Details",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/debuglocation",
                    "title": "var debugLocation: (any MTLFunctionLogDebugLocation)?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/encoderlabel",
                    "title": "var encoderLabel: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlfunctionlog/function",
                    "title": "var function: (any MTLFunction)?",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Inspecting the Location Details",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/functionname",
                        "title": "var functionName: String?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/url",
                        "title": "var url: URL?",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/line",
                        "title": "var line: Int",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlfunctionlogdebuglocation/column",
                        "title": "var column: Int",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/metal/mtlfunctionlogdebuglocation",
                    "title": "MTLFunctionLogDebugLocation",
                    "type": "protocol"
                  }
                ],
                "path": "/documentation/metal/mtlfunctionlog",
                "title": "MTLFunctionLog",
                "type": "protocol"
              },
              {
                "path": "/documentation/metal/mtllogcontainer-swift.struct",
                "title": "MTLLogContainer",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/metal-debugging-types",
            "title": "Metal Debugging Types",
            "type": "collection"
          },
          {
            "title": "Apple Silicon",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/apple-silicon/porting-your-metal-code-to-apple-silicon",
            "title": "Porting Your Metal Code to Apple Silicon",
            "type": "article"
          },
          {
            "path": "/documentation/metal/tailor-your-apps-for-apple-gpus-and-tile-based-deferred-rendering",
            "title": "Tailor Your Apps for Apple GPUs and Tile-Based Deferred Rendering",
            "type": "article"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Structures",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/none",
                    "title": "static var none: MTLBinaryArchiveError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/invalidfile",
                    "title": "static var invalidFile: MTLBinaryArchiveError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/compilationfailure",
                    "title": "static var compilationFailure: MTLBinaryArchiveError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/unexpectedelement",
                    "title": "static var unexpectedElement: MTLBinaryArchiveError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/internalerror",
                    "title": "static var internalError: MTLBinaryArchiveError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/invalidfile",
                        "title": "case invalidFile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/compilationfailure",
                        "title": "case compilationFailure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/unexpectedelement",
                        "title": "case unexpectedElement",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/internalerror",
                        "title": "case internalError",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/invalidfile",
                        "title": "case invalidFile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/compilationfailure",
                        "title": "case compilationFailure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/unexpectedelement",
                        "title": "case unexpectedElement",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/internalerror",
                        "title": "case internalError",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/code",
                    "title": "MTLBinaryArchiveError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlbinaryarchivedomain",
                    "title": "let MTLBinaryArchiveDomain: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/metal/mtlbinaryarchiveerror-swift.struct",
                "title": "MTLBinaryArchiveError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Errors Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/none",
                    "title": "static var none: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/timeout",
                    "title": "static var timeout: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/pagefault",
                    "title": "static var pageFault: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/notpermitted",
                    "title": "static var notPermitted: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/outofmemory",
                    "title": "static var outOfMemory: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/invalidresource",
                    "title": "static var invalidResource: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/memoryless",
                    "title": "static var memoryless: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/deviceremoved",
                    "title": "static var deviceRemoved: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/stackoverflow",
                    "title": "static var stackOverflow: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/accessrevoked",
                    "title": "static var accessRevoked: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/internal",
                    "title": "static var `internal`: MTLCommandBufferError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/timeout",
                        "title": "case timeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/pagefault",
                        "title": "case pageFault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/notpermitted",
                        "title": "case notPermitted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/invalidresource",
                        "title": "case invalidResource",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/memoryless",
                        "title": "case memoryless",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/deviceremoved",
                        "title": "case deviceRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/stackoverflow",
                        "title": "case stackOverflow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/accessrevoked",
                        "title": "static var accessRevoked: MTLCommandBufferError.Code",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/timeout",
                        "title": "case timeout",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/pagefault",
                        "title": "case pageFault",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/notpermitted",
                        "title": "case notPermitted",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/invalidresource",
                        "title": "case invalidResource",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/memoryless",
                        "title": "case memoryless",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/deviceremoved",
                        "title": "case deviceRemoved",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/stackoverflow",
                        "title": "case stackOverflow",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "title": "Deprecated",
                        "type": "groupMarker"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/blacklisted",
                        "title": "case blacklisted",
                        "type": "case"
                      },
                      {
                        "deprecated": true,
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/blacklisted",
                        "title": "case blacklisted",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/code",
                    "title": "MTLCommandBufferError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcommandbuffererrordomain",
                    "title": "let MTLCommandBufferErrorDomain: String",
                    "type": "var"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/metal/mtlcommandbuffererror-swift.struct/blacklisted",
                    "title": "static var blacklisted: MTLCommandBufferError.Code",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcommandbuffererror-swift.struct",
                "title": "MTLCommandBufferError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/init(scale:shear:pivot:rotation:translation:)",
                    "title": "init(scale: MTLPackedFloat3, shear: MTLPackedFloat3, pivot: MTLPackedFloat3, rotation: MTLPackedFloatQuaternion, translation: MTLPackedFloat3)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/pivot",
                    "title": "var pivot: MTLPackedFloat3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/rotation",
                    "title": "var rotation: MTLPackedFloatQuaternion",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/scale",
                    "title": "var scale: MTLPackedFloat3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/shear",
                    "title": "var shear: MTLPackedFloat3",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcomponenttransform/translation",
                    "title": "var translation: MTLPackedFloat3",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlcomponenttransform",
                "title": "MTLComponentTransform",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Error Code Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/outofmemory",
                    "title": "static var outOfMemory: MTLCounterSampleBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/invalid",
                    "title": "static var invalid: MTLCounterSampleBufferError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/internal",
                    "title": "static var `internal`: MTLCounterSampleBufferError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/outofmemory",
                        "title": "case outOfMemory",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/invalid",
                        "title": "case invalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/code",
                    "title": "MTLCounterSampleBufferError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlcountererrordomain",
                    "title": "let MTLCounterErrorDomain: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/metal/mtlcountersamplebuffererror-swift.struct",
                "title": "MTLCounterSampleBufferError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/none",
                    "title": "static var none: MTLDynamicLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/invalidfile",
                    "title": "static var invalidFile: MTLDynamicLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/compilationfailure",
                    "title": "static var compilationFailure: MTLDynamicLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/unresolvedinstallname",
                    "title": "static var unresolvedInstallName: MTLDynamicLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/dependencyloadfailure",
                    "title": "static var dependencyLoadFailure: MTLDynamicLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/unsupported",
                    "title": "static var unsupported: MTLDynamicLibraryError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/invalidfile",
                        "title": "case invalidFile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/compilationfailure",
                        "title": "case compilationFailure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unresolvedinstallname",
                        "title": "case unresolvedInstallName",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/dependencyloadfailure",
                        "title": "case dependencyLoadFailure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unsupported",
                        "title": "case unsupported",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/none",
                        "title": "case none",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/invalidfile",
                        "title": "case invalidFile",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/compilationfailure",
                        "title": "case compilationFailure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unresolvedinstallname",
                        "title": "case unresolvedInstallName",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/dependencyloadfailure",
                        "title": "case dependencyLoadFailure",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/unsupported",
                        "title": "case unsupported",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: UInt)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/code",
                    "title": "MTLDynamicLibraryError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtldynamiclibrarydomain",
                    "title": "let MTLDynamicLibraryDomain: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/metal/mtldynamiclibraryerror-swift.struct",
                "title": "MTLDynamicLibraryError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/urlinvalid",
                    "title": "static var urlInvalid: MTLIOError.Code",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/internal",
                    "title": "static var `internal`: MTLIOError.Code",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Error Codes",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlioerror-swift.struct/code/urlinvalid",
                        "title": "case urlInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlioerror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlioerror-swift.struct/code/urlinvalid",
                        "title": "case urlInvalid",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/metal/mtlioerror-swift.struct/code/internal",
                        "title": "case `internal`",
                        "type": "case"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/metal/mtlioerror-swift.struct/code/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      }
                    ],
                    "path": "/documentation/metal/mtlioerror-swift.struct/code",
                    "title": "MTLIOError.Code",
                    "type": "enum"
                  },
                  {
                    "title": "Error Domain",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlioerror-swift.struct/errordomain",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlioerrordomain",
                    "title": "let MTLIOErrorDomain: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/metal/mtlioerror-swift.struct",
                "title": "MTLIOError",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/init()",
                    "title": "init()",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/init(x:y:z:w:)",
                    "title": "init(x: Float, y: Float, z: Float, w: Float)",
                    "type": "init"
                  },
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/w",
                    "title": "var w: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/x",
                    "title": "var x: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/y",
                    "title": "var y: Float",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlpackedfloatquaternion/z",
                    "title": "var z: Float",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlpackedfloatquaternion",
                "title": "MTLPackedFloatQuaternion",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibraryoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibraryoptions/failonbinaryarchivemiss",
                    "title": "static var failOnBinaryArchiveMiss: MTLStitchedLibraryOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/metal/mtlstitchedlibraryoptions/storelibraryinmetalpipelinesscript",
                    "title": "static var storeLibraryInMetalPipelinesScript: MTLStitchedLibraryOptions",
                    "type": "property"
                  }
                ],
                "path": "/documentation/metal/mtlstitchedlibraryoptions",
                "title": "MTLStitchedLibraryOptions",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/nsdevicecertification/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/nsdevicecertification",
                "title": "NSDeviceCertification",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/nsprocessperformanceprofile/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/nsprocessperformanceprofile",
                "title": "NSProcessPerformanceProfile",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/metal-structures",
            "title": "Metal Structures",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentbufferstier/tier1",
                    "title": "case tier1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentbufferstier/tier2",
                    "title": "case tier2",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlargumentbufferstier/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlargumentbufferstier",
                "title": "MTLArgumentBuffersTier",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllogstateerror/invalid",
                    "title": "case invalid",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtllogstateerror/invalidsize",
                    "title": "case invalidSize",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtllogstateerror/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtllogstateerror",
                "title": "MTLLogStateError",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Function Sets",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmathfloatingpointfunctions/fast",
                    "title": "case fast",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmathfloatingpointfunctions/precise",
                    "title": "case precise",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmathfloatingpointfunctions/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlmathfloatingpointfunctions",
                "title": "MTLMathFloatingPointFunctions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Modes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmathmode/fast",
                    "title": "case fast",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmathmode/relaxed",
                    "title": "case relaxed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmathmode/safe",
                    "title": "case safe",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmathmode/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlmathmode",
                "title": "MTLMathMode",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmatrixlayout/columnmajor",
                    "title": "case columnMajor",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlmatrixlayout/rowmajor",
                    "title": "case rowMajor",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlmatrixlayout/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlmatrixlayout",
                "title": "MTLMatrixLayout",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlreadwritetexturetier/tier1",
                    "title": "case tier1",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlreadwritetexturetier/tier2",
                    "title": "case tier2",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlreadwritetexturetier/tiernone",
                    "title": "case tierNone",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlreadwritetexturetier/init(rawvalue:)",
                    "title": "init?(rawValue: UInt)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlreadwritetexturetier",
                "title": "MTLReadWriteTextureTier",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Validation States",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlshadervalidation/default",
                    "title": "case `default`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlshadervalidation/disabled",
                    "title": "case disabled",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtlshadervalidation/enabled",
                    "title": "case enabled",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtlshadervalidation/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtlshadervalidation",
                "title": "MTLShaderValidation",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltransformtype/component",
                    "title": "case component",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/metal/mtltransformtype/packedfloat4x3",
                    "title": "case packedFloat4x3",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/mtltransformtype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/mtltransformtype",
                "title": "MTLTransformType",
                "type": "enum"
              }
            ],
            "path": "/documentation/metal/metal-enumerations",
            "title": "Metal Enumerations",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/mtllogstateerrordomain",
                "title": "let MTLLogStateErrorDomain: String",
                "type": "var"
              }
            ],
            "path": "/documentation/metal/metal-constants",
            "title": "Metal Constants",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Data Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/nsdevicecertification/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/nsdevicecertification",
                "title": "NSDeviceCertification",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/metal/nsprocessperformanceprofile/init(rawvalue:)",
                    "title": "init(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/metal/nsprocessperformanceprofile",
                "title": "NSProcessPerformanceProfile",
                "type": "struct"
              }
            ],
            "path": "/documentation/metal/metal-data-types",
            "title": "Metal Data Types",
            "type": "collection"
          },
          {
            "children": [
              {
                "title": "Global Variables",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/metal/mtlresourcecpucachemodemask",
                "title": "var MTLResourceCPUCacheModeMask: UInt",
                "type": "var"
              },
              {
                "path": "/documentation/metal/mtlresourcecpucachemodeshift",
                "title": "var MTLResourceCPUCacheModeShift: Int32",
                "type": "var"
              },
              {
                "path": "/documentation/metal/mtlresourcehazardtrackingmodemask",
                "title": "var MTLResourceHazardTrackingModeMask: UInt",
                "type": "var"
              },
              {
                "path": "/documentation/metal/mtlresourcehazardtrackingmodeshift",
                "title": "var MTLResourceHazardTrackingModeShift: Int32",
                "type": "var"
              },
              {
                "path": "/documentation/metal/mtlresourcestoragemodemask",
                "title": "var MTLResourceStorageModeMask: UInt",
                "type": "var"
              },
              {
                "path": "/documentation/metal/mtlresourcestoragemodeshift",
                "title": "var MTLResourceStorageModeShift: Int32",
                "type": "var"
              },
              {
                "path": "/documentation/metal/nsdevicecertification/iphoneperformancegaming",
                "title": "static let iPhonePerformanceGaming: NSDeviceCertification",
                "type": "property"
              },
              {
                "path": "/documentation/metal/nsprocessperformanceprofile/default",
                "title": "static let `default`: NSProcessPerformanceProfile",
                "type": "property"
              },
              {
                "path": "/documentation/metal/nsprocessperformanceprofile/sustained",
                "title": "static let sustained: NSProcessPerformanceProfile",
                "type": "property"
              }
            ],
            "path": "/documentation/metal/metal-variables",
            "title": "Metal Variables",
            "type": "collection"
          }
        ],
        "path": "/documentation/metal",
        "title": "Metal",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
