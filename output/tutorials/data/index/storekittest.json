{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "StoreKit transaction testing",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/setting-up-storekit-testing-in-xcode",
            "title": "Setting up StoreKit Testing in Xcode",
            "type": "article"
          },
          {
            "title": "StoreKit transaction testing errors",
            "type": "groupMarker"
          },
          {
            "title": "Ad impression and postback testing",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekittest/testing-and-validating-ad-impression-signatures-and-postbacks-for-skadnetwork",
            "title": "Testing and validating ad impression signatures and postbacks for SKAdNetwork",
            "type": "sampleCode"
          },
          {
            "title": "Ad impression and postback errors",
            "type": "groupMarker"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/storekittest",
        "title": "StoreKit Test",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "StoreKit transaction testing",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/setting-up-storekit-testing-in-xcode",
            "title": "Setting up StoreKit Testing in Xcode",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Initializing test sessions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/init(configurationfilenamed:)",
                "title": "- initWithConfigurationFileNamed:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/init(contentsof:)",
                "title": "- initWithContentsOfURL:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/resettodefaultstate()",
                "title": "- resetToDefaultState",
                "type": "method"
              },
              {
                "title": "Configuring the test environment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/storefront",
                "title": "storefront",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/locale",
                "title": "locale",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/disabledialogs",
                "title": "disableDialogs",
                "type": "property"
              },
              {
                "title": "Managing transactions in the test environment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/alltransactions()",
                "title": "- allTransactions",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/deletetransaction(identifier:)",
                "title": "- deleteTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/cleartransactions()",
                "title": "- clearTransactions",
                "type": "method"
              },
              {
                "title": "Forcing failed transactions",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/sktestsession/failtransactionsenabled",
                "title": "failTransactionsEnabled",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/sktestsession/failureerror",
                "title": "failureError",
                "type": "property"
              },
              {
                "title": "Testing interrupted purchases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/interruptedpurchasesenabled",
                "title": "interruptedPurchasesEnabled",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/resolveissuefortransaction(identifier:)",
                "title": "- resolveIssueForTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "title": "Testing Ask To Buy transactions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/asktobuyenabled",
                "title": "askToBuyEnabled",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/approveasktobuytransaction(identifier:)",
                "title": "- approveAskToBuyTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/declineasktobuytransaction(identifier:)",
                "title": "- declineAskToBuyTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "title": "Testing subscription renewals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/timerate-swift.property",
                "title": "timeRate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Fixed time rates for subscription renewals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleveryfifteenminutes",
                    "title": "SKTestTimeRateOneRenewalEveryFifteenMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleveryfiveminutes",
                    "title": "SKTestTimeRateOneRenewalEveryFiveMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleveryminute",
                    "title": "SKTestTimeRateOneRenewalEveryMinute",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleverythirtyseconds",
                    "title": "SKTestTimeRateOneRenewalEveryThirtySeconds",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleverytenseconds",
                    "title": "SKTestTimeRateOneRenewalEveryTenSeconds",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleverytwoseconds",
                    "title": "SKTestTimeRateOneRenewalEveryTwoSeconds",
                    "type": "case"
                  },
                  {
                    "title": "Scaled time rates for subscription renewals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/realtime",
                    "title": "SKTestTimeRateRealTime",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleveryhour",
                    "title": "SKTestTimeRateMonthlyRenewalEveryHour",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleverythirtyminutes",
                    "title": "SKTestTimeRateMonthlyRenewalEveryThirtyMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleveryfifteenminutes",
                    "title": "SKTestTimeRateMonthlyRenewalEveryFifteenMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleveryfiveminutes",
                    "title": "SKTestTimeRateMonthlyRenewalEveryFiveMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleverythirtyseconds",
                    "title": "SKTestTimeRateMonthlyRenewalEveryThirtySeconds",
                    "type": "case"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onehourisoneday",
                    "title": "SKTestTimeRateOneHourIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/thirtyminutesisoneday",
                    "title": "SKTestTimeRateThirtyMinutesIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/fiveminutesisoneday",
                    "title": "SKTestTimeRateFiveMinutesIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/oneminuteisoneday",
                    "title": "SKTestTimeRateOneMinuteIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/thirtysecondsisoneday",
                    "title": "SKTestTimeRateThirtySecondsIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onesecondisoneday",
                    "title": "SKTestTimeRateOneSecondIsOneDay",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestsession/timerate-swift.enum",
                "title": "SKTestTimeRate",
                "type": "enum"
              },
              {
                "path": "/documentation/storekittest/sktestsession/enableautorenewfortransaction(identifier:)",
                "title": "- enableAutoRenewForTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/disableautorenewfortransaction(identifier:)",
                "title": "- disableAutoRenewForTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/forcerenewalofsubscription(productidentifier:)",
                "title": "- forceRenewalOfSubscriptionWithProductIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/expiresubscription(productidentifier:)",
                "title": "- expireSubscriptionWithProductIdentifier:error:",
                "type": "method"
              },
              {
                "title": "Testing billing retry and grace period",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/billinggraceperiodisenabled",
                "title": "billingGracePeriodEnabled",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/shouldenterbillingretryonrenewal",
                "title": "billingRetryOnRenewalEnabled",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/resolveissuefortransaction(identifier:)",
                "title": "- resolveIssueForTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "title": "Testing price increase consent",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/requestpriceincreaseconsentfortransaction(identifier:)",
                "title": "- requestPriceIncreaseConsentForTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/consenttopriceincreasefortransaction(identifier:)",
                "title": "- consentToPriceIncreaseForTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/declinepriceincreasefortransaction(identifier:)",
                "title": "- declinePriceIncreaseForTransactionWithIdentifier:error:",
                "type": "method"
              },
              {
                "title": "Testing externally performed transactions",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/sktestsession/buyproduct(productidentifier:)",
                "title": "- buyProductWithIdentifier:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/refundtransaction(identifier:)",
                "title": "- refundTransactionWithIdentifier:error:",
                "type": "method"
              }
            ],
            "path": "/documentation/storekittest/sktestsession",
            "title": "SKTestSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying Transactions and Products",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/identifier",
                "title": "identifier",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/originaltransactionidentifier",
                "title": "originalTransactionIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/productidentifier",
                "title": "productIdentifier",
                "type": "property"
              },
              {
                "title": "Getting Payment Transaction States",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/state",
                "title": "state",
                "type": "property"
              },
              {
                "title": "Getting Dates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/purchasedate",
                "title": "purchaseDate",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/canceldate",
                "title": "cancelDate",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/expirationdate",
                "title": "expirationDate",
                "type": "property"
              },
              {
                "title": "Getting Test Environment States",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/autorenewingenabled",
                "title": "autoRenewingEnabled",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/haspurchaseissue",
                "title": "hasPurchaseIssue",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/ispendingpriceincreaseconsent",
                "title": "pendingPriceIncreaseConsent",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/pendingasktobuyconfirmation",
                "title": "pendingAskToBuyConfirmation",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/sktesttransaction",
            "title": "SKTestTransaction",
            "type": "class"
          },
          {
            "title": "StoreKit transaction testing errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekittest/sktesterrordomain",
            "title": "SKTestErrorDomain",
            "type": "var"
          },
          {
            "title": "Ad impression and postback testing",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekittest/testing-and-validating-ad-impression-signatures-and-postbacks-for-skadnetwork",
            "title": "Testing and validating ad impression signatures and postbacks for SKAdNetwork",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Validating impressions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/validate(_:publickey:)",
                "title": "- validateImpression:publicKey:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/validateimpression(parameters:publickey:)",
                "title": "- validateImpressionWithParameters:publicKey:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/validatewebadimpressionpayload(_:publickey:)",
                "title": "- validateWebAdImpressionPayload:publicKey:error:",
                "type": "method"
              },
              {
                "title": "Adding and sending postbacks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/setpostbacks(_:)",
                "title": "- setPostbacks:error:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/postbacks",
                "title": "postbacks",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/flushpostbacks(responses:)",
                "title": "- flushPostbacksWithResponses:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skantestpostbackresponsehandler",
                "title": "SKANTestPostbackResponseHandler",
                "type": "typealias"
              },
              {
                "title": "Viewing the developer postback URL",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/developerpostbackurl",
                "title": "developerPostbackURL",
                "type": "property"
              },
              {
                "title": "Initializing test sessions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/init()",
                "title": "- init",
                "type": "method"
              }
            ],
            "path": "/documentation/storekittest/skadtestsession",
            "title": "SKAdTestSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating test postbacks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/init(version:adnetworkidentifier:sourceidentifier:appstoreitemidentifier:sourceappstoreitemidentifier:sourcedomain:fidelitytype:isredownload:didwin:postbackurl:)",
                "title": "- initWithVersion:adNetworkIdentifier:sourceIdentifier:appStoreItemIdentifier:sourceAppStoreItemIdentifier:sourceDomain:fidelityType:isRedownload:didWin:postbackURL:",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/winningpostbacks(withversion:adnetworkidentifier:sourceidentifier:appstoreitemidentifier:sourceappstoreitemidentifier:sourcedomain:fidelitytype:isredownload:postbackurl:)",
                "title": "+ winningPostbacksWithVersion:adNetworkIdentifier:sourceIdentifier:appStoreItemIdentifier:sourceAppStoreItemIdentifier:sourceDomain:fidelityType:isRedownload:postbackURL:",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/skadtestpostback/init(version:adnetworkidentifier:adcampaignidentifier:appstoreitemidentifier:sourceappstoreitemidentifier:conversionvalue:fidelitytype:isredownload:didwin:postbackurl:)",
                "title": "- initWithVersion:adNetworkIdentifier:adCampaignIdentifier:appStoreItemIdentifier:sourceAppStoreItemIdentifier:conversionValue:fidelityType:isRedownload:didWin:postbackURL:",
                "type": "method"
              },
              {
                "title": "Getting the Postback Destination",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/postbackurl",
                "title": "postbackURL",
                "type": "property"
              },
              {
                "title": "Getting general information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/version",
                "title": "version",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/transactionidentifier",
                "title": "transactionIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/postbacksequenceindex",
                "title": "postbackSequenceIndex",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/isregistered",
                "title": "isRegistered",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/isredownload",
                "title": "isRedownload",
                "type": "property"
              },
              {
                "title": "Getting advertisement information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/adnetworkidentifier",
                "title": "adNetworkIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/appstoreitemidentifier",
                "title": "appStoreItemIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/sourceappstoreitemidentifier",
                "title": "sourceAppStoreItemIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/sourcedomain",
                "title": "sourceDomain",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/sourceidentifier",
                "title": "sourceIdentifier",
                "type": "property"
              },
              {
                "title": "Getting conversion information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/fidelitytype",
                "title": "fidelityType",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/fineconversionvalue",
                "title": "fineConversionValue",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/coarseconversionvalue",
                "title": "coarseConversionValue",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/didwin",
                "title": "didWin",
                "type": "property"
              },
              {
                "title": "Getting information in earlier versions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/adcampaignidentifier",
                "title": "adCampaignIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/conversionvalue",
                "title": "conversionValue",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/skadtestpostback",
            "title": "SKAdTestPostback",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting Postback Responses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackresponse/didsucceed",
                "title": "didSucceed",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackresponse/httpresponse",
                "title": "httpResponse",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackresponse/error",
                "title": "error",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/skadtestpostbackresponse",
            "title": "SKAdTestPostbackResponse",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting SKAdNetwork Versions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version4_0",
                "title": "SKAdTestPostbackVersion4_0",
                "type": "var"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version3_0",
                "title": "SKAdTestPostbackVersion3_0",
                "type": "var"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version2_2",
                "title": "SKAdTestPostbackVersion2_2",
                "type": "var"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version2_1",
                "title": "SKAdTestPostbackVersion2_1",
                "type": "var"
              }
            ],
            "path": "/documentation/storekittest/skadtestpostbackversion",
            "title": "SKAdTestPostbackVersion",
            "type": "typealias"
          },
          {
            "title": "Ad impression and postback errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekittest/skadtesterrordomain",
            "title": "SKAdTestErrorDomain",
            "type": "var"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/storekittest",
        "title": "StoreKit Test",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "StoreKit transaction testing",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/xcode/setting-up-storekit-testing-in-xcode",
            "title": "Setting up StoreKit Testing in Xcode",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Initializing test sessions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/init(configurationfilenamed:)",
                "title": "convenience init(configurationFileNamed: String) throws",
                "type": "init"
              },
              {
                "path": "/documentation/storekittest/sktestsession/init(contentsof:)",
                "title": "init(contentsOf: URL) throws",
                "type": "init"
              },
              {
                "path": "/documentation/storekittest/sktestsession/resettodefaultstate()",
                "title": "func resetToDefaultState()",
                "type": "method"
              },
              {
                "title": "Configuring the test environment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/storefront",
                "title": "var storefront: String",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/locale",
                "title": "var locale: Locale",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/disabledialogs",
                "title": "var disableDialogs: Bool",
                "type": "property"
              },
              {
                "title": "Managing transactions in the test environment",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/alltransactions()",
                "title": "func allTransactions() -> [SKTestTransaction]",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/deletetransaction(identifier:)",
                "title": "func deleteTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/cleartransactions()",
                "title": "func clearTransactions()",
                "type": "method"
              },
              {
                "title": "Forcing failed transactions",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/sktestsession/failtransactionsenabled",
                "title": "var failTransactionsEnabled: Bool",
                "type": "property"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/sktestsession/failureerror",
                "title": "var failureError: SKError.Code",
                "type": "property"
              },
              {
                "title": "Testing interrupted purchases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/interruptedpurchasesenabled",
                "title": "var interruptedPurchasesEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/resolveissuefortransaction(identifier:)",
                "title": "func resolveIssueForTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "title": "Testing Ask To Buy transactions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/asktobuyenabled",
                "title": "var askToBuyEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/approveasktobuytransaction(identifier:)",
                "title": "func approveAskToBuyTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/declineasktobuytransaction(identifier:)",
                "title": "func declineAskToBuyTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "title": "Testing subscription renewals",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/timerate-swift.property",
                "title": "var timeRate: SKTestSession.TimeRate",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Fixed time rates for subscription renewals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleveryfifteenminutes",
                    "title": "case oneRenewalEveryFifteenMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleveryfiveminutes",
                    "title": "case oneRenewalEveryFiveMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleveryminute",
                    "title": "case oneRenewalEveryMinute",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleverythirtyseconds",
                    "title": "case oneRenewalEveryThirtySeconds",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleverytenseconds",
                    "title": "case oneRenewalEveryTenSeconds",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onerenewaleverytwoseconds",
                    "title": "case oneRenewalEveryTwoSeconds",
                    "type": "case"
                  },
                  {
                    "title": "Scaled time rates for subscription renewals",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/realtime",
                    "title": "case realTime",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleveryhour",
                    "title": "case monthlyRenewalEveryHour",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleverythirtyminutes",
                    "title": "case monthlyRenewalEveryThirtyMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleveryfifteenminutes",
                    "title": "case monthlyRenewalEveryFifteenMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleveryfiveminutes",
                    "title": "case monthlyRenewalEveryFiveMinutes",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/monthlyrenewaleverythirtyseconds",
                    "title": "case monthlyRenewalEveryThirtySeconds",
                    "type": "case"
                  },
                  {
                    "title": "Deprecated",
                    "type": "groupMarker"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onehourisoneday",
                    "title": "case oneHourIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/thirtyminutesisoneday",
                    "title": "case thirtyMinutesIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/fiveminutesisoneday",
                    "title": "case fiveMinutesIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/oneminuteisoneday",
                    "title": "case oneMinuteIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/thirtysecondsisoneday",
                    "title": "case thirtySecondsIsOneDay",
                    "type": "case"
                  },
                  {
                    "deprecated": true,
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/onesecondisoneday",
                    "title": "case oneSecondIsOneDay",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestsession/timerate-swift.enum/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/storekittest/sktestsession/timerate-swift.enum",
                "title": "SKTestSession.TimeRate",
                "type": "enum"
              },
              {
                "path": "/documentation/storekittest/sktestsession/enableautorenewfortransaction(identifier:)",
                "title": "func enableAutoRenewForTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/disableautorenewfortransaction(identifier:)",
                "title": "func disableAutoRenewForTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/forcerenewalofsubscription(productidentifier:)",
                "title": "func forceRenewalOfSubscription(productIdentifier: String) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/expiresubscription(productidentifier:)",
                "title": "func expireSubscription(productIdentifier: String) throws",
                "type": "method"
              },
              {
                "title": "Testing billing retry and grace period",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/billinggraceperiodisenabled",
                "title": "var billingGracePeriodIsEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/shouldenterbillingretryonrenewal",
                "title": "var shouldEnterBillingRetryOnRenewal: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktestsession/resolveissuefortransaction(identifier:)",
                "title": "func resolveIssueForTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "title": "Testing price increase consent",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/requestpriceincreaseconsentfortransaction(identifier:)",
                "title": "func requestPriceIncreaseConsentForTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/consenttopriceincreasefortransaction(identifier:)",
                "title": "func consentToPriceIncreaseForTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/declinepriceincreasefortransaction(identifier:)",
                "title": "func declinePriceIncreaseForTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "title": "Testing externally performed transactions",
                "type": "groupMarker"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/sktestsession/buyproduct(productidentifier:)",
                "title": "func buyProduct(productIdentifier: String) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/refundtransaction(identifier:)",
                "title": "func refundTransaction(identifier: Int) throws",
                "type": "method"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktestsession/buyproduct(identifier:options:)",
                "title": "func buyProduct(identifier: Product.ID, options: Set<Product.PurchaseOption>) async throws -> Transaction",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/setsimulatederror(_:forapi:)",
                "title": "func setSimulatedError<API>(API.Failure?, forAPI: API) async throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/sktestsession/simulatederror(forapi:)",
                "title": "func simulatedError<API>(forAPI: API) async -> API.Failure?",
                "type": "method"
              }
            ],
            "path": "/documentation/storekittest/sktestsession",
            "title": "SKTestSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Identifying Transactions and Products",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/identifier",
                "title": "var identifier: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/originaltransactionidentifier",
                "title": "var originalTransactionIdentifier: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/productidentifier",
                "title": "var productIdentifier: String",
                "type": "property"
              },
              {
                "title": "Getting Payment Transaction States",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/state",
                "title": "var state: SKPaymentTransactionState",
                "type": "property"
              },
              {
                "title": "Getting Dates",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/purchasedate",
                "title": "var purchaseDate: Date",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/canceldate",
                "title": "var cancelDate: Date?",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/expirationdate",
                "title": "var expirationDate: Date?",
                "type": "property"
              },
              {
                "title": "Getting Test Environment States",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/autorenewingenabled",
                "title": "var autoRenewingEnabled: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/haspurchaseissue",
                "title": "var hasPurchaseIssue: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/ispendingpriceincreaseconsent",
                "title": "var isPendingPriceIncreaseConsent: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesttransaction/pendingasktobuyconfirmation",
                "title": "var pendingAskToBuyConfirmation: Bool",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/sktesttransaction",
            "title": "SKTestTransaction",
            "type": "class"
          },
          {
            "title": "StoreKit transaction testing errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekittest/sktesterrordomain",
            "title": "let SKTestErrorDomain: String",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Error Domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesterror/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              },
              {
                "title": "Error Codes",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/sktesterror/filenotfound",
                "title": "static var fileNotFound: SKTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesterror/invalidaction",
                "title": "static var invalidAction: SKTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesterror/invalidproductidentifier",
                "title": "static var invalidProductIdentifier: SKTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesterror/invalidproducttype",
                "title": "static var invalidProductType: SKTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesterror/invalidurl",
                "title": "static var invalidURL: SKTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesterror/nosubscriptionfound",
                "title": "static var noSubscriptionFound: SKTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesterror/notransactionfound",
                "title": "static var noTransactionFound: SKTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/sktesterror/serviceunavailable",
                "title": "static var serviceUnavailable: SKTestError.Code",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Error Codes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/filenotfound",
                    "title": "case fileNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidaction",
                    "title": "case invalidAction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidproductidentifier",
                    "title": "case invalidProductIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidproducttype",
                    "title": "case invalidProductType",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidurl",
                    "title": "case invalidURL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/nosubscriptionfound",
                    "title": "case noSubscriptionFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/notransactionfound",
                    "title": "case noTransactionFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/serviceunavailable",
                    "title": "case serviceUnavailable",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/filenotfound",
                    "title": "case fileNotFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidaction",
                    "title": "case invalidAction",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidproductidentifier",
                    "title": "case invalidProductIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidproducttype",
                    "title": "case invalidProductType",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/invalidurl",
                    "title": "case invalidURL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/nosubscriptionfound",
                    "title": "case noSubscriptionFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/notransactionfound",
                    "title": "case noTransactionFound",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/serviceunavailable",
                    "title": "case serviceUnavailable",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktesterror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/storekittest/sktesterror/code",
                "title": "SKTestError.Code",
                "type": "enum"
              }
            ],
            "path": "/documentation/storekittest/sktesterror",
            "title": "SKTestError",
            "type": "struct"
          },
          {
            "title": "Ad impression and postback testing",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekittest/testing-and-validating-ad-impression-signatures-and-postbacks-for-skadnetwork",
            "title": "Testing and validating ad impression signatures and postbacks for SKAdNetwork",
            "type": "sampleCode"
          },
          {
            "children": [
              {
                "title": "Validating impressions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/validate(_:publickey:)",
                "title": "func validate(SKAdImpression, publicKey: String) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/validateimpression(parameters:publickey:)",
                "title": "func validateImpression(parameters: [String : Any], publicKey: String) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/validatewebadimpressionpayload(_:publickey:)",
                "title": "func validateWebAdImpressionPayload(Data, publicKey: String) throws",
                "type": "method"
              },
              {
                "title": "Adding and sending postbacks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/setpostbacks(_:)",
                "title": "func setPostbacks([SKAdTestPostback]) throws",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/postbacks",
                "title": "var postbacks: [SKAdTestPostback]",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/flushpostbacks(responses:)",
                "title": "func flushPostbacks(responses: SKANTestPostbackResponseHandler)",
                "type": "method"
              },
              {
                "path": "/documentation/storekittest/skantestpostbackresponsehandler",
                "title": "SKANTestPostbackResponseHandler",
                "type": "typealias"
              },
              {
                "title": "Viewing the developer postback URL",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/developerpostbackurl",
                "title": "var developerPostbackURL: URL?",
                "type": "property"
              },
              {
                "title": "Initializing test sessions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestsession/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/skadtestsession",
            "title": "SKAdTestSession",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating test postbacks",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/init(version:adnetworkidentifier:sourceidentifier:appstoreitemidentifier:sourceappstoreitemidentifier:sourcedomain:fidelitytype:isredownload:didwin:postbackurl:)",
                "title": "init?(version: SKAdTestPostbackVersion, adNetworkIdentifier: String, sourceIdentifier: String, appStoreItemIdentifier: Int, sourceAppStoreItemIdentifier: Int, sourceDomain: String?, fidelityType: Int, isRedownload: Bool, didWin: Bool, postbackURL: String)",
                "type": "init"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/winningpostbacks(withversion:adnetworkidentifier:sourceidentifier:appstoreitemidentifier:sourceappstoreitemidentifier:sourcedomain:fidelitytype:isredownload:postbackurl:)",
                "title": "class func winningPostbacks(withVersion: SKAdTestPostbackVersion, adNetworkIdentifier: String, sourceIdentifier: String, appStoreItemIdentifier: Int, sourceAppStoreItemIdentifier: Int, sourceDomain: String?, fidelityType: Int, isRedownload: Bool, postbackURL: String) -> [SKAdTestPostback]?",
                "type": "method"
              },
              {
                "deprecated": true,
                "path": "/documentation/storekittest/skadtestpostback/init(version:adnetworkidentifier:adcampaignidentifier:appstoreitemidentifier:sourceappstoreitemidentifier:conversionvalue:fidelitytype:isredownload:didwin:postbackurl:)",
                "title": "init?(version: SKAdTestPostbackVersion, adNetworkIdentifier: String, adCampaignIdentifier: Int, appStoreItemIdentifier: Int, sourceAppStoreItemIdentifier: Int, conversionValue: Int, fidelityType: Int, isRedownload: Bool, didWin: Bool, postbackURL: String)",
                "type": "init"
              },
              {
                "title": "Getting the Postback Destination",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/postbackurl",
                "title": "var postbackURL: String",
                "type": "property"
              },
              {
                "title": "Getting general information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/version",
                "title": "var version: SKAdTestPostbackVersion",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/transactionidentifier",
                "title": "var transactionIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/postbacksequenceindex",
                "title": "var postbackSequenceIndex: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/isregistered",
                "title": "var isRegistered: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/isredownload",
                "title": "var isRedownload: Bool",
                "type": "property"
              },
              {
                "title": "Getting advertisement information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/adnetworkidentifier",
                "title": "var adNetworkIdentifier: String",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/appstoreitemidentifier",
                "title": "var appStoreItemIdentifier: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/sourceappstoreitemidentifier",
                "title": "var sourceAppStoreItemIdentifier: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/sourcedomain",
                "title": "var sourceDomain: String?",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/sourceidentifier",
                "title": "var sourceIdentifier: String?",
                "type": "property"
              },
              {
                "title": "Getting conversion information",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/fidelitytype",
                "title": "var fidelityType: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/fineconversionvalue",
                "title": "var fineConversionValue: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/coarseconversionvalue",
                "title": "var coarseConversionValue: SKAdNetwork.CoarseConversionValue?",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/didwin",
                "title": "var didWin: Bool",
                "type": "property"
              },
              {
                "title": "Getting information in earlier versions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/adcampaignidentifier",
                "title": "var adCampaignIdentifier: Int",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostback/conversionvalue",
                "title": "var conversionValue: Int",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/skadtestpostback",
            "title": "SKAdTestPostback",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting Postback Responses",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackresponse/didsucceed",
                "title": "var didSucceed: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackresponse/httpresponse",
                "title": "var httpResponse: HTTPURLResponse?",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackresponse/error",
                "title": "var error: (any Error)?",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/skadtestpostbackresponse",
            "title": "SKAdTestPostbackResponse",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Getting SKAdNetwork Versions",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version4_0",
                "title": "static let version4_0: SKAdTestPostbackVersion",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version3_0",
                "title": "static let version3_0: SKAdTestPostbackVersion",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version2_2",
                "title": "static let version2_2: SKAdTestPostbackVersion",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/version2_1",
                "title": "static let version2_1: SKAdTestPostbackVersion",
                "type": "property"
              },
              {
                "title": "Initializing the Postback Version",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtestpostbackversion/init(rawvalue:)",
                "title": "init(rawValue: String)",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/skadtestpostbackversion",
            "title": "SKAdTestPostbackVersion",
            "type": "struct"
          },
          {
            "title": "Ad impression and postback errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/storekittest/skadtesterrordomain",
            "title": "let SKAdTestErrorDomain: String",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Getting Signature Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/missingsignature",
                "title": "static var missingSignature: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signatureinvalidkey",
                "title": "static var signatureInvalidKey: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signatureinvalidorder",
                "title": "static var signatureInvalidOrder: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingadnetworkid",
                "title": "static var signatureMissingAdNetworkId: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingappadamid",
                "title": "static var signatureMissingAppAdamId: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingfidelitytype",
                "title": "static var signatureMissingFidelityType: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingnonce",
                "title": "static var signatureMissingNonce: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingsourceappadamid",
                "title": "static var signatureMissingSourceAppAdamId: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingsourcedomain",
                "title": "static var signatureMissingSourceDomain: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingsourceidentifier",
                "title": "static var signatureMissingSourceIdentifier: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingtimestamp",
                "title": "static var signatureMissingTimestamp: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signatureunknownerror",
                "title": "static var signatureUnknownError: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signatureverificationfailed",
                "title": "static var signatureVerificationFailed: SKAdTestError.Code",
                "type": "property"
              },
              {
                "title": "Getting Postback Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/excessivepostbacks",
                "title": "static var excessivePostbacks: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidconversionvalue",
                "title": "static var invalidConversionValue: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidpostbackurl",
                "title": "static var invalidPostbackURL: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidrunneruppostback",
                "title": "static var invalidRunnerUpPostback: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidwinningpostbackcount",
                "title": "static var invalidWinningPostbackCount: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/malformedpostbacks",
                "title": "static var malformedPostbacks: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/missingpostbacks",
                "title": "static var missingPostbacks: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/misplacedwinnerpostback",
                "title": "static var misplacedWinnerPostback: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/missingwinningpostback",
                "title": "static var missingWinningPostback: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/nopendingpostbacks",
                "title": "static var noPendingPostbacks: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/unlinkedwinningpostbacks",
                "title": "static var unlinkedWinningPostbacks: SKAdTestError.Code",
                "type": "property"
              },
              {
                "title": "Getting Other Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidversion",
                "title": "static var invalidVersion: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidimpressionid",
                "title": "static var invalidImpressionId: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidsourceappadamid",
                "title": "static var invalidSourceAppAdamId: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidsourcedomain",
                "title": "static var invalidSourceDomain: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidsourceidentifier",
                "title": "static var invalidSourceIdentifier: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/unknownerror",
                "title": "static var unknownError: SKAdTestError.Code",
                "type": "property"
              },
              {
                "title": "Getting Older Errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/invalidcampaignid",
                "title": "static var invalidCampaignId: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/signaturemissingcampaignid",
                "title": "static var signatureMissingCampaignId: SKAdTestError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/conflictingsource",
                "title": "static var conflictingSource: SKAdTestError.Code",
                "type": "property"
              },
              {
                "title": "Initializing the Error Objects",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Signature Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/missingsignature",
                    "title": "case missingSignature",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureinvalidkey",
                    "title": "case signatureInvalidKey",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureinvalidorder",
                    "title": "case signatureInvalidOrder",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingadnetworkid",
                    "title": "case signatureMissingAdNetworkId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingappadamid",
                    "title": "case signatureMissingAppAdamId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingfidelitytype",
                    "title": "case signatureMissingFidelityType",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingnonce",
                    "title": "case signatureMissingNonce",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingsourceappadamid",
                    "title": "case signatureMissingSourceAppAdamId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingsourcedomain",
                    "title": "case signatureMissingSourceDomain",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingsourceidentifier",
                    "title": "case signatureMissingSourceIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingtimestamp",
                    "title": "case signatureMissingTimestamp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureunknownerror",
                    "title": "case signatureUnknownError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureverificationfailed",
                    "title": "case signatureVerificationFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/missingsignature",
                    "title": "case missingSignature",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureinvalidkey",
                    "title": "case signatureInvalidKey",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureinvalidorder",
                    "title": "case signatureInvalidOrder",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingadnetworkid",
                    "title": "case signatureMissingAdNetworkId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingappadamid",
                    "title": "case signatureMissingAppAdamId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingfidelitytype",
                    "title": "case signatureMissingFidelityType",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingnonce",
                    "title": "case signatureMissingNonce",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingsourceappadamid",
                    "title": "case signatureMissingSourceAppAdamId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingsourcedomain",
                    "title": "case signatureMissingSourceDomain",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingsourceidentifier",
                    "title": "case signatureMissingSourceIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingtimestamp",
                    "title": "case signatureMissingTimestamp",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureunknownerror",
                    "title": "case signatureUnknownError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signatureverificationfailed",
                    "title": "case signatureVerificationFailed",
                    "type": "case"
                  },
                  {
                    "title": "Postback Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/excessivepostbacks",
                    "title": "case excessivePostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidconversionvalue",
                    "title": "case invalidConversionValue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidpostbackurl",
                    "title": "case invalidPostbackURL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidrunneruppostback",
                    "title": "case invalidRunnerUpPostback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidwinningpostbackcount",
                    "title": "case invalidWinningPostbackCount",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/malformedpostbacks",
                    "title": "case malformedPostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/missingpostbacks",
                    "title": "case missingPostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/misplacedwinnerpostback",
                    "title": "case misplacedWinnerPostback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/missingwinningpostback",
                    "title": "case missingWinningPostback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/nopendingpostbacks",
                    "title": "case noPendingPostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/unlinkedwinningpostbacks",
                    "title": "case unlinkedWinningPostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/excessivepostbacks",
                    "title": "case excessivePostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidconversionvalue",
                    "title": "case invalidConversionValue",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidpostbackurl",
                    "title": "case invalidPostbackURL",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidrunneruppostback",
                    "title": "case invalidRunnerUpPostback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidwinningpostbackcount",
                    "title": "case invalidWinningPostbackCount",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/malformedpostbacks",
                    "title": "case malformedPostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/missingpostbacks",
                    "title": "case missingPostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/misplacedwinnerpostback",
                    "title": "case misplacedWinnerPostback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/missingwinningpostback",
                    "title": "case missingWinningPostback",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/nopendingpostbacks",
                    "title": "case noPendingPostbacks",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/unlinkedwinningpostbacks",
                    "title": "case unlinkedWinningPostbacks",
                    "type": "case"
                  },
                  {
                    "title": "Other Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidversion",
                    "title": "case invalidVersion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidimpressionid",
                    "title": "case invalidImpressionId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidsourceappadamid",
                    "title": "case invalidSourceAppAdamId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidsourcedomain",
                    "title": "case invalidSourceDomain",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidsourceidentifier",
                    "title": "case invalidSourceIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/unknownerror",
                    "title": "case unknownError",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidversion",
                    "title": "case invalidVersion",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidimpressionid",
                    "title": "case invalidImpressionId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidsourceappadamid",
                    "title": "case invalidSourceAppAdamId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidsourcedomain",
                    "title": "case invalidSourceDomain",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidsourceidentifier",
                    "title": "case invalidSourceIdentifier",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/unknownerror",
                    "title": "case unknownError",
                    "type": "case"
                  },
                  {
                    "title": "Older Errors",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidcampaignid",
                    "title": "case invalidCampaignId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingcampaignid",
                    "title": "case signatureMissingCampaignId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/conflictingsource",
                    "title": "case conflictingSource",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/invalidcampaignid",
                    "title": "case invalidCampaignId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/signaturemissingcampaignid",
                    "title": "case signatureMissingCampaignId",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/conflictingsource",
                    "title": "case conflictingSource",
                    "type": "case"
                  },
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/skadtesterror/code/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  }
                ],
                "path": "/documentation/storekittest/skadtesterror/code",
                "title": "SKAdTestError.Code",
                "type": "enum"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/skadtesterror/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/skadtesterror",
            "title": "SKAdTestError",
            "type": "struct"
          },
          {
            "title": "Structures",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitappstoresyncapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitappstoresyncapi",
            "title": "StoreKitAppStoreSyncAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitapptransactionapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitapptransactionapi",
            "title": "StoreKitAppTransactionAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitloadproductsapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitloadproductsapi",
            "title": "StoreKitLoadProductsAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitmanagesubscriptionsapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitmanagesubscriptionsapi",
            "title": "StoreKitManageSubscriptionsAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitoffercoderedeemapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitoffercoderedeemapi",
            "title": "StoreKitOfferCodeRedeemAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitpurchaseapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitpurchaseapi",
            "title": "StoreKitPurchaseAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitrefundrequestapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitrefundrequestapi",
            "title": "StoreKitRefundRequestAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitsubscriptionstatusapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitsubscriptionstatusapi",
            "title": "StoreKitSubscriptionStatusAPI",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/storekitverificationapi/init()",
                "title": "init()",
                "type": "init"
              }
            ],
            "path": "/documentation/storekittest/storekitverificationapi",
            "title": "StoreKitVerificationAPI",
            "type": "struct"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumerations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/appstoresync/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/appstoresync",
                "title": "SKTestFailures.AppStoreSync",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/apptransaction/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/apptransaction",
                "title": "SKTestFailures.AppTransaction",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/loadproducts/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/loadproducts",
                "title": "SKTestFailures.LoadProducts",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/managesubscriptions/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/managesubscriptions",
                "title": "SKTestFailures.ManageSubscriptions",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/offercoderedeem/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/offercoderedeem",
                "title": "SKTestFailures.OfferCodeRedeem",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/purchase/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/purchase/purchase(_:)",
                    "title": "case purchase(Product.PurchaseError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/purchase",
                "title": "SKTestFailures.Purchase",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/refundrequest/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/refundrequest/refundrequest(_:)",
                    "title": "case refundRequest(Transaction.RefundRequestError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/refundrequest",
                "title": "SKTestFailures.RefundRequest",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/subscriptionstatus/generic(_:)",
                    "title": "case generic(StoreKitError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/subscriptionstatus",
                "title": "SKTestFailures.SubscriptionStatus",
                "type": "enum"
              },
              {
                "children": [
                  {
                    "title": "Enumeration Cases",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/storekittest/sktestfailures/verification/verification(_:)",
                    "title": "case verification(VerificationResult<Any>.VerificationError)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/storekittest/sktestfailures/verification",
                "title": "SKTestFailures.Verification",
                "type": "enum"
              }
            ],
            "path": "/documentation/storekittest/sktestfailures",
            "title": "SKTestFailures",
            "type": "enum"
          },
          {
            "title": "Protocols",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Associated Types",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/failure",
                "title": "Failure",
                "type": "associatedtype"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/appstoresync",
                "title": "static var appStoreSync: StoreKitAppStoreSyncAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/apptransaction",
                "title": "static var appTransaction: StoreKitAppTransactionAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/loadproducts",
                "title": "static var loadProducts: StoreKitLoadProductsAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/managesubscriptions",
                "title": "static var manageSubscriptions: StoreKitManageSubscriptionsAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/offercoderedeem",
                "title": "static var offerCodeRedeem: StoreKitOfferCodeRedeemAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/purchase",
                "title": "static var purchase: StoreKitPurchaseAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/refundrequest",
                "title": "static var refundRequest: StoreKitRefundRequestAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/subscriptionstatus",
                "title": "static var subscriptionStatus: StoreKitSubscriptionStatusAPI",
                "type": "property"
              },
              {
                "path": "/documentation/storekittest/failablestorekitapi/verification",
                "title": "static var verification: StoreKitVerificationAPI",
                "type": "property"
              }
            ],
            "path": "/documentation/storekittest/failablestorekitapi",
            "title": "FailableStoreKitAPI",
            "type": "protocol"
          },
          {
            "path": "/documentation/storekittest/sktestfailure",
            "title": "SKTestFailure",
            "type": "protocol"
          }
        ],
        "path": "/documentation/storekittest",
        "title": "StoreKit Test",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
