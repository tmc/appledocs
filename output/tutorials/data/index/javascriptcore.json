{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Execution Environment",
            "type": "groupMarker"
          },
          {
            "title": "JavaScript Code",
            "type": "groupMarker"
          },
          {
            "title": "Native Code",
            "type": "groupMarker"
          },
          {
            "title": "C API",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "JavaScriptCore Engine Interface",
                "type": "groupMarker"
              },
              {
                "title": "JavaScript Data Types",
                "type": "groupMarker"
              },
              {
                "title": "Script Evaluation",
                "type": "groupMarker"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/javascriptcore/c-javascriptcore-api",
            "title": "C JavaScriptCore API",
            "type": "collection"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              }
            ],
            "path": "/documentation/javascriptcore/javascriptcore-constants",
            "title": "JavaScriptCore Constants",
            "type": "collection"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "title": "Functions",
            "type": "groupMarker"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/javascriptcore",
        "title": "JavaScriptCore",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Execution Environment",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a JavaScript Virtual Machine",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvirtualmachine/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "title": "Managing Memory for Bridged Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvirtualmachine/addmanagedreference(_:withowner:)",
                "title": "- addManagedReference:withOwner:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvirtualmachine/removemanagedreference(_:withowner:)",
                "title": "- removeManagedReference:withOwner:",
                "type": "method"
              }
            ],
            "path": "/documentation/javascriptcore/jsvirtualmachine",
            "title": "JSVirtualMachine",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating JavaScript contexts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/init()",
                "title": "- init",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/init(virtualmachine:)",
                "title": "- initWithVirtualMachine:",
                "type": "method"
              },
              {
                "title": "Making JavaScript context inspectable",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontext/name",
                    "title": "name",
                    "type": "property"
                  }
                ],
                "path": "/documentation/javascriptcore/jscontext/isinspectable",
                "title": "inspectable",
                "type": "property"
              },
              {
                "title": "Evaluating scripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/evaluatescript(_:)",
                "title": "- evaluateScript:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/evaluatescript(_:withsourceurl:)",
                "title": "- evaluateScript:withSourceURL:",
                "type": "method"
              },
              {
                "title": "Inspecting callback state in a running context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/current()",
                "title": "+ currentContext",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/currentcallee()",
                "title": "+ currentCallee",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/currentthis()",
                "title": "+ currentThis",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/currentarguments()",
                "title": "+ currentArguments",
                "type": "method"
              },
              {
                "title": "Working with JavaScript global state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/globalobject",
                "title": "globalObject",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/exception",
                "title": "exception",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/exceptionhandler",
                "title": "exceptionHandler",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/virtualmachine",
                "title": "virtualMachine",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/name",
                "title": "name",
                "type": "property"
              },
              {
                "title": "Accessing JavaScript global state with subscripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/objectforkeyedsubscript(_:)",
                "title": "- objectForKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/setobject(_:forkeyedsubscript:)",
                "title": "- setObject:forKeyedSubscript:",
                "type": "method"
              },
              {
                "title": "Working with the C JavaScriptCore API",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/jsglobalcontextref",
                "title": "JSGlobalContextRef",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/init(jsglobalcontextref:)",
                "title": "+ contextWithJSGlobalContextRef:",
                "type": "method"
              }
            ],
            "path": "/documentation/javascriptcore/jscontext",
            "title": "JSContext",
            "type": "class"
          },
          {
            "title": "JavaScript Code",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating JavaScript Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(object:in:)",
                "title": "+ valueWithObject:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(bool:in:)",
                "title": "+ valueWithBool:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(double:in:)",
                "title": "+ valueWithDouble:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(int32:in:)",
                "title": "+ valueWithInt32:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(uint32:in:)",
                "title": "+ valueWithUInt32:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newobjectin:)",
                "title": "+ valueWithNewObjectInContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newarrayin:)",
                "title": "+ valueWithNewArrayInContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newregularexpressionfrompattern:flags:in:)",
                "title": "+ valueWithNewRegularExpressionFromPattern:flags:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newerrorfrommessage:in:)",
                "title": "+ valueWithNewErrorFromMessage:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(undefinedin:)",
                "title": "+ valueWithUndefinedInContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(nullin:)",
                "title": "+ valueWithNullInContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(point:incontext:)",
                "title": "+ valueWithPoint:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(range:incontext:)",
                "title": "+ valueWithRange:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(rect:incontext:)",
                "title": "+ valueWithRect:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(size:incontext:)",
                "title": "+ valueWithSize:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newsymbolfromdescription:in:)",
                "title": "+ valueWithNewSymbolFromDescription:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newpromisein:fromexecutor:)",
                "title": "+ valueWithNewPromiseInContext:fromExecutor:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newpromiserejectedwithreason:in:)",
                "title": "+ valueWithNewPromiseRejectedWithReason:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newpromiseresolvedwithresult:in:)",
                "title": "+ valueWithNewPromiseResolvedWithResult:inContext:",
                "type": "method"
              },
              {
                "title": "Reading and Converting JavaScript Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toobject()",
                "title": "- toObject",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toobjectof(_:)",
                "title": "- toObjectOfClass:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tobool()",
                "title": "- toBool",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/todouble()",
                "title": "- toDouble",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toint32()",
                "title": "- toInt32",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/touint32()",
                "title": "- toUInt32",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tonumber()",
                "title": "- toNumber",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tostring()",
                "title": "- toString",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/todate()",
                "title": "- toDate",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toarray()",
                "title": "- toArray",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/todictionary()",
                "title": "- toDictionary",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/topoint()",
                "title": "- toPoint",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/torange()",
                "title": "- toRange",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/torect()",
                "title": "- toRect",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tosize()",
                "title": "- toSize",
                "type": "method"
              },
              {
                "title": "Determining the Type of a JavaScript Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isundefined",
                "title": "isUndefined",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isnull",
                "title": "isNull",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isboolean",
                "title": "isBoolean",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isnumber",
                "title": "isNumber",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isstring",
                "title": "isString",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isobject",
                "title": "isObject",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isarray",
                "title": "isArray",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isdate",
                "title": "isDate",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/issymbol",
                "title": "isSymbol",
                "type": "property"
              },
              {
                "title": "Comparing JavaScript Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isequal(to:)",
                "title": "- isEqualToObject:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isequalwithtypecoercion(to:)",
                "title": "- isEqualWithTypeCoercionToObject:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isinstance(of:)",
                "title": "- isInstanceOf:",
                "type": "method"
              },
              {
                "title": "Working with Function and Constructor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/call(witharguments:)",
                "title": "- callWithArguments:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/construct(witharguments:)",
                "title": "- constructWithArguments:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/invokemethod(_:witharguments:)",
                "title": "- invokeMethod:withArguments:",
                "type": "method"
              },
              {
                "title": "Working with Container Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/defineproperty(_:descriptor:)",
                "title": "- defineProperty:descriptor:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/hasproperty(_:)",
                "title": "- hasProperty:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/deleteproperty(_:)",
                "title": "- deleteProperty:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/objectatindexedsubscript(_:)",
                    "title": "- objectAtIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/atindex(_:)",
                "title": "- valueAtIndex:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/setobject(_:atindexedsubscript:)",
                    "title": "- setObject:atIndexedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/setvalue(_:at:)",
                "title": "- setValue:atIndex:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/objectforkeyedsubscript(_:)",
                    "title": "- objectForKeyedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/forproperty(_:)",
                "title": "- valueForProperty:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/setobject(_:forkeyedsubscript:)",
                    "title": "- setObject:forKeyedSubscript:",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/setvalue(_:forproperty:)",
                "title": "- setValue:forProperty:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalueproperty",
                "title": "JSValueProperty",
                "type": "typealias"
              },
              {
                "title": "Accessing a Value’s JavaScript Context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/context",
                "title": "context",
                "type": "property"
              },
              {
                "title": "Accessing Values with Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/objectatindexedsubscript(_:)",
                "title": "- objectAtIndexedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/setobject(_:atindexedsubscript:)",
                "title": "- setObject:atIndexedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/objectforkeyedsubscript(_:)",
                "title": "- objectForKeyedSubscript:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/setobject(_:forkeyedsubscript:)",
                "title": "- setObject:forKeyedSubscript:",
                "type": "method"
              },
              {
                "title": "Working with the C JavaScriptCore API",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/jsvalueref",
                "title": "JSValueRef",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(jsvalueref:incontext:)",
                "title": "+ valueWithJSValueRef:inContext:",
                "type": "method"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorwritablekey",
                    "title": "JSPropertyDescriptorWritableKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorenumerablekey",
                    "title": "JSPropertyDescriptorEnumerableKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorconfigurablekey",
                    "title": "JSPropertyDescriptorConfigurableKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorvaluekey",
                    "title": "JSPropertyDescriptorValueKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorgetkey",
                    "title": "JSPropertyDescriptorGetKey",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorsetkey",
                    "title": "JSPropertyDescriptorSetKey",
                    "type": "var"
                  }
                ],
                "path": "/documentation/javascriptcore/property-descriptor-keys",
                "title": "Property Descriptor Keys",
                "type": "collection"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isbigint",
                "title": "isBigInt",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-35b2t",
                "title": "- compareDouble:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-5w184",
                "title": "- compareJSValue:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-64n3k",
                "title": "- compareUInt64:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-9d4zq",
                "title": "- compareInt64:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toint64()",
                "title": "- toInt64",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/touint64()",
                "title": "- toUInt64",
                "type": "method"
              },
              {
                "title": "Type Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-1f0xs",
                "title": "+ valueWithNewBigIntFromString:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-7worq",
                "title": "+ valueWithNewBigIntFromUInt64:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-8l9iv",
                "title": "+ valueWithNewBigIntFromInt64:inContext:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-r38z",
                "title": "+ valueWithNewBigIntFromDouble:inContext:",
                "type": "method"
              }
            ],
            "path": "/documentation/javascriptcore/jsvalue",
            "title": "JSValue",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Managed Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsmanagedvalue/init(value:)",
                "title": "- initWithValue:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsmanagedvalue/managedvaluewithvalue:",
                "title": "+ managedValueWithValue:",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsmanagedvalue/init(value:andowner:)",
                "title": "+ managedValueWithValue:andOwner:",
                "type": "method"
              },
              {
                "title": "Accessing the Managed Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsmanagedvalue/value",
                "title": "value",
                "type": "property"
              }
            ],
            "path": "/documentation/javascriptcore/jsmanagedvalue",
            "title": "JSManagedValue",
            "type": "class"
          },
          {
            "title": "Native Code",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/javascriptcore/jsexport",
            "title": "JSExport",
            "type": "protocol"
          },
          {
            "title": "C API",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "JavaScriptCore Engine Interface",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Content Group",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgetgroup(_:)",
                    "title": "JSContextGetGroup",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jscontextgroupref",
                "title": "JSContextGroupRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating a Context Group",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgroupcreate()",
                    "title": "JSContextGroupCreate",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgroupretain(_:)",
                    "title": "JSContextGroupRetain",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgrouprelease(_:)",
                    "title": "JSContextGroupRelease",
                    "type": "func"
                  },
                  {
                    "title": "Accessing the Global Context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgetglobalcontext(_:)",
                    "title": "JSContextGetGlobalContext",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jscontextref",
                "title": "JSContextRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating a global context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextcreate(_:)",
                    "title": "JSGlobalContextCreate",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextcreateingroup(_:_:)",
                    "title": "JSGlobalContextCreateInGroup",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextretain(_:)",
                    "title": "JSGlobalContextRetain",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextrelease(_:)",
                    "title": "JSGlobalContextRelease",
                    "type": "func"
                  },
                  {
                    "title": "Managing the context’s name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextcopyname(_:)",
                    "title": "JSGlobalContextCopyName",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextsetname(_:_:)",
                    "title": "JSGlobalContextSetName",
                    "type": "func"
                  },
                  {
                    "title": "Making a context inspectable",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextcopyname(_:)",
                        "title": "JSGlobalContextCopyName",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextsetname(_:_:)",
                        "title": "JSGlobalContextSetName",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsglobalcontextisinspectable(_:)",
                    "title": "JSGlobalContextIsInspectable",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextcopyname(_:)",
                        "title": "JSGlobalContextCopyName",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextsetname(_:_:)",
                        "title": "JSGlobalContextSetName",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsglobalcontextsetinspectable(_:_:)",
                    "title": "JSGlobalContextSetInspectable",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsglobalcontextref",
                "title": "JSGlobalContextRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating a JavaScript String",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcreatewithcharacters(_:_:)",
                    "title": "JSStringCreateWithCharacters",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jschar",
                    "title": "JSChar",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcreatewithutf8cstring(_:)",
                    "title": "JSStringCreateWithUTF8CString",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringretain(_:)",
                    "title": "JSStringRetain",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringrelease(_:)",
                    "title": "JSStringRelease",
                    "type": "func"
                  },
                  {
                    "title": "Accessing JavaScript String Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetlength(_:)",
                    "title": "JSStringGetLength",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetcharactersptr(_:)",
                    "title": "JSStringGetCharactersPtr",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetmaximumutf8cstringsize(_:)",
                    "title": "JSStringGetMaximumUTF8CStringSize",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetutf8cstring(_:_:_:)",
                    "title": "JSStringGetUTF8CString",
                    "type": "func"
                  },
                  {
                    "title": "Comparing JavaScript Strings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringisequal(_:_:)",
                    "title": "JSStringIsEqual",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringisequaltoutf8cstring(_:_:)",
                    "title": "JSStringIsEqualToUTF8CString",
                    "type": "func"
                  },
                  {
                    "title": "Converting to and from Core Foundation Strings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcreatewithcfstring(_:)",
                    "title": "JSStringCreateWithCFString",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcopycfstring(_:_:)",
                    "title": "JSStringCopyCFString",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsstringref",
                "title": "JSStringRef",
                "type": "typealias"
              },
              {
                "path": "/documentation/javascriptcore/jsclassref",
                "title": "JSClassRef",
                "type": "typealias"
              },
              {
                "title": "JavaScript Data Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Testing the Value’s Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluegettype(_:_:)",
                    "title": "JSValueGetType",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisundefined(_:_:)",
                    "title": "JSValueIsUndefined",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisnull(_:_:)",
                    "title": "JSValueIsNull",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisboolean(_:_:)",
                    "title": "JSValueIsBoolean",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisnumber(_:_:)",
                    "title": "JSValueIsNumber",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisstring(_:_:)",
                    "title": "JSValueIsString",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueissymbol(_:_:)",
                    "title": "JSValueIsSymbol",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisobject(_:_:)",
                    "title": "JSValueIsObject",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisobjectofclass(_:_:_:)",
                    "title": "JSValueIsObjectOfClass",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisarray(_:_:)",
                    "title": "JSValueIsArray",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisdate(_:_:)",
                    "title": "JSValueIsDate",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluegettypedarraytype(_:_:_:)",
                    "title": "JSValueGetTypedArrayType",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypeundefined",
                        "title": "kJSTypeUndefined",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypenull",
                        "title": "kJSTypeNull",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypeboolean",
                        "title": "kJSTypeBoolean",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypenumber",
                        "title": "kJSTypeNumber",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypestring",
                        "title": "kJSTypeString",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypeobject",
                        "title": "kJSTypeObject",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypesymbol",
                        "title": "kJSTypeSymbol",
                        "type": "case"
                      },
                      {
                        "title": "Enumeration Cases",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypebigint",
                        "title": "kJSTypeBigInt",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jstype",
                    "title": "JSType",
                    "type": "enum"
                  },
                  {
                    "title": "Creating Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakeundefined(_:)",
                    "title": "JSValueMakeUndefined",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakenull(_:)",
                    "title": "JSValueMakeNull",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakeboolean(_:_:)",
                    "title": "JSValueMakeBoolean",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakenumber(_:_:)",
                    "title": "JSValueMakeNumber",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakestring(_:_:)",
                    "title": "JSValueMakeString",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakesymbol(_:_:)",
                    "title": "JSValueMakeSymbol",
                    "type": "func"
                  },
                  {
                    "title": "Converting to Primitive Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetoboolean(_:_:)",
                    "title": "JSValueToBoolean",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetonumber(_:_:_:)",
                    "title": "JSValueToNumber",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetostringcopy(_:_:_:)",
                    "title": "JSValueToStringCopy",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetoobject(_:_:_:)",
                    "title": "JSValueToObject",
                    "type": "func"
                  },
                  {
                    "title": "Converting to and from JSON-Formatted Strings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakefromjsonstring(_:_:)",
                    "title": "JSValueMakeFromJSONString",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluecreatejsonstring(_:_:_:_:)",
                    "title": "JSValueCreateJSONString",
                    "type": "func"
                  },
                  {
                    "title": "Comparing Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisequal(_:_:_:_:)",
                    "title": "JSValueIsEqual",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisstrictequal(_:_:_:)",
                    "title": "JSValueIsStrictEqual",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisinstanceofconstructor(_:_:_:_:)",
                    "title": "JSValueIsInstanceOfConstructor",
                    "type": "func"
                  },
                  {
                    "title": "Supporting Garbage Collection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueprotect(_:_:)",
                    "title": "JSValueProtect",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueunprotect(_:_:)",
                    "title": "JSValueUnprotect",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalueref",
                "title": "JSValueRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Global Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgetglobalobject(_:)",
                    "title": "JSContextGetGlobalObject",
                    "type": "func"
                  },
                  {
                    "title": "Working with Objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectcallasconstructor(_:_:_:_:_:)",
                    "title": "JSObjectCallAsConstructor",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectcallasfunction(_:_:_:_:_:_:)",
                    "title": "JSObjectCallAsFunction",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectcopypropertynames(_:_:)",
                    "title": "JSObjectCopyPropertyNames",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectdeleteproperty(_:_:_:_:)",
                    "title": "JSObjectDeleteProperty",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetprivate(_:)",
                    "title": "JSObjectGetPrivate",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetproperty(_:_:_:_:)",
                    "title": "JSObjectGetProperty",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetpropertyatindex(_:_:_:_:)",
                    "title": "JSObjectGetPropertyAtIndex",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetprototype(_:_:)",
                    "title": "JSObjectGetPrototype",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjecthasproperty(_:_:_:)",
                    "title": "JSObjectHasProperty",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectisconstructor(_:_:)",
                    "title": "JSObjectIsConstructor",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectisfunction(_:_:)",
                    "title": "JSObjectIsFunction",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmake(_:_:_:)",
                    "title": "JSObjectMake",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakearray(_:_:_:_:)",
                    "title": "JSObjectMakeArray",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakeconstructor(_:_:_:)",
                    "title": "JSObjectMakeConstructor",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakedate(_:_:_:_:)",
                    "title": "JSObjectMakeDate",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakeerror(_:_:_:_:)",
                    "title": "JSObjectMakeError",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakefunction(_:_:_:_:_:_:_:_:)",
                    "title": "JSObjectMakeFunction",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakefunctionwithcallback(_:_:_:)",
                    "title": "JSObjectMakeFunctionWithCallback",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakeregexp(_:_:_:_:)",
                    "title": "JSObjectMakeRegExp",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetprivate(_:_:)",
                    "title": "JSObjectSetPrivate",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetproperty(_:_:_:_:_:_:)",
                    "title": "JSObjectSetProperty",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetpropertyatindex(_:_:_:_:_:)",
                    "title": "JSObjectSetPropertyAtIndex",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetpropertyforkey(_:_:_:_:)",
                    "title": "JSObjectGetPropertyForKey",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetprototype(_:_:_:)",
                    "title": "JSObjectSetPrototype",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectdeletepropertyforkey(_:_:_:_:)",
                    "title": "JSObjectDeletePropertyForKey",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjecthaspropertyforkey(_:_:_:_:)",
                    "title": "JSObjectHasPropertyForKey",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetpropertyforkey(_:_:_:_:_:_:)",
                    "title": "JSObjectSetPropertyForKey",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakedeferredpromise(_:_:_:_:)",
                    "title": "JSObjectMakeDeferredPromise",
                    "type": "func"
                  },
                  {
                    "title": "Working with Classes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsclasscreate(_:)",
                    "title": "JSClassCreate",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsclassrelease(_:)",
                    "title": "JSClassRelease",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsclassretain(_:)",
                    "title": "JSClassRetain",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/kjsclassdefinitionempty",
                    "title": "kJSClassDefinitionEmpty",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a Class Definition",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassattributes",
                        "title": "JSClassAttributes",
                        "type": "typealias"
                      },
                      {
                        "title": "Managing Class Information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/parentclass",
                        "title": "parentClass",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/classname",
                        "title": "className",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/version",
                        "title": "version",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/attributes",
                        "title": "attributes",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/staticvalues",
                        "title": "staticValues",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing Static Value Information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/name",
                            "title": "name",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/getproperty",
                            "title": "getProperty",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/setproperty",
                            "title": "setProperty",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/attributes",
                            "title": "attributes",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/javascriptcore/jsstaticvalue",
                        "title": "JSStaticValue",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/staticfunctions",
                        "title": "staticFunctions",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Accessing Static Function Information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/name",
                            "title": "name",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/callasfunction",
                            "title": "callAsFunction",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/attributes",
                            "title": "attributes",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/javascriptcore/jsstaticfunction",
                        "title": "JSStaticFunction",
                        "type": "struct"
                      },
                      {
                        "title": "Managing Callbacks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/initialize",
                        "title": "initialize",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectinitializecallback",
                        "title": "JSObjectInitializeCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/finalize",
                        "title": "finalize",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectfinalizecallback",
                        "title": "JSObjectFinalizeCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/hasproperty",
                        "title": "hasProperty",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjecthaspropertycallback",
                        "title": "JSObjectHasPropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/getproperty",
                        "title": "getProperty",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectgetpropertycallback",
                        "title": "JSObjectGetPropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/setproperty",
                        "title": "setProperty",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectsetpropertycallback",
                        "title": "JSObjectSetPropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/deleteproperty",
                        "title": "deleteProperty",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectdeletepropertycallback",
                        "title": "JSObjectDeletePropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/getpropertynames",
                        "title": "getPropertyNames",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectgetpropertynamescallback",
                        "title": "JSObjectGetPropertyNamesCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/callasfunction",
                        "title": "callAsFunction",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectcallasfunctioncallback",
                        "title": "JSObjectCallAsFunctionCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/hasinstance",
                        "title": "hasInstance",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjecthasinstancecallback",
                        "title": "JSObjectHasInstanceCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/callasconstructor",
                        "title": "callAsConstructor",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectcallasconstructorcallback",
                        "title": "JSObjectCallAsConstructorCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/converttotype",
                        "title": "convertToType",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectconverttotypecallback",
                        "title": "JSObjectConvertToTypeCallback",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsclassdefinition",
                    "title": "JSClassDefinition",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjsclassattributenone",
                        "title": "kJSClassAttributeNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjsclassattributenoautomaticprototype",
                        "title": "kJSClassAttributeNoAutomaticPrototype",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsclassattribute",
                    "title": "JSClassAttribute",
                    "type": "collection"
                  },
                  {
                    "title": "Working with Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynameaccumulatoraddname(_:_:)",
                    "title": "JSPropertyNameAccumulatorAddName",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearraygetcount(_:)",
                    "title": "JSPropertyNameArrayGetCount",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearraygetnameatindex(_:_:)",
                    "title": "JSPropertyNameArrayGetNameAtIndex",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearrayrelease(_:)",
                    "title": "JSPropertyNameArrayRelease",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearrayretain(_:)",
                    "title": "JSPropertyNameArrayRetain",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertyattributes",
                    "title": "JSPropertyAttributes",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributenone",
                        "title": "kJSPropertyAttributeNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributereadonly",
                        "title": "kJSPropertyAttributeReadOnly",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributedontenum",
                        "title": "kJSPropertyAttributeDontEnum",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributedontdelete",
                        "title": "kJSPropertyAttributeDontDelete",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jspropertyattribute",
                    "title": "JSPropertyAttribute",
                    "type": "collection"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearrayref",
                    "title": "JSPropertyNameArrayRef",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynameaccumulatorref",
                    "title": "JSPropertyNameAccumulatorRef",
                    "type": "typealias"
                  },
                  {
                    "title": "Creating a Typed Array",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarray(_:_:_:_:)",
                    "title": "JSObjectMakeTypedArray",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarraywithbytesnocopy(_:_:_:_:_:_:_:)",
                    "title": "JSObjectMakeTypedArrayWithBytesNoCopy",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarraywitharraybuffer(_:_:_:_:)",
                    "title": "JSObjectMakeTypedArrayWithArrayBuffer",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarraywitharraybufferandoffset(_:_:_:_:_:_:)",
                    "title": "JSObjectMakeTypedArrayWithArrayBufferAndOffset",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypenone",
                        "title": "kJSTypedArrayTypeNone",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypearraybuffer",
                        "title": "kJSTypedArrayTypeArrayBuffer",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeint8array",
                        "title": "kJSTypedArrayTypeInt8Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeint16array",
                        "title": "kJSTypedArrayTypeInt16Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeint32array",
                        "title": "kJSTypedArrayTypeInt32Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypebigint64array",
                        "title": "kJSTypedArrayTypeBigInt64Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint8array",
                        "title": "kJSTypedArrayTypeUint8Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint8clampedarray",
                        "title": "kJSTypedArrayTypeUint8ClampedArray",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint16array",
                        "title": "kJSTypedArrayTypeUint16Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint32array",
                        "title": "kJSTypedArrayTypeUint32Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypebiguint64array",
                        "title": "kJSTypedArrayTypeBigUint64Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypefloat32array",
                        "title": "kJSTypedArrayTypeFloat32Array",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypefloat64array",
                        "title": "kJSTypedArrayTypeFloat64Array",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jstypedarraytype",
                    "title": "JSTypedArrayType",
                    "type": "enum"
                  },
                  {
                    "path": "/documentation/javascriptcore/jstypedarraybytesdeallocator",
                    "title": "JSTypedArrayBytesDeallocator",
                    "type": "typealias"
                  },
                  {
                    "title": "Accessing Typed Array Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybytesptr(_:_:_:)",
                    "title": "JSObjectGetTypedArrayBytesPtr",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraylength(_:_:_:)",
                    "title": "JSObjectGetTypedArrayLength",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybytelength(_:_:_:)",
                    "title": "JSObjectGetTypedArrayByteLength",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybyteoffset(_:_:_:)",
                    "title": "JSObjectGetTypedArrayByteOffset",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybuffer(_:_:_:)",
                    "title": "JSObjectGetTypedArrayBuffer",
                    "type": "func"
                  },
                  {
                    "title": "Working with Array Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakearraybufferwithbytesnocopy(_:_:_:_:_:_:)",
                    "title": "JSObjectMakeArrayBufferWithBytesNoCopy",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetarraybufferbytelength(_:_:_:)",
                    "title": "JSObjectGetArrayBufferByteLength",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetarraybufferbytesptr(_:_:_:)",
                    "title": "JSObjectGetArrayBufferBytesPtr",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsobjectref",
                "title": "JSObjectRef",
                "type": "typealias"
              },
              {
                "title": "Script Evaluation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscheckscriptsyntax(_:_:_:_:_:)",
                "title": "JSCheckScriptSyntax",
                "type": "func"
              },
              {
                "path": "/documentation/javascriptcore/jsevaluatescript(_:_:_:_:_:_:)",
                "title": "JSEvaluateScript",
                "type": "func"
              },
              {
                "path": "/documentation/javascriptcore/jsgarbagecollect(_:)",
                "title": "JSGarbageCollect",
                "type": "func"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsc_objc_api_enabled",
                "title": "JSC_OBJC_API_ENABLED",
                "type": "macro"
              }
            ],
            "path": "/documentation/javascriptcore/c-javascriptcore-api",
            "title": "C JavaScriptCore API",
            "type": "collection"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/kjstypedarraytypebigint64array",
                "title": "kJSTypedArrayTypeBigInt64Array",
                "type": "case"
              },
              {
                "path": "/documentation/javascriptcore/kjstypedarraytypebiguint64array",
                "title": "kJSTypedArrayTypeBigUint64Array",
                "type": "case"
              }
            ],
            "path": "/documentation/javascriptcore/javascriptcore-constants",
            "title": "JavaScriptCore Constants",
            "type": "collection"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/javascriptcore/kjstypebigint",
            "title": "kJSTypeBigInt",
            "type": "case"
          },
          {
            "title": "Functions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithdouble(_:_:_:)",
            "title": "JSBigIntCreateWithDouble",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithint64(_:_:_:)",
            "title": "JSBigIntCreateWithInt64",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithstring(_:_:_:)",
            "title": "JSBigIntCreateWithString",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithuint64(_:_:_:)",
            "title": "JSBigIntCreateWithUInt64",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecompare(_:_:_:_:)",
            "title": "JSValueCompare",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecomparedouble(_:_:_:_:)",
            "title": "JSValueCompareDouble",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecompareint64(_:_:_:_:)",
            "title": "JSValueCompareInt64",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecompareuint64(_:_:_:_:)",
            "title": "JSValueCompareUInt64",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvalueisbigint(_:_:)",
            "title": "JSValueIsBigInt",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetoint32(_:_:_:)",
            "title": "JSValueToInt32",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetoint64(_:_:_:)",
            "title": "JSValueToInt64",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetouint32(_:_:_:)",
            "title": "JSValueToUInt32",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetouint64(_:_:_:)",
            "title": "JSValueToUInt64",
            "type": "func"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/equal",
                "title": "kJSRelationConditionEqual",
                "type": "case"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/greaterthan",
                "title": "kJSRelationConditionGreaterThan",
                "type": "case"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/lessthan",
                "title": "kJSRelationConditionLessThan",
                "type": "case"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/undefined",
                "title": "kJSRelationConditionUndefined",
                "type": "case"
              }
            ],
            "path": "/documentation/javascriptcore/jsrelationcondition",
            "title": "JSRelationCondition",
            "type": "enum"
          }
        ],
        "path": "/documentation/javascriptcore",
        "title": "JavaScriptCore",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Execution Environment",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a JavaScript Virtual Machine",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvirtualmachine/init()",
                "title": "init!()",
                "type": "init"
              },
              {
                "title": "Managing Memory for Bridged Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvirtualmachine/addmanagedreference(_:withowner:)",
                "title": "func addManagedReference(Any!, withOwner: Any!)",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvirtualmachine/removemanagedreference(_:withowner:)",
                "title": "func removeManagedReference(Any!, withOwner: Any!)",
                "type": "method"
              }
            ],
            "path": "/documentation/javascriptcore/jsvirtualmachine",
            "title": "JSVirtualMachine",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating JavaScript contexts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/init()",
                "title": "init!()",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/init(virtualmachine:)",
                "title": "init!(virtualMachine: JSVirtualMachine!)",
                "type": "init"
              },
              {
                "title": "Making JavaScript context inspectable",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontext/name",
                    "title": "var name: String!",
                    "type": "property"
                  }
                ],
                "path": "/documentation/javascriptcore/jscontext/isinspectable",
                "title": "var isInspectable: Bool",
                "type": "property"
              },
              {
                "title": "Evaluating scripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/evaluatescript(_:)",
                "title": "func evaluateScript(String!) -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/evaluatescript(_:withsourceurl:)",
                "title": "func evaluateScript(String!, withSourceURL: URL!) -> JSValue!",
                "type": "method"
              },
              {
                "title": "Inspecting callback state in a running context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/current()",
                "title": "class func current() -> JSContext!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/currentcallee()",
                "title": "class func currentCallee() -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/currentthis()",
                "title": "class func currentThis() -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/currentarguments()",
                "title": "class func currentArguments() -> [Any]!",
                "type": "method"
              },
              {
                "title": "Working with JavaScript global state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/globalobject",
                "title": "var globalObject: JSValue!",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/exception",
                "title": "var exception: JSValue!",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/exceptionhandler",
                "title": "var exceptionHandler: ((JSContext?, JSValue?) -> Void)!",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/virtualmachine",
                "title": "var virtualMachine: JSVirtualMachine!",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/name",
                "title": "var name: String!",
                "type": "property"
              },
              {
                "title": "Accessing JavaScript global state with subscripts",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/objectforkeyedsubscript(_:)",
                "title": "func objectForKeyedSubscript(Any!) -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/setobject(_:forkeyedsubscript:)",
                "title": "func setObject(Any!, forKeyedSubscript: (any NSCopying & NSObjectProtocol)!)",
                "type": "method"
              },
              {
                "title": "Working with the C JavaScriptCore API",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/jsglobalcontextref",
                "title": "var jsGlobalContextRef: JSGlobalContextRef!",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jscontext/init(jsglobalcontextref:)",
                "title": "init!(JSGlobalContextRef: JSGlobalContextRef!)",
                "type": "init"
              }
            ],
            "path": "/documentation/javascriptcore/jscontext",
            "title": "JSContext",
            "type": "class"
          },
          {
            "title": "JavaScript Code",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating JavaScript Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(object:in:)",
                "title": "init!(object: Any!, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(bool:in:)",
                "title": "init!(bool: Bool, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(double:in:)",
                "title": "init!(double: Double, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(int32:in:)",
                "title": "init!(int32: Int32, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(uint32:in:)",
                "title": "init!(uInt32: UInt32, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newobjectin:)",
                "title": "init!(newObjectIn: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newarrayin:)",
                "title": "init!(newArrayIn: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newregularexpressionfrompattern:flags:in:)",
                "title": "init!(newRegularExpressionFromPattern: String!, flags: String!, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newerrorfrommessage:in:)",
                "title": "init!(newErrorFromMessage: String!, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(undefinedin:)",
                "title": "init!(undefinedIn: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(nullin:)",
                "title": "init!(nullIn: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(point:incontext:)",
                "title": "init!(point: CGPoint, inContext: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(range:incontext:)",
                "title": "init!(range: NSRange, inContext: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(rect:incontext:)",
                "title": "init!(rect: CGRect, inContext: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(size:incontext:)",
                "title": "init!(size: CGSize, inContext: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newsymbolfromdescription:in:)",
                "title": "init!(newSymbolFromDescription: String!, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newpromisein:fromexecutor:)",
                "title": "init!(newPromiseIn: JSContext!, fromExecutor: ((JSValue?, JSValue?) -> Void)!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newpromiserejectedwithreason:in:)",
                "title": "init!(newPromiseRejectedWithReason: Any!, in: JSContext!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newpromiseresolvedwithresult:in:)",
                "title": "init!(newPromiseResolvedWithResult: Any!, in: JSContext!)",
                "type": "init"
              },
              {
                "title": "Reading and Converting JavaScript Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toobject()",
                "title": "func toObject() -> Any!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toobjectof(_:)",
                "title": "func toObjectOf(AnyClass!) -> Any!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tobool()",
                "title": "func toBool() -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/todouble()",
                "title": "func toDouble() -> Double",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toint32()",
                "title": "func toInt32() -> Int32",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/touint32()",
                "title": "func toUInt32() -> UInt32",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tonumber()",
                "title": "func toNumber() -> NSNumber!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tostring()",
                "title": "func toString() -> String!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/todate()",
                "title": "func toDate() -> Date!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toarray()",
                "title": "func toArray() -> [Any]!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/todictionary()",
                "title": "func toDictionary() -> [AnyHashable : Any]!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/topoint()",
                "title": "func toPoint() -> CGPoint",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/torange()",
                "title": "func toRange() -> NSRange",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/torect()",
                "title": "func toRect() -> CGRect",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/tosize()",
                "title": "func toSize() -> CGSize",
                "type": "method"
              },
              {
                "title": "Determining the Type of a JavaScript Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isundefined",
                "title": "var isUndefined: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isnull",
                "title": "var isNull: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isboolean",
                "title": "var isBoolean: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isnumber",
                "title": "var isNumber: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isstring",
                "title": "var isString: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isobject",
                "title": "var isObject: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isarray",
                "title": "var isArray: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isdate",
                "title": "var isDate: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/issymbol",
                "title": "var isSymbol: Bool",
                "type": "property"
              },
              {
                "title": "Comparing JavaScript Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isequal(to:)",
                "title": "func isEqual(to: Any!) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isequalwithtypecoercion(to:)",
                "title": "func isEqualWithTypeCoercion(to: Any!) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isinstance(of:)",
                "title": "func isInstance(of: Any!) -> Bool",
                "type": "method"
              },
              {
                "title": "Working with Function and Constructor Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/call(witharguments:)",
                "title": "func call(withArguments: [Any]!) -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/construct(witharguments:)",
                "title": "func construct(withArguments: [Any]!) -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/invokemethod(_:witharguments:)",
                "title": "func invokeMethod(String!, withArguments: [Any]!) -> JSValue!",
                "type": "method"
              },
              {
                "title": "Working with Container Values",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/defineproperty(_:descriptor:)",
                "title": "func defineProperty(Any!, descriptor: Any!)",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/hasproperty(_:)",
                "title": "func hasProperty(Any!) -> Bool",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/deleteproperty(_:)",
                "title": "func deleteProperty(Any!) -> Bool",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/objectatindexedsubscript(_:)",
                    "title": "func objectAtIndexedSubscript(Int) -> JSValue!",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/atindex(_:)",
                "title": "func atIndex(Int) -> JSValue!",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/setobject(_:atindexedsubscript:)",
                    "title": "func setObject(Any!, atIndexedSubscript: Int)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/setvalue(_:at:)",
                "title": "func setValue(Any!, at: Int)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/objectforkeyedsubscript(_:)",
                    "title": "func objectForKeyedSubscript(Any!) -> JSValue!",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/forproperty(_:)",
                "title": "func forProperty(Any!) -> JSValue!",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Related Documentation",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalue/setobject(_:forkeyedsubscript:)",
                    "title": "func setObject(Any!, forKeyedSubscript: Any!)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalue/setvalue(_:forproperty:)",
                "title": "func setValue(Any!, forProperty: Any!)",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalueproperty",
                "title": "JSValueProperty",
                "type": "typealias"
              },
              {
                "title": "Accessing a Value’s JavaScript Context",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/context",
                "title": "var context: JSContext!",
                "type": "property"
              },
              {
                "title": "Accessing Values with Subscript Syntax",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/objectatindexedsubscript(_:)",
                "title": "func objectAtIndexedSubscript(Int) -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/setobject(_:atindexedsubscript:)",
                "title": "func setObject(Any!, atIndexedSubscript: Int)",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/objectforkeyedsubscript(_:)",
                "title": "func objectForKeyedSubscript(Any!) -> JSValue!",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/setobject(_:forkeyedsubscript:)",
                "title": "func setObject(Any!, forKeyedSubscript: Any!)",
                "type": "method"
              },
              {
                "title": "Working with the C JavaScriptCore API",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/jsvalueref",
                "title": "var jsValueRef: JSValueRef!",
                "type": "property"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(jsvalueref:incontext:)",
                "title": "init!(JSValueRef: JSValueRef!, inContext: JSContext!)",
                "type": "init"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Constants",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorwritablekey",
                    "title": "let JSPropertyDescriptorWritableKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorenumerablekey",
                    "title": "let JSPropertyDescriptorEnumerableKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorconfigurablekey",
                    "title": "let JSPropertyDescriptorConfigurableKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorvaluekey",
                    "title": "let JSPropertyDescriptorValueKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorgetkey",
                    "title": "let JSPropertyDescriptorGetKey: String",
                    "type": "var"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertydescriptorsetkey",
                    "title": "let JSPropertyDescriptorSetKey: String",
                    "type": "var"
                  }
                ],
                "path": "/documentation/javascriptcore/property-descriptor-keys",
                "title": "Property Descriptor Keys",
                "type": "collection"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-1f0xs",
                "title": "init?(newBigIntFrom: String, in: JSContext)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-7worq",
                "title": "init?(newBigIntFrom: UInt64, in: JSContext)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-8l9iv",
                "title": "init?(newBigIntFrom: Int64, in: JSContext)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/init(newbigintfrom:in:)-r38z",
                "title": "init?(newBigIntFrom: Double, in: JSContext)",
                "type": "init"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/isbigint",
                "title": "var isBigInt: Bool",
                "type": "property"
              },
              {
                "title": "Instance Methods",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-35b2t",
                "title": "func compare(Double) -> JSRelationCondition",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-5w184",
                "title": "func compare(JSValue) -> JSRelationCondition",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-64n3k",
                "title": "func compare(UInt64) -> JSRelationCondition",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/compare(_:)-9d4zq",
                "title": "func compare(Int64) -> JSRelationCondition",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/toint64()",
                "title": "func toInt64() -> Int64",
                "type": "method"
              },
              {
                "path": "/documentation/javascriptcore/jsvalue/touint64()",
                "title": "func toUInt64() -> UInt64",
                "type": "method"
              }
            ],
            "path": "/documentation/javascriptcore/jsvalue",
            "title": "JSValue",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a Managed Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsmanagedvalue/init(value:)",
                "title": "init!(value: JSValue!)",
                "type": "init"
              },
              {
                "path": "/documentation/javascriptcore/jsmanagedvalue/init(value:andowner:)",
                "title": "init!(value: JSValue!, andOwner: Any!)",
                "type": "init"
              },
              {
                "title": "Accessing the Managed Value",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsmanagedvalue/value",
                "title": "var value: JSValue!",
                "type": "property"
              }
            ],
            "path": "/documentation/javascriptcore/jsmanagedvalue",
            "title": "JSManagedValue",
            "type": "class"
          },
          {
            "title": "Native Code",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/javascriptcore/jsexport",
            "title": "JSExport",
            "type": "protocol"
          },
          {
            "title": "C API",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "JavaScriptCore Engine Interface",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Content Group",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgetgroup(_:)",
                    "title": "func JSContextGetGroup(JSContextRef!) -> JSContextGroupRef!",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jscontextgroupref",
                "title": "JSContextGroupRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating a Context Group",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgroupcreate()",
                    "title": "func JSContextGroupCreate() -> JSContextGroupRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgroupretain(_:)",
                    "title": "func JSContextGroupRetain(JSContextGroupRef!) -> JSContextGroupRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgrouprelease(_:)",
                    "title": "func JSContextGroupRelease(JSContextGroupRef!)",
                    "type": "func"
                  },
                  {
                    "title": "Accessing the Global Context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgetglobalcontext(_:)",
                    "title": "func JSContextGetGlobalContext(JSContextRef!) -> JSGlobalContextRef!",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jscontextref",
                "title": "JSContextRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating a global context",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextcreate(_:)",
                    "title": "func JSGlobalContextCreate(JSClassRef!) -> JSGlobalContextRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextcreateingroup(_:_:)",
                    "title": "func JSGlobalContextCreateInGroup(JSContextGroupRef!, JSClassRef!) -> JSGlobalContextRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextretain(_:)",
                    "title": "func JSGlobalContextRetain(JSGlobalContextRef!) -> JSGlobalContextRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextrelease(_:)",
                    "title": "func JSGlobalContextRelease(JSGlobalContextRef!)",
                    "type": "func"
                  },
                  {
                    "title": "Managing the context’s name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextcopyname(_:)",
                    "title": "func JSGlobalContextCopyName(JSGlobalContextRef!) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsglobalcontextsetname(_:_:)",
                    "title": "func JSGlobalContextSetName(JSGlobalContextRef!, JSStringRef!)",
                    "type": "func"
                  },
                  {
                    "title": "Making a context inspectable",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextcopyname(_:)",
                        "title": "func JSGlobalContextCopyName(JSGlobalContextRef!) -> JSStringRef!",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextsetname(_:_:)",
                        "title": "func JSGlobalContextSetName(JSGlobalContextRef!, JSStringRef!)",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsglobalcontextisinspectable(_:)",
                    "title": "func JSGlobalContextIsInspectable(JSGlobalContextRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Related Documentation",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextcopyname(_:)",
                        "title": "func JSGlobalContextCopyName(JSGlobalContextRef!) -> JSStringRef!",
                        "type": "func"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsglobalcontextsetname(_:_:)",
                        "title": "func JSGlobalContextSetName(JSGlobalContextRef!, JSStringRef!)",
                        "type": "func"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsglobalcontextsetinspectable(_:_:)",
                    "title": "func JSGlobalContextSetInspectable(JSGlobalContextRef!, Bool)",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsglobalcontextref",
                "title": "JSGlobalContextRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Creating a JavaScript String",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcreatewithcharacters(_:_:)",
                    "title": "func JSStringCreateWithCharacters(UnsafePointer<JSChar>!, Int) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jschar",
                    "title": "JSChar",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcreatewithutf8cstring(_:)",
                    "title": "func JSStringCreateWithUTF8CString(UnsafePointer<CChar>!) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringretain(_:)",
                    "title": "func JSStringRetain(JSStringRef!) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringrelease(_:)",
                    "title": "func JSStringRelease(JSStringRef!)",
                    "type": "func"
                  },
                  {
                    "title": "Accessing JavaScript String Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetlength(_:)",
                    "title": "func JSStringGetLength(JSStringRef!) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetcharactersptr(_:)",
                    "title": "func JSStringGetCharactersPtr(JSStringRef!) -> UnsafePointer<JSChar>!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetmaximumutf8cstringsize(_:)",
                    "title": "func JSStringGetMaximumUTF8CStringSize(JSStringRef!) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringgetutf8cstring(_:_:_:)",
                    "title": "func JSStringGetUTF8CString(JSStringRef!, UnsafeMutablePointer<CChar>!, Int) -> Int",
                    "type": "func"
                  },
                  {
                    "title": "Comparing JavaScript Strings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringisequal(_:_:)",
                    "title": "func JSStringIsEqual(JSStringRef!, JSStringRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringisequaltoutf8cstring(_:_:)",
                    "title": "func JSStringIsEqualToUTF8CString(JSStringRef!, UnsafePointer<CChar>!) -> Bool",
                    "type": "func"
                  },
                  {
                    "title": "Converting to and from Core Foundation Strings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcreatewithcfstring(_:)",
                    "title": "func JSStringCreateWithCFString(CFString!) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsstringcopycfstring(_:_:)",
                    "title": "func JSStringCopyCFString(CFAllocator!, JSStringRef!) -> CFString!",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsstringref",
                "title": "JSStringRef",
                "type": "typealias"
              },
              {
                "path": "/documentation/javascriptcore/jsclassref",
                "title": "JSClassRef",
                "type": "typealias"
              },
              {
                "title": "JavaScript Data Types",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Testing the Value’s Type",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluegettype(_:_:)",
                    "title": "func JSValueGetType(JSContextRef!, JSValueRef!) -> JSType",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisundefined(_:_:)",
                    "title": "func JSValueIsUndefined(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisnull(_:_:)",
                    "title": "func JSValueIsNull(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisboolean(_:_:)",
                    "title": "func JSValueIsBoolean(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisnumber(_:_:)",
                    "title": "func JSValueIsNumber(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisstring(_:_:)",
                    "title": "func JSValueIsString(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueissymbol(_:_:)",
                    "title": "func JSValueIsSymbol(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisobject(_:_:)",
                    "title": "func JSValueIsObject(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisobjectofclass(_:_:_:)",
                    "title": "func JSValueIsObjectOfClass(JSContextRef!, JSValueRef!, JSClassRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisarray(_:_:)",
                    "title": "func JSValueIsArray(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisdate(_:_:)",
                    "title": "func JSValueIsDate(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluegettypedarraytype(_:_:_:)",
                    "title": "func JSValueGetTypedArrayType(JSContextRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> JSTypedArrayType",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypeundefined",
                        "title": "var kJSTypeUndefined: JSType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypenull",
                        "title": "var kJSTypeNull: JSType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypeboolean",
                        "title": "var kJSTypeBoolean: JSType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypenumber",
                        "title": "var kJSTypeNumber: JSType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypestring",
                        "title": "var kJSTypeString: JSType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypeobject",
                        "title": "var kJSTypeObject: JSType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypesymbol",
                        "title": "var kJSTypeSymbol: JSType",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jstype/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/javascriptcore/jstype/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/javascriptcore/jstype/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jstype",
                    "title": "JSType",
                    "type": "struct"
                  },
                  {
                    "title": "Creating Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakeundefined(_:)",
                    "title": "func JSValueMakeUndefined(JSContextRef!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakenull(_:)",
                    "title": "func JSValueMakeNull(JSContextRef!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakeboolean(_:_:)",
                    "title": "func JSValueMakeBoolean(JSContextRef!, Bool) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakenumber(_:_:)",
                    "title": "func JSValueMakeNumber(JSContextRef!, Double) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakestring(_:_:)",
                    "title": "func JSValueMakeString(JSContextRef!, JSStringRef!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakesymbol(_:_:)",
                    "title": "func JSValueMakeSymbol(JSContextRef!, JSStringRef!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "title": "Converting to Primitive Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetoboolean(_:_:)",
                    "title": "func JSValueToBoolean(JSContextRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetonumber(_:_:_:)",
                    "title": "func JSValueToNumber(JSContextRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> Double",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetostringcopy(_:_:_:)",
                    "title": "func JSValueToStringCopy(JSContextRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluetoobject(_:_:_:)",
                    "title": "func JSValueToObject(JSContextRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "title": "Converting to and from JSON-Formatted Strings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluemakefromjsonstring(_:_:)",
                    "title": "func JSValueMakeFromJSONString(JSContextRef!, JSStringRef!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvaluecreatejsonstring(_:_:_:_:)",
                    "title": "func JSValueCreateJSONString(JSContextRef!, JSValueRef!, UInt32, UnsafeMutablePointer<JSValueRef?>!) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "title": "Comparing Values",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisequal(_:_:_:_:)",
                    "title": "func JSValueIsEqual(JSContextRef!, JSValueRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisstrictequal(_:_:_:)",
                    "title": "func JSValueIsStrictEqual(JSContextRef!, JSValueRef!, JSValueRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueisinstanceofconstructor(_:_:_:_:)",
                    "title": "func JSValueIsInstanceOfConstructor(JSContextRef!, JSValueRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> Bool",
                    "type": "func"
                  },
                  {
                    "title": "Supporting Garbage Collection",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueprotect(_:_:)",
                    "title": "func JSValueProtect(JSContextRef!, JSValueRef!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsvalueunprotect(_:_:)",
                    "title": "func JSValueUnprotect(JSContextRef!, JSValueRef!)",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsvalueref",
                "title": "JSValueRef",
                "type": "typealias"
              },
              {
                "children": [
                  {
                    "title": "Accessing the Global Object",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jscontextgetglobalobject(_:)",
                    "title": "func JSContextGetGlobalObject(JSContextRef!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "title": "Working with Objects",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectcallasconstructor(_:_:_:_:_:)",
                    "title": "func JSObjectCallAsConstructor(JSContextRef!, JSObjectRef!, Int, UnsafePointer<JSValueRef?>!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectcallasfunction(_:_:_:_:_:_:)",
                    "title": "func JSObjectCallAsFunction(JSContextRef!, JSObjectRef!, JSObjectRef!, Int, UnsafePointer<JSValueRef?>!, UnsafeMutablePointer<JSValueRef?>!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectcopypropertynames(_:_:)",
                    "title": "func JSObjectCopyPropertyNames(JSContextRef!, JSObjectRef!) -> JSPropertyNameArrayRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectdeleteproperty(_:_:_:_:)",
                    "title": "func JSObjectDeleteProperty(JSContextRef!, JSObjectRef!, JSStringRef!, UnsafeMutablePointer<JSValueRef?>!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetprivate(_:)",
                    "title": "func JSObjectGetPrivate(JSObjectRef!) -> UnsafeMutableRawPointer!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetproperty(_:_:_:_:)",
                    "title": "func JSObjectGetProperty(JSContextRef!, JSObjectRef!, JSStringRef!, UnsafeMutablePointer<JSValueRef?>!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetpropertyatindex(_:_:_:_:)",
                    "title": "func JSObjectGetPropertyAtIndex(JSContextRef!, JSObjectRef!, UInt32, UnsafeMutablePointer<JSValueRef?>!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetprototype(_:_:)",
                    "title": "func JSObjectGetPrototype(JSContextRef!, JSObjectRef!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjecthasproperty(_:_:_:)",
                    "title": "func JSObjectHasProperty(JSContextRef!, JSObjectRef!, JSStringRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectisconstructor(_:_:)",
                    "title": "func JSObjectIsConstructor(JSContextRef!, JSObjectRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectisfunction(_:_:)",
                    "title": "func JSObjectIsFunction(JSContextRef!, JSObjectRef!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmake(_:_:_:)",
                    "title": "func JSObjectMake(JSContextRef!, JSClassRef!, UnsafeMutableRawPointer!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakearray(_:_:_:_:)",
                    "title": "func JSObjectMakeArray(JSContextRef!, Int, UnsafePointer<JSValueRef?>!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakeconstructor(_:_:_:)",
                    "title": "func JSObjectMakeConstructor(JSContextRef!, JSClassRef!, JSObjectCallAsConstructorCallback!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakedate(_:_:_:_:)",
                    "title": "func JSObjectMakeDate(JSContextRef!, Int, UnsafePointer<JSValueRef?>!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakeerror(_:_:_:_:)",
                    "title": "func JSObjectMakeError(JSContextRef!, Int, UnsafePointer<JSValueRef?>!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakefunction(_:_:_:_:_:_:_:_:)",
                    "title": "func JSObjectMakeFunction(JSContextRef!, JSStringRef!, UInt32, UnsafePointer<JSStringRef?>!, JSStringRef!, JSStringRef!, Int32, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakefunctionwithcallback(_:_:_:)",
                    "title": "func JSObjectMakeFunctionWithCallback(JSContextRef!, JSStringRef!, JSObjectCallAsFunctionCallback!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakeregexp(_:_:_:_:)",
                    "title": "func JSObjectMakeRegExp(JSContextRef!, Int, UnsafePointer<JSValueRef?>!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetprivate(_:_:)",
                    "title": "func JSObjectSetPrivate(JSObjectRef!, UnsafeMutableRawPointer!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetproperty(_:_:_:_:_:_:)",
                    "title": "func JSObjectSetProperty(JSContextRef!, JSObjectRef!, JSStringRef!, JSValueRef!, JSPropertyAttributes, UnsafeMutablePointer<JSValueRef?>!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetpropertyatindex(_:_:_:_:_:)",
                    "title": "func JSObjectSetPropertyAtIndex(JSContextRef!, JSObjectRef!, UInt32, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetpropertyforkey(_:_:_:_:)",
                    "title": "func JSObjectGetPropertyForKey(JSContextRef!, JSObjectRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> JSValueRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetprototype(_:_:_:)",
                    "title": "func JSObjectSetPrototype(JSContextRef!, JSObjectRef!, JSValueRef!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectdeletepropertyforkey(_:_:_:_:)",
                    "title": "func JSObjectDeletePropertyForKey(JSContextRef!, JSObjectRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjecthaspropertyforkey(_:_:_:_:)",
                    "title": "func JSObjectHasPropertyForKey(JSContextRef!, JSObjectRef!, JSValueRef!, UnsafeMutablePointer<JSValueRef?>!) -> Bool",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectsetpropertyforkey(_:_:_:_:_:_:)",
                    "title": "func JSObjectSetPropertyForKey(JSContextRef!, JSObjectRef!, JSValueRef!, JSValueRef!, JSPropertyAttributes, UnsafeMutablePointer<JSValueRef?>!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakedeferredpromise(_:_:_:_:)",
                    "title": "func JSObjectMakeDeferredPromise(JSContextRef!, UnsafeMutablePointer<JSObjectRef?>!, UnsafeMutablePointer<JSObjectRef?>!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "title": "Working with Classes",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsclasscreate(_:)",
                    "title": "func JSClassCreate(UnsafePointer<JSClassDefinition>!) -> JSClassRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsclassrelease(_:)",
                    "title": "func JSClassRelease(JSClassRef!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsclassretain(_:)",
                    "title": "func JSClassRetain(JSClassRef!) -> JSClassRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/kjsclassdefinitionempty",
                    "title": "let kJSClassDefinitionEmpty: JSClassDefinition",
                    "type": "var"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a Class Definition",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/init(version:attributes:classname:parentclass:staticvalues:staticfunctions:initialize:finalize:hasproperty:getproperty:setproperty:deleteproperty:getpropertynames:callasfunction:callasconstructor:hasinstance:converttotype:)",
                        "title": "init(version: Int32, attributes: JSClassAttributes, className: UnsafePointer<CChar>!, parentClass: JSClassRef!, staticValues: UnsafePointer<JSStaticValue>!, staticFunctions: UnsafePointer<JSStaticFunction>!, initialize: JSObjectInitializeCallback!, finalize: JSObjectFinalizeCallback!, hasProperty: JSObjectHasPropertyCallback!, getProperty: JSObjectGetPropertyCallback!, setProperty: JSObjectSetPropertyCallback!, deleteProperty: JSObjectDeletePropertyCallback!, getPropertyNames: JSObjectGetPropertyNamesCallback!, callAsFunction: JSObjectCallAsFunctionCallback!, callAsConstructor: JSObjectCallAsConstructorCallback!, hasInstance: JSObjectHasInstanceCallback!, convertToType: JSObjectConvertToTypeCallback!)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassattributes",
                        "title": "JSClassAttributes",
                        "type": "typealias"
                      },
                      {
                        "title": "Managing Class Information",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/parentclass",
                        "title": "var parentClass: JSClassRef!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/classname",
                        "title": "var className: UnsafePointer<CChar>!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/version",
                        "title": "var version: Int32",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/attributes",
                        "title": "var attributes: JSClassAttributes",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/staticvalues",
                        "title": "var staticValues: UnsafePointer<JSStaticValue>!",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Static Value",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/init(name:getproperty:setproperty:attributes:)",
                            "title": "init(name: UnsafePointer<CChar>!, getProperty: JSObjectGetPropertyCallback!, setProperty: JSObjectSetPropertyCallback!, attributes: JSPropertyAttributes)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing Static Value Information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/name",
                            "title": "var name: UnsafePointer<CChar>!",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/getproperty",
                            "title": "var getProperty: JSObjectGetPropertyCallback!",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/setproperty",
                            "title": "var setProperty: JSObjectSetPropertyCallback!",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticvalue/attributes",
                            "title": "var attributes: JSPropertyAttributes",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/javascriptcore/jsstaticvalue",
                        "title": "JSStaticValue",
                        "type": "struct"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/staticfunctions",
                        "title": "var staticFunctions: UnsafePointer<JSStaticFunction>!",
                        "type": "property"
                      },
                      {
                        "children": [
                          {
                            "title": "Creating a Static Function",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/init()",
                            "title": "init()",
                            "type": "init"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/init(name:callasfunction:attributes:)",
                            "title": "init(name: UnsafePointer<CChar>!, callAsFunction: JSObjectCallAsFunctionCallback!, attributes: JSPropertyAttributes)",
                            "type": "init"
                          },
                          {
                            "title": "Accessing Static Function Information",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/name",
                            "title": "var name: UnsafePointer<CChar>!",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/callasfunction",
                            "title": "var callAsFunction: JSObjectCallAsFunctionCallback!",
                            "type": "property"
                          },
                          {
                            "path": "/documentation/javascriptcore/jsstaticfunction/attributes",
                            "title": "var attributes: JSPropertyAttributes",
                            "type": "property"
                          }
                        ],
                        "path": "/documentation/javascriptcore/jsstaticfunction",
                        "title": "JSStaticFunction",
                        "type": "struct"
                      },
                      {
                        "title": "Managing Callbacks",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/initialize",
                        "title": "var initialize: JSObjectInitializeCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectinitializecallback",
                        "title": "JSObjectInitializeCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/finalize",
                        "title": "var finalize: JSObjectFinalizeCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectfinalizecallback",
                        "title": "JSObjectFinalizeCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/hasproperty",
                        "title": "var hasProperty: JSObjectHasPropertyCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjecthaspropertycallback",
                        "title": "JSObjectHasPropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/getproperty",
                        "title": "var getProperty: JSObjectGetPropertyCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectgetpropertycallback",
                        "title": "JSObjectGetPropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/setproperty",
                        "title": "var setProperty: JSObjectSetPropertyCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectsetpropertycallback",
                        "title": "JSObjectSetPropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/deleteproperty",
                        "title": "var deleteProperty: JSObjectDeletePropertyCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectdeletepropertycallback",
                        "title": "JSObjectDeletePropertyCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/getpropertynames",
                        "title": "var getPropertyNames: JSObjectGetPropertyNamesCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectgetpropertynamescallback",
                        "title": "JSObjectGetPropertyNamesCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/callasfunction",
                        "title": "var callAsFunction: JSObjectCallAsFunctionCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectcallasfunctioncallback",
                        "title": "JSObjectCallAsFunctionCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/hasinstance",
                        "title": "var hasInstance: JSObjectHasInstanceCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjecthasinstancecallback",
                        "title": "JSObjectHasInstanceCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/callasconstructor",
                        "title": "var callAsConstructor: JSObjectCallAsConstructorCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectcallasconstructorcallback",
                        "title": "JSObjectCallAsConstructorCallback",
                        "type": "typealias"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsclassdefinition/converttotype",
                        "title": "var convertToType: JSObjectConvertToTypeCallback!",
                        "type": "property"
                      },
                      {
                        "path": "/documentation/javascriptcore/jsobjectconverttotypecallback",
                        "title": "JSObjectConvertToTypeCallback",
                        "type": "typealias"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsclassdefinition",
                    "title": "JSClassDefinition",
                    "type": "struct"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjsclassattributenone",
                        "title": "var kJSClassAttributeNone: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjsclassattributenoautomaticprototype",
                        "title": "var kJSClassAttributeNoAutomaticPrototype: Int",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jsclassattribute",
                    "title": "JSClassAttribute",
                    "type": "collection"
                  },
                  {
                    "title": "Working with Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynameaccumulatoraddname(_:_:)",
                    "title": "func JSPropertyNameAccumulatorAddName(JSPropertyNameAccumulatorRef!, JSStringRef!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearraygetcount(_:)",
                    "title": "func JSPropertyNameArrayGetCount(JSPropertyNameArrayRef!) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearraygetnameatindex(_:_:)",
                    "title": "func JSPropertyNameArrayGetNameAtIndex(JSPropertyNameArrayRef!, Int) -> JSStringRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearrayrelease(_:)",
                    "title": "func JSPropertyNameArrayRelease(JSPropertyNameArrayRef!)",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearrayretain(_:)",
                    "title": "func JSPropertyNameArrayRetain(JSPropertyNameArrayRef!) -> JSPropertyNameArrayRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertyattributes",
                    "title": "JSPropertyAttributes",
                    "type": "typealias"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributenone",
                        "title": "var kJSPropertyAttributeNone: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributereadonly",
                        "title": "var kJSPropertyAttributeReadOnly: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributedontenum",
                        "title": "var kJSPropertyAttributeDontEnum: Int",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjspropertyattributedontdelete",
                        "title": "var kJSPropertyAttributeDontDelete: Int",
                        "type": "var"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jspropertyattribute",
                    "title": "JSPropertyAttribute",
                    "type": "collection"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynamearrayref",
                    "title": "JSPropertyNameArrayRef",
                    "type": "typealias"
                  },
                  {
                    "path": "/documentation/javascriptcore/jspropertynameaccumulatorref",
                    "title": "JSPropertyNameAccumulatorRef",
                    "type": "typealias"
                  },
                  {
                    "title": "Creating a Typed Array",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarray(_:_:_:_:)",
                    "title": "func JSObjectMakeTypedArray(JSContextRef!, JSTypedArrayType, Int, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarraywithbytesnocopy(_:_:_:_:_:_:_:)",
                    "title": "func JSObjectMakeTypedArrayWithBytesNoCopy(JSContextRef!, JSTypedArrayType, UnsafeMutableRawPointer!, Int, JSTypedArrayBytesDeallocator!, UnsafeMutableRawPointer!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarraywitharraybuffer(_:_:_:_:)",
                    "title": "func JSObjectMakeTypedArrayWithArrayBuffer(JSContextRef!, JSTypedArrayType, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmaketypedarraywitharraybufferandoffset(_:_:_:_:_:_:)",
                    "title": "func JSObjectMakeTypedArrayWithArrayBufferAndOffset(JSContextRef!, JSTypedArrayType, JSObjectRef!, Int, Int, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "children": [
                      {
                        "title": "Constants",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypenone",
                        "title": "var kJSTypedArrayTypeNone: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypearraybuffer",
                        "title": "var kJSTypedArrayTypeArrayBuffer: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeint8array",
                        "title": "var kJSTypedArrayTypeInt8Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeint16array",
                        "title": "var kJSTypedArrayTypeInt16Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeint32array",
                        "title": "var kJSTypedArrayTypeInt32Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypebigint64array",
                        "title": "var kJSTypedArrayTypeBigInt64Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint8array",
                        "title": "var kJSTypedArrayTypeUint8Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint8clampedarray",
                        "title": "var kJSTypedArrayTypeUint8ClampedArray: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint16array",
                        "title": "var kJSTypedArrayTypeUint16Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypeuint32array",
                        "title": "var kJSTypedArrayTypeUint32Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypebiguint64array",
                        "title": "var kJSTypedArrayTypeBigUint64Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypefloat32array",
                        "title": "var kJSTypedArrayTypeFloat32Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "path": "/documentation/javascriptcore/kjstypedarraytypefloat64array",
                        "title": "var kJSTypedArrayTypeFloat64Array: JSTypedArrayType",
                        "type": "var"
                      },
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/javascriptcore/jstypedarraytype/init(_:)",
                        "title": "init(UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/javascriptcore/jstypedarraytype/init(rawvalue:)",
                        "title": "init(rawValue: UInt32)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/javascriptcore/jstypedarraytype/rawvalue",
                        "title": "var rawValue: UInt32",
                        "type": "property"
                      }
                    ],
                    "path": "/documentation/javascriptcore/jstypedarraytype",
                    "title": "JSTypedArrayType",
                    "type": "struct"
                  },
                  {
                    "path": "/documentation/javascriptcore/jstypedarraybytesdeallocator",
                    "title": "JSTypedArrayBytesDeallocator",
                    "type": "typealias"
                  },
                  {
                    "title": "Accessing Typed Array Information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybytesptr(_:_:_:)",
                    "title": "func JSObjectGetTypedArrayBytesPtr(JSContextRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> UnsafeMutableRawPointer!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraylength(_:_:_:)",
                    "title": "func JSObjectGetTypedArrayLength(JSContextRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybytelength(_:_:_:)",
                    "title": "func JSObjectGetTypedArrayByteLength(JSContextRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybyteoffset(_:_:_:)",
                    "title": "func JSObjectGetTypedArrayByteOffset(JSContextRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgettypedarraybuffer(_:_:_:)",
                    "title": "func JSObjectGetTypedArrayBuffer(JSContextRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "title": "Working with Array Buffers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectmakearraybufferwithbytesnocopy(_:_:_:_:_:_:)",
                    "title": "func JSObjectMakeArrayBufferWithBytesNoCopy(JSContextRef!, UnsafeMutableRawPointer!, Int, JSTypedArrayBytesDeallocator!, UnsafeMutableRawPointer!, UnsafeMutablePointer<JSValueRef?>!) -> JSObjectRef!",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetarraybufferbytelength(_:_:_:)",
                    "title": "func JSObjectGetArrayBufferByteLength(JSContextRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> Int",
                    "type": "func"
                  },
                  {
                    "path": "/documentation/javascriptcore/jsobjectgetarraybufferbytesptr(_:_:_:)",
                    "title": "func JSObjectGetArrayBufferBytesPtr(JSContextRef!, JSObjectRef!, UnsafeMutablePointer<JSValueRef?>!) -> UnsafeMutableRawPointer!",
                    "type": "func"
                  }
                ],
                "path": "/documentation/javascriptcore/jsobjectref",
                "title": "JSObjectRef",
                "type": "typealias"
              },
              {
                "title": "Script Evaluation",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jscheckscriptsyntax(_:_:_:_:_:)",
                "title": "func JSCheckScriptSyntax(JSContextRef!, JSStringRef!, JSStringRef!, Int32, UnsafeMutablePointer<JSValueRef?>!) -> Bool",
                "type": "func"
              },
              {
                "path": "/documentation/javascriptcore/jsevaluatescript(_:_:_:_:_:_:)",
                "title": "func JSEvaluateScript(JSContextRef!, JSStringRef!, JSObjectRef!, JSStringRef!, Int32, UnsafeMutablePointer<JSValueRef?>!) -> JSValueRef!",
                "type": "func"
              },
              {
                "path": "/documentation/javascriptcore/jsgarbagecollect(_:)",
                "title": "func JSGarbageCollect(JSContextRef!)",
                "type": "func"
              },
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsc_objc_api_enabled",
                "title": "var JSC_OBJC_API_ENABLED: Int32",
                "type": "var"
              }
            ],
            "path": "/documentation/javascriptcore/c-javascriptcore-api",
            "title": "C JavaScriptCore API",
            "type": "collection"
          },
          {
            "title": "Reference",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Constants",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/kjstypedarraytypebigint64array",
                "title": "var kJSTypedArrayTypeBigInt64Array: JSTypedArrayType",
                "type": "var"
              },
              {
                "path": "/documentation/javascriptcore/kjstypedarraytypebiguint64array",
                "title": "var kJSTypedArrayTypeBigUint64Array: JSTypedArrayType",
                "type": "var"
              }
            ],
            "path": "/documentation/javascriptcore/javascriptcore-constants",
            "title": "JavaScriptCore Constants",
            "type": "collection"
          },
          {
            "title": "Variables",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/javascriptcore/kjstypebigint",
            "title": "var kJSTypeBigInt: JSType",
            "type": "var"
          },
          {
            "title": "Functions",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithdouble(_:_:_:)",
            "title": "func JSBigIntCreateWithDouble(JSContextRef, Double, UnsafeMutablePointer<JSValueRef?>?) -> JSValueRef",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithint64(_:_:_:)",
            "title": "func JSBigIntCreateWithInt64(JSContextRef, Int64, UnsafeMutablePointer<JSValueRef?>?) -> JSValueRef",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithstring(_:_:_:)",
            "title": "func JSBigIntCreateWithString(JSContextRef, JSStringRef, UnsafeMutablePointer<JSValueRef?>?) -> JSValueRef",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsbigintcreatewithuint64(_:_:_:)",
            "title": "func JSBigIntCreateWithUInt64(JSContextRef, UInt64, UnsafeMutablePointer<JSValueRef?>?) -> JSValueRef",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecompare(_:_:_:_:)",
            "title": "func JSValueCompare(JSContextRef, JSValueRef, JSValueRef, UnsafeMutablePointer<JSValueRef?>?) -> JSRelationCondition",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecomparedouble(_:_:_:_:)",
            "title": "func JSValueCompareDouble(JSContextRef, JSValueRef, Double, UnsafeMutablePointer<JSValueRef?>?) -> JSRelationCondition",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecompareint64(_:_:_:_:)",
            "title": "func JSValueCompareInt64(JSContextRef, JSValueRef, Int64, UnsafeMutablePointer<JSValueRef?>?) -> JSRelationCondition",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluecompareuint64(_:_:_:_:)",
            "title": "func JSValueCompareUInt64(JSContextRef, JSValueRef, UInt64, UnsafeMutablePointer<JSValueRef?>?) -> JSRelationCondition",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvalueisbigint(_:_:)",
            "title": "func JSValueIsBigInt(JSContextRef, JSValueRef) -> Bool",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetoint32(_:_:_:)",
            "title": "func JSValueToInt32(JSContextRef, JSValueRef, UnsafeMutablePointer<JSValueRef?>?) -> Int32",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetoint64(_:_:_:)",
            "title": "func JSValueToInt64(JSContextRef, JSValueRef, UnsafeMutablePointer<JSValueRef?>?) -> Int64",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetouint32(_:_:_:)",
            "title": "func JSValueToUInt32(JSContextRef, JSValueRef, UnsafeMutablePointer<JSValueRef?>?) -> UInt32",
            "type": "func"
          },
          {
            "path": "/documentation/javascriptcore/jsvaluetouint64(_:_:_:)",
            "title": "func JSValueToUInt64(JSContextRef, JSValueRef, UnsafeMutablePointer<JSValueRef?>?) -> UInt64",
            "type": "func"
          },
          {
            "title": "Enumerations",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Enumeration Cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/equal",
                "title": "case equal",
                "type": "case"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/greaterthan",
                "title": "case greaterThan",
                "type": "case"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/lessthan",
                "title": "case lessThan",
                "type": "case"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/undefined",
                "title": "case undefined",
                "type": "case"
              },
              {
                "title": "Initializers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/javascriptcore/jsrelationcondition/init(rawvalue:)",
                "title": "init?(rawValue: UInt32)",
                "type": "init"
              }
            ],
            "path": "/documentation/javascriptcore/jsrelationcondition",
            "title": "JSRelationCondition",
            "type": "enum"
          }
        ],
        "path": "/documentation/javascriptcore",
        "title": "JavaScriptCore",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
