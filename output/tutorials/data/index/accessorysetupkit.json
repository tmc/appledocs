{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/accessorysetupkit/authorizing-a-bluetooth-accessory-to-share-a-dice-roll",
            "title": "Authorizing a Bluetooth accessory to share a dice roll",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/accessorysetupkit/discovering-and-configuring-accessories",
            "title": "Discovering and configuring accessories",
            "type": "article"
          },
          {
            "title": "Accessory discovery",
            "type": "groupMarker"
          },
          {
            "title": "Accessory description",
            "type": "groupMarker"
          },
          {
            "title": "Displaying picker items",
            "type": "groupMarker"
          },
          {
            "title": "Information property list keys",
            "type": "groupMarker"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          }
        ],
        "path": "/documentation/accessorysetupkit",
        "title": "AccessorySetupKit",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/accessorysetupkit/authorizing-a-bluetooth-accessory-to-share-a-dice-roll",
            "title": "Authorizing a Bluetooth accessory to share a dice roll",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/accessorysetupkit/discovering-and-configuring-accessories",
            "title": "Discovering and configuring accessories",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Managing the session life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/activate(on:eventhandler:)",
                "title": "- activateWithQueue:eventHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/invalidate()",
                "title": "- invalidate",
                "type": "method"
              },
              {
                "title": "Displaying an accessory picker",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/showpicker(completionhandler:)",
                "title": "- showPickerWithCompletionHandler:",
                "type": "method"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/showpicker(for:completionhandler:)",
                "title": "- showPickerForDisplayItems:completionHandler:",
                "type": "method"
              },
              {
                "title": "Accessing discovered accessories",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/accessories",
                "title": "accessories",
                "type": "property"
              },
              {
                "title": "Managing accessories",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/renameaccessory(_:options:completionhandler:)",
                "title": "- renameAccessory:options:completionHandler:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/ssid",
                    "title": "ASAccessoryRenameSSID",
                    "type": "case"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/renameoptions",
                "title": "ASAccessoryRenameOptions",
                "type": "enum"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/removeaccessory(_:completionhandler:)",
                "title": "- removeAccessory:completionHandler:",
                "type": "method"
              },
              {
                "title": "Managing authorization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/finishauthorization(for:settings:completionhandler:)",
                "title": "- finishAuthorization:settings:completionHandler:",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Applying default settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessorysettings/default",
                    "title": "defaultSettings",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting accessory settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessorysettings/ssid",
                    "title": "SSID",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessorysettings/bluetoothtransportbridgingidentifier",
                    "title": "bluetoothTransportBridgingIdentifier",
                    "type": "property"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessorysettings",
                "title": "ASAccessorySettings",
                "type": "class"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/failauthorization(for:completionhandler:)",
                "title": "- failAuthorization:completionHandler:",
                "type": "method"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessorysession",
            "title": "ASAccessorySession",
            "type": "class"
          },
          {
            "title": "Accessory discovery",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Inspecting the event",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryevent/accessory",
                "title": "accessory",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessing identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/bluetoothidentifier",
                    "title": "bluetoothIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/bluetoothtransportbridgingidentifier",
                    "title": "bluetoothTransportBridgingIdentifier",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/ssid",
                    "title": "SSID",
                    "type": "property"
                  },
                  {
                    "title": "Presenting a display name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/displayname",
                    "title": "displayName",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting the accessoryâ€™s descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/descriptor",
                    "title": "descriptor",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting accessory state",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/state",
                    "title": "state",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Accessory states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/authorized",
                        "title": "ASAccessoryStateAuthorized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/awaitingauthorization",
                        "title": "ASAccessoryStateAwaitingAuthorization",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/unauthorized",
                        "title": "ASAccessoryStateUnauthorized",
                        "type": "case"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate",
                    "title": "ASAccessoryState",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory",
                "title": "ASAccessory",
                "type": "class"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryevent/eventtype",
                "title": "eventType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessory events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryadded",
                    "title": "ASAccessoryEventTypeAccessoryAdded",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessorychanged",
                    "title": "ASAccessoryEventTypeAccessoryChanged",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryremoved",
                    "title": "ASAccessoryEventTypeAccessoryRemoved",
                    "type": "case"
                  },
                  {
                    "title": "Life cycle events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/activated",
                    "title": "ASAccessoryEventTypeActivated",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/invalidated",
                    "title": "ASAccessoryEventTypeInvalidated",
                    "type": "case"
                  },
                  {
                    "title": "Picker events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdidpresent",
                    "title": "ASAccessoryEventTypePickerDidPresent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdiddismiss",
                    "title": "ASAccessoryEventTypePickerDidDismiss",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupbridging",
                    "title": "ASAccessoryEventTypePickerSetupBridging",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuppairing",
                    "title": "ASAccessoryEventTypePickerSetupPairing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupfailed",
                    "title": "ASAccessoryEventTypePickerSetupFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuprename",
                    "title": "ASAccessoryEventTypePickerSetupRename",
                    "type": "case"
                  },
                  {
                    "title": "Migration events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/migrationcomplete",
                    "title": "ASAccessoryEventTypeMigrationComplete",
                    "type": "case"
                  },
                  {
                    "title": "Unclassified events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/unknown",
                    "title": "ASAccessoryEventTypeUnknown",
                    "type": "case"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype",
                "title": "ASAccessoryEventType",
                "type": "enum"
              },
              {
                "title": "Handling errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryevent/error",
                "title": "error",
                "type": "property"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessoryevent",
            "title": "ASAccessoryEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessory events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryadded",
                "title": "ASAccessoryEventTypeAccessoryAdded",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessorychanged",
                "title": "ASAccessoryEventTypeAccessoryChanged",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryremoved",
                "title": "ASAccessoryEventTypeAccessoryRemoved",
                "type": "case"
              },
              {
                "title": "Life cycle events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/activated",
                "title": "ASAccessoryEventTypeActivated",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/invalidated",
                "title": "ASAccessoryEventTypeInvalidated",
                "type": "case"
              },
              {
                "title": "Picker events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdidpresent",
                "title": "ASAccessoryEventTypePickerDidPresent",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdiddismiss",
                "title": "ASAccessoryEventTypePickerDidDismiss",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupbridging",
                "title": "ASAccessoryEventTypePickerSetupBridging",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuppairing",
                "title": "ASAccessoryEventTypePickerSetupPairing",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupfailed",
                "title": "ASAccessoryEventTypePickerSetupFailed",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuprename",
                "title": "ASAccessoryEventTypePickerSetupRename",
                "type": "case"
              },
              {
                "title": "Migration events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/migrationcomplete",
                "title": "ASAccessoryEventTypeMigrationComplete",
                "type": "case"
              },
              {
                "title": "Unclassified events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/unknown",
                "title": "ASAccessoryEventTypeUnknown",
                "type": "case"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessoryeventtype",
            "title": "ASAccessoryEventType",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Specifying Bluetooth properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothcompanyidentifier",
                "title": "bluetoothCompanyIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asbluetoothcompanyidentifier",
                "title": "ASBluetoothCompanyIdentifier",
                "type": "typealias"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothmanufacturerdatablob",
                "title": "bluetoothManufacturerDataBlob",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothmanufacturerdatamask",
                "title": "bluetoothManufacturerDataMask",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothservicedatablob",
                "title": "bluetoothServiceDataBlob",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothservicedatamask",
                "title": "bluetoothServiceDataMask",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothnamesubstring",
                "title": "bluetoothNameSubstring",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothserviceuuid",
                "title": "bluetoothServiceUUID",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothrange",
                "title": "bluetoothRange",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Bluetooth options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/default",
                    "title": "ASDiscoveryDescriptorRangeDefault",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/immediate",
                    "title": "ASDiscoveryDescriptorRangeImmediate",
                    "type": "case"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range",
                "title": "ASDiscoveryDescriptorRange",
                "type": "enum"
              },
              {
                "title": "Specifying Wi-Fi properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/ssid",
                "title": "SSID",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/ssidprefix",
                "title": "SSIDPrefix",
                "type": "property"
              },
              {
                "title": "Specifying options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/supportedoptions",
                "title": "supportedOptions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Bluetooth options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/bluetoothpairingle",
                    "title": "ASAccessorySupportBluetoothPairingLE",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/bluetoothtransportbridging",
                    "title": "ASAccessorySupportBluetoothTransportBridging",
                    "type": "case"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/bluetoothhid",
                    "title": "ASAccessorySupportBluetoothHID",
                    "type": "case"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/supportoptions",
                "title": "ASAccessorySupportOptions",
                "type": "enum"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothnamesubstringcompareoptions",
                "title": "bluetoothNameSubstringCompareOptions",
                "type": "property"
              }
            ],
            "path": "/documentation/accessorysetupkit/asdiscoverydescriptor",
            "title": "ASDiscoveryDescriptor",
            "type": "class"
          },
          {
            "title": "Accessory description",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/bluetoothidentifier",
                "title": "bluetoothIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/bluetoothtransportbridgingidentifier",
                "title": "bluetoothTransportBridgingIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/ssid",
                "title": "SSID",
                "type": "property"
              },
              {
                "title": "Presenting a display name",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/displayname",
                "title": "displayName",
                "type": "property"
              },
              {
                "title": "Inspecting the accessoryâ€™s descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/descriptor",
                "title": "descriptor",
                "type": "property"
              },
              {
                "title": "Inspecting accessory state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/state",
                "title": "state",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessory states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/authorized",
                    "title": "ASAccessoryStateAuthorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/awaitingauthorization",
                    "title": "ASAccessoryStateAwaitingAuthorization",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/unauthorized",
                    "title": "ASAccessoryStateUnauthorized",
                    "type": "case"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate",
                "title": "ASAccessoryState",
                "type": "enum"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessory",
            "title": "ASAccessory",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessory states",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/authorized",
                "title": "ASAccessoryStateAuthorized",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/awaitingauthorization",
                "title": "ASAccessoryStateAwaitingAuthorization",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/unauthorized",
                "title": "ASAccessoryStateUnauthorized",
                "type": "case"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessory/accessorystate",
            "title": "ASAccessoryState",
            "type": "enum"
          },
          {
            "title": "Displaying picker items",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a display item",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/init(name:productimage:descriptor:)",
                "title": "- initWithName:productImage:descriptor:",
                "type": "method"
              },
              {
                "title": "Specifying discovery properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/descriptor",
                "title": "descriptor",
                "type": "property"
              },
              {
                "title": "Customizing display properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/name",
                "title": "name",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/productimage",
                "title": "productImage",
                "type": "property"
              },
              {
                "title": "Customizing setup options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.property",
                "title": "setupOptions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/rename",
                    "title": "ASPickerDisplayItemSetupRename",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/confirmauthorization",
                    "title": "ASPickerDisplayItemSetupConfirmAuthorization",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/finishinapp",
                    "title": "ASPickerDisplayItemSetupFinishInApp",
                    "type": "case"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct",
                "title": "ASPickerDisplayItemSetupOptions",
                "type": "enum"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/renameoptions",
                "title": "renameOptions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/ssid",
                    "title": "ASAccessoryRenameSSID",
                    "type": "case"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/renameoptions",
                "title": "ASAccessoryRenameOptions",
                "type": "enum"
              }
            ],
            "path": "/documentation/accessorysetupkit/aspickerdisplayitem",
            "title": "ASPickerDisplayItem",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessory identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asmigrationdisplayitem/peripheralidentifier",
                "title": "peripheralIdentifier",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asmigrationdisplayitem/hotspotssid",
                "title": "hotspotSSID",
                "type": "property"
              }
            ],
            "path": "/documentation/accessorysetupkit/asmigrationdisplayitem",
            "title": "ASMigrationDisplayItem",
            "type": "class"
          },
          {
            "title": "Information property list keys",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupsupports",
            "title": "NSAccessorySetupSupports",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupbluetoothcompanyidentifiers",
            "title": "NSAccessorySetupBluetoothCompanyIdentifiers",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupbluetoothnames",
            "title": "NSAccessorySetupBluetoothNames",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupbluetoothservices",
            "title": "NSAccessorySetupBluetoothServices",
            "type": "typealias"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/accessorysetupkit/aserrordomain",
            "title": "ASErrorDomain",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Activation errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/activationfailed",
                "title": "ASErrorCodeActivationFailed",
                "type": "case"
              },
              {
                "title": "Timeout and life cycle errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/discoverytimeout",
                "title": "ASErrorCodeDiscoveryTimeout",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/invalidated",
                "title": "ASErrorCodeInvalidated",
                "type": "case"
              },
              {
                "title": "Configuration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/extensionnotfound",
                "title": "ASErrorCodeExtensionNotFound",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/userrestricted",
                "title": "ASErrorCodeUserRestricted",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/invalidrequest",
                "title": "ASErrorCodeInvalidRequest",
                "type": "case"
              },
              {
                "title": "Picker errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/pickerrestricted",
                "title": "ASErrorCodePickerRestricted",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/pickeralreadyactive",
                "title": "ASErrorCodePickerAlreadyActive",
                "type": "case"
              },
              {
                "title": "Cancellation errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/usercancelled",
                "title": "ASErrorCodeUserCancelled",
                "type": "case"
              },
              {
                "title": "Communication errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/connectionfailed",
                "title": "ASErrorCodeConnectionFailed",
                "type": "case"
              },
              {
                "title": "Success cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/success",
                "title": "ASErrorCodeSuccess",
                "type": "case"
              },
              {
                "title": "Unclassified errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/unknown",
                "title": "ASErrorCodeUnknown",
                "type": "case"
              },
              {
                "title": "Accessing the error domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserrordomain",
                "title": "ASErrorDomain",
                "type": "var"
              }
            ],
            "path": "/documentation/accessorysetupkit/aserror/code",
            "title": "ASErrorCode",
            "type": "enum"
          }
        ],
        "path": "/documentation/accessorysetupkit",
        "title": "AccessorySetupKit",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Essentials",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/accessorysetupkit/authorizing-a-bluetooth-accessory-to-share-a-dice-roll",
            "title": "Authorizing a Bluetooth accessory to share a dice roll",
            "type": "sampleCode"
          },
          {
            "path": "/documentation/accessorysetupkit/discovering-and-configuring-accessories",
            "title": "Discovering and configuring accessories",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Managing the session life cycle",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/activate(on:eventhandler:)",
                "title": "func activate(on: dispatch_queue_t, eventHandler: (ASAccessoryEvent) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/invalidate()",
                "title": "func invalidate()",
                "type": "method"
              },
              {
                "title": "Displaying an accessory picker",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/showpicker(completionhandler:)",
                "title": "func showPicker(completionHandler: ((any Error)?) -> Void)",
                "type": "method"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/showpicker(for:completionhandler:)",
                "title": "func showPicker(for: [ASPickerDisplayItem], completionHandler: ((any Error)?) -> Void)",
                "type": "method"
              },
              {
                "title": "Accessing discovered accessories",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/accessories",
                "title": "var accessories: [ASAccessory]",
                "type": "property"
              },
              {
                "title": "Managing accessories",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/renameaccessory(_:options:completionhandler:)",
                "title": "func renameAccessory(ASAccessory, options: ASAccessory.RenameOptions, completionHandler: ((any Error)?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating an options instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/ssid",
                    "title": "static var ssid: ASAccessory.RenameOptions",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/renameoptions",
                "title": "ASAccessory.RenameOptions",
                "type": "struct"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/removeaccessory(_:completionhandler:)",
                "title": "func removeAccessory(ASAccessory, completionHandler: ((any Error)?) -> Void)",
                "type": "method"
              },
              {
                "title": "Managing authorization",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/finishauthorization(for:settings:completionhandler:)",
                "title": "func finishAuthorization(for: ASAccessory, settings: ASAccessorySettings, completionHandler: ((any Error)?) -> Void)",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Applying default settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessorysettings/default",
                    "title": "class var `default`: ASAccessorySettings",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting accessory settings",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessorysettings/ssid",
                    "title": "var ssid: String?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessorysettings/bluetoothtransportbridgingidentifier",
                    "title": "var bluetoothTransportBridgingIdentifier: Data?",
                    "type": "property"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessorysettings",
                "title": "ASAccessorySettings",
                "type": "class"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessorysession/failauthorization(for:completionhandler:)",
                "title": "func failAuthorization(for: ASAccessory, completionHandler: ((any Error)?) -> Void)",
                "type": "method"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessorysession",
            "title": "ASAccessorySession",
            "type": "class"
          },
          {
            "title": "Accessory discovery",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Inspecting the event",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryevent/accessory",
                "title": "var accessory: ASAccessory?",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Accessing identifiers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/bluetoothidentifier",
                    "title": "var bluetoothIdentifier: UUID?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/bluetoothtransportbridgingidentifier",
                    "title": "var bluetoothTransportBridgingIdentifier: Data?",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/ssid",
                    "title": "var ssid: String?",
                    "type": "property"
                  },
                  {
                    "title": "Presenting a display name",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/displayname",
                    "title": "var displayName: String",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting the accessoryâ€™s descriptor",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/descriptor",
                    "title": "var descriptor: ASDiscoveryDescriptor",
                    "type": "property"
                  },
                  {
                    "title": "Inspecting accessory state",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/state",
                    "title": "var state: ASAccessory.AccessoryState",
                    "type": "property"
                  },
                  {
                    "children": [
                      {
                        "title": "Creating a state instance",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/init(rawvalue:)",
                        "title": "init?(rawValue: Int)",
                        "type": "init"
                      },
                      {
                        "title": "Accessory states",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/authorized",
                        "title": "case authorized",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/awaitingauthorization",
                        "title": "case awaitingAuthorization",
                        "type": "case"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/unauthorized",
                        "title": "case unauthorized",
                        "type": "case"
                      },
                      {
                        "title": "Default Implementations",
                        "type": "groupMarker"
                      },
                      {
                        "children": [
                          {
                            "title": "Operators",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/!=(_:_:)",
                            "title": "static func != (Self, Self) -> Bool",
                            "type": "op"
                          }
                        ],
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/equatable-implementations",
                        "title": "Equatable Implementations",
                        "type": "collection"
                      },
                      {
                        "children": [
                          {
                            "title": "Instance Properties",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/hashvalue",
                            "title": "var hashValue: Int",
                            "type": "property"
                          },
                          {
                            "title": "Instance Methods",
                            "type": "groupMarker"
                          },
                          {
                            "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/hash(into:)",
                            "title": "func hash(into: inout Hasher)",
                            "type": "method"
                          }
                        ],
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/rawrepresentable-implementations",
                        "title": "RawRepresentable Implementations",
                        "type": "collection"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate",
                    "title": "ASAccessory.AccessoryState",
                    "type": "enum"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory",
                "title": "ASAccessory",
                "type": "class"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryevent/eventtype",
                "title": "var eventType: ASAccessoryEventType",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an event type instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Accessory events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryadded",
                    "title": "case accessoryAdded",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessorychanged",
                    "title": "case accessoryChanged",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryremoved",
                    "title": "case accessoryRemoved",
                    "type": "case"
                  },
                  {
                    "title": "Life cycle events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/activated",
                    "title": "case activated",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/invalidated",
                    "title": "case invalidated",
                    "type": "case"
                  },
                  {
                    "title": "Picker events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdidpresent",
                    "title": "case pickerDidPresent",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdiddismiss",
                    "title": "case pickerDidDismiss",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupbridging",
                    "title": "case pickerSetupBridging",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuppairing",
                    "title": "case pickerSetupPairing",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupfailed",
                    "title": "case pickerSetupFailed",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuprename",
                    "title": "case pickerSetupRename",
                    "type": "case"
                  },
                  {
                    "title": "Migration events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/migrationcomplete",
                    "title": "case migrationComplete",
                    "type": "case"
                  },
                  {
                    "title": "Unclassified events",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/unknown",
                    "title": "case unknown",
                    "type": "case"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessoryeventtype/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessoryeventtype/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessoryeventtype/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype",
                "title": "ASAccessoryEventType",
                "type": "enum"
              },
              {
                "title": "Handling errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryevent/error",
                "title": "var error: (any Error)?",
                "type": "property"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessoryevent",
            "title": "ASAccessoryEvent",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating an event type instance",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              },
              {
                "title": "Accessory events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryadded",
                "title": "case accessoryAdded",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessorychanged",
                "title": "case accessoryChanged",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/accessoryremoved",
                "title": "case accessoryRemoved",
                "type": "case"
              },
              {
                "title": "Life cycle events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/activated",
                "title": "case activated",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/invalidated",
                "title": "case invalidated",
                "type": "case"
              },
              {
                "title": "Picker events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdidpresent",
                "title": "case pickerDidPresent",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickerdiddismiss",
                "title": "case pickerDidDismiss",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupbridging",
                "title": "case pickerSetupBridging",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuppairing",
                "title": "case pickerSetupPairing",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetupfailed",
                "title": "case pickerSetupFailed",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/pickersetuprename",
                "title": "case pickerSetupRename",
                "type": "case"
              },
              {
                "title": "Migration events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/migrationcomplete",
                "title": "case migrationComplete",
                "type": "case"
              },
              {
                "title": "Unclassified events",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/unknown",
                "title": "case unknown",
                "type": "case"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessoryeventtype/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessoryeventtype/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessoryeventtype",
            "title": "ASAccessoryEventType",
            "type": "enum"
          },
          {
            "children": [
              {
                "title": "Specifying Bluetooth properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothcompanyidentifier",
                "title": "var bluetoothCompanyIdentifier: ASBluetoothCompanyIdentifier",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an identifier",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asbluetoothcompanyidentifier/init(_:)",
                    "title": "init(UInt16)",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asbluetoothcompanyidentifier/init(rawvalue:)",
                    "title": "init(rawValue: UInt16)",
                    "type": "init"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asbluetoothcompanyidentifier/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asbluetoothcompanyidentifier/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asbluetoothcompanyidentifier",
                "title": "ASBluetoothCompanyIdentifier",
                "type": "struct"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothmanufacturerdatablob",
                "title": "var bluetoothManufacturerDataBlob: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothmanufacturerdatamask",
                "title": "var bluetoothManufacturerDataMask: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothservicedatablob",
                "title": "var bluetoothServiceDataBlob: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothservicedatamask",
                "title": "var bluetoothServiceDataMask: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothnamesubstring",
                "title": "var bluetoothNameSubstring: String?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothserviceuuid",
                "title": "var bluetoothServiceUUID: CBUUID?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothrange",
                "title": "var bluetoothRange: ASDiscoveryDescriptor.Range",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an options instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Bluetooth options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/default",
                    "title": "case `default`",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/immediate",
                    "title": "case immediate",
                    "type": "case"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/range",
                "title": "ASDiscoveryDescriptor.Range",
                "type": "enum"
              },
              {
                "title": "Specifying Wi-Fi properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/ssid",
                "title": "var ssid: String?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/ssidprefix",
                "title": "var ssidPrefix: String?",
                "type": "property"
              },
              {
                "title": "Specifying options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/supportedoptions",
                "title": "var supportedOptions: ASAccessory.SupportOptions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an options instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Bluetooth options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/bluetoothpairingle",
                    "title": "static var bluetoothPairingLE: ASAccessory.SupportOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/bluetoothtransportbridging",
                    "title": "static var bluetoothTransportBridging: ASAccessory.SupportOptions",
                    "type": "property"
                  },
                  {
                    "beta": true,
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/bluetoothhid",
                    "title": "static var bluetoothHID: ASAccessory.SupportOptions",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/supportoptions/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/supportoptions",
                "title": "ASAccessory.SupportOptions",
                "type": "struct"
              },
              {
                "title": "Instance Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asdiscoverydescriptor/bluetoothnamesubstringcompareoptions",
                "title": "var bluetoothNameSubstringCompareOptions: NSString.CompareOptions",
                "type": "property"
              }
            ],
            "path": "/documentation/accessorysetupkit/asdiscoverydescriptor",
            "title": "ASDiscoveryDescriptor",
            "type": "class"
          },
          {
            "title": "Accessory description",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Accessing identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/bluetoothidentifier",
                "title": "var bluetoothIdentifier: UUID?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/bluetoothtransportbridgingidentifier",
                "title": "var bluetoothTransportBridgingIdentifier: Data?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/ssid",
                "title": "var ssid: String?",
                "type": "property"
              },
              {
                "title": "Presenting a display name",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/displayname",
                "title": "var displayName: String",
                "type": "property"
              },
              {
                "title": "Inspecting the accessoryâ€™s descriptor",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/descriptor",
                "title": "var descriptor: ASDiscoveryDescriptor",
                "type": "property"
              },
              {
                "title": "Inspecting accessory state",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/state",
                "title": "var state: ASAccessory.AccessoryState",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating a state instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/init(rawvalue:)",
                    "title": "init?(rawValue: Int)",
                    "type": "init"
                  },
                  {
                    "title": "Accessory states",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/authorized",
                    "title": "case authorized",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/awaitingauthorization",
                    "title": "case awaitingAuthorization",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/unauthorized",
                    "title": "case unauthorized",
                    "type": "case"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/hashvalue",
                        "title": "var hashValue: Int",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/hash(into:)",
                        "title": "func hash(into: inout Hasher)",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/rawrepresentable-implementations",
                    "title": "RawRepresentable Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate",
                "title": "ASAccessory.AccessoryState",
                "type": "enum"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessory",
            "title": "ASAccessory",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Creating a state instance",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              },
              {
                "title": "Accessory states",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/authorized",
                "title": "case authorized",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/awaitingauthorization",
                "title": "case awaitingAuthorization",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/unauthorized",
                "title": "case unauthorized",
                "type": "case"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/accessorystate/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/accessorysetupkit/asaccessory/accessorystate",
            "title": "ASAccessory.AccessoryState",
            "type": "enum"
          },
          {
            "title": "Displaying picker items",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Creating a display item",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/init(name:productimage:descriptor:)",
                "title": "init(name: String, productImage: UIImage, descriptor: ASDiscoveryDescriptor)",
                "type": "init"
              },
              {
                "title": "Specifying discovery properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/descriptor",
                "title": "var descriptor: ASDiscoveryDescriptor",
                "type": "property"
              },
              {
                "title": "Customizing display properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/name",
                "title": "var name: String",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/productimage",
                "title": "var productImage: UIImage",
                "type": "property"
              },
              {
                "title": "Customizing setup options",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.property",
                "title": "var setupOptions: ASPickerDisplayItem.SetupOptions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an options instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/rename",
                    "title": "static var rename: ASPickerDisplayItem.SetupOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/confirmauthorization",
                    "title": "static var confirmAuthorization: ASPickerDisplayItem.SetupOptions",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/finishinapp",
                    "title": "static var finishInApp: ASPickerDisplayItem.SetupOptions",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/setupoptions-swift.struct",
                "title": "ASPickerDisplayItem.SetupOptions",
                "type": "struct"
              },
              {
                "path": "/documentation/accessorysetupkit/aspickerdisplayitem/renameoptions",
                "title": "var renameOptions: ASAccessory.RenameOptions",
                "type": "property"
              },
              {
                "children": [
                  {
                    "title": "Creating an options instance",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init(rawvalue:)",
                    "title": "init(rawValue: UInt)",
                    "type": "init"
                  },
                  {
                    "title": "Options",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/ssid",
                    "title": "static var ssid: ASAccessory.RenameOptions",
                    "type": "property"
                  },
                  {
                    "title": "Default Implementations",
                    "type": "groupMarker"
                  },
                  {
                    "children": [
                      {
                        "title": "Operators",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/!=(_:_:)",
                        "title": "static func != (Self, Self) -> Bool",
                        "type": "op"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/equatable-implementations",
                    "title": "Equatable Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init()",
                        "title": "init()",
                        "type": "init"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/contains(_:)",
                        "title": "func contains(Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/formintersection(_:)",
                        "title": "func formIntersection(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/formsymmetricdifference(_:)",
                        "title": "func formSymmetricDifference(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/formunion(_:)",
                        "title": "func formUnion(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/insert(_:)",
                        "title": "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/intersection(_:)",
                        "title": "func intersection(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/remove(_:)",
                        "title": "func remove(Self.Element) -> Self.Element?",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/symmetricdifference(_:)",
                        "title": "func symmetricDifference(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/union(_:)",
                        "title": "func union(Self) -> Self",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/update(with:)",
                        "title": "func update(with: Self.Element) -> Self.Element?",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/optionset-implementations",
                    "title": "OptionSet Implementations",
                    "type": "collection"
                  },
                  {
                    "children": [
                      {
                        "title": "Initializers",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init(_:)",
                        "title": "init<S>(S)",
                        "type": "init"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/init(arrayliteral:)",
                        "title": "init(arrayLiteral: Self.Element...)",
                        "type": "init"
                      },
                      {
                        "title": "Instance Properties",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isempty",
                        "title": "var isEmpty: Bool",
                        "type": "property"
                      },
                      {
                        "title": "Instance Methods",
                        "type": "groupMarker"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isdisjoint(with:)",
                        "title": "func isDisjoint(with: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isstrictsubset(of:)",
                        "title": "func isStrictSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/isstrictsuperset(of:)",
                        "title": "func isStrictSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/issubset(of:)",
                        "title": "func isSubset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/issuperset(of:)",
                        "title": "func isSuperset(of: Self) -> Bool",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/subtract(_:)",
                        "title": "func subtract(Self)",
                        "type": "method"
                      },
                      {
                        "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/subtracting(_:)",
                        "title": "func subtracting(Self) -> Self",
                        "type": "method"
                      }
                    ],
                    "path": "/documentation/accessorysetupkit/asaccessory/renameoptions/setalgebra-implementations",
                    "title": "SetAlgebra Implementations",
                    "type": "collection"
                  }
                ],
                "path": "/documentation/accessorysetupkit/asaccessory/renameoptions",
                "title": "ASAccessory.RenameOptions",
                "type": "struct"
              }
            ],
            "path": "/documentation/accessorysetupkit/aspickerdisplayitem",
            "title": "ASPickerDisplayItem",
            "type": "class"
          },
          {
            "children": [
              {
                "title": "Accessory identifiers",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/asmigrationdisplayitem/peripheralidentifier",
                "title": "var peripheralIdentifier: UUID?",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/asmigrationdisplayitem/hotspotssid",
                "title": "var hotspotSSID: String?",
                "type": "property"
              }
            ],
            "path": "/documentation/accessorysetupkit/asmigrationdisplayitem",
            "title": "ASMigrationDisplayItem",
            "type": "class"
          },
          {
            "title": "Information property list keys",
            "type": "groupMarker"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupsupports",
            "title": "NSAccessorySetupSupports",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupbluetoothcompanyidentifiers",
            "title": "NSAccessorySetupBluetoothCompanyIdentifiers",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupbluetoothnames",
            "title": "NSAccessorySetupBluetoothNames",
            "type": "typealias"
          },
          {
            "external": true,
            "path": "/documentation/bundleresources/information-property-list/nsaccessorysetupbluetoothservices",
            "title": "NSAccessorySetupBluetoothServices",
            "type": "typealias"
          },
          {
            "title": "Errors",
            "type": "groupMarker"
          },
          {
            "children": [
              {
                "title": "Activation errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/activationfailed",
                "title": "static var activationFailed: ASError.Code",
                "type": "property"
              },
              {
                "title": "Life cycle errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/invalidated",
                "title": "static var invalidated: ASError.Code",
                "type": "property"
              },
              {
                "title": "Configuration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/extensionnotfound",
                "title": "static var extensionNotFound: ASError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/invalidrequest",
                "title": "static var invalidRequest: ASError.Code",
                "type": "property"
              },
              {
                "title": "Picker errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/pickerrestricted",
                "title": "static var pickerRestricted: ASError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/pickeralreadyactive",
                "title": "static var pickerAlreadyActive: ASError.Code",
                "type": "property"
              },
              {
                "title": "Cancellation and permission errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/usercancelled",
                "title": "static var userCancelled: ASError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/userrestricted",
                "title": "static var userRestricted: ASError.Code",
                "type": "property"
              },
              {
                "title": "Communication errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/connectionfailed",
                "title": "static var connectionFailed: ASError.Code",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/discoverytimeout",
                "title": "static var discoveryTimeout: ASError.Code",
                "type": "property"
              },
              {
                "title": "Success cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/success",
                "title": "static var success: ASError.Code",
                "type": "property"
              },
              {
                "title": "Unclassified errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/unknown",
                "title": "static var unknown: ASError.Code",
                "type": "property"
              },
              {
                "title": "Accessing the error domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aserrordomain",
                "title": "let ASErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/errorcode-7brky",
                    "title": "var errorCode: Int",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/erroruserinfo-68ztu",
                    "title": "var errorUserInfo: [String : Any]",
                    "type": "property"
                  },
                  {
                    "title": "Type Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/errordomain-374d4",
                    "title": "static var errorDomain: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aserror/customnserror-implementations",
                "title": "CustomNSError Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/==(_:_:)",
                    "title": "static func == (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aserror/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/localizeddescription",
                    "title": "var localizedDescription: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aserror/error-implementations",
                "title": "Error Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aserror/hashable-implementations",
                "title": "Hashable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/accessorysetupkit/aserror",
            "title": "ASError",
            "type": "struct"
          },
          {
            "path": "/documentation/accessorysetupkit/aserrordomain",
            "title": "let ASErrorDomain: String",
            "type": "var"
          },
          {
            "children": [
              {
                "title": "Creating an error code",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/init(rawvalue:)",
                "title": "init?(rawValue: Int)",
                "type": "init"
              },
              {
                "title": "Activation errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/activationfailed",
                "title": "case activationFailed",
                "type": "case"
              },
              {
                "title": "Timeout and life cycle errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/discoverytimeout",
                "title": "case discoveryTimeout",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/invalidated",
                "title": "case invalidated",
                "type": "case"
              },
              {
                "title": "Configuration errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/extensionnotfound",
                "title": "case extensionNotFound",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/userrestricted",
                "title": "case userRestricted",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/invalidrequest",
                "title": "case invalidRequest",
                "type": "case"
              },
              {
                "title": "Picker errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/pickerrestricted",
                "title": "case pickerRestricted",
                "type": "case"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/pickeralreadyactive",
                "title": "case pickerAlreadyActive",
                "type": "case"
              },
              {
                "title": "Cancellation errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/usercancelled",
                "title": "case userCancelled",
                "type": "case"
              },
              {
                "title": "Communication errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/connectionfailed",
                "title": "case connectionFailed",
                "type": "case"
              },
              {
                "title": "Success cases",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/success",
                "title": "case success",
                "type": "case"
              },
              {
                "title": "Unclassified errors",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/code/unknown",
                "title": "case unknown",
                "type": "case"
              },
              {
                "title": "Accessing the error domain",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/accessorysetupkit/aserror/errordomain",
                "title": "static var errorDomain: String",
                "type": "property"
              },
              {
                "path": "/documentation/accessorysetupkit/aserrordomain",
                "title": "let ASErrorDomain: String",
                "type": "var"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Operators",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/code/!=(_:_:)",
                    "title": "static func != (Self, Self) -> Bool",
                    "type": "op"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aserror/code/equatable-implementations",
                "title": "Equatable Implementations",
                "type": "collection"
              },
              {
                "children": [
                  {
                    "title": "Instance Properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/code/hashvalue",
                    "title": "var hashValue: Int",
                    "type": "property"
                  },
                  {
                    "title": "Instance Methods",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/accessorysetupkit/aserror/code/hash(into:)",
                    "title": "func hash(into: inout Hasher)",
                    "type": "method"
                  }
                ],
                "path": "/documentation/accessorysetupkit/aserror/code/rawrepresentable-implementations",
                "title": "RawRepresentable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/accessorysetupkit/aserror/code",
            "title": "ASError.Code",
            "type": "enum"
          }
        ],
        "path": "/documentation/accessorysetupkit",
        "title": "AccessorySetupKit",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
