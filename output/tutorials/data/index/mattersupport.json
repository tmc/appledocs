{
  "interfaceLanguages": {
    "data": [
      {
        "children": [
          {
            "title": "Adding a device",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/mattersupport/adding-matter-support-to-your-ecosystem",
            "title": "Adding Matter support to your ecosystem",
            "type": "article"
          }
        ],
        "path": "/documentation/mattersupport",
        "title": "MatterSupport",
        "type": "module"
      }
    ],
    "occ": [
      {
        "children": [
          {
            "title": "Adding a device",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/mattersupport/adding-matter-support-to-your-ecosystem",
            "title": "Adding Matter support to your ecosystem",
            "type": "article"
          }
        ],
        "path": "/documentation/mattersupport",
        "title": "MatterSupport",
        "type": "module"
      }
    ],
    "swift": [
      {
        "children": [
          {
            "title": "Adding a device",
            "type": "groupMarker"
          },
          {
            "path": "/documentation/mattersupport/adding-matter-support-to-your-ecosystem",
            "title": "Adding Matter support to your ecosystem",
            "type": "article"
          },
          {
            "children": [
              {
                "title": "Creating the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/init(from:)",
                "title": "init(from: any Decoder) throws",
                "type": "init"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/init(topology:setuppayload:showing:)",
                "title": "init(topology: MatterAddDeviceRequest.Topology, setupPayload: MTRSetupPayload?, showing: MatterAddDeviceRequest.DeviceCriteria)",
                "type": "init"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/init(topology:setuppayload:showing:shouldscannetworks:)",
                "title": "init(topology: MatterAddDeviceRequest.Topology, setupPayload: MTRSetupPayload?, showing: MatterAddDeviceRequest.DeviceCriteria, shouldScanNetworks: Bool)",
                "type": "init"
              },
              {
                "title": "Setting up the request",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating the home",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/home/init(displayname:)",
                    "title": "init(displayName: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/home/displayname",
                    "title": "var displayName: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddevicerequest/home",
                "title": "MatterAddDeviceRequest.Home",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the room",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/room/init(displayname:)",
                    "title": "init(displayName: String)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/room/displayname",
                    "title": "var displayName: String",
                    "type": "property"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddevicerequest/room",
                "title": "MatterAddDeviceRequest.Room",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Creating the topology",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/topology-swift.struct/init(ecosystemname:homes:)",
                    "title": "init(ecosystemName: String, homes: [MatterAddDeviceRequest.Home])",
                    "type": "init"
                  },
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/topology-swift.struct/ecosystemname",
                    "title": "var ecosystemName: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/topology-swift.struct/homes",
                    "title": "var homes: [MatterAddDeviceRequest.Home]",
                    "type": "property"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddevicerequest/topology-swift.struct",
                "title": "MatterAddDeviceRequest.Topology",
                "type": "struct"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/setuppayload",
                "title": "var setupPayload: MTRSetupPayload?",
                "type": "property"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/topology-swift.property",
                "title": "var topology: MatterAddDeviceRequest.Topology",
                "type": "property"
              },
              {
                "title": "Defining the device criteria",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Creating criteria",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  },
                  {
                    "title": "Defining the criteria",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/alldevices",
                    "title": "case allDevices",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/all(_:)",
                    "title": "case all([MatterAddDeviceRequest.DeviceCriteria])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/any(_:)",
                    "title": "case any([MatterAddDeviceRequest.DeviceCriteria])",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/commissioningid(_:)",
                    "title": "case commissioningID(UUID)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/fabricnode(rootpublickey:nodeid:)",
                    "title": "case fabricNode(rootPublicKey: Data, nodeID: UInt64)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/not(_:)",
                    "title": "case not(MatterAddDeviceRequest.DeviceCriteria)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/productid(_:)",
                    "title": "case productID(Int)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/serialnumber(_:)",
                    "title": "case serialNumber(String)",
                    "type": "case"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria/vendorid(_:)",
                    "title": "case vendorID(Int)",
                    "type": "case"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddevicerequest/devicecriteria",
                "title": "MatterAddDeviceRequest.DeviceCriteria",
                "type": "enum"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/showdevicecriteria",
                "title": "var showDeviceCriteria: MatterAddDeviceRequest.DeviceCriteria",
                "type": "property"
              },
              {
                "title": "Performing the request",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/shouldscannetworks",
                "title": "var shouldScanNetworks: Bool",
                "type": "property"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/perform()",
                "title": "func perform() async throws",
                "type": "method"
              },
              {
                "title": "Type Properties",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddevicerequest/issupported",
                "title": "static var isSupported: Bool",
                "type": "property"
              },
              {
                "title": "Default Implementations",
                "type": "groupMarker"
              },
              {
                "children": [
                  {
                    "title": "Initializers",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddevicerequest/init(from:)",
                    "title": "init(from: any Decoder) throws",
                    "type": "init"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddevicerequest/decodable-implementations",
                "title": "Decodable Implementations",
                "type": "collection"
              }
            ],
            "path": "/documentation/mattersupport/matteradddevicerequest",
            "title": "MatterAddDeviceRequest",
            "type": "struct"
          },
          {
            "children": [
              {
                "title": "Creating the request handler",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/init()",
                "title": "init()",
                "type": "init"
              },
              {
                "title": "Configuring and validating the device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/configuredevice(named:in:)",
                "title": "func configureDevice(named: String, in: MatterAddDeviceRequest.Room?) async",
                "type": "method"
              },
              {
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/validatedevicecredential(_:)",
                "title": "func validateDeviceCredential(MatterAddDeviceExtensionRequestHandler.DeviceCredential) async throws",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating the credential",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/devicecredential/init(certificationdeclaration:deviceattestationcertificate:productattestationintermediatecertificate:)",
                    "title": "init(certificationDeclaration: Data, deviceAttestationCertificate: Data, productAttestationIntermediateCertificate: Data)",
                    "type": "init"
                  },
                  {
                    "title": "Getting the properties",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/devicecredential/certificationdeclaration",
                    "title": "var certificationDeclaration: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/devicecredential/deviceattestationcertificate",
                    "title": "var deviceAttestationCertificate: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/devicecredential/productattestationintermediatecertificate",
                    "title": "var productAttestationIntermediateCertificate: Data",
                    "type": "property"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/devicecredential",
                "title": "MatterAddDeviceExtensionRequestHandler.DeviceCredential",
                "type": "struct"
              },
              {
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/rooms(in:)",
                "title": "func rooms(in: MatterAddDeviceRequest.Home?) async -> [MatterAddDeviceRequest.Room]",
                "type": "method"
              },
              {
                "title": "Commissioning the device",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/commissiondevice(in:onboardingpayload:commissioningid:)",
                "title": "func commissionDevice(in: MatterAddDeviceRequest.Home?, onboardingPayload: String, commissioningID: UUID) async throws",
                "type": "method"
              },
              {
                "title": "Selecting the Thread network",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/selectthreadnetwork(from:)",
                "title": "func selectThreadNetwork(from: [MatterAddDeviceExtensionRequestHandler.ThreadScanResult]) async throws -> MatterAddDeviceExtensionRequestHandler.ThreadNetworkAssociation",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating the result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/init(networkname:panid:extendedpanid:channel:extendedaddress:rssi:version:linkqualityindicator:)",
                    "title": "init(networkName: String, panID: UInt16, extendedPANID: UInt64, channel: UInt16, extendedAddress: Data, rssi: Int8, version: UInt8, linkQualityIndicator: UInt8)",
                    "type": "init"
                  },
                  {
                    "title": "Getting result information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/channel",
                    "title": "var channel: UInt16",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/extendedaddress",
                    "title": "var extendedAddress: Data",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/extendedpanid",
                    "title": "var extendedPANID: UInt64",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/linkqualityindicator",
                    "title": "var linkQualityIndicator: UInt8",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/networkname",
                    "title": "var networkName: String",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/panid",
                    "title": "var panID: UInt16",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/rssi",
                    "title": "var rssi: Int8",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult/version",
                    "title": "var version: UInt8",
                    "type": "property"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadscanresult",
                "title": "MatterAddDeviceExtensionRequestHandler.ThreadScanResult",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting network information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadnetworkassociation/defaultsystemnetwork",
                    "title": "static var defaultSystemNetwork: MatterAddDeviceExtensionRequestHandler.ThreadNetworkAssociation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadnetworkassociation/network(extendedpanid:)",
                    "title": "static func network(extendedPANID: UInt64) -> MatterAddDeviceExtensionRequestHandler.ThreadNetworkAssociation",
                    "type": "method"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/threadnetworkassociation",
                "title": "MatterAddDeviceExtensionRequestHandler.ThreadNetworkAssociation",
                "type": "struct"
              },
              {
                "title": "Selecting the Wi-Fi network",
                "type": "groupMarker"
              },
              {
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/selectwifinetwork(from:)",
                "title": "func selectWiFiNetwork(from: [MatterAddDeviceExtensionRequestHandler.WiFiScanResult]) async throws -> MatterAddDeviceExtensionRequestHandler.WiFiNetworkAssociation",
                "type": "method"
              },
              {
                "children": [
                  {
                    "title": "Creating the result",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifiscanresult/init(ssid:rssi:security:band:)",
                    "title": "init(ssid: Data, rssi: Int8, security: MTRNetworkCommissioningWiFiSecurity, band: MTRNetworkCommissioningWiFiBand)",
                    "type": "init"
                  },
                  {
                    "title": "Getting result information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifiscanresult/band",
                    "title": "var band: MTRNetworkCommissioningWiFiBand",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifiscanresult/rssi",
                    "title": "var rssi: Int8",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifiscanresult/security",
                    "title": "var security: MTRNetworkCommissioningWiFiSecurity",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifiscanresult/ssid",
                    "title": "var ssid: Data",
                    "type": "property"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifiscanresult",
                "title": "MatterAddDeviceExtensionRequestHandler.WiFiScanResult",
                "type": "struct"
              },
              {
                "children": [
                  {
                    "title": "Getting network information",
                    "type": "groupMarker"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifinetworkassociation/defaultsystemnetwork",
                    "title": "static var defaultSystemNetwork: MatterAddDeviceExtensionRequestHandler.WiFiNetworkAssociation",
                    "type": "property"
                  },
                  {
                    "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifinetworkassociation/network(ssid:credentials:)",
                    "title": "static func network(ssid: Data, credentials: Data) -> MatterAddDeviceExtensionRequestHandler.WiFiNetworkAssociation",
                    "type": "method"
                  }
                ],
                "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler/wifinetworkassociation",
                "title": "MatterAddDeviceExtensionRequestHandler.WiFiNetworkAssociation",
                "type": "struct"
              }
            ],
            "path": "/documentation/mattersupport/matteradddeviceextensionrequesthandler",
            "title": "MatterAddDeviceExtensionRequestHandler",
            "type": "class"
          }
        ],
        "path": "/documentation/mattersupport",
        "title": "MatterSupport",
        "type": "module"
      }
    ]
  },
  "schemaVersion": {
    "major": 0,
    "minor": 1,
    "patch": 0
  }
}
